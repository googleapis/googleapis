// Portions of this file have been generated automatically. Do not edit fields
// between "begin_interface" and "end_interface" markers, instead edit the
// 'interfaces_proto.template' file and regenerate this file by calling
//
// python update_interfaces.py *.proto
//
// WARNING: Due to backward compatibility concerns, many of these interfaces
// use low field number (i.e. 1-5).  Make sure you aren't reusing a field
// number that the interface is going to take!

syntax = "proto3";

package google.compute.v1;

import "google/api/annotations.proto";

option java_multiple_files = true;
option java_package = "com.google.cloud.compute.v1";

// An access configuration attached to an instance's network interface.
// Only one access config per instance is supported.
message AccessConfig {
  // [Output Only] Type of the resource. Always <code>compute#accessConfig</code>
  // for access configs.
  string kind = 1000;

  enum AccessType {
    ONE_TO_ONE_NAT = 0;
  }

  // The type of configuration. The default and only option is
  // <code>ONE_TO_ONE_NAT</code>.
  //
  // @default ONE_TO_ONE_NAT
  AccessType type = 1;

  // The name of this access configuration. The default and recommended name is
  // <code>External NAT</code> but you can use any arbitrary string you would
  // like. For example, <code>My external IP</code> or
  // <code>Network Access</code>.
  string name = 2;

  // An
  // <a href="/compute/docs/ip-addresses#externaladdresses">external IP address</a>
  // associated with this instance. Specify an unused static external
  // IP address available to the project or leave this field undefined to use an
  // IP from a shared ephemeral IP address pool. If you specify a static
  // external IP address, it must live in the same region as the zone of the
  // instance.
  string nat_ip = 3;
}

// A network interface resource attached to an instance.
message NetworkInterface {

  // [Output Only] Type of the resource. Always
  // <code>compute#networkInterface</code> for network interfaces.
  string kind = 1000;

  // URL of the network resource for this instance. When creating an instance,
  // if neither the network nor the subnetwork is specified, the
  // default network <code>global/networks/default</code> is used; if the
  // network is not specified but the subnetwork is specified, the network is
  // inferred.
  //
  // This field is optional when creating a firewall rule. If not specified when
  // creating a firewall rule, the default network
  // <code>global/networks/default</code> is used.
  //
  // If you specify this property, you can specify the network as
  // a full or partial URL. For example, the following are all valid URLs:
  // <ul>
  //    <li><code>https://www.googleapis.com/compute/v1/projects/<var
  //    class="apiparam">project</var>/global/networks/<var
  //    class="apiparam">network</var></code></li>
  //    <li><code>projects/<var
  //    class="apiparam">project</var>/global/networks/<var
  //    class="apiparam">network</var></code></li>
  //    <li><code>global/networks/default</code></li>
  // </ul>
  string network = 1;

  // The URL of the Subnetwork resource for this instance. If the network
  // resource is in
  // <a href="/compute/docs/subnetworks#legacy_non-subnet_network">legacy</a>
  // mode, do not provide this property. If the network is in auto subnet
  // mode, providing the subnetwork is optional. If the network is in custom
  // subnet mode, then this field should be specified. If you specify this
  // property, you can specify the subnetwork as a full or partial URL. For
  // example, the following are all valid URLs:
  // <ul>
  //    <li><code>https://www.googleapis.com/compute/v1/projects/<var class="apiparam">project</var>/regions/<var class="apiparam">region</var>/subnetworks/<var class="apiparam">subnetwork</var></code></li>
  //    <li><code>regions/<var class="apiparam">region</var>/subnetworks/<var class="apiparam">subnetwork</var></code></li>
  // </ul>
  string subnetwork = 5;

  // An IPv4 internal network address to assign to the instance for this network
  // interface. If not specified by the user, an unused internal IP is
  // assigned by the system.
  string network_ip = 2;

  // [Output Only] The name of the network interface, generated by the server.
  // For network devices, these are <code>eth0</code>, <code>eth1</code>, etc.
  string name = 3;

  // An array of configurations for this interface. Currently, only one access
  // config, <code>ONE_TO_ONE_NAT</code>, is supported. If there are no
  // <code>accessConfigs</code> specified, then this instance will have
  // no external internet access.
  repeated AccessConfig access_configs = 4;
}

// An instance-attached disk resource.
message AttachedDisk {
  // [Output Only] Type of the resource. Always
  // <code>compute#attachedDisk</code> for attached disks.
  string kind = 1000;

  enum DiskType {
    SCRATCH = 0;
    PERSISTENT = 1;
  }
  // Specifies the type of the disk, either <code>SCRATCH</code> or
  // <code>PERSISTENT</code>. If not specified, the default is
  // <code>PERSISTENT</code>.
  DiskType type = 1;

  enum DiskMode {
    // <b>[Default]</b> Attaches this disk in read-write mode. Only one
    // virtual machine at a time can be attached to a disk in read-write mode.
    READ_WRITE = 0;

    // Attaches this disk in read-only mode. Multiple virtual machines can use
    // a disk in read-only mode at a time.
    READ_ONLY = 1;
  }

  // The mode in which to attach this disk, either <code>READ_WRITE</code> or
  // <code>READ_ONLY</code>. If not specified, the default is to attach the disk
  // in <code>READ_WRITE</code> mode.
  DiskMode mode = 2;

  // [Input Only] Specifies the parameters for a new disk that will be created
  // alongside the new instance. Use initialization parameters to create boot
  // disks or local SSDs attached to the new instance.
  //
  // This property is mutually exclusive with the <code>source</code> property;
  // you can only define one or the other, but not both.
  message InitializeParams {
    // Specifies the disk name. If not specified, the default is to use the name
    // of the instance.
    string disk_name = 1;

    // The source image to create this disk. When creating a new instance,
    // one of <code>initializeParams.sourceImage</code> or
    // <code>disks.source</code> is required.
    //
    // To create a disk with one of the public operating system images, specify
    // the image by its family name. For example, specify
    // <code>family/debian-8</code> to use the latest Debian 8 image:
    //
    // <code>projects/debian-cloud/global/images/family/debian-8</code>
    //
    // Alternatively, use a specific version of a public operating system image:
    //
    // <code>projects/debian-cloud/global/images/debian-8-jessie-vYYYYMMDD</code>
    //
    // To create a disk with a private image that you created, specify the
    // image name in the following format:
    //
    // <code>global/images/my-private-image</code>
    //
    // You can also specify a private image by its image family, which returns
    // the latest version of the image in that family. Replace the image name
    // with <code>family/family-name</code>:
    //
    // <code>global/images/family/my-private-family</code>
    //
    // If the source image is deleted later, this field will not be set.
    string source_image = 2;

    // Specifies the size of the disk in base-2 GB.
    int64 disk_size_gb = 3;

    // Specifies the disk type to use to create the instance. If not specified,
    // the default is <code>pd-standard</code>, specified using the full URL.
    // For example:
    //
    // <code>https://www.googleapis.com/compute/v1/projects/<var class="apiparam">project</var>/zones/<var class="apiparam">zone</var>/diskTypes/pd-standard</code>
    //
    // Other values include <code>pd-ssd</code> and <code>local-ssd</code>. If
    // you define this field, you can provide either the full or partial URL.
    // For example, the following are valid values:
    // <ul>
    //   <li><code>https://www.googleapis.com/compute/v1/projects/<var class="apiparam">project</var>/zones/<var class="apiparam">zone</var><span>/diskTypes/</span><var class="apiparam">diskType</var></code></li>
    //   <li><code>projects/<var class="apiparam">project</var>/zones/<var class="apiparam">zone</var><span>/diskTypes/</span><var class="apiparam">diskType</var></code></li>
    //   <li><code>zones/<var class="apiparam">zone</var>/diskTypes/<var class="apiparam">diskType</var></code></li>
    // </ul>
    // Note that for InstanceTemplate, this is the name of the disk type, not
    // URL.
    string disk_type = 5;

    // The
    // <a href="/compute/docs/disks/customer-supplied-encryption">customer-supplied encryption key</a>
    // of the source image. Required if the source image is protected by a
    // customer-supplied encryption key.
    //
    // Instance templates do not store
    // <a href="/compute/docs/disks/customer-supplied-encryption">customer-supplied encryption keys</a>,
    // so you cannot create disks for instances in a
    // <a href="/compute/docs/instance-groups/">managed instance group</a>
    // if the source images are encrypted with your own keys.
// GJ FIXME
//    CustomerEncryptionKey source_image_encryption_key = 9;
  }

  // Specifies a valid partial or full URL to an existing Persistent Disk
  // resource. When creating a new instance, one of
  // <code>initializeParams.sourceImage</code> or
  // <code>disks.source</code> is required.
  //
  // If desired, you can also attach existing non-root persistent disks using
  // this property. This field is only applicable for persistent disks.
  //
  // Note that for InstanceTemplate, specify the disk name, not the URL for the
  // disk.
  string source = 3;

  // Specifies a unique device name of your choice that is reflected into the
  // <code>/dev/disk/by-id/google-*</code> tree of a Linux operating system
  // running within the instance. This name can be used to reference the device
  // for mounting, resizing, and so on, from within the instance.
  //
  // If not specified, the server chooses a default device name to apply to this
  // disk, in the form <code>persistent-disks-x</code>, where x is a number
  // assigned by Google Compute Engine. This field is only applicable for
  // persistent disks.
  string device_name = 4;

  // Assigns a zero-based index to this disk, where 0 is reserved for the boot
  // disk. For example, if you have many disks attached to an instance, each
  // disk would have a unique index number. If not specified, the server will
  // choose an appropriate value.
  int32 index = 5;

  // Indicates that this is a boot disk. The virtual machine will use the first
  // partition of the disk for its root filesystem.
  bool boot = 6;

  // [Input Only] Specifies the parameters for a new disk that will be created
  // alongside the new instance. Use initialization parameters to create boot
  // disks or local SSDs attached to the new instance.
  //
  // This property is mutually exclusive with the <code>source</code> property;
  // you can only define one or the other, but not both.
  InitializeParams initialize_params = 7;

  // Specifies whether the disk will be auto-deleted when the instance is deleted
  // (but not when the disk is detached from the instance).
  bool auto_delete = 8;

  // [Output Only] Any valid publicly visible licenses.
  repeated string licenses = 9;

  enum DiskInterface {
    SCSI = 0;
    NVME = 1;
  }
  // Specifies the disk interface to use for attaching this disk, which is
  // either <code>SCSI</code> or <code>NVME</code>. The default is
  // <code>SCSI</code>. Persistent disks must always use SCSI and the request
  // will fail if you attempt to attach a persistent disk in any other format
  // than SCSI. Local SSDs can use either NVME or SCSI. For performance
  // characteristics of SCSI over NVMe, see
  // <a href="/compute/docs/disks#localssds">Local SSD performance</a>.
  DiskInterface interface = 10;

  // Encrypts or decrypts a disk using a
  // <a href="/compute/docs/disks/customer-supplied-encryption">customer-supplied encryption key</a>.
  //
  // If you are creating a new disk, this field encrypts the new disk using
  // an encryption key that you provide. If you are attaching an existing
  // disk that is already encrypted, this field decrypts the disk using
  // the customer-supplied encryption key.
  //
  // If you encrypt a disk using a customer-supplied key, you must provide the
  // same key again when you attempt to use this resource at a later time. For
  // example, you must provide the key when you create a snapshot or an image
  // from the disk or when you attach the disk to a virtual machine instance.
  //
  // If you do not provide an encryption key, then the disk will be encrypted
  // using an automatically generated key and you do not need to provide a key
  // to use the disk later.
  //
  // Instance templates do not store
  // <a href="/compute/docs/disks/customer-supplied-encryption">customer-supplied encryption keys</a>,
  // so you cannot use your own keys to encrypt disks in a
  // <a href="/compute/docs/instance-groups/">managed instance group</a>.
// GJ FIXME
//  CustomerEncryptionKey disk_encryption_key = 14;
}

// Sets the scheduling options for an Instance.
message Scheduling {
  // Defines the maintenance behavior for this instance, either
  // <code>TERMINATE</code> or <code>MIGRATE</code>. For standard instances, the
  // default behavior is <code>MIGRATE</code>. For
  // <a href="/compute/docs/instances/preemptible">preemptible instances</a>,
  // the default, and only possible behavior, is <code>TERMINATE</code>. For
  // more information, see
  // <a href="/compute/docs/instances/setting-instance-scheduling-options">Setting Instance Scheduling Options</a>.
  enum OnHostMaintenance {
    // <b>[Default]</b> Allows Compute Engine to automatically migrate instances
    // out of the way of maintenance events.
    TERMINATE = 0;

    // Tells Compute Engine to terminate and (optionally) restart the instance
    // away from the maintenance activity. If you would like your instance to be
    // restarted, set the <code>automaticRestart</code> flag to true. Your
    // instance may be restarted more than once, and it may be restarted outside
    // the window of maintenance events.
    MIGRATE = 1000;
  }

  // Defines the maintenance behavior for this instance. For standard instances,
  // the default behavior is <code>MIGRATE</code>. For
  // <a href="/compute/docs/instances/preemptible">preemptible instances</a>,
  // the default and only possible behavior is <code>TERMINATE</code>. For more
  // information, see
  //  <a href="/compute/docs/instances/setting-instance-scheduling-options">Setting Instance Scheduling Options</a>.
  OnHostMaintenance on_host_maintenance = 1;

  // Specifies whether the instance should be automatically restarted if it is
  // terminated by Compute Engine (not terminated by a user). You can only set
  // the automatic restart option for standard instances.
  // <a href="/compute/docs/instances/preemptible">Preemptible instances</a>
  // cannot be automatically restarted.
  //
  // By default, this is set to <code>true</code> so an instance is
  // automatically restarted if it is terminated by Compute Engine.
  bool automatic_restart = 2;

  // Defines whether the instance is preemptible. This can only be set during
  // instance creation, it cannot be set or changed after the instance has
  // been created.
  bool preemptible = 3;
}

// A service account.
message ServiceAccount {
  // Email address of the service account.
  string email = 1;

  // The list of scopes to be made available for this service account.
  repeated string scopes = 2;
}

// A set of instance tags.
message Tags {
  // An array of tags. Each tag must be 1-63 characters long, and comply
  // with <a href="https://www.ietf.org/rfc/rfc1035.txt">RFC1035</a>.
  // @pattern [a-z](?:[-a-z0-9]{0,61}[a-z0-9])?
  repeated string items = 1;

  // Specifies a fingerprint for this request, which is essentially a hash of
  // the metadata's contents and used for optimistic locking. The
  // fingerprint is initially generated by Compute Engine and changes after
  // every request to modify or update metadata. You must always provide an
  // up-to-date fingerprint hash in order to update or change metadata.
  //
  // To see the latest fingerprint, make <code>get()</code> request to the
  // instance.
  bytes fingerprint = 2;
}

// An Instance resource.
message Instance {
  // [Output Only] Type of the resource. Always
  // <code>compute#instance</code> for instances.
  string kind = 1000;

  // [Output Only] The unique identifier for the resource. This identifier is
  // defined by the server.
  fixed64 id = 1;

  // [Output Only] Creation timestamp in
  // <a href="https://www.ietf.org/rfc/rfc3339.txt">RFC3339</a> text format.
  string creation_timestamp = 2;

  // The name of the resource, provided by the client when initially creating
  // the resource. The resource name must be 1-63 characters long, and comply
  // with
  // <a href="https://www.ietf.org/rfc/rfc1035.txt" target="_blank">RFC1035</a>.
  // Specifically, the name must be 1-63 characters long and match the regular
  // expression <code>[a-z]([-a-z0-9]*[a-z0-9])?</code> which means the first
  // character must be a lowercase letter, and all following characters must be
  // a dash, lowercase letter, or digit, except the last character, which cannot
  // be a dash.
  // @required compute.instances.insert
  // @pattern [a-z](?:[-a-z0-9]{0,61}[a-z0-9])?
  string name = 3;

  // An optional description of this resource. Provide this property when you
  // create the resource.
  string description = 4;

  // A list of tags to apply to this instance. Tags are used to identify valid
  // sources or targets for network firewalls and are specified by the client
  // during instance creation. The tags can be later modified by the setTags
  // method. Each tag within the list must comply with
  // <a href="https://www.ietf.org/rfc/rfc1035.txt">RFC1035</a>.
  Tags tags = 5;

  // Full or partial URL of the machine type resource to use for this instance,
  // in the format:
  // <code>zones/<var class="apiparam">zone</var>/machineTypes/<var class="apiparam">machine-type</var></code>.
  // This is provided by the client when the instance is created. For example,
  // the following is a valid partial url to a
  // <a href="/compute/docs/machine-types#predefined_machine_types">predefined machine type</a>:
  //
  // <code>zones/us-central1-f/machineTypes/n1-standard-1</code>
  //
  // To create a
  // <a href="/compute/docs/instances/creating-instance-with-custom-machine-type">custom machine type</a>,
  // provide a URL to a machine type in the following format, where
  // <var class="apiparam">CPUS</var> is 1 or an even number up to 32
  // (2, 4, 6, ... 24, etc), and <var class="apiparam">MEMORY</var> is the total
  // memory for this instance. Memory must be a multiple of 256 MB and must
  // be supplied in MB (e.g. 5 GB of memory is 5120 MB):
  //
  // <code>zones/<var class="apiparam">zone</var>/machineTypes/custom-<var class="apiparam">CPUS</var>-<var class="apiparam">MEMORY</var></code>
  //
  // For example: <code>zones/us-central1-f/machineTypes/custom-4-5120</code>
  //
  // For a full list of restrictions, read the
  // <a href="/compute/docs/instances/creating-instance-with-custom-machine-type#specifications">Specifications</a>
  // for custom machine types.
  // @required compute.instances.insert
  string machine_type = 6;

  enum Status {
    UNKNOWN_INSTANCE_STATUS = 0;

    // Resources are being allocated for the instance.
    PROVISIONING = 1;

    // All required resources have been allocated and the instance
    // is being started.
    STAGING = 2;

    // The instance is running.
    RUNNING = 3;

    // The instance is currently stopping (either being deleted or killed).
    STOPPING = 4;

    // The instance has stopped successfully.
    STOPPED = 5;

    // The instance has failed in some way.
    TERMINATED = 6;

    // The instance is suspending.
    SUSPENDING = 7;

    // The instance has suspended.
    SUSPENDED = 8;
  }

  // [Output Only] The status of the instance. One of the
  // following values: <code>PROVISIONING</code>, <code>STAGING</code>,
  // <code>RUNNING</code>, <code>STOPPING</code>, <code>SUSPENDING</code>,
  // <code>SUSPENDED</code>, and <code>TERMINATED</code>.
  Status status = 9;

  // [Output Only] An optional, human-readable explanation of the status.
  string status_message = 10;

  // [Output Only] URL of the zone where the instance resides.
  string zone = 11;

  // Allows this instance to send and receive packets with non-matching
  // destination or source IPs. This is required if you plan to use this
  // instance to forward routes. For more information, see
  // <a href="/compute/docs/networking#canipforward">Enabling IP Forwarding</a>.
  bool can_ip_forward = 12;

  // An array of configurations for this interface. This specifies how this
  // interface is configured to interact with other network services, such as
  // connecting to the internet. Only one interface is supported
  // per instance.
  repeated NetworkInterface network_interfaces = 13;

  // Array of disks associated with this instance. Persistent disks must be
  // created before you can assign them.
  repeated AttachedDisk disks = 14;

  // The <a href="/compute/docs/metadata">metadata key/value pairs</a> assigned
  // to this instance. This includes custom metadata and predefined keys.
// GJ FIXME
//  Metadata metadata = 15;

  // A list of service accounts, with their specified scopes, authorized for
  // this instance. Only one service account per VM instance is supported.
  //
  // Service accounts generate access tokens that can be accessed
  // through the metadata server and used to authenticate applications on the
  // instance. See
  // <a href="/compute/docs/access/service-accounts">Service Accounts</a>
  // for more information.
  repeated ServiceAccount service_accounts = 16;

  // [Output Only] Server-defined URL for this resource.
  string self_link = 17;

  // Sets the scheduling options for this instance.
  Scheduling scheduling = 18;

  // [Output Only] The CPU platform used by this instance.
  string cpu_platform = 19;
}

message InstancesScopedList {
  // [Output Only] List of instances contained in this scope.
  repeated Instance instances = 2;

  // [Output Only] Informational warning which replaces the list of instances
  // when the list is empty.
// GJ FIXME
//  Warning warning = 3;
}

service InstancesService {
  // Retrieves the list of instances contained within
  // the specified zone.
  rpc ListInstances(InstancesListRequest) returns (InstanceList) {
    option (google.api.http) = { get: "/v1/{project}/zones/{zone}/instances" };
  }

  // Retrieves aggregated list of instances.
  //GJ I wanted to include this, but there were problems with using a map
  //as the listing resource
  //rpc AggregatedListInstances(InstancesAggregatedListRequest) returns (InstanceAggregatedList) {
  //  option (google.api.http) = { get: "/v1/{project}/aggregated/instances" };
  //}

  // Returns the specified Instance resource. Get a list of available instances
  // by making a <code>list()</code> request.
  rpc GetInstance(InstancesGetRequest) returns (Instance) {
    option (google.api.http) = { get: "/v1/{project}/zones/{zone}/instances/{instance}" };
  }

  // Creates an instance resource in the specified project using the data
  // included in the request.
  rpc InsertInstance(InstancesInsertRequest) returns (Operation) {
    option (google.api.http) = { post: "/v1/{project}/zones/{zone}/instances" body: "*" };
  }

  // Deletes the specified Instance resource. For more information, see
  // <a href="/compute/docs/instances/stopping-or-deleting-an-instance">Stopping or Deleting an Instance</a>.
  rpc DeleteInstance(InstancesDeleteRequest) returns (Operation) {
    option (google.api.http) = { delete: "/v1/{project}/zones/{zone}/instances/{instance}" };
  }
}
// instances.list

message InstancesListRequest {
  // The maximum number of results per page that should be returned.
  // If the number of available results is larger than <code>maxResults</code>,
  // Compute Engine returns a <code>nextPageToken</code> that can be used to get
  // the next page of results in subsequent list requests. Acceptable values are
  // <code>0</code> to <code>500</code>, inclusive. (Default: <code>500</code>)
  uint32 max_results = 4;

  // Specifies a page token to use. Set <code>pageToken</code> to the
  // <code>nextPageToken</code> returned by a previous list request to get
  // the next page of results.
  string page_token = 5;

  // Sets a filter expression for filtering listed resources, in the form
  // <code>filter={expression}</code>. Your <code>{expression}</code> must
  // be in the format: <code>field_name comparison_string literal_string</code>.
  //
  // The <code>field_name</code> is the name of the field you want to compare.
  // Only atomic field types are supported (string, number, boolean). The
  // <code>comparison_string</code> must be either <code>eq</code> (equals) or
  // <code>ne</code> (not equals). The <code>literal_string</code> is the string
  // value to filter to. The literal value must be valid for the type of field
  // you are filtering by (string, number, boolean). For string fields, the
  // literal value is interpreted as a regular expression
  // using <a href="https://github.com/google/re2" target="_blank">RE2</a>
  // syntax. The literal value must match the entire field.
  //
  // For example, to filter for instances that do not have a name of
  // <code>example-instance</code>, you would use
  // <code>filter=name ne example-instance</code>.
  //
  // You can filter on nested fields. For example, you could filter on
  // instances that have set the <code>scheduling.automaticRestart</code> field
  // to <code>true</code>. Use filtering on nested fields to take advantage of
  // <a href="/compute/docs/label-or-tag-resources">labels</a>
  // to organize and search for results based on label values.
  //
  // To filter on multiple expressions, provide each separate expression within
  // parentheses. For example,
  // <code>(scheduling.automaticRestart eq true) (zone eq us-central1-f)</code>.
  // Multiple expressions are treated as <code>AND</code> expressions, meaning
  // that resources must match all expressions to pass the filters.
  string filter = 6;

  // Sorts list results by a certain order. By default, results
  // are returned in alphanumerical order based on the resource name.
  //
  // You can also sort results in descending order based on the creation timestamp
  // using <code>orderBy="creationTimestamp desc"</code>. This sorts
  // results based on the <code>creationTimestamp</code> field in
  // reverse chronological order (newest result first). Use this to sort resources
  // like operations so that the newest operation is returned first.
  //
  // Currently, only sorting by <code>name</code> or
  // <code>creationTimestamp desc</code> is supported.
  string order_by = 14;

  // Project ID for this request.
  string project = 2;

  // The name of the zone for this request.
  string zone = 3;
}

// Contains a list of instances.
message InstanceList {
  // [Output Only] Type of the resource. Always
  // <code>compute#instanceList</code> for lists of Instance resources.
  string kind = 1000;

  // [Output Only] The unique identifier for the resource. This identifier is
  // defined by the server.
  string id = 3;

  // [Output Only] A list of instances.
  repeated Instance items = 4;

  // [Output Only] This token allows you to get the next page of results for
  // list requests. If the number of results is larger than
  // <code>maxResults</code>, use the <code>nextPageToken</code> as a value for
  // the query parameter <code>pageToken</code> in the next list request.
  // Subsequent list requests will have their own <code>nextPageToken</code> to
  // continue paging through the results.
  string next_page_token = 5;

  // [Output Only] Server-defined URL for this resource.
  string self_link = 6;
}

// instances.aggregatedList

message InstancesAggregatedListRequest {
  // The maximum number of results per page that should be returned.
  // If the number of available results is larger than <code>maxResults</code>,
  // Compute Engine returns a <code>nextPageToken</code> that can be used to get
  // the next page of results in subsequent list requests. Acceptable values are
  // <code>0</code> to <code>500</code>, inclusive. (Default: <code>500</code>)
  uint32 max_results = 4;

  // Specifies a page token to use. Set <code>pageToken</code> to the
  // <code>nextPageToken</code> returned by a previous list request to get
  // the next page of results.
  string page_token = 5;

  // Sets a filter expression for filtering listed resources, in the form
  // <code>filter={expression}</code>. Your <code>{expression}</code> must
  // be in the format: <code>field_name comparison_string literal_string</code>.
  //
  // The <code>field_name</code> is the name of the field you want to compare.
  // Only atomic field types are supported (string, number, boolean). The
  // <code>comparison_string</code> must be either <code>eq</code> (equals) or
  // <code>ne</code> (not equals). The <code>literal_string</code> is the string
  // value to filter to. The literal value must be valid for the type of field
  // you are filtering by (string, number, boolean). For string fields, the
  // literal value is interpreted as a regular expression
  // using <a href="https://github.com/google/re2" target="_blank">RE2</a>
  // syntax. The literal value must match the entire field.
  //
  // For example, to filter for instances that do not have a name of
  // <code>example-instance</code>, you would use
  // <code>filter=name ne example-instance</code>.
  //
  // You can filter on nested fields. For example, you could filter on
  // instances that have set the <code>scheduling.automaticRestart</code> field
  // to <code>true</code>. Use filtering on nested fields to take advantage of
  // <a href="/compute/docs/label-or-tag-resources">labels</a>
  // to organize and search for results based on label values.
  //
  // To filter on multiple expressions, provide each separate expression within
  // parentheses. For example,
  // <code>(scheduling.automaticRestart eq true) (zone eq us-central1-f)</code>.
  // Multiple expressions are treated as <code>AND</code> expressions, meaning
  // that resources must match all expressions to pass the filters.
  string filter = 6;

  // Sorts list results by a certain order. By default, results
  // are returned in alphanumerical order based on the resource name.
  //
  // You can also sort results in descending order based on the creation timestamp
  // using <code>orderBy="creationTimestamp desc"</code>. This sorts
  // results based on the <code>creationTimestamp</code> field in
  // reverse chronological order (newest result first). Use this to sort resources
  // like operations so that the newest operation is returned first.
  //
  // Currently, only sorting by <code>name</code> or
  // <code>creationTimestamp desc</code> is supported.
  string order_by = 14;

  // Project ID for this request.
  string project = 2;
}

message InstanceAggregatedList {
  // [Output Only] Type of the resource. Always
  // <code>compute#instanceAggregatedList</code> for aggregated lists of Instance
  // resources.
  string kind = 1000;

  // [Output Only] The unique identifier for the resource. This identifier is
  // defined by the server.
  string id = 3;

  // [Output Only] A map of scoped instance lists.
  map<string, InstancesScopedList> items = 4;

  // [Output Only] This token allows you to get the next page of results for
  // list requests. If the number of results is larger than
  // <code>maxResults</code>, use the <code>nextPageToken</code> as a value for
  // the query parameter <code>pageToken</code> in the next list request.
  // Subsequent list requests will have their own <code>nextPageToken</code> to
  // continue paging through the results.
  string next_page_token = 5;

  // [Output Only] Server-defined URL for this resource.
  string self_link = 6;
}

// instances.get

message InstancesGetRequest {
  // Project ID for this request.
  string project = 2;

  // The name of the zone for this request.
  string zone = 3;

  // Name of the instance resource to return.
  string instance = 4;
}

// instances.insert

message InstancesInsertRequest {
  // Project ID for this request.
  string project = 2;

  // The name of the zone for this request.
  string zone = 3;

  Instance resource = 4;
}

// instances.delete

message InstancesDeleteRequest {
  // Project ID for this request.
  string project = 2;

  // The name of the zone for this request.
  string zone = 3;

  // Name of the instance resource to delete.
  string instance = 4;
}


enum OperationStatus {
  UNKNOWN_OPERATION_STATUS = 0;
  PENDING = 1;
  RUNNING = 2;
  DONE = 3;
}

// An Operation resource, used to manage asynchronous API requests.
message Operation {
  // [Output Only] Type of the resource. Always
  // <code>compute#operation</code> for Operation resources.
  string kind = 1000;

  // [Output Only] The unique identifier for the resource. This identifier is
  // defined by the server.
  fixed64 id = 1;

  // [Deprecated] This field is deprecated.
  string creation_timestamp = 2;

  // [Output Only] Name of the resource.
  string name = 3;

  // [Output Only] The URL of the zone where the operation resides. Only
  // available when performing per-zone operations.
  string zone = 4;

  // [Output Only] Reserved for future use.
  string client_operation_id = 5;

  // [Output Only] The type of operation, such as <code>insert</code>,
  // <code>update</code>, or <code>delete</code>, and so on.
  string operation_type = 6;

  // [Output Only] The URL of the resource that the operation modifies. For
  // operations related to creating a snapshot, this points to the persistent
  // disk that the snapshot was created from.
  string target_link = 7;

  // [Output Only] The unique target ID, which identifies a specific incarnation
  // of the target resource.
  fixed64 target_id = 8;

  // [Output Only] The status of the operation, which can be one of the
  // following:
  // <code>PENDING</code>, <code>RUNNING</code>, or <code>DONE</code>.
  OperationStatus status = 9;

  // [Output Only] An optional textual description of the current status of the
  // operation.
  string status_message = 10;

  // [Output Only] User who requested the operation, for example:
  // <code>user@example.com</code>.
  string user = 11;

  // [Output Only] An optional progress indicator that ranges from 0 to 100.
  // There is no requirement that this be linear or support any granularity of
  // operations. This should not be used to guess when the operation will be
  // complete. This number should monotonically increase as the operation
  // progresses.
  int32 progress = 12;

  // [Output Only] The time that this operation was requested.
  // This value is in
  // <a href="https://www.ietf.org/rfc/rfc3339.txt" target="_blank">RFC3339</a>
  // text format.
  string insert_time = 13;

  // [Output Only] The time that this operation was started by the server.
  // This value is in
  // <a href="https://www.ietf.org/rfc/rfc3339.txt" target="_blank">RFC3339</a>
  // text format.
  string start_time = 14;

  // [Output Only] The time that this operation was completed. This value is in
  // <a href="https://www.ietf.org/rfc/rfc3339.txt" target="_blank">RFC3339</a>
  // text format.
  string end_time = 15;

  // [Output Only] If errors are generated during processing of the operation,
  // this field will be populated.
// GJ FIXME
//  Errors error = 16;

  // [Output Only] If warning messages are generated during processing of the
  // operation, this field will be populated.
// GJ FIXME
//  repeated Warning warnings = 17;

  // [Output Only] If the operation fails, this field contains the HTTP error
  // status code that was returned. For example, a <code>404</code> means the
  // resource was not found.
  int32 http_error_status_code = 18;

  // [Output Only] If the operation fails, this field contains the HTTP error
  // message that was returned, such as <code>NOT FOUND</code>.
  string http_error_message = 19;

  // [Output Only] Server-defined URL for the resource.
  string self_link = 20;

  // [Output Only] The URL of the region where the operation resides. Only
  // available when performing regional operations.
  string region = 21;

  // [Output Only] A textual description of the operation, which is
  // set when the operation is created.
  string description = 22;
}

# This file was automatically generated by BuildFileGenerator

##############################################################################
# Common
##############################################################################
load("@rules_proto//proto:defs.bzl", "proto_library")
load(
    "@com_google_googleapis_imports//:imports.bzl",
    "cc_grpc_library",
    "cc_proto_library",
    "csharp_gapic_assembly_pkg",
    "csharp_gapic_library",
    "csharp_grpc_library",
    "csharp_proto_library",
    "go_gapic_assembly_pkg",
    "go_gapic_library",
    "go_proto_library",
    "java_gapic_assembly_gradle_pkg",
    "java_gapic_library",
    "java_gapic_test",
    "java_grpc_library",
    "java_proto_library",
    "nodejs_gapic_assembly_pkg",
    "nodejs_gapic_library",
    "php_gapic_assembly_pkg",
    "php_gapic_library",
    "php_proto_library",
    "proto_library_with_info",
    "py_gapic_assembly_pkg",
    "py_gapic_library",
    "py_test",
    "ruby_cloud_gapic_library",
    "ruby_gapic_assembly_pkg",
    "ruby_grpc_library",
    "ruby_proto_library",
)

# This is an API workspace, having public visibility by default makes perfect sense.
package(default_visibility = ["//visibility:public"])

proto_library(
    name = "dlp_proto",
    srcs = [
        "dlp.proto",
        "storage.proto",
    ],
    deps = [
        "//google/api:annotations_proto",
        "//google/api:client_proto",
        "//google/api:field_behavior_proto",
        "//google/api:resource_proto",
        "//google/rpc:status_proto",
        "//google/type:date_proto",
        "//google/type:dayofweek_proto",
        "//google/type:timeofday_proto",
        "@com_google_protobuf//:duration_proto",
        "@com_google_protobuf//:empty_proto",
        "@com_google_protobuf//:field_mask_proto",
        "@com_google_protobuf//:timestamp_proto",
    ],
)

proto_library_with_info(
    name = "dlp_proto_with_info",
    deps = [
        ":dlp_proto",
        "//google/cloud:common_resources_proto",
    ],
)

java_proto_library(
    name = "dlp_java_proto",
    deps = [":dlp_proto"],
)

java_grpc_library(
    name = "dlp_java_grpc",
    srcs = [":dlp_proto"],
    deps = [":dlp_java_proto"],
)

java_gapic_library(
    name = "dlp_java_gapic",
    srcs = [":dlp_proto_with_info"],
    gapic_yaml = "dlp_gapic.yaml",
    grpc_service_config = "dlp_grpc_service_config.json",
    rest_numeric_enums = True,
    service_yaml = "dlp_v2.yaml",
    test_deps = [
        ":dlp_java_grpc",
    ],
    transport = "grpc+rest",
    deps = [
        ":dlp_java_proto",
    ],
)

java_gapic_test(
    name = "dlp_java_gapic_test_suite",
    test_classes = [
        "com.google.cloud.dlp.v2.DlpServiceClientHttpJsonTest",
        "com.google.cloud.dlp.v2.DlpServiceClientTest",
    ],
    runtime_deps = [":dlp_java_gapic_test"],
)

# Open Source Packages
java_gapic_assembly_gradle_pkg(
    name = "google-cloud-privacy-dlp-v2-java",
    include_samples = True,
    transport = "grpc+rest",
    deps = [
        ":dlp_java_gapic",
        ":dlp_java_grpc",
        ":dlp_java_proto",
        ":dlp_proto",
    ],
)

go_proto_library(
    name = "dlp_go_proto",
    compilers = ["@io_bazel_rules_go//proto:go_grpc"],
    importpath = "cloud.google.com/go/dlp/apiv2/dlppb",
    protos = [":dlp_proto"],
    deps = [
        "//google/api:annotations_go_proto",
        "//google/rpc:status_go_proto",
        "//google/type:date_go_proto",
        "//google/type:dayofweek_go_proto",
        "//google/type:timeofday_go_proto",
    ],
)

go_gapic_library(
    name = "dlp_go_gapic",
    srcs = [":dlp_proto_with_info"],
    grpc_service_config = "dlp_grpc_service_config.json",
    importpath = "cloud.google.com/go/dlp/apiv2;dlp",
    release_level = "ga",
    rest_numeric_enums = True,
    service_yaml = "dlp_v2.yaml",
    transport = "grpc+rest",
    deps = [
        ":dlp_go_proto",
        "@io_bazel_rules_go//proto/wkt:duration_go_proto",
    ],
)

# Open Source Packages
go_gapic_assembly_pkg(
    name = "gapi-cloud-privacy-dlp-v2-go",
    deps = [
        ":dlp_go_gapic",
        ":dlp_go_gapic_srcjar-snippets.srcjar",
        ":dlp_go_gapic_srcjar-test.srcjar",
        ":dlp_go_proto",
    ],
)

py_gapic_library(
    name = "dlp_py_gapic",
    srcs = [":dlp_proto"],
    grpc_service_config = "dlp_grpc_service_config.json",
    opt_args = ["python-gapic-namespace=google.cloud"],
    rest_numeric_enums = True,
    service_yaml = "dlp_v2.yaml",
    transport = "grpc+rest",
)

py_test(
    name = "dlp_py_gapic_test",
    srcs = [
        "dlp_py_gapic_pytest.py",
        "dlp_py_gapic_test.py",
    ],
    legacy_create_init = False,
    deps = [":dlp_py_gapic"],
)

py_gapic_assembly_pkg(
    name = "privacy-dlp-v2-py",
    deps = [
        ":dlp_py_gapic",
    ],
)

php_proto_library(
    name = "dlp_php_proto",
    deps = [":dlp_proto"],
)

php_gapic_library(
    name = "dlp_php_gapic",
    srcs = [":dlp_proto_with_info"],
    grpc_service_config = "dlp_grpc_service_config.json",
    migration_mode = "MIGRATION_MODE_UNSPECIFIED",
    rest_numeric_enums = True,
    service_yaml = "dlp_v2.yaml",
    transport = "grpc+rest",
    deps = [":dlp_php_proto"],
)

# Open Source Packages
php_gapic_assembly_pkg(
    name = "google-cloud-privacy-dlp-v2-php",
    deps = [
        ":dlp_php_gapic",
        ":dlp_php_proto",
    ],
)

nodejs_gapic_library(
    name = "dlp_nodejs_gapic",
    package_name = "@google-cloud/dlp",
    src = ":dlp_proto_with_info",
    extra_protoc_parameters = ["metadata"],
    grpc_service_config = "dlp_grpc_service_config.json",
    package = "google.privacy.dlp.v2",
    rest_numeric_enums = True,
    service_yaml = "dlp_v2.yaml",
    transport = "grpc+rest",
    deps = [],
)

nodejs_gapic_assembly_pkg(
    name = "privacy-dlp-v2-nodejs",
    deps = [
        ":dlp_nodejs_gapic",
        ":dlp_proto",
    ],
)

ruby_proto_library(
    name = "dlp_ruby_proto",
    deps = [":dlp_proto"],
)

ruby_grpc_library(
    name = "dlp_ruby_grpc",
    srcs = [":dlp_proto"],
    deps = [":dlp_ruby_proto"],
)

ruby_cloud_gapic_library(
    name = "dlp_ruby_gapic",
    srcs = [":dlp_proto_with_info"],
    extra_protoc_parameters = [
        "ruby-cloud-gem-name=google-cloud-dlp-v2",
        "ruby-cloud-env-prefix=DLP",
        "ruby-cloud-product-url=https://cloud.google.com/dlp",
        "ruby-cloud-api-id=dlp.googleapis.com",
        "ruby-cloud-api-shortname=dlp",
    ],
    grpc_service_config = "dlp_grpc_service_config.json",
    rest_numeric_enums = True,
    ruby_cloud_description = "Provides methods for detection of privacy-sensitive fragments in text, images, and Google Cloud Platform storage repositories.",
    ruby_cloud_title = "Cloud Data Loss Prevention (DLP) V2",
    service_yaml = "dlp_v2.yaml",
    transport = "grpc+rest",
    deps = [
        ":dlp_ruby_grpc",
        ":dlp_ruby_proto",
    ],
)

# Open Source Packages
ruby_gapic_assembly_pkg(
    name = "google-cloud-privacy-dlp-v2-ruby",
    deps = [
        ":dlp_ruby_gapic",
        ":dlp_ruby_grpc",
        ":dlp_ruby_proto",
    ],
)

csharp_proto_library(
    name = "dlp_csharp_proto",
    deps = [":dlp_proto"],
)

csharp_grpc_library(
    name = "dlp_csharp_grpc",
    srcs = [":dlp_proto"],
    deps = [":dlp_csharp_proto"],
)

csharp_gapic_library(
    name = "dlp_csharp_gapic",
    srcs = [":dlp_proto_with_info"],
    common_resources_config = "@gax_dotnet//:Google.Api.Gax/ResourceNames/CommonResourcesConfig.json",
    grpc_service_config = "dlp_grpc_service_config.json",
    rest_numeric_enums = True,
    service_yaml = "dlp_v2.yaml",
    transport = "grpc+rest",
    deps = [
        ":dlp_csharp_grpc",
        ":dlp_csharp_proto",
    ],
)

# Open Source Packages
csharp_gapic_assembly_pkg(
    name = "google-cloud-privacy-dlp-v2-csharp",
    deps = [
        ":dlp_csharp_gapic",
        ":dlp_csharp_grpc",
        ":dlp_csharp_proto",
    ],
)

cc_proto_library(
    name = "dlp_cc_proto",
    deps = [":dlp_proto"],
)

cc_grpc_library(
    name = "dlp_cc_grpc",
    srcs = [":dlp_proto"],
    grpc_only = True,
    deps = [":dlp_cc_proto"],
)

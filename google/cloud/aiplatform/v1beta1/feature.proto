// Copyright 2021 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package google.cloud.aiplatform.v1beta1;

import "google/api/field_behavior.proto";
import "google/api/resource.proto";
import "google/cloud/aiplatform/v1beta1/feature_monitoring_stats.proto";
import "google/cloud/aiplatform/v1beta1/featurestore_monitoring.proto";
import "google/protobuf/timestamp.proto";
import "google/api/annotations.proto";

option csharp_namespace = "Google.Cloud.AIPlatform.V1Beta1";
option go_package = "google.golang.org/genproto/googleapis/cloud/aiplatform/v1beta1;aiplatform";
option java_multiple_files = true;
option java_outer_classname = "FeatureProto";
option java_package = "com.google.cloud.aiplatform.v1beta1";
option php_namespace = "Google\\Cloud\\AIPlatform\\V1beta1";
option ruby_package = "Google::Cloud::AIPlatform::V1beta1";

// Feature Metadata information that describes an attribute of an entity type.
// For example, apple is an entity type, and color is a feature that describes
// apple.
message Feature {
  option (google.api.resource) = {
    type: "aiplatform.googleapis.com/Feature"
    pattern: "projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entity_type}/features/{feature}"
  };

  // An enum representing the value type of a feature.
  enum ValueType {
    // The value type is unspecified.
    VALUE_TYPE_UNSPECIFIED = 0;

    // Used for Feature that is a boolean.
    BOOL = 1;

    // Used for Feature that is a list of boolean.
    BOOL_ARRAY = 2;

    // Used for Feature that is double.
    DOUBLE = 3;

    // Used for Feature that is a list of double.
    DOUBLE_ARRAY = 4;

    // Used for Feature that is INT64.
    INT64 = 9;

    // Used for Feature that is a list of INT64.
    INT64_ARRAY = 10;

    // Used for Feature that is string.
    STRING = 11;

    // Used for Feature that is a list of String.
    STRING_ARRAY = 12;

    // Used for Feature that is bytes.
    BYTES = 13;
  }

  // Immutable. Name of the Feature.
  // Format:
  // `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entity_type}/features/{feature}`
  //
  // The last part feature is assigned by the client. The feature can be up to
  // 64 characters long and can consist only of ASCII Latin letters A-Z and a-z,
  // underscore(_), and ASCII digits 0-9 starting with a letter. The value will
  // be unique given an entity type.
  string name = 1 [(google.api.field_behavior) = IMMUTABLE];

  // Description of the Feature.
  string description = 2;

  // Required. Immutable. Type of Feature value.
  ValueType value_type = 3 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.field_behavior) = IMMUTABLE
  ];

  // Output only. Timestamp when this EntityType was created.
  google.protobuf.Timestamp create_time = 4 [(google.api.field_behavior) = OUTPUT_ONLY];

  // Output only. Timestamp when this EntityType was most recently updated.
  google.protobuf.Timestamp update_time = 5 [(google.api.field_behavior) = OUTPUT_ONLY];

  // Optional. The labels with user-defined metadata to organize your Features.
  //
  // Label keys and values can be no longer than 64 characters
  // (Unicode codepoints), can only contain lowercase letters, numeric
  // characters, underscores and dashes. International characters are allowed.
  //
  // See https://goo.gl/xmQnxf for more information on and examples of labels.
  // No more than 64 user labels can be associated with one Feature (System
  // labels are excluded)."
  // System reserved label keys are prefixed with "aiplatform.googleapis.com/"
  // and are immutable.
  map<string, string> labels = 6 [(google.api.field_behavior) = OPTIONAL];

  // Used to perform a consistent read-modify-write updates. If not set, a blind
  // "overwrite" update happens.
  string etag = 7;

  // Optional. The custom monitoring configuration for this Feature, if not set, use the
  // monitoring_config defined for the EntityType this Feature belongs to.
  //
  // If this is populated with
  // [FeaturestoreMonitoringConfig.disabled][] = true, snapshot analysis
  // monitoring is disabled; if
  // [FeaturestoreMonitoringConfig.monitoring_interval][] specified, snapshot
  // analysis monitoring is enabled. Otherwise, snapshot analysis monitoring
  // config is same as the EntityType's this Feature belongs to.
  FeaturestoreMonitoringConfig monitoring_config = 9 [(google.api.field_behavior) = OPTIONAL];

  // Output only. A list of historical [Snapshot
  // Analysis][google.cloud.aiplatform.master.FeaturestoreMonitoringConfig.SnapshotAnalysis]
  // stats requested by user, sorted by [FeatureStatsAnomaly.start_time][google.cloud.aiplatform.v1beta1.FeatureStatsAnomaly.start_time]
  // descending.
  repeated FeatureStatsAnomaly monitoring_stats = 10 [(google.api.field_behavior) = OUTPUT_ONLY];
}

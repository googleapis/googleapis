// Copyright 2021 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package google.cloud.gkeconnect.gateway.v1beta1;

import "google/api/annotations.proto";
import "google/api/client.proto";
import "google/api/httpbody.proto";

option csharp_namespace = "Google.Cloud.GkeConnect.Gateway.V1Beta1";
option go_package = "cloud.google.com/go/gkeconnect/gateway/apiv1beta1/gatewaypb;gatewaypb";
option java_multiple_files = true;
option java_outer_classname = "GatewayProto";
option java_package = "com.google.cloud.gkeconnect.gateway.v1beta1";
option php_namespace = "Google\\Cloud\\GkeConnect\\Gateway\\V1beta1";
option ruby_package = "Google::Cloud::GkeConnect::Gateway::V1beta1";

// Gateway service is a public API which works as a Kubernetes resource model
// proxy between end users and registered Kubernetes clusters. Each RPC in this
// service matches with an HTTP verb. End user will initiate kubectl commands
// against the Gateway service, and Gateway service will forward user requests
// to clusters.
service GatewayService {
  option (google.api.default_host) = "connectgateway.googleapis.com";
  option (google.api.oauth_scopes) =
      "https://www.googleapis.com/auth/cloud-platform";

  // GetResource performs an HTTP GET request on the Kubernetes API Server.
  rpc GetResource(google.api.HttpBody) returns (google.api.HttpBody) {
    option (google.api.http) = {
      get: "/v1beta1/**"
    };
  }

  // PostResource performs an HTTP POST on the Kubernetes API Server.
  rpc PostResource(google.api.HttpBody) returns (google.api.HttpBody) {
    option (google.api.http) = {
      post: "/v1beta1/**"
    };
  }

  // DeleteResource performs an HTTP DELETE on the Kubernetes API Server.
  rpc DeleteResource(google.api.HttpBody) returns (google.api.HttpBody) {
    option (google.api.http) = {
      delete: "/v1beta1/**"
    };
  }

  // PutResource performs an HTTP PUT on the Kubernetes API Server.
  rpc PutResource(google.api.HttpBody) returns (google.api.HttpBody) {
    option (google.api.http) = {
      put: "/v1beta1/**"
    };
  }

  // PatchResource performs an HTTP PATCH on the Kubernetes API Server.
  rpc PatchResource(google.api.HttpBody) returns (google.api.HttpBody) {
    option (google.api.http) = {
      patch: "/v1beta1/**"
    };
  }
}

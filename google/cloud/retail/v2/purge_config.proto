// Copyright 2021 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package google.cloud.retail.v2;

import "google/api/field_behavior.proto";
import "google/api/resource.proto";

option csharp_namespace = "Google.Cloud.Retail.V2";
option go_package = "cloud.google.com/go/retail/apiv2/retailpb;retailpb";
option java_multiple_files = true;
option java_outer_classname = "PurgeConfigProto";
option java_package = "com.google.cloud.retail.v2";
option objc_class_prefix = "RETAIL";
option php_namespace = "Google\\Cloud\\Retail\\V2";
option ruby_package = "Google::Cloud::Retail::V2";

// Metadata related to the progress of the Purge operation.
// This will be returned by the google.longrunning.Operation.metadata field.
message PurgeMetadata {}

// Request message for PurgeUserEvents method.
message PurgeUserEventsRequest {
  // Required. The resource name of the catalog under which the events are
  // created. The format is
  // `projects/${projectId}/locations/global/catalogs/${catalogId}`
  string parent = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = { type: "retail.googleapis.com/Catalog" }
  ];

  // Required. The filter string to specify the events to be deleted with a
  // length limit of 5,000 characters. Empty string filter is not allowed. The
  // eligible fields for filtering are:
  //
  // * `eventType`: Double quoted
  // [UserEvent.event_type][google.cloud.retail.v2.UserEvent.event_type] string.
  // * `eventTime`: in ISO 8601 "zulu" format.
  // * `visitorId`: Double quoted string. Specifying this will delete all
  //   events associated with a visitor.
  // * `userId`: Double quoted string. Specifying this will delete all events
  //   associated with a user.
  //
  // Examples:
  //
  // * Deleting all events in a time range:
  //   `eventTime > "2012-04-23T18:25:43.511Z"
  //   eventTime < "2012-04-23T18:30:43.511Z"`
  // * Deleting specific eventType in time range:
  //   `eventTime > "2012-04-23T18:25:43.511Z" eventType = "detail-page-view"`
  // * Deleting all events for a specific visitor:
  //   `visitorId = "visitor1024"`
  //
  // The filtering fields are assumed to have an implicit AND.
  string filter = 2 [(google.api.field_behavior) = REQUIRED];

  // Actually perform the purge.
  // If `force` is set to false, the method will return the expected purge count
  // without deleting any user events.
  bool force = 3;
}

// Response of the PurgeUserEventsRequest. If the long running operation is
// successfully done, then this message is returned by the
// google.longrunning.Operations.response field.
message PurgeUserEventsResponse {
  // The total count of events purged as a result of the operation.
  int64 purged_events_count = 1;
}

// Copyright 2020 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package google.cloud.servicedirectory.v1;

import "google/api/field_behavior.proto";
import "google/api/resource.proto";
import "google/cloud/servicedirectory/v1/endpoint.proto";

option cc_enable_arenas = true;
option csharp_namespace = "Google.Cloud.ServiceDirectory.V1";
option go_package = "cloud.google.com/go/servicedirectory/apiv1/servicedirectorypb;servicedirectorypb";
option java_multiple_files = true;
option java_outer_classname = "ServiceProto";
option java_package = "com.google.cloud.servicedirectory.v1";
option php_namespace = "Google\\Cloud\\ServiceDirectory\\V1";
option ruby_package = "Google::Cloud::ServiceDirectory::V1";

// An individual service. A service contains a name and optional metadata.
// A service must exist before
// [endpoints][google.cloud.servicedirectory.v1.Endpoint] can be
// added to it.
message Service {
  option (google.api.resource) = {
    type: "servicedirectory.googleapis.com/Service"
    pattern: "projects/{project}/locations/{location}/namespaces/{namespace}/services/{service}"
  };

  // Immutable. The resource name for the service in the format
  // `projects/*/locations/*/namespaces/*/services/*`.
  string name = 1 [(google.api.field_behavior) = IMMUTABLE];

  // Optional. Annotations for the service. This data can be consumed by service
  // clients.
  // Restrictions:
  //  - The entire annotations dictionary may contain up to 2000 characters,
  //    spread accoss all key-value pairs. Annotations that goes beyond any
  //    these limits will be rejected.
  //  - Valid annotation keys have two segments: an optional prefix and name,
  //    separated by a slash (/). The name segment is required and must be 63
  //    characters or less, beginning and ending with an alphanumeric character
  //    ([a-z0-9A-Z]) with dashes (-), underscores (_), dots (.), and
  //    alphanumerics between. The prefix is optional. If specified, the prefix
  //    must be a DNS subdomain: a series of DNS labels separated by dots (.),
  //    not longer than 253 characters in total, followed by a slash (/).
  //    Annotations that fails to meet these requirements will be rejected.
  //  - The '(*.)google.com/' and '(*.)googleapis.com/' prefixes are reserved
  //    for system annotations managed by Service Directory. If the user tries
  //    to write to these keyspaces, those entries will be silently ignored by
  //    the system.
  // Note: This field is equivalent to the 'metadata' field in the v1beta1 API.
  // They have the same syntax and read/write to the same location in Service
  // Directory.
  map<string, string> annotations = 4 [(google.api.field_behavior) = OPTIONAL];

  // Output only. Endpoints associated with this service. Returned on
  // LookupService.Resolve. Control plane clients should use
  // RegistrationService.ListEndpoints.
  repeated Endpoint endpoints = 3 [(google.api.field_behavior) = OUTPUT_ONLY];
}

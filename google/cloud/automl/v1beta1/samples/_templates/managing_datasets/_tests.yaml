templates:

- test_template: AutoML Dataset Management Test Suite
  setup:
  - env: {name: GOOGLE_PROJECT_ID, variable: project_id}
  # Create a unique Dataset display name (max length 32 a-zA-Z0-9_)
  - code: dataset_display_name = "a" + uuid().replace("-", "")[:30]
  - log:
    - "Dataset display_name for test: {}"
    - dataset_display_name

  teardown:
  - log: ["Cleaning up dataset (in case delete step was not run)"]
  - call_may_fail:
      $sample: $delete_dataset_sample
      params:
        project: { variable: project_id }
        dataset_id: { variable: generated_dataset_id }

  cases:
  - name: Create, List, Get, Update, and Delete
    spec:
    # LIST (assert does not exist)
    - call:
        $sample: $list_datasets_sample
        params:
          project: { variable: project_id }
    - assert_not_contains:
      - variable: dataset_display_name

    # CREATE
    - call:
        $sample: $create_dataset_sample
        params:
          project: {variable: project_id}
          display_name: {variable: dataset_display_name}
    # Extract the generated Dataset ID from the Dataset name field (Output only)
    # Format: projects/{project_id}/locations/{location_id}/datasets/{generated_dataset_id}
    - extract_match:
        pattern: datasets/([^\s]+)
        variable: generated_dataset_id
    - log:
      - "Generated Dataset ID: {}"
      - generated_dataset_id
    - assert_contains:
      - literal: "Created dataset"
      - literal: "Name"
      - literal: "Display Name"
      - literal: "Description"
      - variable: dataset_display_name
    - yield: create_dataset_assertions

    # LIST (assert does exist)
    - call:
        $sample: $list_datasets_sample
        params:
          project: {variable: project_id}
    - assert_contains:
      - literal: "Name"
      - variable: generated_dataset_id
      - literal: "Display Name"
      - variable: dataset_display_name
      - literal: "Description"
    - yield: list_datasets_assertions

    # GET
    - call:
        $sample: $get_dataset_sample
        params:
          project: {variable: project_id}
          dataset_id: {variable: generated_dataset_id}
    - assert_contains:
      - literal: "Name"
      - variable: generated_dataset_id
      - literal: "Display Name"
      - variable: dataset_display_name
      - literal: "Description"
    - yield: get_dataset_assertions

    # DELETE
    - log: ["Deleting dataset (may take a minute)"]
    - call:
        $sample: delete_dataset_sample
        params:
          project: {variable: project_id}
          dataset_id: {variable: generated_dataset_id}
    - assert_contains:
      - literal: "Deleted dataset"

    # LIST (assert does not exist)
    - call:
        $sample: $list_datasets_sample
        params:
          project: { variable: project_id }
    - assert_not_contains:
      - variable: dataset_display_name
      - variable: generated_dataset_id

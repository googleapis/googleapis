// Copyright 2023 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated by the disco-to-proto3-converter. DO NOT EDIT!
// Source Discovery file: compute.v1.json
// Source file revision: 20230307
// API name: compute
// API version: v1

syntax = "proto3";

package google.cloud.compute.v1;

import "google/api/annotations.proto";
import "google/api/client.proto";
import "google/api/field_behavior.proto";
import "google/api/resource.proto";
import "google/cloud/extended_operations.proto";

//
// File Options
//
option csharp_namespace = "Google.Cloud.Compute.V1";
option go_package = "cloud.google.com/go/compute/apiv1/computepb";
option java_multiple_files = true;
option java_package = "com.google.cloud.compute.v1";
option php_namespace = "Google\\Cloud\\Compute\\V1";
option ruby_package = "Google::Cloud::Compute::V1";

//
// Messages
//
// A request message for InstanceGroupManagers.AbandonInstances. See the method description for details.
message AbandonInstancesInstanceGroupManagerRequest {
  // The name of the managed instance group.
  string instance_group_manager = 249363395 [(google.api.field_behavior) = REQUIRED];

  // The body resource for this request
  InstanceGroupManagersAbandonInstancesRequest instance_group_managers_abandon_instances_request_resource = 320929016 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // The name of the zone where the managed instance group is located.
  string zone = 3744684 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "zone"
  ];

}

// A request message for RegionInstanceGroupManagers.AbandonInstances. See the method description for details.
message AbandonInstancesRegionInstanceGroupManagerRequest {
  // Name of the managed instance group.
  string instance_group_manager = 249363395 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // Name of the region scoping this request.
  string region = 138946292 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "region"
  ];

  // The body resource for this request
  RegionInstanceGroupManagersAbandonInstancesRequest region_instance_group_managers_abandon_instances_request_resource = 488499491 [(google.api.field_behavior) = REQUIRED];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

}

// A specification of the type and number of accelerator cards attached to the instance.
message AcceleratorConfig {
  // The number of the guest accelerator cards exposed to this instance.
  optional int32 accelerator_count = 504879675;

  // Full or partial URL of the accelerator type resource to attach to this instance. For example: projects/my-project/zones/us-central1-c/acceleratorTypes/nvidia-tesla-p100 If you are creating an instance template, specify only the accelerator name. See GPUs on Compute Engine for a full list of accelerator types.
  optional string accelerator_type = 138031246;

}

// Represents an Accelerator Type resource. Google Cloud Platform provides graphics processing units (accelerators) that you can add to VM instances to improve or accelerate performance when working with intensive workloads. For more information, read GPUs on Compute Engine.
message AcceleratorType {
  // [Output Only] Creation timestamp in RFC3339 text format.
  optional string creation_timestamp = 30525366;

  // [Output Only] The deprecation status associated with this accelerator type.
  optional DeprecationStatus deprecated = 515138995;

  // [Output Only] An optional textual description of the resource.
  optional string description = 422937596;

  // [Output Only] The unique identifier for the resource. This identifier is defined by the server.
  optional uint64 id = 3355;

  // [Output Only] The type of the resource. Always compute#acceleratorType for accelerator types.
  optional string kind = 3292052;

  // [Output Only] Maximum number of accelerator cards allowed per instance.
  optional int32 maximum_cards_per_instance = 263814482;

  // [Output Only] Name of the resource.
  optional string name = 3373707;

  // [Output Only] Server-defined, fully qualified URL for this resource.
  optional string self_link = 456214797;

  // [Output Only] The name of the zone where the accelerator type resides, such as us-central1-a. You must specify this field as part of the HTTP request URL. It is not settable as a field in the request body.
  optional string zone = 3744684;

}

//
message AcceleratorTypeAggregatedList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 3355;

  // A list of AcceleratorTypesScopedList resources.
  map<string, AcceleratorTypesScopedList> items = 100526016;

  // [Output Only] Type of resource. Always compute#acceleratorTypeAggregatedList for aggregated lists of accelerator types.
  optional string kind = 3292052;

  // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
  optional string next_page_token = 79797525;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 456214797;

  // [Output Only] Unreachable resources.
  repeated string unreachables = 243372063;

  // [Output Only] Informational warning message.
  optional Warning warning = 50704284;

}

// Contains a list of accelerator types.
message AcceleratorTypeList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 3355;

  // A list of AcceleratorType resources.
  repeated AcceleratorType items = 100526016;

  // [Output Only] Type of resource. Always compute#acceleratorTypeList for lists of accelerator types.
  optional string kind = 3292052;

  // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
  optional string next_page_token = 79797525;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 456214797;

  // [Output Only] Informational warning message.
  optional Warning warning = 50704284;

}

//
message AcceleratorTypesScopedList {
  // [Output Only] A list of accelerator types contained in this scope.
  repeated AcceleratorType accelerator_types = 520872357;

  // [Output Only] An informational warning that appears when the accelerator types list is empty.
  optional Warning warning = 50704284;

}

//
message Accelerators {
  // Number of accelerator cards exposed to the guest.
  optional int32 guest_accelerator_count = 479079316;

  // The accelerator type resource name, not a full URL, e.g. 'nvidia-tesla-k80'.
  optional string guest_accelerator_type = 293064725;

}

// An access configuration attached to an instance's network interface. Only one access config per instance is supported.
message AccessConfig {
  // This signifies the networking tier used for configuring this access configuration and can only take the following values: PREMIUM, STANDARD. If an AccessConfig is specified without a valid external IP address, an ephemeral IP will be created with this networkTier. If an AccessConfig with a valid external IP address is specified, it must match that of the networkTier associated with the Address resource owning that IP.
  enum NetworkTier {
    // A value indicating that the enum field is not set.
    UNDEFINED_NETWORK_TIER = 0;

    // Public internet quality with fixed bandwidth.
    FIXED_STANDARD = 310464328;

    // High quality, Google-grade network tier, support for all networking products.
    PREMIUM = 399530551;

    // Public internet quality, only limited support for other networking products.
    STANDARD = 484642493;

    // (Output only) Temporary tier for FIXED_STANDARD when fixed standard tier is expired or not configured.
    STANDARD_OVERRIDES_FIXED_STANDARD = 465847234;

  }

  // The type of configuration. The default and only option is ONE_TO_ONE_NAT.
  enum Type {
    // A value indicating that the enum field is not set.
    UNDEFINED_TYPE = 0;

    DIRECT_IPV6 = 4397213;

    ONE_TO_ONE_NAT = 84090205;

  }

  // The first IPv6 address of the external IPv6 range associated with this instance, prefix length is stored in externalIpv6PrefixLength in ipv6AccessConfig. To use a static external IP address, it must be unused and in the same region as the instance's zone. If not specified, Google Cloud will automatically assign an external IPv6 address from the instance's subnetwork.
  optional string external_ipv6 = 532703707;

  // The prefix length of the external IPv6 range.
  optional int32 external_ipv6_prefix_length = 425672143;

  // [Output Only] Type of the resource. Always compute#accessConfig for access configs.
  optional string kind = 3292052;

  // The name of this access configuration. The default and recommended name is External NAT, but you can use any arbitrary string, such as My external IP or Network Access.
  optional string name = 3373707;

  // An external IP address associated with this instance. Specify an unused static external IP address available to the project or leave this field undefined to use an IP from a shared ephemeral IP address pool. If you specify a static external IP address, it must live in the same region as the zone of the instance.
  optional string nat_i_p = 117634556;

  // This signifies the networking tier used for configuring this access configuration and can only take the following values: PREMIUM, STANDARD. If an AccessConfig is specified without a valid external IP address, an ephemeral IP will be created with this networkTier. If an AccessConfig with a valid external IP address is specified, it must match that of the networkTier associated with the Address resource owning that IP.
  // Check the NetworkTier enum for the list of possible values.
  optional string network_tier = 517397843;

  // The DNS domain name for the public PTR record. You can set this field only if the `setPublicPtr` field is enabled in accessConfig. If this field is unspecified in ipv6AccessConfig, a default PTR record will be createc for first IP in associated external IPv6 range.
  optional string public_ptr_domain_name = 316599167;

  // Specifies whether a public DNS 'PTR' record should be created to map the external IP address of the instance to a DNS domain name. This field is not used in ipv6AccessConfig. A default PTR record will be created if the VM has external IPv6 range associated.
  optional bool set_public_ptr = 523870229;

  // The type of configuration. The default and only option is ONE_TO_ONE_NAT.
  // Check the Type enum for the list of possible values.
  optional string type = 3575610;

}

// A request message for Instances.AddAccessConfig. See the method description for details.
message AddAccessConfigInstanceRequest {
  // The body resource for this request
  AccessConfig access_config_resource = 387825552 [(google.api.field_behavior) = REQUIRED];

  // The instance name for this request.
  string instance = 18257045 [(google.api.field_behavior) = REQUIRED];

  // The name of the network interface to add to this instance.
  string network_interface = 365387880 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // The name of the zone for this request.
  string zone = 3744684 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "zone"
  ];

}

// A request message for FirewallPolicies.AddAssociation. See the method description for details.
message AddAssociationFirewallPolicyRequest {
  // Name of the firewall policy to update.
  string firewall_policy = 498173265 [(google.api.field_behavior) = REQUIRED];

  // The body resource for this request
  FirewallPolicyAssociation firewall_policy_association_resource = 259546170 [(google.api.field_behavior) = REQUIRED];

  // Indicates whether or not to replace it if an association of the attachment already exists. This is false by default, in which case an error will be returned if an association already exists.
  optional bool replace_existing_association = 209541240;

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

}

// A request message for NetworkFirewallPolicies.AddAssociation. See the method description for details.
message AddAssociationNetworkFirewallPolicyRequest {
  // Name of the firewall policy to update.
  string firewall_policy = 498173265 [(google.api.field_behavior) = REQUIRED];

  // The body resource for this request
  FirewallPolicyAssociation firewall_policy_association_resource = 259546170 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // Indicates whether or not to replace it if an association of the attachment already exists. This is false by default, in which case an error will be returned if an association already exists.
  optional bool replace_existing_association = 209541240;

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

}

// A request message for RegionNetworkFirewallPolicies.AddAssociation. See the method description for details.
message AddAssociationRegionNetworkFirewallPolicyRequest {
  // Name of the firewall policy to update.
  string firewall_policy = 498173265 [(google.api.field_behavior) = REQUIRED];

  // The body resource for this request
  FirewallPolicyAssociation firewall_policy_association_resource = 259546170 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // Name of the region scoping this request.
  string region = 138946292 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "region"
  ];

  // Indicates whether or not to replace it if an association already exists. This is false by default, in which case an error will be returned if an association already exists.
  optional bool replace_existing_association = 209541240;

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

}

// A request message for TargetPools.AddHealthCheck. See the method description for details.
message AddHealthCheckTargetPoolRequest {
  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // Name of the region scoping this request.
  string region = 138946292 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "region"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // Name of the target pool to add a health check to.
  string target_pool = 62796298 [(google.api.field_behavior) = REQUIRED];

  // The body resource for this request
  TargetPoolsAddHealthCheckRequest target_pools_add_health_check_request_resource = 269573412 [(google.api.field_behavior) = REQUIRED];

}

// A request message for TargetPools.AddInstance. See the method description for details.
message AddInstanceTargetPoolRequest {
  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // Name of the region scoping this request.
  string region = 138946292 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "region"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // Name of the TargetPool resource to add instances to.
  string target_pool = 62796298 [(google.api.field_behavior) = REQUIRED];

  // The body resource for this request
  TargetPoolsAddInstanceRequest target_pools_add_instance_request_resource = 428796404 [(google.api.field_behavior) = REQUIRED];

}

// A request message for InstanceGroups.AddInstances. See the method description for details.
message AddInstancesInstanceGroupRequest {
  // The name of the instance group where you are adding instances.
  string instance_group = 81095253 [(google.api.field_behavior) = REQUIRED];

  // The body resource for this request
  InstanceGroupsAddInstancesRequest instance_groups_add_instances_request_resource = 453713246 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // The name of the zone where the instance group is located.
  string zone = 3744684 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "zone"
  ];

}

// A request message for NodeGroups.AddNodes. See the method description for details.
message AddNodesNodeGroupRequest {
  // Name of the NodeGroup resource.
  string node_group = 469958146 [(google.api.field_behavior) = REQUIRED];

  // The body resource for this request
  NodeGroupsAddNodesRequest node_groups_add_nodes_request_resource = 131263288 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // The name of the zone for this request.
  string zone = 3744684 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "zone"
  ];

}

// A request message for Networks.AddPeering. See the method description for details.
message AddPeeringNetworkRequest {
  // Name of the network resource to add peering to.
  string network = 232872494 [(google.api.field_behavior) = REQUIRED];

  // The body resource for this request
  NetworksAddPeeringRequest networks_add_peering_request_resource = 388810421 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

}

// A request message for Disks.AddResourcePolicies. See the method description for details.
message AddResourcePoliciesDiskRequest {
  // The disk name for this request.
  string disk = 3083677 [(google.api.field_behavior) = REQUIRED];

  // The body resource for this request
  DisksAddResourcePoliciesRequest disks_add_resource_policies_request_resource = 496483363 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // The name of the zone for this request.
  string zone = 3744684 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "zone"
  ];

}

// A request message for Instances.AddResourcePolicies. See the method description for details.
message AddResourcePoliciesInstanceRequest {
  // The instance name for this request.
  string instance = 18257045 [(google.api.field_behavior) = REQUIRED];

  // The body resource for this request
  InstancesAddResourcePoliciesRequest instances_add_resource_policies_request_resource = 489351963 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // The name of the zone for this request.
  string zone = 3744684 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "zone"
  ];

}

// A request message for RegionDisks.AddResourcePolicies. See the method description for details.
message AddResourcePoliciesRegionDiskRequest {
  // The disk name for this request.
  string disk = 3083677 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // The name of the region for this request.
  string region = 138946292 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "region"
  ];

  // The body resource for this request
  RegionDisksAddResourcePoliciesRequest region_disks_add_resource_policies_request_resource = 284196750 [(google.api.field_behavior) = REQUIRED];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

}

// A request message for FirewallPolicies.AddRule. See the method description for details.
message AddRuleFirewallPolicyRequest {
  // Name of the firewall policy to update.
  string firewall_policy = 498173265 [(google.api.field_behavior) = REQUIRED];

  // The body resource for this request
  FirewallPolicyRule firewall_policy_rule_resource = 250523523 [(google.api.field_behavior) = REQUIRED];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

}

// A request message for NetworkFirewallPolicies.AddRule. See the method description for details.
message AddRuleNetworkFirewallPolicyRequest {
  // Name of the firewall policy to update.
  string firewall_policy = 498173265 [(google.api.field_behavior) = REQUIRED];

  // The body resource for this request
  FirewallPolicyRule firewall_policy_rule_resource = 250523523 [(google.api.field_behavior) = REQUIRED];

  // When rule.priority is not specified, auto choose a unused priority between minPriority and maxPriority>. This field is exclusive with rule.priority.
  optional int32 max_priority = 329635359;

  // When rule.priority is not specified, auto choose a unused priority between minPriority and maxPriority>. This field is exclusive with rule.priority.
  optional int32 min_priority = 267190513;

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

}

// A request message for RegionNetworkFirewallPolicies.AddRule. See the method description for details.
message AddRuleRegionNetworkFirewallPolicyRequest {
  // Name of the firewall policy to update.
  string firewall_policy = 498173265 [(google.api.field_behavior) = REQUIRED];

  // The body resource for this request
  FirewallPolicyRule firewall_policy_rule_resource = 250523523 [(google.api.field_behavior) = REQUIRED];

  // When rule.priority is not specified, auto choose a unused priority between minPriority and maxPriority>. This field is exclusive with rule.priority.
  optional int32 max_priority = 329635359;

  // When rule.priority is not specified, auto choose a unused priority between minPriority and maxPriority>. This field is exclusive with rule.priority.
  optional int32 min_priority = 267190513;

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // Name of the region scoping this request.
  string region = 138946292 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "region"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

}

// A request message for SecurityPolicies.AddRule. See the method description for details.
message AddRuleSecurityPolicyRequest {
  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // Name of the security policy to update.
  string security_policy = 171082513 [(google.api.field_behavior) = REQUIRED];

  // The body resource for this request
  SecurityPolicyRule security_policy_rule_resource = 402693443 [(google.api.field_behavior) = REQUIRED];

  // If true, the request will not be committed.
  optional bool validate_only = 242744629;

}

// A request message for BackendBuckets.AddSignedUrlKey. See the method description for details.
message AddSignedUrlKeyBackendBucketRequest {
  // Name of the BackendBucket resource to which the Signed URL Key should be added. The name should conform to RFC1035.
  string backend_bucket = 91714037 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // The body resource for this request
  SignedUrlKey signed_url_key_resource = 457625985 [(google.api.field_behavior) = REQUIRED];

}

// A request message for BackendServices.AddSignedUrlKey. See the method description for details.
message AddSignedUrlKeyBackendServiceRequest {
  // Name of the BackendService resource to which the Signed URL Key should be added. The name should conform to RFC1035.
  string backend_service = 306946058 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // The body resource for this request
  SignedUrlKey signed_url_key_resource = 457625985 [(google.api.field_behavior) = REQUIRED];

}

// Represents an IP Address resource. Google Compute Engine has two IP Address resources: * [Global (external and internal)](https://cloud.google.com/compute/docs/reference/rest/v1/globalAddresses) * [Regional (external and internal)](https://cloud.google.com/compute/docs/reference/rest/v1/addresses) For more information, see Reserving a static external IP address.
message Address {
  // The type of address to reserve, either INTERNAL or EXTERNAL. If unspecified, defaults to EXTERNAL.
  enum AddressType {
    // A value indicating that the enum field is not set.
    UNDEFINED_ADDRESS_TYPE = 0;

    // A publicly visible external IP address.
    EXTERNAL = 35607499;

    // A private network IP address, for use with an Instance or Internal Load Balancer forwarding rule.
    INTERNAL = 279295677;

    UNSPECIFIED_TYPE = 53933922;

  }

  // The IP version that will be used by this address. Valid options are IPV4 or IPV6. This can only be specified for a global address.
  enum IpVersion {
    // A value indicating that the enum field is not set.
    UNDEFINED_IP_VERSION = 0;

    IPV4 = 2254341;

    IPV6 = 2254343;

    UNSPECIFIED_VERSION = 21850000;

  }

  // The endpoint type of this address, which should be VM or NETLB. This is used for deciding which type of endpoint this address can be used after the external IPv6 address reservation.
  enum Ipv6EndpointType {
    // A value indicating that the enum field is not set.
    UNDEFINED_IPV6_ENDPOINT_TYPE = 0;

    // Reserved IPv6 address can be used on network load balancer.
    NETLB = 74173363;

    // Reserved IPv6 address can be used on VM.
    VM = 2743;

  }

  // This signifies the networking tier used for configuring this address and can only take the following values: PREMIUM or STANDARD. Internal IP addresses are always Premium Tier; global external IP addresses are always Premium Tier; regional external IP addresses can be either Standard or Premium Tier. If this field is not specified, it is assumed to be PREMIUM.
  enum NetworkTier {
    // A value indicating that the enum field is not set.
    UNDEFINED_NETWORK_TIER = 0;

    // Public internet quality with fixed bandwidth.
    FIXED_STANDARD = 310464328;

    // High quality, Google-grade network tier, support for all networking products.
    PREMIUM = 399530551;

    // Public internet quality, only limited support for other networking products.
    STANDARD = 484642493;

    // (Output only) Temporary tier for FIXED_STANDARD when fixed standard tier is expired or not configured.
    STANDARD_OVERRIDES_FIXED_STANDARD = 465847234;

  }

  // The purpose of this resource, which can be one of the following values: - GCE_ENDPOINT for addresses that are used by VM instances, alias IP ranges, load balancers, and similar resources. - DNS_RESOLVER for a DNS resolver address in a subnetwork for a Cloud DNS inbound forwarder IP addresses (regional internal IP address in a subnet of a VPC network) - VPC_PEERING for global internal IP addresses used for private services access allocated ranges. - NAT_AUTO for the regional external IP addresses used by Cloud NAT when allocating addresses using automatic NAT IP address allocation. - IPSEC_INTERCONNECT for addresses created from a private IP range that are reserved for a VLAN attachment in an *HA VPN over Cloud Interconnect* configuration. These addresses are regional resources. - `SHARED_LOADBALANCER_VIP` for an internal IP address that is assigned to multiple internal forwarding rules. - `PRIVATE_SERVICE_CONNECT` for a private network address that is used to configure Private Service Connect. Only global internal addresses can use this purpose. 
  enum Purpose {
    // A value indicating that the enum field is not set.
    UNDEFINED_PURPOSE = 0;

    // DNS resolver address in the subnetwork.
    DNS_RESOLVER = 476114556;

    // VM internal/alias IP, Internal LB service IP, etc.
    GCE_ENDPOINT = 230515243;

    // A regional internal IP address range reserved for the VLAN attachment that is used in HA VPN over Cloud Interconnect. This regional internal IP address range must not overlap with any IP address range of subnet/route in the VPC network and its peering networks. After the VLAN attachment is created with the reserved IP address range, when creating a new VPN gateway, its interface IP address is allocated from the associated VLAN attachment’s IP address range.
    IPSEC_INTERCONNECT = 340437251;

    // External IP automatically reserved for Cloud NAT.
    NAT_AUTO = 163666477;

    // A private network IP address that can be used to configure Private Service Connect. This purpose can be specified only for GLOBAL addresses of Type INTERNAL
    PRIVATE_SERVICE_CONNECT = 48134724;

    // A regional internal IP address range reserved for Serverless.
    SERVERLESS = 270492508;

    // A private network IP address that can be shared by multiple Internal Load Balancer forwarding rules.
    SHARED_LOADBALANCER_VIP = 294447572;

    // IP range for peer networks.
    VPC_PEERING = 400800170;

  }

  // [Output Only] The status of the address, which can be one of RESERVING, RESERVED, or IN_USE. An address that is RESERVING is currently in the process of being reserved. A RESERVED address is currently reserved and available to use. An IN_USE address is currently being used by another resource and is not available.
  enum Status {
    // A value indicating that the enum field is not set.
    UNDEFINED_STATUS = 0;

    // Address is being used by another resource and is not available.
    IN_USE = 17393485;

    // Address is reserved and available to use.
    RESERVED = 432241448;

    // Address is being reserved.
    RESERVING = 514587225;

  }

  // The static IP address represented by this resource.
  optional string address = 462920692;

  // The type of address to reserve, either INTERNAL or EXTERNAL. If unspecified, defaults to EXTERNAL.
  // Check the AddressType enum for the list of possible values.
  optional string address_type = 264307877;

  // [Output Only] Creation timestamp in RFC3339 text format.
  optional string creation_timestamp = 30525366;

  // An optional description of this resource. Provide this field when you create the resource.
  optional string description = 422937596;

  // [Output Only] The unique identifier for the resource. This identifier is defined by the server.
  optional uint64 id = 3355;

  // The IP version that will be used by this address. Valid options are IPV4 or IPV6. This can only be specified for a global address.
  // Check the IpVersion enum for the list of possible values.
  optional string ip_version = 294959552;

  // The endpoint type of this address, which should be VM or NETLB. This is used for deciding which type of endpoint this address can be used after the external IPv6 address reservation.
  // Check the Ipv6EndpointType enum for the list of possible values.
  optional string ipv6_endpoint_type = 97501004;

  // [Output Only] Type of the resource. Always compute#address for addresses.
  optional string kind = 3292052;

  // Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?`. The first character must be a lowercase letter, and all following characters (except for the last character) must be a dash, lowercase letter, or digit. The last character must be a lowercase letter or digit.
  optional string name = 3373707;

  // The URL of the network in which to reserve the address. This field can only be used with INTERNAL type with the VPC_PEERING purpose.
  optional string network = 232872494;

  // This signifies the networking tier used for configuring this address and can only take the following values: PREMIUM or STANDARD. Internal IP addresses are always Premium Tier; global external IP addresses are always Premium Tier; regional external IP addresses can be either Standard or Premium Tier. If this field is not specified, it is assumed to be PREMIUM.
  // Check the NetworkTier enum for the list of possible values.
  optional string network_tier = 517397843;

  // The prefix length if the resource represents an IP range.
  optional int32 prefix_length = 453565747;

  // The purpose of this resource, which can be one of the following values: - GCE_ENDPOINT for addresses that are used by VM instances, alias IP ranges, load balancers, and similar resources. - DNS_RESOLVER for a DNS resolver address in a subnetwork for a Cloud DNS inbound forwarder IP addresses (regional internal IP address in a subnet of a VPC network) - VPC_PEERING for global internal IP addresses used for private services access allocated ranges. - NAT_AUTO for the regional external IP addresses used by Cloud NAT when allocating addresses using automatic NAT IP address allocation. - IPSEC_INTERCONNECT for addresses created from a private IP range that are reserved for a VLAN attachment in an *HA VPN over Cloud Interconnect* configuration. These addresses are regional resources. - `SHARED_LOADBALANCER_VIP` for an internal IP address that is assigned to multiple internal forwarding rules. - `PRIVATE_SERVICE_CONNECT` for a private network address that is used to configure Private Service Connect. Only global internal addresses can use this purpose.
  // Check the Purpose enum for the list of possible values.
  optional string purpose = 316407070;

  // [Output Only] The URL of the region where a regional address resides. For regional addresses, you must specify the region as a path parameter in the HTTP request URL. *This field is not applicable to global addresses.*
  optional string region = 138946292;

  // [Output Only] Server-defined URL for the resource.
  optional string self_link = 456214797;

  // [Output Only] The status of the address, which can be one of RESERVING, RESERVED, or IN_USE. An address that is RESERVING is currently in the process of being reserved. A RESERVED address is currently reserved and available to use. An IN_USE address is currently being used by another resource and is not available.
  // Check the Status enum for the list of possible values.
  optional string status = 181260274;

  // The URL of the subnetwork in which to reserve the address. If an IP address is specified, it must be within the subnetwork's IP range. This field can only be used with INTERNAL type with a GCE_ENDPOINT or DNS_RESOLVER purpose.
  optional string subnetwork = 307827694;

  // [Output Only] The URLs of the resources that are using this address.
  repeated string users = 111578632;

}

//
message AddressAggregatedList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 3355;

  // A list of AddressesScopedList resources.
  map<string, AddressesScopedList> items = 100526016;

  // [Output Only] Type of resource. Always compute#addressAggregatedList for aggregated lists of addresses.
  optional string kind = 3292052;

  // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
  optional string next_page_token = 79797525;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 456214797;

  // [Output Only] Unreachable resources.
  repeated string unreachables = 243372063;

  // [Output Only] Informational warning message.
  optional Warning warning = 50704284;

}

// Contains a list of addresses.
message AddressList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 3355;

  // A list of Address resources.
  repeated Address items = 100526016;

  // [Output Only] Type of resource. Always compute#addressList for lists of addresses.
  optional string kind = 3292052;

  // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
  optional string next_page_token = 79797525;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 456214797;

  // [Output Only] Informational warning message.
  optional Warning warning = 50704284;

}

//
message AddressesScopedList {
  // [Output Only] A list of addresses contained in this scope.
  repeated Address addresses = 337673122;

  // [Output Only] Informational warning which replaces the list of addresses when the list is empty.
  optional Warning warning = 50704284;

}

// Specifies options for controlling advanced machine features. Options that would traditionally be configured in a BIOS belong here. Features that require operating system support may have corresponding entries in the GuestOsFeatures of an Image (e.g., whether or not the OS in the Image supports nested virtualization being enabled or disabled).
message AdvancedMachineFeatures {
  // Whether to enable nested virtualization or not (default is false).
  optional bool enable_nested_virtualization = 16639365;

  // Whether to enable UEFI networking for instance creation.
  optional bool enable_uefi_networking = 334485668;

  // The number of threads per physical core. To disable simultaneous multithreading (SMT) set this to 1. If unset, the maximum number of threads supported per core by the underlying processor is assumed.
  optional int32 threads_per_core = 352611671;

  // The number of physical cores to expose to an instance. Multiply by the number of threads per core to compute the total number of virtual CPUs to expose to the instance. If unset, the number of cores is inferred from the instance's nominal CPU count and the underlying platform's SMT width.
  optional int32 visible_core_count = 193198684;

}

// A request message for AcceleratorTypes.AggregatedList. See the method description for details.
message AggregatedListAcceleratorTypesRequest {
  // A filter expression that filters resources listed in the response. Most Compute resources support two types of filter expressions: expressions that support regular expressions and expressions that follow API improvement proposal AIP-160. If you want to use AIP-160, your expression must specify the field name, an operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The operator must be either `=`, `!=`, `>`, `<`, `<=`, `>=` or `:`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. The `:` operator can be used with string fields to match substrings. For non-string fields it is equivalent to the `=` operator. The `:*` comparison can be used to test whether a key has been defined. For example, to find all objects with `owner` label use: ``` labels.owner:* ``` You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ``` If you want to use a regular expression, use the `eq` (equal) or `ne` (not equal) operator against a single un-parenthesized expression with or without quotes or against multiple parenthesized expressions. Examples: `fieldname eq unquoted literal` `fieldname eq 'single quoted literal'` `fieldname eq "double quoted literal"` `(fieldname1 eq literal) (fieldname2 ne "literal")` The literal value is interpreted as a regular expression using Google RE2 library syntax. The literal value must match the entire field. For example, to filter for instances that do not end with name "instance", you would use `name ne .*instance`.
  optional string filter = 336120696;

  // Indicates whether every visible scope for each scope type (zone, region, global) should be included in the response. For new resource types added after this field, the flag has no effect as new resource types will always include every visible scope for each scope type in response. For resource types which predate this field, if this flag is omitted or false, only scopes of the scope types where the resource type is expected to be found will be included.
  optional bool include_all_scopes = 391327988;

  // The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)
  optional uint32 max_results = 54715419;

  // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported.
  optional string order_by = 160562920;

  // Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results.
  optional string page_token = 19994697;

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Opt-in for partial success behavior which provides partial results in case of failure. The default value is false.
  optional bool return_partial_success = 517198390;

}

// A request message for Addresses.AggregatedList. See the method description for details.
message AggregatedListAddressesRequest {
  // A filter expression that filters resources listed in the response. Most Compute resources support two types of filter expressions: expressions that support regular expressions and expressions that follow API improvement proposal AIP-160. If you want to use AIP-160, your expression must specify the field name, an operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The operator must be either `=`, `!=`, `>`, `<`, `<=`, `>=` or `:`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. The `:` operator can be used with string fields to match substrings. For non-string fields it is equivalent to the `=` operator. The `:*` comparison can be used to test whether a key has been defined. For example, to find all objects with `owner` label use: ``` labels.owner:* ``` You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ``` If you want to use a regular expression, use the `eq` (equal) or `ne` (not equal) operator against a single un-parenthesized expression with or without quotes or against multiple parenthesized expressions. Examples: `fieldname eq unquoted literal` `fieldname eq 'single quoted literal'` `fieldname eq "double quoted literal"` `(fieldname1 eq literal) (fieldname2 ne "literal")` The literal value is interpreted as a regular expression using Google RE2 library syntax. The literal value must match the entire field. For example, to filter for instances that do not end with name "instance", you would use `name ne .*instance`.
  optional string filter = 336120696;

  // Indicates whether every visible scope for each scope type (zone, region, global) should be included in the response. For new resource types added after this field, the flag has no effect as new resource types will always include every visible scope for each scope type in response. For resource types which predate this field, if this flag is omitted or false, only scopes of the scope types where the resource type is expected to be found will be included.
  optional bool include_all_scopes = 391327988;

  // The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)
  optional uint32 max_results = 54715419;

  // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported.
  optional string order_by = 160562920;

  // Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results.
  optional string page_token = 19994697;

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Opt-in for partial success behavior which provides partial results in case of failure. The default value is false.
  optional bool return_partial_success = 517198390;

}

// A request message for Autoscalers.AggregatedList. See the method description for details.
message AggregatedListAutoscalersRequest {
  // A filter expression that filters resources listed in the response. Most Compute resources support two types of filter expressions: expressions that support regular expressions and expressions that follow API improvement proposal AIP-160. If you want to use AIP-160, your expression must specify the field name, an operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The operator must be either `=`, `!=`, `>`, `<`, `<=`, `>=` or `:`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. The `:` operator can be used with string fields to match substrings. For non-string fields it is equivalent to the `=` operator. The `:*` comparison can be used to test whether a key has been defined. For example, to find all objects with `owner` label use: ``` labels.owner:* ``` You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ``` If you want to use a regular expression, use the `eq` (equal) or `ne` (not equal) operator against a single un-parenthesized expression with or without quotes or against multiple parenthesized expressions. Examples: `fieldname eq unquoted literal` `fieldname eq 'single quoted literal'` `fieldname eq "double quoted literal"` `(fieldname1 eq literal) (fieldname2 ne "literal")` The literal value is interpreted as a regular expression using Google RE2 library syntax. The literal value must match the entire field. For example, to filter for instances that do not end with name "instance", you would use `name ne .*instance`.
  optional string filter = 336120696;

  // Indicates whether every visible scope for each scope type (zone, region, global) should be included in the response. For new resource types added after this field, the flag has no effect as new resource types will always include every visible scope for each scope type in response. For resource types which predate this field, if this flag is omitted or false, only scopes of the scope types where the resource type is expected to be found will be included.
  optional bool include_all_scopes = 391327988;

  // The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)
  optional uint32 max_results = 54715419;

  // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported.
  optional string order_by = 160562920;

  // Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results.
  optional string page_token = 19994697;

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Opt-in for partial success behavior which provides partial results in case of failure. The default value is false.
  optional bool return_partial_success = 517198390;

}

// A request message for BackendServices.AggregatedList. See the method description for details.
message AggregatedListBackendServicesRequest {
  // A filter expression that filters resources listed in the response. Most Compute resources support two types of filter expressions: expressions that support regular expressions and expressions that follow API improvement proposal AIP-160. If you want to use AIP-160, your expression must specify the field name, an operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The operator must be either `=`, `!=`, `>`, `<`, `<=`, `>=` or `:`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. The `:` operator can be used with string fields to match substrings. For non-string fields it is equivalent to the `=` operator. The `:*` comparison can be used to test whether a key has been defined. For example, to find all objects with `owner` label use: ``` labels.owner:* ``` You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ``` If you want to use a regular expression, use the `eq` (equal) or `ne` (not equal) operator against a single un-parenthesized expression with or without quotes or against multiple parenthesized expressions. Examples: `fieldname eq unquoted literal` `fieldname eq 'single quoted literal'` `fieldname eq "double quoted literal"` `(fieldname1 eq literal) (fieldname2 ne "literal")` The literal value is interpreted as a regular expression using Google RE2 library syntax. The literal value must match the entire field. For example, to filter for instances that do not end with name "instance", you would use `name ne .*instance`.
  optional string filter = 336120696;

  // Indicates whether every visible scope for each scope type (zone, region, global) should be included in the response. For new resource types added after this field, the flag has no effect as new resource types will always include every visible scope for each scope type in response. For resource types which predate this field, if this flag is omitted or false, only scopes of the scope types where the resource type is expected to be found will be included.
  optional bool include_all_scopes = 391327988;

  // The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)
  optional uint32 max_results = 54715419;

  // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported.
  optional string order_by = 160562920;

  // Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results.
  optional string page_token = 19994697;

  // Name of the project scoping this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Opt-in for partial success behavior which provides partial results in case of failure. The default value is false.
  optional bool return_partial_success = 517198390;

}

// A request message for DiskTypes.AggregatedList. See the method description for details.
message AggregatedListDiskTypesRequest {
  // A filter expression that filters resources listed in the response. Most Compute resources support two types of filter expressions: expressions that support regular expressions and expressions that follow API improvement proposal AIP-160. If you want to use AIP-160, your expression must specify the field name, an operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The operator must be either `=`, `!=`, `>`, `<`, `<=`, `>=` or `:`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. The `:` operator can be used with string fields to match substrings. For non-string fields it is equivalent to the `=` operator. The `:*` comparison can be used to test whether a key has been defined. For example, to find all objects with `owner` label use: ``` labels.owner:* ``` You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ``` If you want to use a regular expression, use the `eq` (equal) or `ne` (not equal) operator against a single un-parenthesized expression with or without quotes or against multiple parenthesized expressions. Examples: `fieldname eq unquoted literal` `fieldname eq 'single quoted literal'` `fieldname eq "double quoted literal"` `(fieldname1 eq literal) (fieldname2 ne "literal")` The literal value is interpreted as a regular expression using Google RE2 library syntax. The literal value must match the entire field. For example, to filter for instances that do not end with name "instance", you would use `name ne .*instance`.
  optional string filter = 336120696;

  // Indicates whether every visible scope for each scope type (zone, region, global) should be included in the response. For new resource types added after this field, the flag has no effect as new resource types will always include every visible scope for each scope type in response. For resource types which predate this field, if this flag is omitted or false, only scopes of the scope types where the resource type is expected to be found will be included.
  optional bool include_all_scopes = 391327988;

  // The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)
  optional uint32 max_results = 54715419;

  // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported.
  optional string order_by = 160562920;

  // Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results.
  optional string page_token = 19994697;

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Opt-in for partial success behavior which provides partial results in case of failure. The default value is false.
  optional bool return_partial_success = 517198390;

}

// A request message for Disks.AggregatedList. See the method description for details.
message AggregatedListDisksRequest {
  // A filter expression that filters resources listed in the response. Most Compute resources support two types of filter expressions: expressions that support regular expressions and expressions that follow API improvement proposal AIP-160. If you want to use AIP-160, your expression must specify the field name, an operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The operator must be either `=`, `!=`, `>`, `<`, `<=`, `>=` or `:`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. The `:` operator can be used with string fields to match substrings. For non-string fields it is equivalent to the `=` operator. The `:*` comparison can be used to test whether a key has been defined. For example, to find all objects with `owner` label use: ``` labels.owner:* ``` You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ``` If you want to use a regular expression, use the `eq` (equal) or `ne` (not equal) operator against a single un-parenthesized expression with or without quotes or against multiple parenthesized expressions. Examples: `fieldname eq unquoted literal` `fieldname eq 'single quoted literal'` `fieldname eq "double quoted literal"` `(fieldname1 eq literal) (fieldname2 ne "literal")` The literal value is interpreted as a regular expression using Google RE2 library syntax. The literal value must match the entire field. For example, to filter for instances that do not end with name "instance", you would use `name ne .*instance`.
  optional string filter = 336120696;

  // Indicates whether every visible scope for each scope type (zone, region, global) should be included in the response. For new resource types added after this field, the flag has no effect as new resource types will always include every visible scope for each scope type in response. For resource types which predate this field, if this flag is omitted or false, only scopes of the scope types where the resource type is expected to be found will be included.
  optional bool include_all_scopes = 391327988;

  // The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)
  optional uint32 max_results = 54715419;

  // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported.
  optional string order_by = 160562920;

  // Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results.
  optional string page_token = 19994697;

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Opt-in for partial success behavior which provides partial results in case of failure. The default value is false.
  optional bool return_partial_success = 517198390;

}

// A request message for ForwardingRules.AggregatedList. See the method description for details.
message AggregatedListForwardingRulesRequest {
  // A filter expression that filters resources listed in the response. Most Compute resources support two types of filter expressions: expressions that support regular expressions and expressions that follow API improvement proposal AIP-160. If you want to use AIP-160, your expression must specify the field name, an operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The operator must be either `=`, `!=`, `>`, `<`, `<=`, `>=` or `:`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. The `:` operator can be used with string fields to match substrings. For non-string fields it is equivalent to the `=` operator. The `:*` comparison can be used to test whether a key has been defined. For example, to find all objects with `owner` label use: ``` labels.owner:* ``` You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ``` If you want to use a regular expression, use the `eq` (equal) or `ne` (not equal) operator against a single un-parenthesized expression with or without quotes or against multiple parenthesized expressions. Examples: `fieldname eq unquoted literal` `fieldname eq 'single quoted literal'` `fieldname eq "double quoted literal"` `(fieldname1 eq literal) (fieldname2 ne "literal")` The literal value is interpreted as a regular expression using Google RE2 library syntax. The literal value must match the entire field. For example, to filter for instances that do not end with name "instance", you would use `name ne .*instance`.
  optional string filter = 336120696;

  // Indicates whether every visible scope for each scope type (zone, region, global) should be included in the response. For new resource types added after this field, the flag has no effect as new resource types will always include every visible scope for each scope type in response. For resource types which predate this field, if this flag is omitted or false, only scopes of the scope types where the resource type is expected to be found will be included.
  optional bool include_all_scopes = 391327988;

  // The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)
  optional uint32 max_results = 54715419;

  // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported.
  optional string order_by = 160562920;

  // Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results.
  optional string page_token = 19994697;

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Opt-in for partial success behavior which provides partial results in case of failure. The default value is false.
  optional bool return_partial_success = 517198390;

}

// A request message for GlobalOperations.AggregatedList. See the method description for details.
message AggregatedListGlobalOperationsRequest {
  // A filter expression that filters resources listed in the response. Most Compute resources support two types of filter expressions: expressions that support regular expressions and expressions that follow API improvement proposal AIP-160. If you want to use AIP-160, your expression must specify the field name, an operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The operator must be either `=`, `!=`, `>`, `<`, `<=`, `>=` or `:`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. The `:` operator can be used with string fields to match substrings. For non-string fields it is equivalent to the `=` operator. The `:*` comparison can be used to test whether a key has been defined. For example, to find all objects with `owner` label use: ``` labels.owner:* ``` You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ``` If you want to use a regular expression, use the `eq` (equal) or `ne` (not equal) operator against a single un-parenthesized expression with or without quotes or against multiple parenthesized expressions. Examples: `fieldname eq unquoted literal` `fieldname eq 'single quoted literal'` `fieldname eq "double quoted literal"` `(fieldname1 eq literal) (fieldname2 ne "literal")` The literal value is interpreted as a regular expression using Google RE2 library syntax. The literal value must match the entire field. For example, to filter for instances that do not end with name "instance", you would use `name ne .*instance`.
  optional string filter = 336120696;

  // Indicates whether every visible scope for each scope type (zone, region, global) should be included in the response. For new resource types added after this field, the flag has no effect as new resource types will always include every visible scope for each scope type in response. For resource types which predate this field, if this flag is omitted or false, only scopes of the scope types where the resource type is expected to be found will be included.
  optional bool include_all_scopes = 391327988;

  // The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)
  optional uint32 max_results = 54715419;

  // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported.
  optional string order_by = 160562920;

  // Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results.
  optional string page_token = 19994697;

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Opt-in for partial success behavior which provides partial results in case of failure. The default value is false.
  optional bool return_partial_success = 517198390;

}

// A request message for HealthChecks.AggregatedList. See the method description for details.
message AggregatedListHealthChecksRequest {
  // A filter expression that filters resources listed in the response. Most Compute resources support two types of filter expressions: expressions that support regular expressions and expressions that follow API improvement proposal AIP-160. If you want to use AIP-160, your expression must specify the field name, an operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The operator must be either `=`, `!=`, `>`, `<`, `<=`, `>=` or `:`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. The `:` operator can be used with string fields to match substrings. For non-string fields it is equivalent to the `=` operator. The `:*` comparison can be used to test whether a key has been defined. For example, to find all objects with `owner` label use: ``` labels.owner:* ``` You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ``` If you want to use a regular expression, use the `eq` (equal) or `ne` (not equal) operator against a single un-parenthesized expression with or without quotes or against multiple parenthesized expressions. Examples: `fieldname eq unquoted literal` `fieldname eq 'single quoted literal'` `fieldname eq "double quoted literal"` `(fieldname1 eq literal) (fieldname2 ne "literal")` The literal value is interpreted as a regular expression using Google RE2 library syntax. The literal value must match the entire field. For example, to filter for instances that do not end with name "instance", you would use `name ne .*instance`.
  optional string filter = 336120696;

  // Indicates whether every visible scope for each scope type (zone, region, global) should be included in the response. For new resource types added after this field, the flag has no effect as new resource types will always include every visible scope for each scope type in response. For resource types which predate this field, if this flag is omitted or false, only scopes of the scope types where the resource type is expected to be found will be included.
  optional bool include_all_scopes = 391327988;

  // The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)
  optional uint32 max_results = 54715419;

  // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported.
  optional string order_by = 160562920;

  // Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results.
  optional string page_token = 19994697;

  // Name of the project scoping this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Opt-in for partial success behavior which provides partial results in case of failure. The default value is false.
  optional bool return_partial_success = 517198390;

}

// A request message for InstanceGroupManagers.AggregatedList. See the method description for details.
message AggregatedListInstanceGroupManagersRequest {
  // A filter expression that filters resources listed in the response. Most Compute resources support two types of filter expressions: expressions that support regular expressions and expressions that follow API improvement proposal AIP-160. If you want to use AIP-160, your expression must specify the field name, an operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The operator must be either `=`, `!=`, `>`, `<`, `<=`, `>=` or `:`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. The `:` operator can be used with string fields to match substrings. For non-string fields it is equivalent to the `=` operator. The `:*` comparison can be used to test whether a key has been defined. For example, to find all objects with `owner` label use: ``` labels.owner:* ``` You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ``` If you want to use a regular expression, use the `eq` (equal) or `ne` (not equal) operator against a single un-parenthesized expression with or without quotes or against multiple parenthesized expressions. Examples: `fieldname eq unquoted literal` `fieldname eq 'single quoted literal'` `fieldname eq "double quoted literal"` `(fieldname1 eq literal) (fieldname2 ne "literal")` The literal value is interpreted as a regular expression using Google RE2 library syntax. The literal value must match the entire field. For example, to filter for instances that do not end with name "instance", you would use `name ne .*instance`.
  optional string filter = 336120696;

  // Indicates whether every visible scope for each scope type (zone, region, global) should be included in the response. For new resource types added after this field, the flag has no effect as new resource types will always include every visible scope for each scope type in response. For resource types which predate this field, if this flag is omitted or false, only scopes of the scope types where the resource type is expected to be found will be included.
  optional bool include_all_scopes = 391327988;

  // The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)
  optional uint32 max_results = 54715419;

  // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported.
  optional string order_by = 160562920;

  // Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results.
  optional string page_token = 19994697;

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Opt-in for partial success behavior which provides partial results in case of failure. The default value is false.
  optional bool return_partial_success = 517198390;

}

// A request message for InstanceGroups.AggregatedList. See the method description for details.
message AggregatedListInstanceGroupsRequest {
  // A filter expression that filters resources listed in the response. Most Compute resources support two types of filter expressions: expressions that support regular expressions and expressions that follow API improvement proposal AIP-160. If you want to use AIP-160, your expression must specify the field name, an operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The operator must be either `=`, `!=`, `>`, `<`, `<=`, `>=` or `:`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. The `:` operator can be used with string fields to match substrings. For non-string fields it is equivalent to the `=` operator. The `:*` comparison can be used to test whether a key has been defined. For example, to find all objects with `owner` label use: ``` labels.owner:* ``` You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ``` If you want to use a regular expression, use the `eq` (equal) or `ne` (not equal) operator against a single un-parenthesized expression with or without quotes or against multiple parenthesized expressions. Examples: `fieldname eq unquoted literal` `fieldname eq 'single quoted literal'` `fieldname eq "double quoted literal"` `(fieldname1 eq literal) (fieldname2 ne "literal")` The literal value is interpreted as a regular expression using Google RE2 library syntax. The literal value must match the entire field. For example, to filter for instances that do not end with name "instance", you would use `name ne .*instance`.
  optional string filter = 336120696;

  // Indicates whether every visible scope for each scope type (zone, region, global) should be included in the response. For new resource types added after this field, the flag has no effect as new resource types will always include every visible scope for each scope type in response. For resource types which predate this field, if this flag is omitted or false, only scopes of the scope types where the resource type is expected to be found will be included.
  optional bool include_all_scopes = 391327988;

  // The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)
  optional uint32 max_results = 54715419;

  // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported.
  optional string order_by = 160562920;

  // Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results.
  optional string page_token = 19994697;

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Opt-in for partial success behavior which provides partial results in case of failure. The default value is false.
  optional bool return_partial_success = 517198390;

}

// A request message for InstanceTemplates.AggregatedList. See the method description for details.
message AggregatedListInstanceTemplatesRequest {
  // A filter expression that filters resources listed in the response. Most Compute resources support two types of filter expressions: expressions that support regular expressions and expressions that follow API improvement proposal AIP-160. If you want to use AIP-160, your expression must specify the field name, an operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The operator must be either `=`, `!=`, `>`, `<`, `<=`, `>=` or `:`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. The `:` operator can be used with string fields to match substrings. For non-string fields it is equivalent to the `=` operator. The `:*` comparison can be used to test whether a key has been defined. For example, to find all objects with `owner` label use: ``` labels.owner:* ``` You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ``` If you want to use a regular expression, use the `eq` (equal) or `ne` (not equal) operator against a single un-parenthesized expression with or without quotes or against multiple parenthesized expressions. Examples: `fieldname eq unquoted literal` `fieldname eq 'single quoted literal'` `fieldname eq "double quoted literal"` `(fieldname1 eq literal) (fieldname2 ne "literal")` The literal value is interpreted as a regular expression using Google RE2 library syntax. The literal value must match the entire field. For example, to filter for instances that do not end with name "instance", you would use `name ne .*instance`.
  optional string filter = 336120696;

  // Indicates whether every visible scope for each scope type (zone, region, global) should be included in the response. For new resource types added after this field, the flag has no effect as new resource types will always include every visible scope for each scope type in response. For resource types which predate this field, if this flag is omitted or false, only scopes of the scope types where the resource type is expected to be found will be included.
  optional bool include_all_scopes = 391327988;

  // The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)
  optional uint32 max_results = 54715419;

  // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported.
  optional string order_by = 160562920;

  // Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results.
  optional string page_token = 19994697;

  // Name of the project scoping this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Opt-in for partial success behavior which provides partial results in case of failure. The default value is false.
  optional bool return_partial_success = 517198390;

}

// A request message for Instances.AggregatedList. See the method description for details.
message AggregatedListInstancesRequest {
  // A filter expression that filters resources listed in the response. Most Compute resources support two types of filter expressions: expressions that support regular expressions and expressions that follow API improvement proposal AIP-160. If you want to use AIP-160, your expression must specify the field name, an operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The operator must be either `=`, `!=`, `>`, `<`, `<=`, `>=` or `:`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. The `:` operator can be used with string fields to match substrings. For non-string fields it is equivalent to the `=` operator. The `:*` comparison can be used to test whether a key has been defined. For example, to find all objects with `owner` label use: ``` labels.owner:* ``` You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ``` If you want to use a regular expression, use the `eq` (equal) or `ne` (not equal) operator against a single un-parenthesized expression with or without quotes or against multiple parenthesized expressions. Examples: `fieldname eq unquoted literal` `fieldname eq 'single quoted literal'` `fieldname eq "double quoted literal"` `(fieldname1 eq literal) (fieldname2 ne "literal")` The literal value is interpreted as a regular expression using Google RE2 library syntax. The literal value must match the entire field. For example, to filter for instances that do not end with name "instance", you would use `name ne .*instance`.
  optional string filter = 336120696;

  // Indicates whether every visible scope for each scope type (zone, region, global) should be included in the response. For new resource types added after this field, the flag has no effect as new resource types will always include every visible scope for each scope type in response. For resource types which predate this field, if this flag is omitted or false, only scopes of the scope types where the resource type is expected to be found will be included.
  optional bool include_all_scopes = 391327988;

  // The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)
  optional uint32 max_results = 54715419;

  // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported.
  optional string order_by = 160562920;

  // Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results.
  optional string page_token = 19994697;

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Opt-in for partial success behavior which provides partial results in case of failure. The default value is false.
  optional bool return_partial_success = 517198390;

}

// A request message for InterconnectAttachments.AggregatedList. See the method description for details.
message AggregatedListInterconnectAttachmentsRequest {
  // A filter expression that filters resources listed in the response. Most Compute resources support two types of filter expressions: expressions that support regular expressions and expressions that follow API improvement proposal AIP-160. If you want to use AIP-160, your expression must specify the field name, an operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The operator must be either `=`, `!=`, `>`, `<`, `<=`, `>=` or `:`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. The `:` operator can be used with string fields to match substrings. For non-string fields it is equivalent to the `=` operator. The `:*` comparison can be used to test whether a key has been defined. For example, to find all objects with `owner` label use: ``` labels.owner:* ``` You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ``` If you want to use a regular expression, use the `eq` (equal) or `ne` (not equal) operator against a single un-parenthesized expression with or without quotes or against multiple parenthesized expressions. Examples: `fieldname eq unquoted literal` `fieldname eq 'single quoted literal'` `fieldname eq "double quoted literal"` `(fieldname1 eq literal) (fieldname2 ne "literal")` The literal value is interpreted as a regular expression using Google RE2 library syntax. The literal value must match the entire field. For example, to filter for instances that do not end with name "instance", you would use `name ne .*instance`.
  optional string filter = 336120696;

  // Indicates whether every visible scope for each scope type (zone, region, global) should be included in the response. For new resource types added after this field, the flag has no effect as new resource types will always include every visible scope for each scope type in response. For resource types which predate this field, if this flag is omitted or false, only scopes of the scope types where the resource type is expected to be found will be included.
  optional bool include_all_scopes = 391327988;

  // The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)
  optional uint32 max_results = 54715419;

  // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported.
  optional string order_by = 160562920;

  // Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results.
  optional string page_token = 19994697;

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Opt-in for partial success behavior which provides partial results in case of failure. The default value is false.
  optional bool return_partial_success = 517198390;

}

// A request message for MachineTypes.AggregatedList. See the method description for details.
message AggregatedListMachineTypesRequest {
  // A filter expression that filters resources listed in the response. Most Compute resources support two types of filter expressions: expressions that support regular expressions and expressions that follow API improvement proposal AIP-160. If you want to use AIP-160, your expression must specify the field name, an operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The operator must be either `=`, `!=`, `>`, `<`, `<=`, `>=` or `:`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. The `:` operator can be used with string fields to match substrings. For non-string fields it is equivalent to the `=` operator. The `:*` comparison can be used to test whether a key has been defined. For example, to find all objects with `owner` label use: ``` labels.owner:* ``` You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ``` If you want to use a regular expression, use the `eq` (equal) or `ne` (not equal) operator against a single un-parenthesized expression with or without quotes or against multiple parenthesized expressions. Examples: `fieldname eq unquoted literal` `fieldname eq 'single quoted literal'` `fieldname eq "double quoted literal"` `(fieldname1 eq literal) (fieldname2 ne "literal")` The literal value is interpreted as a regular expression using Google RE2 library syntax. The literal value must match the entire field. For example, to filter for instances that do not end with name "instance", you would use `name ne .*instance`.
  optional string filter = 336120696;

  // Indicates whether every visible scope for each scope type (zone, region, global) should be included in the response. For new resource types added after this field, the flag has no effect as new resource types will always include every visible scope for each scope type in response. For resource types which predate this field, if this flag is omitted or false, only scopes of the scope types where the resource type is expected to be found will be included.
  optional bool include_all_scopes = 391327988;

  // The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)
  optional uint32 max_results = 54715419;

  // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported.
  optional string order_by = 160562920;

  // Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results.
  optional string page_token = 19994697;

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Opt-in for partial success behavior which provides partial results in case of failure. The default value is false.
  optional bool return_partial_success = 517198390;

}

// A request message for NetworkAttachments.AggregatedList. See the method description for details.
message AggregatedListNetworkAttachmentsRequest {
  // A filter expression that filters resources listed in the response. Most Compute resources support two types of filter expressions: expressions that support regular expressions and expressions that follow API improvement proposal AIP-160. If you want to use AIP-160, your expression must specify the field name, an operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The operator must be either `=`, `!=`, `>`, `<`, `<=`, `>=` or `:`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. The `:` operator can be used with string fields to match substrings. For non-string fields it is equivalent to the `=` operator. The `:*` comparison can be used to test whether a key has been defined. For example, to find all objects with `owner` label use: ``` labels.owner:* ``` You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ``` If you want to use a regular expression, use the `eq` (equal) or `ne` (not equal) operator against a single un-parenthesized expression with or without quotes or against multiple parenthesized expressions. Examples: `fieldname eq unquoted literal` `fieldname eq 'single quoted literal'` `fieldname eq "double quoted literal"` `(fieldname1 eq literal) (fieldname2 ne "literal")` The literal value is interpreted as a regular expression using Google RE2 library syntax. The literal value must match the entire field. For example, to filter for instances that do not end with name "instance", you would use `name ne .*instance`.
  optional string filter = 336120696;

  // Indicates whether every visible scope for each scope type (zone, region, global) should be included in the response. For new resource types added after this field, the flag has no effect as new resource types will always include every visible scope for each scope type in response. For resource types which predate this field, if this flag is omitted or false, only scopes of the scope types where the resource type is expected to be found will be included.
  optional bool include_all_scopes = 391327988;

  // The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)
  optional uint32 max_results = 54715419;

  // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported.
  optional string order_by = 160562920;

  // Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results.
  optional string page_token = 19994697;

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Opt-in for partial success behavior which provides partial results in case of failure. The default value is false.
  optional bool return_partial_success = 517198390;

}

// A request message for NetworkEdgeSecurityServices.AggregatedList. See the method description for details.
message AggregatedListNetworkEdgeSecurityServicesRequest {
  // A filter expression that filters resources listed in the response. Most Compute resources support two types of filter expressions: expressions that support regular expressions and expressions that follow API improvement proposal AIP-160. If you want to use AIP-160, your expression must specify the field name, an operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The operator must be either `=`, `!=`, `>`, `<`, `<=`, `>=` or `:`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. The `:` operator can be used with string fields to match substrings. For non-string fields it is equivalent to the `=` operator. The `:*` comparison can be used to test whether a key has been defined. For example, to find all objects with `owner` label use: ``` labels.owner:* ``` You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ``` If you want to use a regular expression, use the `eq` (equal) or `ne` (not equal) operator against a single un-parenthesized expression with or without quotes or against multiple parenthesized expressions. Examples: `fieldname eq unquoted literal` `fieldname eq 'single quoted literal'` `fieldname eq "double quoted literal"` `(fieldname1 eq literal) (fieldname2 ne "literal")` The literal value is interpreted as a regular expression using Google RE2 library syntax. The literal value must match the entire field. For example, to filter for instances that do not end with name "instance", you would use `name ne .*instance`.
  optional string filter = 336120696;

  // Indicates whether every visible scope for each scope type (zone, region, global) should be included in the response. For new resource types added after this field, the flag has no effect as new resource types will always include every visible scope for each scope type in response. For resource types which predate this field, if this flag is omitted or false, only scopes of the scope types where the resource type is expected to be found will be included.
  optional bool include_all_scopes = 391327988;

  // The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)
  optional uint32 max_results = 54715419;

  // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported.
  optional string order_by = 160562920;

  // Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results.
  optional string page_token = 19994697;

  // Name of the project scoping this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Opt-in for partial success behavior which provides partial results in case of failure. The default value is false.
  optional bool return_partial_success = 517198390;

}

// A request message for NetworkEndpointGroups.AggregatedList. See the method description for details.
message AggregatedListNetworkEndpointGroupsRequest {
  // A filter expression that filters resources listed in the response. Most Compute resources support two types of filter expressions: expressions that support regular expressions and expressions that follow API improvement proposal AIP-160. If you want to use AIP-160, your expression must specify the field name, an operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The operator must be either `=`, `!=`, `>`, `<`, `<=`, `>=` or `:`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. The `:` operator can be used with string fields to match substrings. For non-string fields it is equivalent to the `=` operator. The `:*` comparison can be used to test whether a key has been defined. For example, to find all objects with `owner` label use: ``` labels.owner:* ``` You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ``` If you want to use a regular expression, use the `eq` (equal) or `ne` (not equal) operator against a single un-parenthesized expression with or without quotes or against multiple parenthesized expressions. Examples: `fieldname eq unquoted literal` `fieldname eq 'single quoted literal'` `fieldname eq "double quoted literal"` `(fieldname1 eq literal) (fieldname2 ne "literal")` The literal value is interpreted as a regular expression using Google RE2 library syntax. The literal value must match the entire field. For example, to filter for instances that do not end with name "instance", you would use `name ne .*instance`.
  optional string filter = 336120696;

  // Indicates whether every visible scope for each scope type (zone, region, global) should be included in the response. For new resource types added after this field, the flag has no effect as new resource types will always include every visible scope for each scope type in response. For resource types which predate this field, if this flag is omitted or false, only scopes of the scope types where the resource type is expected to be found will be included.
  optional bool include_all_scopes = 391327988;

  // The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)
  optional uint32 max_results = 54715419;

  // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported.
  optional string order_by = 160562920;

  // Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results.
  optional string page_token = 19994697;

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Opt-in for partial success behavior which provides partial results in case of failure. The default value is false.
  optional bool return_partial_success = 517198390;

}

// A request message for NodeGroups.AggregatedList. See the method description for details.
message AggregatedListNodeGroupsRequest {
  // A filter expression that filters resources listed in the response. Most Compute resources support two types of filter expressions: expressions that support regular expressions and expressions that follow API improvement proposal AIP-160. If you want to use AIP-160, your expression must specify the field name, an operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The operator must be either `=`, `!=`, `>`, `<`, `<=`, `>=` or `:`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. The `:` operator can be used with string fields to match substrings. For non-string fields it is equivalent to the `=` operator. The `:*` comparison can be used to test whether a key has been defined. For example, to find all objects with `owner` label use: ``` labels.owner:* ``` You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ``` If you want to use a regular expression, use the `eq` (equal) or `ne` (not equal) operator against a single un-parenthesized expression with or without quotes or against multiple parenthesized expressions. Examples: `fieldname eq unquoted literal` `fieldname eq 'single quoted literal'` `fieldname eq "double quoted literal"` `(fieldname1 eq literal) (fieldname2 ne "literal")` The literal value is interpreted as a regular expression using Google RE2 library syntax. The literal value must match the entire field. For example, to filter for instances that do not end with name "instance", you would use `name ne .*instance`.
  optional string filter = 336120696;

  // Indicates whether every visible scope for each scope type (zone, region, global) should be included in the response. For new resource types added after this field, the flag has no effect as new resource types will always include every visible scope for each scope type in response. For resource types which predate this field, if this flag is omitted or false, only scopes of the scope types where the resource type is expected to be found will be included.
  optional bool include_all_scopes = 391327988;

  // The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)
  optional uint32 max_results = 54715419;

  // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported.
  optional string order_by = 160562920;

  // Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results.
  optional string page_token = 19994697;

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Opt-in for partial success behavior which provides partial results in case of failure. The default value is false.
  optional bool return_partial_success = 517198390;

}

// A request message for NodeTemplates.AggregatedList. See the method description for details.
message AggregatedListNodeTemplatesRequest {
  // A filter expression that filters resources listed in the response. Most Compute resources support two types of filter expressions: expressions that support regular expressions and expressions that follow API improvement proposal AIP-160. If you want to use AIP-160, your expression must specify the field name, an operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The operator must be either `=`, `!=`, `>`, `<`, `<=`, `>=` or `:`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. The `:` operator can be used with string fields to match substrings. For non-string fields it is equivalent to the `=` operator. The `:*` comparison can be used to test whether a key has been defined. For example, to find all objects with `owner` label use: ``` labels.owner:* ``` You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ``` If you want to use a regular expression, use the `eq` (equal) or `ne` (not equal) operator against a single un-parenthesized expression with or without quotes or against multiple parenthesized expressions. Examples: `fieldname eq unquoted literal` `fieldname eq 'single quoted literal'` `fieldname eq "double quoted literal"` `(fieldname1 eq literal) (fieldname2 ne "literal")` The literal value is interpreted as a regular expression using Google RE2 library syntax. The literal value must match the entire field. For example, to filter for instances that do not end with name "instance", you would use `name ne .*instance`.
  optional string filter = 336120696;

  // Indicates whether every visible scope for each scope type (zone, region, global) should be included in the response. For new resource types added after this field, the flag has no effect as new resource types will always include every visible scope for each scope type in response. For resource types which predate this field, if this flag is omitted or false, only scopes of the scope types where the resource type is expected to be found will be included.
  optional bool include_all_scopes = 391327988;

  // The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)
  optional uint32 max_results = 54715419;

  // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported.
  optional string order_by = 160562920;

  // Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results.
  optional string page_token = 19994697;

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Opt-in for partial success behavior which provides partial results in case of failure. The default value is false.
  optional bool return_partial_success = 517198390;

}

// A request message for NodeTypes.AggregatedList. See the method description for details.
message AggregatedListNodeTypesRequest {
  // A filter expression that filters resources listed in the response. Most Compute resources support two types of filter expressions: expressions that support regular expressions and expressions that follow API improvement proposal AIP-160. If you want to use AIP-160, your expression must specify the field name, an operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The operator must be either `=`, `!=`, `>`, `<`, `<=`, `>=` or `:`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. The `:` operator can be used with string fields to match substrings. For non-string fields it is equivalent to the `=` operator. The `:*` comparison can be used to test whether a key has been defined. For example, to find all objects with `owner` label use: ``` labels.owner:* ``` You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ``` If you want to use a regular expression, use the `eq` (equal) or `ne` (not equal) operator against a single un-parenthesized expression with or without quotes or against multiple parenthesized expressions. Examples: `fieldname eq unquoted literal` `fieldname eq 'single quoted literal'` `fieldname eq "double quoted literal"` `(fieldname1 eq literal) (fieldname2 ne "literal")` The literal value is interpreted as a regular expression using Google RE2 library syntax. The literal value must match the entire field. For example, to filter for instances that do not end with name "instance", you would use `name ne .*instance`.
  optional string filter = 336120696;

  // Indicates whether every visible scope for each scope type (zone, region, global) should be included in the response. For new resource types added after this field, the flag has no effect as new resource types will always include every visible scope for each scope type in response. For resource types which predate this field, if this flag is omitted or false, only scopes of the scope types where the resource type is expected to be found will be included.
  optional bool include_all_scopes = 391327988;

  // The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)
  optional uint32 max_results = 54715419;

  // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported.
  optional string order_by = 160562920;

  // Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results.
  optional string page_token = 19994697;

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Opt-in for partial success behavior which provides partial results in case of failure. The default value is false.
  optional bool return_partial_success = 517198390;

}

// A request message for PacketMirrorings.AggregatedList. See the method description for details.
message AggregatedListPacketMirroringsRequest {
  // A filter expression that filters resources listed in the response. Most Compute resources support two types of filter expressions: expressions that support regular expressions and expressions that follow API improvement proposal AIP-160. If you want to use AIP-160, your expression must specify the field name, an operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The operator must be either `=`, `!=`, `>`, `<`, `<=`, `>=` or `:`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. The `:` operator can be used with string fields to match substrings. For non-string fields it is equivalent to the `=` operator. The `:*` comparison can be used to test whether a key has been defined. For example, to find all objects with `owner` label use: ``` labels.owner:* ``` You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ``` If you want to use a regular expression, use the `eq` (equal) or `ne` (not equal) operator against a single un-parenthesized expression with or without quotes or against multiple parenthesized expressions. Examples: `fieldname eq unquoted literal` `fieldname eq 'single quoted literal'` `fieldname eq "double quoted literal"` `(fieldname1 eq literal) (fieldname2 ne "literal")` The literal value is interpreted as a regular expression using Google RE2 library syntax. The literal value must match the entire field. For example, to filter for instances that do not end with name "instance", you would use `name ne .*instance`.
  optional string filter = 336120696;

  // Indicates whether every visible scope for each scope type (zone, region, global) should be included in the response. For new resource types added after this field, the flag has no effect as new resource types will always include every visible scope for each scope type in response. For resource types which predate this field, if this flag is omitted or false, only scopes of the scope types where the resource type is expected to be found will be included.
  optional bool include_all_scopes = 391327988;

  // The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)
  optional uint32 max_results = 54715419;

  // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported.
  optional string order_by = 160562920;

  // Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results.
  optional string page_token = 19994697;

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Opt-in for partial success behavior which provides partial results in case of failure. The default value is false.
  optional bool return_partial_success = 517198390;

}

// A request message for PublicDelegatedPrefixes.AggregatedList. See the method description for details.
message AggregatedListPublicDelegatedPrefixesRequest {
  // A filter expression that filters resources listed in the response. Most Compute resources support two types of filter expressions: expressions that support regular expressions and expressions that follow API improvement proposal AIP-160. If you want to use AIP-160, your expression must specify the field name, an operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The operator must be either `=`, `!=`, `>`, `<`, `<=`, `>=` or `:`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. The `:` operator can be used with string fields to match substrings. For non-string fields it is equivalent to the `=` operator. The `:*` comparison can be used to test whether a key has been defined. For example, to find all objects with `owner` label use: ``` labels.owner:* ``` You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ``` If you want to use a regular expression, use the `eq` (equal) or `ne` (not equal) operator against a single un-parenthesized expression with or without quotes or against multiple parenthesized expressions. Examples: `fieldname eq unquoted literal` `fieldname eq 'single quoted literal'` `fieldname eq "double quoted literal"` `(fieldname1 eq literal) (fieldname2 ne "literal")` The literal value is interpreted as a regular expression using Google RE2 library syntax. The literal value must match the entire field. For example, to filter for instances that do not end with name "instance", you would use `name ne .*instance`.
  optional string filter = 336120696;

  // Indicates whether every visible scope for each scope type (zone, region, global) should be included in the response. For new resource types added after this field, the flag has no effect as new resource types will always include every visible scope for each scope type in response. For resource types which predate this field, if this flag is omitted or false, only scopes of the scope types where the resource type is expected to be found will be included.
  optional bool include_all_scopes = 391327988;

  // The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)
  optional uint32 max_results = 54715419;

  // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported.
  optional string order_by = 160562920;

  // Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results.
  optional string page_token = 19994697;

  // Name of the project scoping this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Opt-in for partial success behavior which provides partial results in case of failure. The default value is false.
  optional bool return_partial_success = 517198390;

}

// A request message for RegionCommitments.AggregatedList. See the method description for details.
message AggregatedListRegionCommitmentsRequest {
  // A filter expression that filters resources listed in the response. Most Compute resources support two types of filter expressions: expressions that support regular expressions and expressions that follow API improvement proposal AIP-160. If you want to use AIP-160, your expression must specify the field name, an operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The operator must be either `=`, `!=`, `>`, `<`, `<=`, `>=` or `:`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. The `:` operator can be used with string fields to match substrings. For non-string fields it is equivalent to the `=` operator. The `:*` comparison can be used to test whether a key has been defined. For example, to find all objects with `owner` label use: ``` labels.owner:* ``` You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ``` If you want to use a regular expression, use the `eq` (equal) or `ne` (not equal) operator against a single un-parenthesized expression with or without quotes or against multiple parenthesized expressions. Examples: `fieldname eq unquoted literal` `fieldname eq 'single quoted literal'` `fieldname eq "double quoted literal"` `(fieldname1 eq literal) (fieldname2 ne "literal")` The literal value is interpreted as a regular expression using Google RE2 library syntax. The literal value must match the entire field. For example, to filter for instances that do not end with name "instance", you would use `name ne .*instance`.
  optional string filter = 336120696;

  // Indicates whether every visible scope for each scope type (zone, region, global) should be included in the response. For new resource types added after this field, the flag has no effect as new resource types will always include every visible scope for each scope type in response. For resource types which predate this field, if this flag is omitted or false, only scopes of the scope types where the resource type is expected to be found will be included.
  optional bool include_all_scopes = 391327988;

  // The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)
  optional uint32 max_results = 54715419;

  // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported.
  optional string order_by = 160562920;

  // Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results.
  optional string page_token = 19994697;

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Opt-in for partial success behavior which provides partial results in case of failure. The default value is false.
  optional bool return_partial_success = 517198390;

}

// A request message for Reservations.AggregatedList. See the method description for details.
message AggregatedListReservationsRequest {
  // A filter expression that filters resources listed in the response. Most Compute resources support two types of filter expressions: expressions that support regular expressions and expressions that follow API improvement proposal AIP-160. If you want to use AIP-160, your expression must specify the field name, an operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The operator must be either `=`, `!=`, `>`, `<`, `<=`, `>=` or `:`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. The `:` operator can be used with string fields to match substrings. For non-string fields it is equivalent to the `=` operator. The `:*` comparison can be used to test whether a key has been defined. For example, to find all objects with `owner` label use: ``` labels.owner:* ``` You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ``` If you want to use a regular expression, use the `eq` (equal) or `ne` (not equal) operator against a single un-parenthesized expression with or without quotes or against multiple parenthesized expressions. Examples: `fieldname eq unquoted literal` `fieldname eq 'single quoted literal'` `fieldname eq "double quoted literal"` `(fieldname1 eq literal) (fieldname2 ne "literal")` The literal value is interpreted as a regular expression using Google RE2 library syntax. The literal value must match the entire field. For example, to filter for instances that do not end with name "instance", you would use `name ne .*instance`.
  optional string filter = 336120696;

  // Indicates whether every visible scope for each scope type (zone, region, global) should be included in the response. For new resource types added after this field, the flag has no effect as new resource types will always include every visible scope for each scope type in response. For resource types which predate this field, if this flag is omitted or false, only scopes of the scope types where the resource type is expected to be found will be included.
  optional bool include_all_scopes = 391327988;

  // The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)
  optional uint32 max_results = 54715419;

  // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported.
  optional string order_by = 160562920;

  // Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results.
  optional string page_token = 19994697;

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Opt-in for partial success behavior which provides partial results in case of failure. The default value is false.
  optional bool return_partial_success = 517198390;

}

// A request message for ResourcePolicies.AggregatedList. See the method description for details.
message AggregatedListResourcePoliciesRequest {
  // A filter expression that filters resources listed in the response. Most Compute resources support two types of filter expressions: expressions that support regular expressions and expressions that follow API improvement proposal AIP-160. If you want to use AIP-160, your expression must specify the field name, an operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The operator must be either `=`, `!=`, `>`, `<`, `<=`, `>=` or `:`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. The `:` operator can be used with string fields to match substrings. For non-string fields it is equivalent to the `=` operator. The `:*` comparison can be used to test whether a key has been defined. For example, to find all objects with `owner` label use: ``` labels.owner:* ``` You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ``` If you want to use a regular expression, use the `eq` (equal) or `ne` (not equal) operator against a single un-parenthesized expression with or without quotes or against multiple parenthesized expressions. Examples: `fieldname eq unquoted literal` `fieldname eq 'single quoted literal'` `fieldname eq "double quoted literal"` `(fieldname1 eq literal) (fieldname2 ne "literal")` The literal value is interpreted as a regular expression using Google RE2 library syntax. The literal value must match the entire field. For example, to filter for instances that do not end with name "instance", you would use `name ne .*instance`.
  optional string filter = 336120696;

  // Indicates whether every visible scope for each scope type (zone, region, global) should be included in the response. For new resource types added after this field, the flag has no effect as new resource types will always include every visible scope for each scope type in response. For resource types which predate this field, if this flag is omitted or false, only scopes of the scope types where the resource type is expected to be found will be included.
  optional bool include_all_scopes = 391327988;

  // The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)
  optional uint32 max_results = 54715419;

  // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported.
  optional string order_by = 160562920;

  // Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results.
  optional string page_token = 19994697;

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Opt-in for partial success behavior which provides partial results in case of failure. The default value is false.
  optional bool return_partial_success = 517198390;

}

// A request message for Routers.AggregatedList. See the method description for details.
message AggregatedListRoutersRequest {
  // A filter expression that filters resources listed in the response. Most Compute resources support two types of filter expressions: expressions that support regular expressions and expressions that follow API improvement proposal AIP-160. If you want to use AIP-160, your expression must specify the field name, an operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The operator must be either `=`, `!=`, `>`, `<`, `<=`, `>=` or `:`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. The `:` operator can be used with string fields to match substrings. For non-string fields it is equivalent to the `=` operator. The `:*` comparison can be used to test whether a key has been defined. For example, to find all objects with `owner` label use: ``` labels.owner:* ``` You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ``` If you want to use a regular expression, use the `eq` (equal) or `ne` (not equal) operator against a single un-parenthesized expression with or without quotes or against multiple parenthesized expressions. Examples: `fieldname eq unquoted literal` `fieldname eq 'single quoted literal'` `fieldname eq "double quoted literal"` `(fieldname1 eq literal) (fieldname2 ne "literal")` The literal value is interpreted as a regular expression using Google RE2 library syntax. The literal value must match the entire field. For example, to filter for instances that do not end with name "instance", you would use `name ne .*instance`.
  optional string filter = 336120696;

  // Indicates whether every visible scope for each scope type (zone, region, global) should be included in the response. For new resource types added after this field, the flag has no effect as new resource types will always include every visible scope for each scope type in response. For resource types which predate this field, if this flag is omitted or false, only scopes of the scope types where the resource type is expected to be found will be included.
  optional bool include_all_scopes = 391327988;

  // The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)
  optional uint32 max_results = 54715419;

  // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported.
  optional string order_by = 160562920;

  // Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results.
  optional string page_token = 19994697;

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Opt-in for partial success behavior which provides partial results in case of failure. The default value is false.
  optional bool return_partial_success = 517198390;

}

// A request message for SecurityPolicies.AggregatedList. See the method description for details.
message AggregatedListSecurityPoliciesRequest {
  // A filter expression that filters resources listed in the response. Most Compute resources support two types of filter expressions: expressions that support regular expressions and expressions that follow API improvement proposal AIP-160. If you want to use AIP-160, your expression must specify the field name, an operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The operator must be either `=`, `!=`, `>`, `<`, `<=`, `>=` or `:`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. The `:` operator can be used with string fields to match substrings. For non-string fields it is equivalent to the `=` operator. The `:*` comparison can be used to test whether a key has been defined. For example, to find all objects with `owner` label use: ``` labels.owner:* ``` You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ``` If you want to use a regular expression, use the `eq` (equal) or `ne` (not equal) operator against a single un-parenthesized expression with or without quotes or against multiple parenthesized expressions. Examples: `fieldname eq unquoted literal` `fieldname eq 'single quoted literal'` `fieldname eq "double quoted literal"` `(fieldname1 eq literal) (fieldname2 ne "literal")` The literal value is interpreted as a regular expression using Google RE2 library syntax. The literal value must match the entire field. For example, to filter for instances that do not end with name "instance", you would use `name ne .*instance`.
  optional string filter = 336120696;

  // Indicates whether every visible scope for each scope type (zone, region, global) should be included in the response. For new resource types added after this field, the flag has no effect as new resource types will always include every visible scope for each scope type in response. For resource types which predate this field, if this flag is omitted or false, only scopes of the scope types where the resource type is expected to be found will be included.
  optional bool include_all_scopes = 391327988;

  // The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)
  optional uint32 max_results = 54715419;

  // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported.
  optional string order_by = 160562920;

  // Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results.
  optional string page_token = 19994697;

  // Name of the project scoping this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Opt-in for partial success behavior which provides partial results in case of failure. The default value is false.
  optional bool return_partial_success = 517198390;

}

// A request message for ServiceAttachments.AggregatedList. See the method description for details.
message AggregatedListServiceAttachmentsRequest {
  // A filter expression that filters resources listed in the response. Most Compute resources support two types of filter expressions: expressions that support regular expressions and expressions that follow API improvement proposal AIP-160. If you want to use AIP-160, your expression must specify the field name, an operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The operator must be either `=`, `!=`, `>`, `<`, `<=`, `>=` or `:`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. The `:` operator can be used with string fields to match substrings. For non-string fields it is equivalent to the `=` operator. The `:*` comparison can be used to test whether a key has been defined. For example, to find all objects with `owner` label use: ``` labels.owner:* ``` You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ``` If you want to use a regular expression, use the `eq` (equal) or `ne` (not equal) operator against a single un-parenthesized expression with or without quotes or against multiple parenthesized expressions. Examples: `fieldname eq unquoted literal` `fieldname eq 'single quoted literal'` `fieldname eq "double quoted literal"` `(fieldname1 eq literal) (fieldname2 ne "literal")` The literal value is interpreted as a regular expression using Google RE2 library syntax. The literal value must match the entire field. For example, to filter for instances that do not end with name "instance", you would use `name ne .*instance`.
  optional string filter = 336120696;

  // Indicates whether every visible scope for each scope type (zone, region, global) should be included in the response. For new resource types added after this field, the flag has no effect as new resource types will always include every visible scope for each scope type in response. For resource types which predate this field, if this flag is omitted or false, only scopes of the scope types where the resource type is expected to be found will be included.
  optional bool include_all_scopes = 391327988;

  // The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)
  optional uint32 max_results = 54715419;

  // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported.
  optional string order_by = 160562920;

  // Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results.
  optional string page_token = 19994697;

  // Name of the project scoping this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Opt-in for partial success behavior which provides partial results in case of failure. The default value is false.
  optional bool return_partial_success = 517198390;

}

// A request message for SslCertificates.AggregatedList. See the method description for details.
message AggregatedListSslCertificatesRequest {
  // A filter expression that filters resources listed in the response. Most Compute resources support two types of filter expressions: expressions that support regular expressions and expressions that follow API improvement proposal AIP-160. If you want to use AIP-160, your expression must specify the field name, an operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The operator must be either `=`, `!=`, `>`, `<`, `<=`, `>=` or `:`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. The `:` operator can be used with string fields to match substrings. For non-string fields it is equivalent to the `=` operator. The `:*` comparison can be used to test whether a key has been defined. For example, to find all objects with `owner` label use: ``` labels.owner:* ``` You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ``` If you want to use a regular expression, use the `eq` (equal) or `ne` (not equal) operator against a single un-parenthesized expression with or without quotes or against multiple parenthesized expressions. Examples: `fieldname eq unquoted literal` `fieldname eq 'single quoted literal'` `fieldname eq "double quoted literal"` `(fieldname1 eq literal) (fieldname2 ne "literal")` The literal value is interpreted as a regular expression using Google RE2 library syntax. The literal value must match the entire field. For example, to filter for instances that do not end with name "instance", you would use `name ne .*instance`.
  optional string filter = 336120696;

  // Indicates whether every visible scope for each scope type (zone, region, global) should be included in the response. For new resource types added after this field, the flag has no effect as new resource types will always include every visible scope for each scope type in response. For resource types which predate this field, if this flag is omitted or false, only scopes of the scope types where the resource type is expected to be found will be included.
  optional bool include_all_scopes = 391327988;

  // The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)
  optional uint32 max_results = 54715419;

  // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported.
  optional string order_by = 160562920;

  // Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results.
  optional string page_token = 19994697;

  // Name of the project scoping this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Opt-in for partial success behavior which provides partial results in case of failure. The default value is false.
  optional bool return_partial_success = 517198390;

}

// A request message for SslPolicies.AggregatedList. See the method description for details.
message AggregatedListSslPoliciesRequest {
  // A filter expression that filters resources listed in the response. Most Compute resources support two types of filter expressions: expressions that support regular expressions and expressions that follow API improvement proposal AIP-160. If you want to use AIP-160, your expression must specify the field name, an operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The operator must be either `=`, `!=`, `>`, `<`, `<=`, `>=` or `:`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. The `:` operator can be used with string fields to match substrings. For non-string fields it is equivalent to the `=` operator. The `:*` comparison can be used to test whether a key has been defined. For example, to find all objects with `owner` label use: ``` labels.owner:* ``` You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ``` If you want to use a regular expression, use the `eq` (equal) or `ne` (not equal) operator against a single un-parenthesized expression with or without quotes or against multiple parenthesized expressions. Examples: `fieldname eq unquoted literal` `fieldname eq 'single quoted literal'` `fieldname eq "double quoted literal"` `(fieldname1 eq literal) (fieldname2 ne "literal")` The literal value is interpreted as a regular expression using Google RE2 library syntax. The literal value must match the entire field. For example, to filter for instances that do not end with name "instance", you would use `name ne .*instance`.
  optional string filter = 336120696;

  // Indicates whether every visible scope for each scope type (zone, region, global) should be included in the response. For new resource types added after this field, the flag has no effect as new resource types will always include every visible scope for each scope type in response. For resource types which predate this field, if this flag is omitted or false, only scopes of the scope types where the resource type is expected to be found will be included.
  optional bool include_all_scopes = 391327988;

  // The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)
  optional uint32 max_results = 54715419;

  // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported.
  optional string order_by = 160562920;

  // Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results.
  optional string page_token = 19994697;

  // Name of the project scoping this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Opt-in for partial success behavior which provides partial results in case of failure. The default value is false.
  optional bool return_partial_success = 517198390;

}

// A request message for Subnetworks.AggregatedList. See the method description for details.
message AggregatedListSubnetworksRequest {
  // A filter expression that filters resources listed in the response. Most Compute resources support two types of filter expressions: expressions that support regular expressions and expressions that follow API improvement proposal AIP-160. If you want to use AIP-160, your expression must specify the field name, an operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The operator must be either `=`, `!=`, `>`, `<`, `<=`, `>=` or `:`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. The `:` operator can be used with string fields to match substrings. For non-string fields it is equivalent to the `=` operator. The `:*` comparison can be used to test whether a key has been defined. For example, to find all objects with `owner` label use: ``` labels.owner:* ``` You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ``` If you want to use a regular expression, use the `eq` (equal) or `ne` (not equal) operator against a single un-parenthesized expression with or without quotes or against multiple parenthesized expressions. Examples: `fieldname eq unquoted literal` `fieldname eq 'single quoted literal'` `fieldname eq "double quoted literal"` `(fieldname1 eq literal) (fieldname2 ne "literal")` The literal value is interpreted as a regular expression using Google RE2 library syntax. The literal value must match the entire field. For example, to filter for instances that do not end with name "instance", you would use `name ne .*instance`.
  optional string filter = 336120696;

  // Indicates whether every visible scope for each scope type (zone, region, global) should be included in the response. For new resource types added after this field, the flag has no effect as new resource types will always include every visible scope for each scope type in response. For resource types which predate this field, if this flag is omitted or false, only scopes of the scope types where the resource type is expected to be found will be included.
  optional bool include_all_scopes = 391327988;

  // The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)
  optional uint32 max_results = 54715419;

  // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported.
  optional string order_by = 160562920;

  // Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results.
  optional string page_token = 19994697;

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Opt-in for partial success behavior which provides partial results in case of failure. The default value is false.
  optional bool return_partial_success = 517198390;

}

// A request message for TargetHttpProxies.AggregatedList. See the method description for details.
message AggregatedListTargetHttpProxiesRequest {
  // A filter expression that filters resources listed in the response. Most Compute resources support two types of filter expressions: expressions that support regular expressions and expressions that follow API improvement proposal AIP-160. If you want to use AIP-160, your expression must specify the field name, an operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The operator must be either `=`, `!=`, `>`, `<`, `<=`, `>=` or `:`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. The `:` operator can be used with string fields to match substrings. For non-string fields it is equivalent to the `=` operator. The `:*` comparison can be used to test whether a key has been defined. For example, to find all objects with `owner` label use: ``` labels.owner:* ``` You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ``` If you want to use a regular expression, use the `eq` (equal) or `ne` (not equal) operator against a single un-parenthesized expression with or without quotes or against multiple parenthesized expressions. Examples: `fieldname eq unquoted literal` `fieldname eq 'single quoted literal'` `fieldname eq "double quoted literal"` `(fieldname1 eq literal) (fieldname2 ne "literal")` The literal value is interpreted as a regular expression using Google RE2 library syntax. The literal value must match the entire field. For example, to filter for instances that do not end with name "instance", you would use `name ne .*instance`.
  optional string filter = 336120696;

  // Indicates whether every visible scope for each scope type (zone, region, global) should be included in the response. For new resource types added after this field, the flag has no effect as new resource types will always include every visible scope for each scope type in response. For resource types which predate this field, if this flag is omitted or false, only scopes of the scope types where the resource type is expected to be found will be included.
  optional bool include_all_scopes = 391327988;

  // The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)
  optional uint32 max_results = 54715419;

  // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported.
  optional string order_by = 160562920;

  // Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results.
  optional string page_token = 19994697;

  // Name of the project scoping this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Opt-in for partial success behavior which provides partial results in case of failure. The default value is false.
  optional bool return_partial_success = 517198390;

}

// A request message for TargetHttpsProxies.AggregatedList. See the method description for details.
message AggregatedListTargetHttpsProxiesRequest {
  // A filter expression that filters resources listed in the response. Most Compute resources support two types of filter expressions: expressions that support regular expressions and expressions that follow API improvement proposal AIP-160. If you want to use AIP-160, your expression must specify the field name, an operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The operator must be either `=`, `!=`, `>`, `<`, `<=`, `>=` or `:`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. The `:` operator can be used with string fields to match substrings. For non-string fields it is equivalent to the `=` operator. The `:*` comparison can be used to test whether a key has been defined. For example, to find all objects with `owner` label use: ``` labels.owner:* ``` You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ``` If you want to use a regular expression, use the `eq` (equal) or `ne` (not equal) operator against a single un-parenthesized expression with or without quotes or against multiple parenthesized expressions. Examples: `fieldname eq unquoted literal` `fieldname eq 'single quoted literal'` `fieldname eq "double quoted literal"` `(fieldname1 eq literal) (fieldname2 ne "literal")` The literal value is interpreted as a regular expression using Google RE2 library syntax. The literal value must match the entire field. For example, to filter for instances that do not end with name "instance", you would use `name ne .*instance`.
  optional string filter = 336120696;

  // Indicates whether every visible scope for each scope type (zone, region, global) should be included in the response. For new resource types added after this field, the flag has no effect as new resource types will always include every visible scope for each scope type in response. For resource types which predate this field, if this flag is omitted or false, only scopes of the scope types where the resource type is expected to be found will be included.
  optional bool include_all_scopes = 391327988;

  // The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)
  optional uint32 max_results = 54715419;

  // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported.
  optional string order_by = 160562920;

  // Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results.
  optional string page_token = 19994697;

  // Name of the project scoping this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Opt-in for partial success behavior which provides partial results in case of failure. The default value is false.
  optional bool return_partial_success = 517198390;

}

// A request message for TargetInstances.AggregatedList. See the method description for details.
message AggregatedListTargetInstancesRequest {
  // A filter expression that filters resources listed in the response. Most Compute resources support two types of filter expressions: expressions that support regular expressions and expressions that follow API improvement proposal AIP-160. If you want to use AIP-160, your expression must specify the field name, an operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The operator must be either `=`, `!=`, `>`, `<`, `<=`, `>=` or `:`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. The `:` operator can be used with string fields to match substrings. For non-string fields it is equivalent to the `=` operator. The `:*` comparison can be used to test whether a key has been defined. For example, to find all objects with `owner` label use: ``` labels.owner:* ``` You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ``` If you want to use a regular expression, use the `eq` (equal) or `ne` (not equal) operator against a single un-parenthesized expression with or without quotes or against multiple parenthesized expressions. Examples: `fieldname eq unquoted literal` `fieldname eq 'single quoted literal'` `fieldname eq "double quoted literal"` `(fieldname1 eq literal) (fieldname2 ne "literal")` The literal value is interpreted as a regular expression using Google RE2 library syntax. The literal value must match the entire field. For example, to filter for instances that do not end with name "instance", you would use `name ne .*instance`.
  optional string filter = 336120696;

  // Indicates whether every visible scope for each scope type (zone, region, global) should be included in the response. For new resource types added after this field, the flag has no effect as new resource types will always include every visible scope for each scope type in response. For resource types which predate this field, if this flag is omitted or false, only scopes of the scope types where the resource type is expected to be found will be included.
  optional bool include_all_scopes = 391327988;

  // The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)
  optional uint32 max_results = 54715419;

  // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported.
  optional string order_by = 160562920;

  // Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results.
  optional string page_token = 19994697;

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Opt-in for partial success behavior which provides partial results in case of failure. The default value is false.
  optional bool return_partial_success = 517198390;

}

// A request message for TargetPools.AggregatedList. See the method description for details.
message AggregatedListTargetPoolsRequest {
  // A filter expression that filters resources listed in the response. Most Compute resources support two types of filter expressions: expressions that support regular expressions and expressions that follow API improvement proposal AIP-160. If you want to use AIP-160, your expression must specify the field name, an operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The operator must be either `=`, `!=`, `>`, `<`, `<=`, `>=` or `:`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. The `:` operator can be used with string fields to match substrings. For non-string fields it is equivalent to the `=` operator. The `:*` comparison can be used to test whether a key has been defined. For example, to find all objects with `owner` label use: ``` labels.owner:* ``` You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ``` If you want to use a regular expression, use the `eq` (equal) or `ne` (not equal) operator against a single un-parenthesized expression with or without quotes or against multiple parenthesized expressions. Examples: `fieldname eq unquoted literal` `fieldname eq 'single quoted literal'` `fieldname eq "double quoted literal"` `(fieldname1 eq literal) (fieldname2 ne "literal")` The literal value is interpreted as a regular expression using Google RE2 library syntax. The literal value must match the entire field. For example, to filter for instances that do not end with name "instance", you would use `name ne .*instance`.
  optional string filter = 336120696;

  // Indicates whether every visible scope for each scope type (zone, region, global) should be included in the response. For new resource types added after this field, the flag has no effect as new resource types will always include every visible scope for each scope type in response. For resource types which predate this field, if this flag is omitted or false, only scopes of the scope types where the resource type is expected to be found will be included.
  optional bool include_all_scopes = 391327988;

  // The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)
  optional uint32 max_results = 54715419;

  // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported.
  optional string order_by = 160562920;

  // Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results.
  optional string page_token = 19994697;

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Opt-in for partial success behavior which provides partial results in case of failure. The default value is false.
  optional bool return_partial_success = 517198390;

}

// A request message for TargetTcpProxies.AggregatedList. See the method description for details.
message AggregatedListTargetTcpProxiesRequest {
  // A filter expression that filters resources listed in the response. Most Compute resources support two types of filter expressions: expressions that support regular expressions and expressions that follow API improvement proposal AIP-160. If you want to use AIP-160, your expression must specify the field name, an operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The operator must be either `=`, `!=`, `>`, `<`, `<=`, `>=` or `:`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. The `:` operator can be used with string fields to match substrings. For non-string fields it is equivalent to the `=` operator. The `:*` comparison can be used to test whether a key has been defined. For example, to find all objects with `owner` label use: ``` labels.owner:* ``` You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ``` If you want to use a regular expression, use the `eq` (equal) or `ne` (not equal) operator against a single un-parenthesized expression with or without quotes or against multiple parenthesized expressions. Examples: `fieldname eq unquoted literal` `fieldname eq 'single quoted literal'` `fieldname eq "double quoted literal"` `(fieldname1 eq literal) (fieldname2 ne "literal")` The literal value is interpreted as a regular expression using Google RE2 library syntax. The literal value must match the entire field. For example, to filter for instances that do not end with name "instance", you would use `name ne .*instance`.
  optional string filter = 336120696;

  // Indicates whether every visible scope for each scope type (zone, region, global) should be included in the response. For new resource types added after this field, the flag has no effect as new resource types will always include every visible scope for each scope type in response. For resource types which predate this field, if this flag is omitted or false, only scopes of the scope types where the resource type is expected to be found will be included.
  optional bool include_all_scopes = 391327988;

  // The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)
  optional uint32 max_results = 54715419;

  // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported.
  optional string order_by = 160562920;

  // Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results.
  optional string page_token = 19994697;

  // Name of the project scoping this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Opt-in for partial success behavior which provides partial results in case of failure. The default value is false.
  optional bool return_partial_success = 517198390;

}

// A request message for TargetVpnGateways.AggregatedList. See the method description for details.
message AggregatedListTargetVpnGatewaysRequest {
  // A filter expression that filters resources listed in the response. Most Compute resources support two types of filter expressions: expressions that support regular expressions and expressions that follow API improvement proposal AIP-160. If you want to use AIP-160, your expression must specify the field name, an operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The operator must be either `=`, `!=`, `>`, `<`, `<=`, `>=` or `:`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. The `:` operator can be used with string fields to match substrings. For non-string fields it is equivalent to the `=` operator. The `:*` comparison can be used to test whether a key has been defined. For example, to find all objects with `owner` label use: ``` labels.owner:* ``` You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ``` If you want to use a regular expression, use the `eq` (equal) or `ne` (not equal) operator against a single un-parenthesized expression with or without quotes or against multiple parenthesized expressions. Examples: `fieldname eq unquoted literal` `fieldname eq 'single quoted literal'` `fieldname eq "double quoted literal"` `(fieldname1 eq literal) (fieldname2 ne "literal")` The literal value is interpreted as a regular expression using Google RE2 library syntax. The literal value must match the entire field. For example, to filter for instances that do not end with name "instance", you would use `name ne .*instance`.
  optional string filter = 336120696;

  // Indicates whether every visible scope for each scope type (zone, region, global) should be included in the response. For new resource types added after this field, the flag has no effect as new resource types will always include every visible scope for each scope type in response. For resource types which predate this field, if this flag is omitted or false, only scopes of the scope types where the resource type is expected to be found will be included.
  optional bool include_all_scopes = 391327988;

  // The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)
  optional uint32 max_results = 54715419;

  // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported.
  optional string order_by = 160562920;

  // Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results.
  optional string page_token = 19994697;

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Opt-in for partial success behavior which provides partial results in case of failure. The default value is false.
  optional bool return_partial_success = 517198390;

}

// A request message for UrlMaps.AggregatedList. See the method description for details.
message AggregatedListUrlMapsRequest {
  // A filter expression that filters resources listed in the response. Most Compute resources support two types of filter expressions: expressions that support regular expressions and expressions that follow API improvement proposal AIP-160. If you want to use AIP-160, your expression must specify the field name, an operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The operator must be either `=`, `!=`, `>`, `<`, `<=`, `>=` or `:`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. The `:` operator can be used with string fields to match substrings. For non-string fields it is equivalent to the `=` operator. The `:*` comparison can be used to test whether a key has been defined. For example, to find all objects with `owner` label use: ``` labels.owner:* ``` You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ``` If you want to use a regular expression, use the `eq` (equal) or `ne` (not equal) operator against a single un-parenthesized expression with or without quotes or against multiple parenthesized expressions. Examples: `fieldname eq unquoted literal` `fieldname eq 'single quoted literal'` `fieldname eq "double quoted literal"` `(fieldname1 eq literal) (fieldname2 ne "literal")` The literal value is interpreted as a regular expression using Google RE2 library syntax. The literal value must match the entire field. For example, to filter for instances that do not end with name "instance", you would use `name ne .*instance`.
  optional string filter = 336120696;

  // Indicates whether every visible scope for each scope type (zone, region, global) should be included in the response. For new resource types added after this field, the flag has no effect as new resource types will always include every visible scope for each scope type in response. For resource types which predate this field, if this flag is omitted or false, only scopes of the scope types where the resource type is expected to be found will be included.
  optional bool include_all_scopes = 391327988;

  // The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)
  optional uint32 max_results = 54715419;

  // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported.
  optional string order_by = 160562920;

  // Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results.
  optional string page_token = 19994697;

  // Name of the project scoping this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Opt-in for partial success behavior which provides partial results in case of failure. The default value is false.
  optional bool return_partial_success = 517198390;

}

// A request message for VpnGateways.AggregatedList. See the method description for details.
message AggregatedListVpnGatewaysRequest {
  // A filter expression that filters resources listed in the response. Most Compute resources support two types of filter expressions: expressions that support regular expressions and expressions that follow API improvement proposal AIP-160. If you want to use AIP-160, your expression must specify the field name, an operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The operator must be either `=`, `!=`, `>`, `<`, `<=`, `>=` or `:`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. The `:` operator can be used with string fields to match substrings. For non-string fields it is equivalent to the `=` operator. The `:*` comparison can be used to test whether a key has been defined. For example, to find all objects with `owner` label use: ``` labels.owner:* ``` You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ``` If you want to use a regular expression, use the `eq` (equal) or `ne` (not equal) operator against a single un-parenthesized expression with or without quotes or against multiple parenthesized expressions. Examples: `fieldname eq unquoted literal` `fieldname eq 'single quoted literal'` `fieldname eq "double quoted literal"` `(fieldname1 eq literal) (fieldname2 ne "literal")` The literal value is interpreted as a regular expression using Google RE2 library syntax. The literal value must match the entire field. For example, to filter for instances that do not end with name "instance", you would use `name ne .*instance`.
  optional string filter = 336120696;

  // Indicates whether every visible scope for each scope type (zone, region, global) should be included in the response. For new resource types added after this field, the flag has no effect as new resource types will always include every visible scope for each scope type in response. For resource types which predate this field, if this flag is omitted or false, only scopes of the scope types where the resource type is expected to be found will be included.
  optional bool include_all_scopes = 391327988;

  // The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)
  optional uint32 max_results = 54715419;

  // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported.
  optional string order_by = 160562920;

  // Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results.
  optional string page_token = 19994697;

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Opt-in for partial success behavior which provides partial results in case of failure. The default value is false.
  optional bool return_partial_success = 517198390;

}

// A request message for VpnTunnels.AggregatedList. See the method description for details.
message AggregatedListVpnTunnelsRequest {
  // A filter expression that filters resources listed in the response. Most Compute resources support two types of filter expressions: expressions that support regular expressions and expressions that follow API improvement proposal AIP-160. If you want to use AIP-160, your expression must specify the field name, an operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The operator must be either `=`, `!=`, `>`, `<`, `<=`, `>=` or `:`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. The `:` operator can be used with string fields to match substrings. For non-string fields it is equivalent to the `=` operator. The `:*` comparison can be used to test whether a key has been defined. For example, to find all objects with `owner` label use: ``` labels.owner:* ``` You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ``` If you want to use a regular expression, use the `eq` (equal) or `ne` (not equal) operator against a single un-parenthesized expression with or without quotes or against multiple parenthesized expressions. Examples: `fieldname eq unquoted literal` `fieldname eq 'single quoted literal'` `fieldname eq "double quoted literal"` `(fieldname1 eq literal) (fieldname2 ne "literal")` The literal value is interpreted as a regular expression using Google RE2 library syntax. The literal value must match the entire field. For example, to filter for instances that do not end with name "instance", you would use `name ne .*instance`.
  optional string filter = 336120696;

  // Indicates whether every visible scope for each scope type (zone, region, global) should be included in the response. For new resource types added after this field, the flag has no effect as new resource types will always include every visible scope for each scope type in response. For resource types which predate this field, if this flag is omitted or false, only scopes of the scope types where the resource type is expected to be found will be included.
  optional bool include_all_scopes = 391327988;

  // The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)
  optional uint32 max_results = 54715419;

  // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported.
  optional string order_by = 160562920;

  // Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results.
  optional string page_token = 19994697;

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Opt-in for partial success behavior which provides partial results in case of failure. The default value is false.
  optional bool return_partial_success = 517198390;

}

// An alias IP range attached to an instance's network interface.
message AliasIpRange {
  // The IP alias ranges to allocate for this interface. This IP CIDR range must belong to the specified subnetwork and cannot contain IP addresses reserved by system or used by other network interfaces. This range may be a single IP address (such as 10.2.3.4), a netmask (such as /24) or a CIDR-formatted string (such as 10.1.2.0/24).
  optional string ip_cidr_range = 98117322;

  // The name of a subnetwork secondary IP range from which to allocate an IP alias range. If not specified, the primary range of the subnetwork is used.
  optional string subnetwork_range_name = 387995966;

}

// [Output Only] Contains output only fields.
message AllocationResourceStatus {
  // Allocation Properties of this reservation.
  optional AllocationResourceStatusSpecificSKUAllocation specific_sku_allocation = 196231151;

}

// Contains Properties set for the reservation.
message AllocationResourceStatusSpecificSKUAllocation {
  // ID of the instance template used to populate reservation properties.
  optional string source_instance_template_id = 111196154;

}

//
message AllocationSpecificSKUAllocationAllocatedInstancePropertiesReservedDisk {
  // Specifies the disk interface to use for attaching this disk, which is either SCSI or NVME. The default is SCSI. For performance characteristics of SCSI over NVMe, see Local SSD performance.
  enum Interface {
    // A value indicating that the enum field is not set.
    UNDEFINED_INTERFACE = 0;

    NVME = 2408800;

    SCSI = 2539686;

  }

  // Specifies the size of the disk in base-2 GB.
  optional int64 disk_size_gb = 316263735;

  // Specifies the disk interface to use for attaching this disk, which is either SCSI or NVME. The default is SCSI. For performance characteristics of SCSI over NVMe, see Local SSD performance.
  // Check the Interface enum for the list of possible values.
  optional string interface = 502623545;

}

// Properties of the SKU instances being reserved. Next ID: 9
message AllocationSpecificSKUAllocationReservedInstanceProperties {
  // Specifies accelerator type and count.
  repeated AcceleratorConfig guest_accelerators = 463595119;

  // Specifies amount of local ssd to reserve with each instance. The type of disk is local-ssd.
  repeated AllocationSpecificSKUAllocationAllocatedInstancePropertiesReservedDisk local_ssds = 229951299;

  // An opaque location hint used to place the allocation close to other resources. This field is for use by internal tools that use the public API.
  optional string location_hint = 350519505;

  // Specifies type of machine (name only) which has fixed number of vCPUs and fixed amount of memory. This also includes specifying custom machine type following custom-NUMBER_OF_CPUS-AMOUNT_OF_MEMORY pattern.
  optional string machine_type = 227711026;

  // Minimum cpu platform the reservation.
  optional string min_cpu_platform = 242912759;

}

// This reservation type allows to pre allocate specific instance configuration. Next ID: 6
message AllocationSpecificSKUReservation {
  // [Output Only] Indicates how many instances are actually usable currently.
  optional int64 assured_count = 281197645;

  // Specifies the number of resources that are allocated.
  optional int64 count = 94851343;

  // [Output Only] Indicates how many instances are in use.
  optional int64 in_use_count = 493458877;

  // The instance properties for the reservation.
  optional AllocationSpecificSKUAllocationReservedInstanceProperties instance_properties = 215355165;

  // Specifies the instance template to create the reservation. If you use this field, you must exclude the instanceProperties field. This field is optional, and it can be a full or partial URL. For example, the following are all valid URLs to an instance template: - https://www.googleapis.com/compute/v1/projects/project /global/instanceTemplates/instanceTemplate - projects/project/global/instanceTemplates/instanceTemplate - global/instanceTemplates/instanceTemplate 
  optional string source_instance_template = 332423616;

}

//
message Allowed {
  // The IP protocol to which this rule applies. The protocol type is required when creating a firewall rule. This value can either be one of the following well known protocol strings (tcp, udp, icmp, esp, ah, ipip, sctp) or the IP protocol number.
  optional string I_p_protocol = 488094525;

  // An optional list of ports to which this rule applies. This field is only applicable for the UDP or TCP protocol. Each entry must be either an integer or a range. If not specified, this rule applies to connections through any port. Example inputs include: ["22"], ["80","443"], and ["12345-12349"].
  repeated string ports = 106854418;

}

// A request message for InstanceGroupManagers.ApplyUpdatesToInstances. See the method description for details.
message ApplyUpdatesToInstancesInstanceGroupManagerRequest {
  // The name of the managed instance group, should conform to RFC1035.
  string instance_group_manager = 249363395 [(google.api.field_behavior) = REQUIRED];

  // The body resource for this request
  InstanceGroupManagersApplyUpdatesRequest instance_group_managers_apply_updates_request_resource = 259242835 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // The name of the zone where the managed instance group is located. Should conform to RFC1035.
  string zone = 3744684 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "zone"
  ];

}

// A request message for RegionInstanceGroupManagers.ApplyUpdatesToInstances. See the method description for details.
message ApplyUpdatesToInstancesRegionInstanceGroupManagerRequest {
  // The name of the managed instance group, should conform to RFC1035.
  string instance_group_manager = 249363395 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // Name of the region scoping this request, should conform to RFC1035.
  string region = 138946292 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "region"
  ];

  // The body resource for this request
  RegionInstanceGroupManagersApplyUpdatesRequest region_instance_group_managers_apply_updates_request_resource = 76248318 [(google.api.field_behavior) = REQUIRED];

}

// A request message for Instances.AttachDisk. See the method description for details.
message AttachDiskInstanceRequest {
  // The body resource for this request
  AttachedDisk attached_disk_resource = 90605845 [(google.api.field_behavior) = REQUIRED];

  // Whether to force attach the regional disk even if it's currently attached to another instance. If you try to force attach a zonal disk to an instance, you will receive an error.
  optional bool force_attach = 142758425;

  // The instance name for this request.
  string instance = 18257045 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // The name of the zone for this request.
  string zone = 3744684 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "zone"
  ];

}

// A request message for GlobalNetworkEndpointGroups.AttachNetworkEndpoints. See the method description for details.
message AttachNetworkEndpointsGlobalNetworkEndpointGroupRequest {
  // The body resource for this request
  GlobalNetworkEndpointGroupsAttachEndpointsRequest global_network_endpoint_groups_attach_endpoints_request_resource = 30691563 [(google.api.field_behavior) = REQUIRED];

  // The name of the network endpoint group where you are attaching network endpoints to. It should comply with RFC1035.
  string network_endpoint_group = 433907078 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

}

// A request message for NetworkEndpointGroups.AttachNetworkEndpoints. See the method description for details.
message AttachNetworkEndpointsNetworkEndpointGroupRequest {
  // The name of the network endpoint group where you are attaching network endpoints to. It should comply with RFC1035.
  string network_endpoint_group = 433907078 [(google.api.field_behavior) = REQUIRED];

  // The body resource for this request
  NetworkEndpointGroupsAttachEndpointsRequest network_endpoint_groups_attach_endpoints_request_resource = 531079 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // The name of the zone where the network endpoint group is located. It should comply with RFC1035.
  string zone = 3744684 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "zone"
  ];

}

// An instance-attached disk resource.
message AttachedDisk {
  // [Output Only] The architecture of the attached disk. Valid values are ARM64 or X86_64.
  enum Architecture {
    // A value indicating that the enum field is not set.
    UNDEFINED_ARCHITECTURE = 0;

    // Default value indicating Architecture is not set.
    ARCHITECTURE_UNSPECIFIED = 394750507;

    // Machines with architecture ARM64
    ARM64 = 62547450;

    // Machines with architecture X86_64
    X86_64 = 425300551;

  }

  // Specifies the disk interface to use for attaching this disk, which is either SCSI or NVME. For most machine types, the default is SCSI. Local SSDs can use either NVME or SCSI. In certain configurations, persistent disks can use NVMe. For more information, see About persistent disks.
  enum Interface {
    // A value indicating that the enum field is not set.
    UNDEFINED_INTERFACE = 0;

    NVME = 2408800;

    SCSI = 2539686;

  }

  // The mode in which to attach this disk, either READ_WRITE or READ_ONLY. If not specified, the default is to attach the disk in READ_WRITE mode.
  enum Mode {
    // A value indicating that the enum field is not set.
    UNDEFINED_MODE = 0;

    // Attaches this disk in read-only mode. Multiple virtual machines can use a disk in read-only mode at a time.
    READ_ONLY = 91950261;

    // *[Default]* Attaches this disk in read-write mode. Only one virtual machine at a time can be attached to a disk in read-write mode.
    READ_WRITE = 173607894;

  }

  // Specifies the type of the disk, either SCRATCH or PERSISTENT. If not specified, the default is PERSISTENT.
  enum Type {
    // A value indicating that the enum field is not set.
    UNDEFINED_TYPE = 0;

    PERSISTENT = 460683927;

    SCRATCH = 496778970;

  }

  // [Output Only] The architecture of the attached disk. Valid values are ARM64 or X86_64.
  // Check the Architecture enum for the list of possible values.
  optional string architecture = 302803283;

  // Specifies whether the disk will be auto-deleted when the instance is deleted (but not when the disk is detached from the instance).
  optional bool auto_delete = 464761403;

  // Indicates that this is a boot disk. The virtual machine will use the first partition of the disk for its root filesystem.
  optional bool boot = 3029746;

  // Specifies a unique device name of your choice that is reflected into the /dev/disk/by-id/google-* tree of a Linux operating system running within the instance. This name can be used to reference the device for mounting, resizing, and so on, from within the instance. If not specified, the server chooses a default device name to apply to this disk, in the form persistent-disk-x, where x is a number assigned by Google Compute Engine. This field is only applicable for persistent disks.
  optional string device_name = 67541716;

  // Encrypts or decrypts a disk using a customer-supplied encryption key. If you are creating a new disk, this field encrypts the new disk using an encryption key that you provide. If you are attaching an existing disk that is already encrypted, this field decrypts the disk using the customer-supplied encryption key. If you encrypt a disk using a customer-supplied key, you must provide the same key again when you attempt to use this resource at a later time. For example, you must provide the key when you create a snapshot or an image from the disk or when you attach the disk to a virtual machine instance. If you do not provide an encryption key, then the disk will be encrypted using an automatically generated key and you do not need to provide a key to use the disk later. Instance templates do not store customer-supplied encryption keys, so you cannot use your own keys to encrypt disks in a managed instance group.
  optional CustomerEncryptionKey disk_encryption_key = 271660677;

  // The size of the disk in GB.
  optional int64 disk_size_gb = 316263735;

  // [Input Only] Whether to force attach the regional disk even if it's currently attached to another instance. If you try to force attach a zonal disk to an instance, you will receive an error.
  optional bool force_attach = 142758425;

  // A list of features to enable on the guest operating system. Applicable only for bootable images. Read Enabling guest operating system features to see a list of available options.
  repeated GuestOsFeature guest_os_features = 79294545;

  // [Output Only] A zero-based index to this disk, where 0 is reserved for the boot disk. If you have many disks attached to an instance, each disk would have a unique index number.
  optional int32 index = 100346066;

  // [Input Only] Specifies the parameters for a new disk that will be created alongside the new instance. Use initialization parameters to create boot disks or local SSDs attached to the new instance. This property is mutually exclusive with the source property; you can only define one or the other, but not both.
  optional AttachedDiskInitializeParams initialize_params = 17697045;

  // Specifies the disk interface to use for attaching this disk, which is either SCSI or NVME. For most machine types, the default is SCSI. Local SSDs can use either NVME or SCSI. In certain configurations, persistent disks can use NVMe. For more information, see About persistent disks.
  // Check the Interface enum for the list of possible values.
  optional string interface = 502623545;

  // [Output Only] Type of the resource. Always compute#attachedDisk for attached disks.
  optional string kind = 3292052;

  // [Output Only] Any valid publicly visible licenses.
  repeated string licenses = 337642578;

  // The mode in which to attach this disk, either READ_WRITE or READ_ONLY. If not specified, the default is to attach the disk in READ_WRITE mode.
  // Check the Mode enum for the list of possible values.
  optional string mode = 3357091;

  // [Output Only] shielded vm initial state stored on disk
  optional InitialStateConfig shielded_instance_initial_state = 192356867;

  // Specifies a valid partial or full URL to an existing Persistent Disk resource. When creating a new instance, one of initializeParams.sourceImage or initializeParams.sourceSnapshot or disks.source is required except for local SSD. If desired, you can also attach existing non-root persistent disks using this property. This field is only applicable for persistent disks. Note that for InstanceTemplate, specify the disk name for zonal disk, and the URL for regional disk.
  optional string source = 177235995;

  // Specifies the type of the disk, either SCRATCH or PERSISTENT. If not specified, the default is PERSISTENT.
  // Check the Type enum for the list of possible values.
  optional string type = 3575610;

}

// [Input Only] Specifies the parameters for a new disk that will be created alongside the new instance. Use initialization parameters to create boot disks or local SSDs attached to the new instance. This field is persisted and returned for instanceTemplate and not returned in the context of instance. This property is mutually exclusive with the source property; you can only define one or the other, but not both.
message AttachedDiskInitializeParams {
  // The architecture of the attached disk. Valid values are arm64 or x86_64.
  enum Architecture {
    // A value indicating that the enum field is not set.
    UNDEFINED_ARCHITECTURE = 0;

    // Default value indicating Architecture is not set.
    ARCHITECTURE_UNSPECIFIED = 394750507;

    // Machines with architecture ARM64
    ARM64 = 62547450;

    // Machines with architecture X86_64
    X86_64 = 425300551;

  }

  // Specifies which action to take on instance update with this disk. Default is to use the existing disk.
  enum OnUpdateAction {
    // A value indicating that the enum field is not set.
    UNDEFINED_ON_UPDATE_ACTION = 0;

    // Always recreate the disk.
    RECREATE_DISK = 494767853;

    // Recreate the disk if source (image, snapshot) of this disk is different from source of existing disk.
    RECREATE_DISK_IF_SOURCE_CHANGED = 398099712;

    // Use the existing disk, this is the default behaviour.
    USE_EXISTING_DISK = 232682233;

  }

  // The architecture of the attached disk. Valid values are arm64 or x86_64.
  // Check the Architecture enum for the list of possible values.
  optional string architecture = 302803283;

  // An optional description. Provide this property when creating the disk.
  optional string description = 422937596;

  // Specifies the disk name. If not specified, the default is to use the name of the instance. If a disk with the same name already exists in the given region, the existing disk is attached to the new instance and the new disk is not created.
  optional string disk_name = 92807149;

  // Specifies the size of the disk in base-2 GB. The size must be at least 10 GB. If you specify a sourceImage, which is required for boot disks, the default size is the size of the sourceImage. If you do not specify a sourceImage, the default disk size is 500 GB.
  optional int64 disk_size_gb = 316263735;

  // Specifies the disk type to use to create the instance. If not specified, the default is pd-standard, specified using the full URL. For example: https://www.googleapis.com/compute/v1/projects/project/zones/zone /diskTypes/pd-standard For a full list of acceptable values, see Persistent disk types. If you specify this field when creating a VM, you can provide either the full or partial URL. For example, the following values are valid: - https://www.googleapis.com/compute/v1/projects/project/zones/zone /diskTypes/diskType - projects/project/zones/zone/diskTypes/diskType - zones/zone/diskTypes/diskType If you specify this field when creating or updating an instance template or all-instances configuration, specify the type of the disk, not the URL. For example: pd-standard.
  optional string disk_type = 93009052;

  // Labels to apply to this disk. These can be later modified by the disks.setLabels method. This field is only applicable for persistent disks.
  map<string, string> labels = 500195327;

  // A list of publicly visible licenses. Reserved for Google's use.
  repeated string licenses = 337642578;

  // Specifies which action to take on instance update with this disk. Default is to use the existing disk.
  // Check the OnUpdateAction enum for the list of possible values.
  optional string on_update_action = 202451980;

  // Indicates how many IOPS to provision for the disk. This sets the number of I/O operations per second that the disk can handle. Values must be between 10,000 and 120,000. For more details, see the Extreme persistent disk documentation.
  optional int64 provisioned_iops = 186769108;

  // Resource manager tags to be bound to the disk. Tag keys and values have the same definition as resource manager tags. Keys must be in the format `tagKeys/{tag_key_id}`, and values are in the format `tagValues/456`. The field is ignored (both PUT & PATCH) when empty.
  map<string, string> resource_manager_tags = 377671164;

  // Resource policies applied to this disk for automatic snapshot creations. Specified using the full or partial URL. For instance template, specify only the resource policy name.
  repeated string resource_policies = 22220385;

  // The source image to create this disk. When creating a new instance, one of initializeParams.sourceImage or initializeParams.sourceSnapshot or disks.source is required except for local SSD. To create a disk with one of the public operating system images, specify the image by its family name. For example, specify family/debian-9 to use the latest Debian 9 image: projects/debian-cloud/global/images/family/debian-9 Alternatively, use a specific version of a public operating system image: projects/debian-cloud/global/images/debian-9-stretch-vYYYYMMDD To create a disk with a custom image that you created, specify the image name in the following format: global/images/my-custom-image You can also specify a custom image by its image family, which returns the latest version of the image in that family. Replace the image name with family/family-name: global/images/family/my-image-family If the source image is deleted later, this field will not be set.
  optional string source_image = 50443319;

  // The customer-supplied encryption key of the source image. Required if the source image is protected by a customer-supplied encryption key. InstanceTemplate and InstancePropertiesPatch do not store customer-supplied encryption keys, so you cannot create disks for instances in a managed instance group if the source images are encrypted with your own keys.
  optional CustomerEncryptionKey source_image_encryption_key = 381503659;

  // The source snapshot to create this disk. When creating a new instance, one of initializeParams.sourceSnapshot or initializeParams.sourceImage or disks.source is required except for local SSD. To create a disk with a snapshot that you created, specify the snapshot name in the following format: global/snapshots/my-backup If the source snapshot is deleted later, this field will not be set.
  optional string source_snapshot = 126061928;

  // The customer-supplied encryption key of the source snapshot.
  optional CustomerEncryptionKey source_snapshot_encryption_key = 303679322;

}

// Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { "audit_configs": [ { "service": "allServices", "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" }, { "log_type": "ADMIN_READ" } ] }, { "service": "sampleservice.googleapis.com", "audit_log_configs": [ { "log_type": "DATA_READ" }, { "log_type": "DATA_WRITE", "exempted_members": [ "user:aliya@example.com" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts jose@example.com from DATA_READ logging, and aliya@example.com from DATA_WRITE logging.
message AuditConfig {
  // The configuration for logging of each type of permission.
  repeated AuditLogConfig audit_log_configs = 488420626;

  // This is deprecated and has no effect. Do not use.
  repeated string exempted_members = 232615576;

  // Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services.
  optional string service = 373540533;

}

// Provides the configuration for logging a type of permissions. Example: { "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging.
message AuditLogConfig {
  // The log type that this config enables.
  enum LogType {
    // A value indicating that the enum field is not set.
    UNDEFINED_LOG_TYPE = 0;

    // Admin reads. Example: CloudIAM getIamPolicy
    ADMIN_READ = 128951462;

    // Data reads. Example: CloudSQL Users list
    DATA_READ = 305224971;

    // Data writes. Example: CloudSQL Users create
    DATA_WRITE = 340181738;

    // Default case. Should never be this.
    LOG_TYPE_UNSPECIFIED = 154527053;

  }

  // Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members.
  repeated string exempted_members = 232615576;

  // This is deprecated and has no effect. Do not use.
  optional bool ignore_child_exemptions = 70141850;

  // The log type that this config enables.
  // Check the LogType enum for the list of possible values.
  optional string log_type = 403115861;

}

// This is deprecated and has no effect. Do not use.
message AuthorizationLoggingOptions {
  // This is deprecated and has no effect. Do not use.
  enum PermissionType {
    // A value indicating that the enum field is not set.
    UNDEFINED_PERMISSION_TYPE = 0;

    // This is deprecated and has no effect. Do not use.
    ADMIN_READ = 128951462;

    // This is deprecated and has no effect. Do not use.
    ADMIN_WRITE = 244412079;

    // This is deprecated and has no effect. Do not use.
    DATA_READ = 305224971;

    // This is deprecated and has no effect. Do not use.
    DATA_WRITE = 340181738;

    // This is deprecated and has no effect. Do not use.
    PERMISSION_TYPE_UNSPECIFIED = 440313346;

  }

  // This is deprecated and has no effect. Do not use.
  // Check the PermissionType enum for the list of possible values.
  optional string permission_type = 525978538;

}

// Represents an Autoscaler resource. Google Compute Engine has two Autoscaler resources: * [Zonal](/compute/docs/reference/rest/v1/autoscalers) * [Regional](/compute/docs/reference/rest/v1/regionAutoscalers) Use autoscalers to automatically add or delete instances from a managed instance group according to your defined autoscaling policy. For more information, read Autoscaling Groups of Instances. For zonal managed instance groups resource, use the autoscaler resource. For regional managed instance groups, use the regionAutoscalers resource.
message Autoscaler {
  // [Output Only] The status of the autoscaler configuration. Current set of possible values: - PENDING: Autoscaler backend hasn't read new/updated configuration. - DELETING: Configuration is being deleted. - ACTIVE: Configuration is acknowledged to be effective. Some warnings might be present in the statusDetails field. - ERROR: Configuration has errors. Actionable for users. Details are present in the statusDetails field. New values might be added in the future.
  enum Status {
    // A value indicating that the enum field is not set.
    UNDEFINED_STATUS = 0;

    // Configuration is acknowledged to be effective
    ACTIVE = 314733318;

    // Configuration is being deleted
    DELETING = 528602024;

    // Configuration has errors. Actionable for users.
    ERROR = 66247144;

    // Autoscaler backend hasn't read new/updated configuration
    PENDING = 35394935;

  }

  // The configuration parameters for the autoscaling algorithm. You can define one or more signals for an autoscaler: cpuUtilization, customMetricUtilizations, and loadBalancingUtilization. If none of these are specified, the default will be to autoscale based on cpuUtilization to 0.6 or 60%.
  optional AutoscalingPolicy autoscaling_policy = 221950041;

  // [Output Only] Creation timestamp in RFC3339 text format.
  optional string creation_timestamp = 30525366;

  // An optional description of this resource. Provide this property when you create the resource.
  optional string description = 422937596;

  // [Output Only] The unique identifier for the resource. This identifier is defined by the server.
  optional uint64 id = 3355;

  // [Output Only] Type of the resource. Always compute#autoscaler for autoscalers.
  optional string kind = 3292052;

  // Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
  optional string name = 3373707;

  // [Output Only] Target recommended MIG size (number of instances) computed by autoscaler. Autoscaler calculates the recommended MIG size even when the autoscaling policy mode is different from ON. This field is empty when autoscaler is not connected to an existing managed instance group or autoscaler did not generate its prediction.
  optional int32 recommended_size = 257915749;

  // [Output Only] URL of the region where the instance group resides (for autoscalers living in regional scope).
  optional string region = 138946292;

  // [Output Only] Status information of existing scaling schedules.
  map<string, ScalingScheduleStatus> scaling_schedule_status = 465950178;

  // [Output Only] Server-defined URL for the resource.
  optional string self_link = 456214797;

  // [Output Only] The status of the autoscaler configuration. Current set of possible values: - PENDING: Autoscaler backend hasn't read new/updated configuration. - DELETING: Configuration is being deleted. - ACTIVE: Configuration is acknowledged to be effective. Some warnings might be present in the statusDetails field. - ERROR: Configuration has errors. Actionable for users. Details are present in the statusDetails field. New values might be added in the future.
  // Check the Status enum for the list of possible values.
  optional string status = 181260274;

  // [Output Only] Human-readable details about the current state of the autoscaler. Read the documentation for Commonly returned status messages for examples of status messages you might encounter.
  repeated AutoscalerStatusDetails status_details = 363353845;

  // URL of the managed instance group that this autoscaler will scale. This field is required when creating an autoscaler.
  optional string target = 192835985;

  // [Output Only] URL of the zone where the instance group resides (for autoscalers living in zonal scope).
  optional string zone = 3744684;

}

//
message AutoscalerAggregatedList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 3355;

  // A list of AutoscalersScopedList resources.
  map<string, AutoscalersScopedList> items = 100526016;

  // [Output Only] Type of resource. Always compute#autoscalerAggregatedList for aggregated lists of autoscalers.
  optional string kind = 3292052;

  // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
  optional string next_page_token = 79797525;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 456214797;

  // [Output Only] Unreachable resources. end_interface: MixerListResponseWithEtagBuilder
  repeated string unreachables = 243372063;

  // [Output Only] Informational warning message.
  optional Warning warning = 50704284;

}

// Contains a list of Autoscaler resources.
message AutoscalerList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 3355;

  // A list of Autoscaler resources.
  repeated Autoscaler items = 100526016;

  // [Output Only] Type of resource. Always compute#autoscalerList for lists of autoscalers.
  optional string kind = 3292052;

  // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
  optional string next_page_token = 79797525;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 456214797;

  // [Output Only] Informational warning message.
  optional Warning warning = 50704284;

}

//
message AutoscalerStatusDetails {
  // The type of error, warning, or notice returned. Current set of possible values: - ALL_INSTANCES_UNHEALTHY (WARNING): All instances in the instance group are unhealthy (not in RUNNING state). - BACKEND_SERVICE_DOES_NOT_EXIST (ERROR): There is no backend service attached to the instance group. - CAPPED_AT_MAX_NUM_REPLICAS (WARNING): Autoscaler recommends a size greater than maxNumReplicas. - CUSTOM_METRIC_DATA_POINTS_TOO_SPARSE (WARNING): The custom metric samples are not exported often enough to be a credible base for autoscaling. - CUSTOM_METRIC_INVALID (ERROR): The custom metric that was specified does not exist or does not have the necessary labels. - MIN_EQUALS_MAX (WARNING): The minNumReplicas is equal to maxNumReplicas. This means the autoscaler cannot add or remove instances from the instance group. - MISSING_CUSTOM_METRIC_DATA_POINTS (WARNING): The autoscaler did not receive any data from the custom metric configured for autoscaling. - MISSING_LOAD_BALANCING_DATA_POINTS (WARNING): The autoscaler is configured to scale based on a load balancing signal but the instance group has not received any requests from the load balancer. - MODE_OFF (WARNING): Autoscaling is turned off. The number of instances in the group won't change automatically. The autoscaling configuration is preserved. - MODE_ONLY_UP (WARNING): Autoscaling is in the "Autoscale only out" mode. The autoscaler can add instances but not remove any. - MORE_THAN_ONE_BACKEND_SERVICE (ERROR): The instance group cannot be autoscaled because it has more than one backend service attached to it. - NOT_ENOUGH_QUOTA_AVAILABLE (ERROR): There is insufficient quota for the necessary resources, such as CPU or number of instances. - REGION_RESOURCE_STOCKOUT (ERROR): Shown only for regional autoscalers: there is a resource stockout in the chosen region. - SCALING_TARGET_DOES_NOT_EXIST (ERROR): The target to be scaled does not exist. - UNSUPPORTED_MAX_RATE_LOAD_BALANCING_CONFIGURATION (ERROR): Autoscaling does not work with an HTTP/S load balancer that has been configured for maxRate. - ZONE_RESOURCE_STOCKOUT (ERROR): For zonal autoscalers: there is a resource stockout in the chosen zone. For regional autoscalers: in at least one of the zones you're using there is a resource stockout. New values might be added in the future. Some of the values might not be available in all API versions.
  enum Type {
    // A value indicating that the enum field is not set.
    UNDEFINED_TYPE = 0;

    // All instances in the instance group are unhealthy (not in RUNNING state).
    ALL_INSTANCES_UNHEALTHY = 404965477;

    // There is no backend service attached to the instance group.
    BACKEND_SERVICE_DOES_NOT_EXIST = 191417626;

    // Autoscaler recommends a size greater than maxNumReplicas.
    CAPPED_AT_MAX_NUM_REPLICAS = 518617;

    // The custom metric samples are not exported often enough to be a credible base for autoscaling.
    CUSTOM_METRIC_DATA_POINTS_TOO_SPARSE = 328964659;

    // The custom metric that was specified does not exist or does not have the necessary labels.
    CUSTOM_METRIC_INVALID = 204430550;

    // The minNumReplicas is equal to maxNumReplicas. This means the autoscaler cannot add or remove instances from the instance group.
    MIN_EQUALS_MAX = 2821361;

    // The autoscaler did not receive any data from the custom metric configured for autoscaling.
    MISSING_CUSTOM_METRIC_DATA_POINTS = 94885086;

    // The autoscaler is configured to scale based on a load balancing signal but the instance group has not received any requests from the load balancer.
    MISSING_LOAD_BALANCING_DATA_POINTS = 509858898;

    // Autoscaling is turned off. The number of instances in the group won't change automatically. The autoscaling configuration is preserved.
    MODE_OFF = 164169907;

    // Autoscaling is in the "Autoscale only scale out" mode. Instances in the group will be only added.
    MODE_ONLY_SCALE_OUT = 3840994;

    // Autoscaling is in the "Autoscale only out" mode. Instances in the group will be only added.
    MODE_ONLY_UP = 100969842;

    // The instance group cannot be autoscaled because it has more than one backend service attached to it.
    MORE_THAN_ONE_BACKEND_SERVICE = 151922141;

    // There is insufficient quota for the necessary resources, such as CPU or number of instances.
    NOT_ENOUGH_QUOTA_AVAILABLE = 403101631;

    // Showed only for regional autoscalers: there is a resource stockout in the chosen region.
    REGION_RESOURCE_STOCKOUT = 528622846;

    // The target to be scaled does not exist.
    SCALING_TARGET_DOES_NOT_EXIST = 122636699;

    // For some scaling schedules minRequiredReplicas is greater than maxNumReplicas. Autoscaler always recommends at most maxNumReplicas instances.
    SCHEDULED_INSTANCES_GREATER_THAN_AUTOSCALER_MAX = 29275586;

    // For some scaling schedules minRequiredReplicas is less than minNumReplicas. Autoscaler always recommends at least minNumReplicas instances.
    SCHEDULED_INSTANCES_LESS_THAN_AUTOSCALER_MIN = 398287669;

    UNKNOWN = 433141802;

    // Autoscaling does not work with an HTTP/S load balancer that has been configured for maxRate.
    UNSUPPORTED_MAX_RATE_LOAD_BALANCING_CONFIGURATION = 330845009;

    // For zonal autoscalers: there is a resource stockout in the chosen zone. For regional autoscalers: in at least one of the zones you're using there is a resource stockout.
    ZONE_RESOURCE_STOCKOUT = 210200502;

  }

  // The status message.
  optional string message = 418054151;

  // The type of error, warning, or notice returned. Current set of possible values: - ALL_INSTANCES_UNHEALTHY (WARNING): All instances in the instance group are unhealthy (not in RUNNING state). - BACKEND_SERVICE_DOES_NOT_EXIST (ERROR): There is no backend service attached to the instance group. - CAPPED_AT_MAX_NUM_REPLICAS (WARNING): Autoscaler recommends a size greater than maxNumReplicas. - CUSTOM_METRIC_DATA_POINTS_TOO_SPARSE (WARNING): The custom metric samples are not exported often enough to be a credible base for autoscaling. - CUSTOM_METRIC_INVALID (ERROR): The custom metric that was specified does not exist or does not have the necessary labels. - MIN_EQUALS_MAX (WARNING): The minNumReplicas is equal to maxNumReplicas. This means the autoscaler cannot add or remove instances from the instance group. - MISSING_CUSTOM_METRIC_DATA_POINTS (WARNING): The autoscaler did not receive any data from the custom metric configured for autoscaling. - MISSING_LOAD_BALANCING_DATA_POINTS (WARNING): The autoscaler is configured to scale based on a load balancing signal but the instance group has not received any requests from the load balancer. - MODE_OFF (WARNING): Autoscaling is turned off. The number of instances in the group won't change automatically. The autoscaling configuration is preserved. - MODE_ONLY_UP (WARNING): Autoscaling is in the "Autoscale only out" mode. The autoscaler can add instances but not remove any. - MORE_THAN_ONE_BACKEND_SERVICE (ERROR): The instance group cannot be autoscaled because it has more than one backend service attached to it. - NOT_ENOUGH_QUOTA_AVAILABLE (ERROR): There is insufficient quota for the necessary resources, such as CPU or number of instances. - REGION_RESOURCE_STOCKOUT (ERROR): Shown only for regional autoscalers: there is a resource stockout in the chosen region. - SCALING_TARGET_DOES_NOT_EXIST (ERROR): The target to be scaled does not exist. - UNSUPPORTED_MAX_RATE_LOAD_BALANCING_CONFIGURATION (ERROR): Autoscaling does not work with an HTTP/S load balancer that has been configured for maxRate. - ZONE_RESOURCE_STOCKOUT (ERROR): For zonal autoscalers: there is a resource stockout in the chosen zone. For regional autoscalers: in at least one of the zones you're using there is a resource stockout. New values might be added in the future. Some of the values might not be available in all API versions.
  // Check the Type enum for the list of possible values.
  optional string type = 3575610;

}

//
message AutoscalersScopedList {
  // [Output Only] A list of autoscalers contained in this scope.
  repeated Autoscaler autoscalers = 465771644;

  // [Output Only] Informational warning which replaces the list of autoscalers when the list is empty.
  optional Warning warning = 50704284;

}

// Cloud Autoscaler policy.
message AutoscalingPolicy {
  // Defines operating mode for this policy.
  enum Mode {
    // A value indicating that the enum field is not set.
    UNDEFINED_MODE = 0;

    // Do not automatically scale the MIG in or out. The recommended_size field contains the size of MIG that would be set if the actuation mode was enabled.
    OFF = 78159;

    // Automatically scale the MIG in and out according to the policy.
    ON = 2527;

    // Automatically create VMs according to the policy, but do not scale the MIG in.
    ONLY_SCALE_OUT = 152713670;

    // Automatically create VMs according to the policy, but do not scale the MIG in.
    ONLY_UP = 478095374;

  }

  // The number of seconds that the autoscaler waits before it starts collecting information from a new instance. This prevents the autoscaler from collecting information when the instance is initializing, during which the collected usage would not be reliable. The default time autoscaler waits is 60 seconds. Virtual machine initialization times might vary because of numerous factors. We recommend that you test how long an instance may take to initialize. To do this, create an instance and time the startup process.
  optional int32 cool_down_period_sec = 107692954;

  // Defines the CPU utilization policy that allows the autoscaler to scale based on the average CPU utilization of a managed instance group.
  optional AutoscalingPolicyCpuUtilization cpu_utilization = 381211147;

  // Configuration parameters of autoscaling based on a custom metric.
  repeated AutoscalingPolicyCustomMetricUtilization custom_metric_utilizations = 131972850;

  // Configuration parameters of autoscaling based on load balancer.
  optional AutoscalingPolicyLoadBalancingUtilization load_balancing_utilization = 429746403;

  // The maximum number of instances that the autoscaler can scale out to. This is required when creating or updating an autoscaler. The maximum number of replicas must not be lower than minimal number of replicas.
  optional int32 max_num_replicas = 62327375;

  // The minimum number of replicas that the autoscaler can scale in to. This cannot be less than 0. If not provided, autoscaler chooses a default value depending on maximum number of instances allowed.
  optional int32 min_num_replicas = 535329825;

  // Defines operating mode for this policy.
  // Check the Mode enum for the list of possible values.
  optional string mode = 3357091;

  optional AutoscalingPolicyScaleInControl scale_in_control = 527670872;

  // Scaling schedules defined for an autoscaler. Multiple schedules can be set on an autoscaler, and they can overlap. During overlapping periods the greatest min_required_replicas of all scaling schedules is applied. Up to 128 scaling schedules are allowed.
  map<string, AutoscalingPolicyScalingSchedule> scaling_schedules = 355416580;

}

// CPU utilization policy.
message AutoscalingPolicyCpuUtilization {
  // Indicates whether predictive autoscaling based on CPU metric is enabled. Valid values are: * NONE (default). No predictive method is used. The autoscaler scales the group to meet current demand based on real-time metrics. * OPTIMIZE_AVAILABILITY. Predictive autoscaling improves availability by monitoring daily and weekly load patterns and scaling out ahead of anticipated demand.
  enum PredictiveMethod {
    // A value indicating that the enum field is not set.
    UNDEFINED_PREDICTIVE_METHOD = 0;

    // No predictive method is used. The autoscaler scales the group to meet current demand based on real-time metrics
    NONE = 2402104;

    // Predictive autoscaling improves availability by monitoring daily and weekly load patterns and scaling out ahead of anticipated demand.
    OPTIMIZE_AVAILABILITY = 11629437;

  }

  // Indicates whether predictive autoscaling based on CPU metric is enabled. Valid values are: * NONE (default). No predictive method is used. The autoscaler scales the group to meet current demand based on real-time metrics. * OPTIMIZE_AVAILABILITY. Predictive autoscaling improves availability by monitoring daily and weekly load patterns and scaling out ahead of anticipated demand.
  // Check the PredictiveMethod enum for the list of possible values.
  optional string predictive_method = 390220737;

  // The target CPU utilization that the autoscaler maintains. Must be a float value in the range (0, 1]. If not specified, the default is 0.6. If the CPU level is below the target utilization, the autoscaler scales in the number of instances until it reaches the minimum number of instances you specified or until the average CPU of your instances reaches the target utilization. If the average CPU is above the target utilization, the autoscaler scales out until it reaches the maximum number of instances you specified or until the average utilization reaches the target utilization.
  optional double utilization_target = 215905870;

}

// Custom utilization metric policy.
message AutoscalingPolicyCustomMetricUtilization {
  // Defines how target utilization value is expressed for a Stackdriver Monitoring metric. Either GAUGE, DELTA_PER_SECOND, or DELTA_PER_MINUTE.
  enum UtilizationTargetType {
    // A value indicating that the enum field is not set.
    UNDEFINED_UTILIZATION_TARGET_TYPE = 0;

    // Sets the utilization target value for a cumulative or delta metric, expressed as the rate of growth per minute.
    DELTA_PER_MINUTE = 87432861;

    // Sets the utilization target value for a cumulative or delta metric, expressed as the rate of growth per second.
    DELTA_PER_SECOND = 255180029;

    // Sets the utilization target value for a gauge metric. The autoscaler will collect the average utilization of the virtual machines from the last couple of minutes, and compare the value to the utilization target value to perform autoscaling.
    GAUGE = 67590361;

  }

  // A filter string, compatible with a Stackdriver Monitoring filter string for TimeSeries.list API call. This filter is used to select a specific TimeSeries for the purpose of autoscaling and to determine whether the metric is exporting per-instance or per-group data. For the filter to be valid for autoscaling purposes, the following rules apply: - You can only use the AND operator for joining selectors. - You can only use direct equality comparison operator (=) without any functions for each selector. - You can specify the metric in both the filter string and in the metric field. However, if specified in both places, the metric must be identical. - The monitored resource type determines what kind of values are expected for the metric. If it is a gce_instance, the autoscaler expects the metric to include a separate TimeSeries for each instance in a group. In such a case, you cannot filter on resource labels. If the resource type is any other value, the autoscaler expects this metric to contain values that apply to the entire autoscaled instance group and resource label filtering can be performed to point autoscaler at the correct TimeSeries to scale upon. This is called a *per-group metric* for the purpose of autoscaling. If not specified, the type defaults to gce_instance. Try to provide a filter that is selective enough to pick just one TimeSeries for the autoscaled group or for each of the instances (if you are using gce_instance resource type). If multiple TimeSeries are returned upon the query execution, the autoscaler will sum their respective values to obtain its scaling value.
  optional string filter = 336120696;

  // The identifier (type) of the Stackdriver Monitoring metric. The metric cannot have negative values. The metric must have a value type of INT64 or DOUBLE.
  optional string metric = 533067184;

  // If scaling is based on a per-group metric value that represents the total amount of work to be done or resource usage, set this value to an amount assigned for a single instance of the scaled group. Autoscaler keeps the number of instances proportional to the value of this metric. The metric itself does not change value due to group resizing. A good metric to use with the target is for example pubsub.googleapis.com/subscription/num_undelivered_messages or a custom metric exporting the total number of requests coming to your instances. A bad example would be a metric exporting an average or median latency, since this value can't include a chunk assignable to a single instance, it could be better used with utilization_target instead.
  optional double single_instance_assignment = 504768064;

  // The target value of the metric that autoscaler maintains. This must be a positive value. A utilization metric scales number of virtual machines handling requests to increase or decrease proportionally to the metric. For example, a good metric to use as a utilization_target is https://www.googleapis.com/compute/v1/instance/network/received_bytes_count. The autoscaler works to keep this value constant for each of the instances.
  optional double utilization_target = 215905870;

  // Defines how target utilization value is expressed for a Stackdriver Monitoring metric. Either GAUGE, DELTA_PER_SECOND, or DELTA_PER_MINUTE.
  // Check the UtilizationTargetType enum for the list of possible values.
  optional string utilization_target_type = 340169355;

}

// Configuration parameters of autoscaling based on load balancing.
message AutoscalingPolicyLoadBalancingUtilization {
  // Fraction of backend capacity utilization (set in HTTP(S) load balancing configuration) that the autoscaler maintains. Must be a positive float value. If not defined, the default is 0.8.
  optional double utilization_target = 215905870;

}

// Configuration that allows for slower scale in so that even if Autoscaler recommends an abrupt scale in of a MIG, it will be throttled as specified by the parameters below.
message AutoscalingPolicyScaleInControl {
  // Maximum allowed number (or %) of VMs that can be deducted from the peak recommendation during the window autoscaler looks at when computing recommendations. Possibly all these VMs can be deleted at once so user service needs to be prepared to lose that many VMs in one step.
  optional FixedOrPercent max_scaled_in_replicas = 180710123;

  // How far back autoscaling looks when computing recommendations to include directives regarding slower scale in, as described above.
  optional int32 time_window_sec = 36405300;

}

// Scaling based on user-defined schedule. The message describes a single scaling schedule. A scaling schedule changes the minimum number of VM instances an autoscaler can recommend, which can trigger scaling out.
message AutoscalingPolicyScalingSchedule {
  // A description of a scaling schedule.
  optional string description = 422937596;

  // A boolean value that specifies whether a scaling schedule can influence autoscaler recommendations. If set to true, then a scaling schedule has no effect. This field is optional, and its value is false by default.
  optional bool disabled = 270940796;

  // The duration of time intervals, in seconds, for which this scaling schedule is to run. The minimum allowed value is 300. This field is required.
  optional int32 duration_sec = 212356902;

  // The minimum number of VM instances that the autoscaler will recommend in time intervals starting according to schedule. This field is required.
  optional int32 min_required_replicas = 365514414;

  // The start timestamps of time intervals when this scaling schedule is to provide a scaling signal. This field uses the extended cron format (with an optional year field). The expression can describe a single timestamp if the optional year is set, in which case the scaling schedule runs once. The schedule is interpreted with respect to time_zone. This field is required. Note: These timestamps only describe when autoscaler starts providing the scaling signal. The VMs need additional time to become serving.
  optional string schedule = 375820951;

  // The time zone to use when interpreting the schedule. The value of this field must be a time zone name from the tz database: http://en.wikipedia.org/wiki/Tz_database. This field is assigned a default value of “UTC” if left empty.
  optional string time_zone = 36848094;

}

// Message containing information of one individual backend.
message Backend {
  // Specifies how to determine whether the backend of a load balancer can handle additional traffic or is fully loaded. For usage guidelines, see Connection balancing mode. Backends must use compatible balancing modes. For more information, see Supported balancing modes and target capacity settings and Restrictions and guidance for instance groups. Note: Currently, if you use the API to configure incompatible balancing modes, the configuration might be accepted even though it has no impact and is ignored. Specifically, Backend.maxUtilization is ignored when Backend.balancingMode is RATE. In the future, this incompatible combination will be rejected.
  enum BalancingMode {
    // A value indicating that the enum field is not set.
    UNDEFINED_BALANCING_MODE = 0;

    // Balance based on the number of simultaneous connections.
    CONNECTION = 246311646;

    // Balance based on requests per second (RPS).
    RATE = 2508000;

    // Balance based on the backend utilization.
    UTILIZATION = 157008386;

  }

  // Specifies how to determine whether the backend of a load balancer can handle additional traffic or is fully loaded. For usage guidelines, see Connection balancing mode. Backends must use compatible balancing modes. For more information, see Supported balancing modes and target capacity settings and Restrictions and guidance for instance groups. Note: Currently, if you use the API to configure incompatible balancing modes, the configuration might be accepted even though it has no impact and is ignored. Specifically, Backend.maxUtilization is ignored when Backend.balancingMode is RATE. In the future, this incompatible combination will be rejected.
  // Check the BalancingMode enum for the list of possible values.
  optional string balancing_mode = 430286217;

  // A multiplier applied to the backend's target capacity of its balancing mode. The default value is 1, which means the group serves up to 100% of its configured capacity (depending on balancingMode). A setting of 0 means the group is completely drained, offering 0% of its available capacity. The valid ranges are 0.0 and [0.1,1.0]. You cannot configure a setting larger than 0 and smaller than 0.1. You cannot configure a setting of 0 when there is only one backend attached to the backend service. Not available with backends that don't support using a balancingMode. This includes backends such as global internet NEGs, regional serverless NEGs, and PSC NEGs.
  optional float capacity_scaler = 315958157;

  // An optional description of this resource. Provide this property when you create the resource.
  optional string description = 422937596;

  // This field designates whether this is a failover backend. More than one failover backend can be configured for a given BackendService.
  optional bool failover = 138892530;

  // The fully-qualified URL of an instance group or network endpoint group (NEG) resource. To determine what types of backends a load balancer supports, see the [Backend services overview](https://cloud.google.com/load-balancing/docs/backend-service#backends). You must use the *fully-qualified* URL (starting with https://www.googleapis.com/) to specify the instance group or NEG. Partial URLs are not supported.
  optional string group = 98629247;

  // Defines a target maximum number of simultaneous connections. For usage guidelines, see Connection balancing mode and Utilization balancing mode. Not available if the backend's balancingMode is RATE.
  optional int32 max_connections = 110652154;

  // Defines a target maximum number of simultaneous connections. For usage guidelines, see Connection balancing mode and Utilization balancing mode. Not available if the backend's balancingMode is RATE.
  optional int32 max_connections_per_endpoint = 216904604;

  // Defines a target maximum number of simultaneous connections. For usage guidelines, see Connection balancing mode and Utilization balancing mode. Not available if the backend's balancingMode is RATE.
  optional int32 max_connections_per_instance = 104671900;

  // Defines a maximum number of HTTP requests per second (RPS). For usage guidelines, see Rate balancing mode and Utilization balancing mode. Not available if the backend's balancingMode is CONNECTION.
  optional int32 max_rate = 408035035;

  // Defines a maximum target for requests per second (RPS). For usage guidelines, see Rate balancing mode and Utilization balancing mode. Not available if the backend's balancingMode is CONNECTION.
  optional float max_rate_per_endpoint = 129832283;

  // Defines a maximum target for requests per second (RPS). For usage guidelines, see Rate balancing mode and Utilization balancing mode. Not available if the backend's balancingMode is CONNECTION.
  optional float max_rate_per_instance = 17599579;

  // Optional parameter to define a target capacity for the UTILIZATION balancing mode. The valid range is [0.0, 1.0]. For usage guidelines, see Utilization balancing mode.
  optional float max_utilization = 148192199;

}

// Represents a Cloud Storage Bucket resource. This Cloud Storage bucket resource is referenced by a URL map of a load balancer. For more information, read Backend Buckets.
message BackendBucket {
  // Compress text responses using Brotli or gzip compression, based on the client's Accept-Encoding header.
  enum CompressionMode {
    // A value indicating that the enum field is not set.
    UNDEFINED_COMPRESSION_MODE = 0;

    // Automatically uses the best compression based on the Accept-Encoding header sent by the client.
    AUTOMATIC = 165298699;

    // Disables compression. Existing compressed responses cached by Cloud CDN will not be served to clients.
    DISABLED = 516696700;

  }

  // Cloud Storage bucket name.
  optional string bucket_name = 283610048;

  // Cloud CDN configuration for this BackendBucket.
  optional BackendBucketCdnPolicy cdn_policy = 213976452;

  // Compress text responses using Brotli or gzip compression, based on the client's Accept-Encoding header.
  // Check the CompressionMode enum for the list of possible values.
  optional string compression_mode = 95520988;

  // [Output Only] Creation timestamp in RFC3339 text format.
  optional string creation_timestamp = 30525366;

  // Headers that the HTTP/S load balancer should add to proxied responses.
  repeated string custom_response_headers = 387539094;

  // An optional textual description of the resource; provided by the client when the resource is created.
  optional string description = 422937596;

  // [Output Only] The resource URL for the edge security policy associated with this backend bucket.
  optional string edge_security_policy = 41036943;

  // If true, enable Cloud CDN for this BackendBucket.
  optional bool enable_cdn = 282942321;

  // [Output Only] Unique identifier for the resource; defined by the server.
  optional uint64 id = 3355;

  // Type of the resource.
  optional string kind = 3292052;

  // Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
  optional string name = 3373707;

  // [Output Only] Server-defined URL for the resource.
  optional string self_link = 456214797;

}

// Message containing Cloud CDN configuration for a backend bucket.
message BackendBucketCdnPolicy {
  // Specifies the cache setting for all responses from this backend. The possible values are: USE_ORIGIN_HEADERS Requires the origin to set valid caching headers to cache content. Responses without these headers will not be cached at Google's edge, and will require a full trip to the origin on every request, potentially impacting performance and increasing load on the origin server. FORCE_CACHE_ALL Cache all content, ignoring any "private", "no-store" or "no-cache" directives in Cache-Control response headers. Warning: this may result in Cloud CDN caching private, per-user (user identifiable) content. CACHE_ALL_STATIC Automatically cache static content, including common image formats, media (video and audio), and web assets (JavaScript and CSS). Requests and responses that are marked as uncacheable, as well as dynamic content (including HTML), will not be cached.
  enum CacheMode {
    // A value indicating that the enum field is not set.
    UNDEFINED_CACHE_MODE = 0;

    // Automatically cache static content, including common image formats, media (video and audio), and web assets (JavaScript and CSS). Requests and responses that are marked as uncacheable, as well as dynamic content (including HTML), will not be cached.
    CACHE_ALL_STATIC = 355027945;

    // Cache all content, ignoring any "private", "no-store" or "no-cache" directives in Cache-Control response headers. Warning: this may result in Cloud CDN caching private, per-user (user identifiable) content.
    FORCE_CACHE_ALL = 486026928;

    INVALID_CACHE_MODE = 381295560;

    // Requires the origin to set valid caching headers to cache content. Responses without these headers will not be cached at Google's edge, and will require a full trip to the origin on every request, potentially impacting performance and increasing load on the origin server.
    USE_ORIGIN_HEADERS = 55380261;

  }

  // Bypass the cache when the specified request headers are matched - e.g. Pragma or Authorization headers. Up to 5 headers can be specified. The cache is bypassed for all cdnPolicy.cacheMode settings.
  repeated BackendBucketCdnPolicyBypassCacheOnRequestHeader bypass_cache_on_request_headers = 486203082;

  // The CacheKeyPolicy for this CdnPolicy.
  optional BackendBucketCdnPolicyCacheKeyPolicy cache_key_policy = 159263727;

  // Specifies the cache setting for all responses from this backend. The possible values are: USE_ORIGIN_HEADERS Requires the origin to set valid caching headers to cache content. Responses without these headers will not be cached at Google's edge, and will require a full trip to the origin on every request, potentially impacting performance and increasing load on the origin server. FORCE_CACHE_ALL Cache all content, ignoring any "private", "no-store" or "no-cache" directives in Cache-Control response headers. Warning: this may result in Cloud CDN caching private, per-user (user identifiable) content. CACHE_ALL_STATIC Automatically cache static content, including common image formats, media (video and audio), and web assets (JavaScript and CSS). Requests and responses that are marked as uncacheable, as well as dynamic content (including HTML), will not be cached.
  // Check the CacheMode enum for the list of possible values.
  optional string cache_mode = 28877888;

  // Specifies a separate client (e.g. browser client) maximum TTL. This is used to clamp the max-age (or Expires) value sent to the client. With FORCE_CACHE_ALL, the lesser of client_ttl and default_ttl is used for the response max-age directive, along with a "public" directive. For cacheable content in CACHE_ALL_STATIC mode, client_ttl clamps the max-age from the origin (if specified), or else sets the response max-age directive to the lesser of the client_ttl and default_ttl, and also ensures a "public" cache-control directive is present. If a client TTL is not specified, a default value (1 hour) will be used. The maximum allowed value is 31,622,400s (1 year).
  optional int32 client_ttl = 29034360;

  // Specifies the default TTL for cached content served by this origin for responses that do not have an existing valid TTL (max-age or s-max-age). Setting a TTL of "0" means "always revalidate". The value of defaultTTL cannot be set to a value greater than that of maxTTL, but can be equal. When the cacheMode is set to FORCE_CACHE_ALL, the defaultTTL will overwrite the TTL set in all responses. The maximum allowed value is 31,622,400s (1 year), noting that infrequently accessed objects may be evicted from the cache before the defined TTL.
  optional int32 default_ttl = 100253422;

  // Specifies the maximum allowed TTL for cached content served by this origin. Cache directives that attempt to set a max-age or s-maxage higher than this, or an Expires header more than maxTTL seconds in the future will be capped at the value of maxTTL, as if it were the value of an s-maxage Cache-Control directive. Headers sent to the client will not be modified. Setting a TTL of "0" means "always revalidate". The maximum allowed value is 31,622,400s (1 year), noting that infrequently accessed objects may be evicted from the cache before the defined TTL.
  optional int32 max_ttl = 307578001;

  // Negative caching allows per-status code TTLs to be set, in order to apply fine-grained caching for common errors or redirects. This can reduce the load on your origin and improve end-user experience by reducing response latency. When the cache mode is set to CACHE_ALL_STATIC or USE_ORIGIN_HEADERS, negative caching applies to responses with the specified response code that lack any Cache-Control, Expires, or Pragma: no-cache directives. When the cache mode is set to FORCE_CACHE_ALL, negative caching applies to all responses with the specified response code, and override any caching headers. By default, Cloud CDN will apply the following default TTLs to these status codes: HTTP 300 (Multiple Choice), 301, 308 (Permanent Redirects): 10m HTTP 404 (Not Found), 410 (Gone), 451 (Unavailable For Legal Reasons): 120s HTTP 405 (Method Not Found), 421 (Misdirected Request), 501 (Not Implemented): 60s. These defaults can be overridden in negative_caching_policy.
  optional bool negative_caching = 336110005;

  // Sets a cache TTL for the specified HTTP status code. negative_caching must be enabled to configure negative_caching_policy. Omitting the policy and leaving negative_caching enabled will use Cloud CDN's default cache TTLs. Note that when specifying an explicit negative_caching_policy, you should take care to specify a cache TTL for all response codes that you wish to cache. Cloud CDN will not apply any default negative caching when a policy exists.
  repeated BackendBucketCdnPolicyNegativeCachingPolicy negative_caching_policy = 155359996;

  // If true then Cloud CDN will combine multiple concurrent cache fill requests into a small number of requests to the origin.
  optional bool request_coalescing = 532808276;

  // Serve existing content from the cache (if available) when revalidating content with the origin, or when an error is encountered when refreshing the cache. This setting defines the default "max-stale" duration for any cached responses that do not specify a max-stale directive. Stale responses that exceed the TTL configured here will not be served. The default limit (max-stale) is 86400s (1 day), which will allow stale content to be served up to this limit beyond the max-age (or s-max-age) of a cached response. The maximum allowed value is 604800 (1 week). Set this to zero (0) to disable serve-while-stale.
  optional int32 serve_while_stale = 236682203;

  // Maximum number of seconds the response to a signed URL request will be considered fresh. After this time period, the response will be revalidated before being served. Defaults to 1hr (3600s). When serving responses to signed URL requests, Cloud CDN will internally behave as though all responses from this backend had a "Cache-Control: public, max-age=[TTL]" header, regardless of any existing Cache-Control header. The actual headers served in responses will not be altered.
  optional int64 signed_url_cache_max_age_sec = 269374534;

  // [Output Only] Names of the keys for signing request URLs.
  repeated string signed_url_key_names = 371848885;

}

// Bypass the cache when the specified request headers are present, e.g. Pragma or Authorization headers. Values are case insensitive. The presence of such a header overrides the cache_mode setting.
message BackendBucketCdnPolicyBypassCacheOnRequestHeader {
  // The header field name to match on when bypassing cache. Values are case-insensitive.
  optional string header_name = 110223613;

}

// Message containing what to include in the cache key for a request for Cloud CDN.
message BackendBucketCdnPolicyCacheKeyPolicy {
  // Allows HTTP request headers (by name) to be used in the cache key.
  repeated string include_http_headers = 2489606;

  // Names of query string parameters to include in cache keys. Default parameters are always included. '&' and '=' will be percent encoded and not treated as delimiters.
  repeated string query_string_whitelist = 52456496;

}

// Specify CDN TTLs for response error codes.
message BackendBucketCdnPolicyNegativeCachingPolicy {
  // The HTTP status code to define a TTL against. Only HTTP status codes 300, 301, 302, 307, 308, 404, 405, 410, 421, 451 and 501 are can be specified as values, and you cannot specify a status code more than once.
  optional int32 code = 3059181;

  // The TTL (in seconds) for which to cache responses with the corresponding status code. The maximum allowed value is 1800s (30 minutes), noting that infrequently accessed objects may be evicted from the cache before the defined TTL.
  optional int32 ttl = 115180;

}

// Contains a list of BackendBucket resources.
message BackendBucketList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 3355;

  // A list of BackendBucket resources.
  repeated BackendBucket items = 100526016;

  // Type of resource.
  optional string kind = 3292052;

  // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
  optional string next_page_token = 79797525;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 456214797;

  // [Output Only] Informational warning message.
  optional Warning warning = 50704284;

}

// Represents a Backend Service resource. A backend service defines how Google Cloud load balancers distribute traffic. The backend service configuration contains a set of values, such as the protocol used to connect to backends, various distribution and session settings, health checks, and timeouts. These settings provide fine-grained control over how your load balancer behaves. Most of the settings have default values that allow for easy configuration if you need to get started quickly. Backend services in Google Compute Engine can be either regionally or globally scoped. * [Global](https://cloud.google.com/compute/docs/reference/rest/v1/backendServices) * [Regional](https://cloud.google.com/compute/docs/reference/rest/v1/regionBackendServices) For more information, see Backend Services.
message BackendService {
  // Compress text responses using Brotli or gzip compression, based on the client's Accept-Encoding header.
  enum CompressionMode {
    // A value indicating that the enum field is not set.
    UNDEFINED_COMPRESSION_MODE = 0;

    // Automatically uses the best compression based on the Accept-Encoding header sent by the client.
    AUTOMATIC = 165298699;

    // Disables compression. Existing compressed responses cached by Cloud CDN will not be served to clients.
    DISABLED = 516696700;

  }

  // Specifies the load balancer type. A backend service created for one type of load balancer cannot be used with another. For more information, refer to Choosing a load balancer.
  enum LoadBalancingScheme {
    // A value indicating that the enum field is not set.
    UNDEFINED_LOAD_BALANCING_SCHEME = 0;

    // Signifies that this will be used for external HTTP(S), SSL Proxy, TCP Proxy, or Network Load Balancing
    EXTERNAL = 35607499;

    // Signifies that this will be used for External Managed HTTP(S) Load Balancing.
    EXTERNAL_MANAGED = 512006923;

    // Signifies that this will be used for Internal TCP/UDP Load Balancing.
    INTERNAL = 279295677;

    // Signifies that this will be used for Internal HTTP(S) Load Balancing.
    INTERNAL_MANAGED = 37350397;

    // Signifies that this will be used by Traffic Director.
    INTERNAL_SELF_MANAGED = 236211150;

    INVALID_LOAD_BALANCING_SCHEME = 275352060;

  }

  // The load balancing algorithm used within the scope of the locality. The possible values are: - ROUND_ROBIN: This is a simple policy in which each healthy backend is selected in round robin order. This is the default. - LEAST_REQUEST: An O(1) algorithm which selects two random healthy hosts and picks the host which has fewer active requests. - RING_HASH: The ring/modulo hash load balancer implements consistent hashing to backends. The algorithm has the property that the addition/removal of a host from a set of N hosts only affects 1/N of the requests. - RANDOM: The load balancer selects a random healthy host. - ORIGINAL_DESTINATION: Backend host is selected based on the client connection metadata, i.e., connections are opened to the same address as the destination address of the incoming connection before the connection was redirected to the load balancer. - MAGLEV: used as a drop in replacement for the ring hash load balancer. Maglev is not as stable as ring hash but has faster table lookup build times and host selection times. For more information about Maglev, see https://ai.google/research/pubs/pub44824 This field is applicable to either: - A regional backend service with the service_protocol set to HTTP, HTTPS, or HTTP2, and load_balancing_scheme set to INTERNAL_MANAGED. - A global backend service with the load_balancing_scheme set to INTERNAL_SELF_MANAGED. If sessionAffinity is not NONE, and this field is not set to MAGLEV or RING_HASH, session affinity settings will not take effect. Only ROUND_ROBIN and RING_HASH are supported when the backend service is referenced by a URL map that is bound to target gRPC proxy that has validateForProxyless field set to true.
  enum LocalityLbPolicy {
    // A value indicating that the enum field is not set.
    UNDEFINED_LOCALITY_LB_POLICY = 0;

    INVALID_LB_POLICY = 323318707;

    // An O(1) algorithm which selects two random healthy hosts and picks the host which has fewer active requests.
    LEAST_REQUEST = 46604921;

    // This algorithm implements consistent hashing to backends. Maglev can be used as a drop in replacement for the ring hash load balancer. Maglev is not as stable as ring hash but has faster table lookup build times and host selection times. For more information about Maglev, see https://ai.google/research/pubs/pub44824
    MAGLEV = 119180266;

    // Backend host is selected based on the client connection metadata, i.e., connections are opened to the same address as the destination address of the incoming connection before the connection was redirected to the load balancer.
    ORIGINAL_DESTINATION = 166297216;

    // The load balancer selects a random healthy host.
    RANDOM = 262527171;

    // The ring/modulo hash load balancer implements consistent hashing to backends. The algorithm has the property that the addition/removal of a host from a set of N hosts only affects 1/N of the requests.
    RING_HASH = 432795069;

    // This is a simple policy in which each healthy backend is selected in round robin order. This is the default.
    ROUND_ROBIN = 153895801;

    // Per-instance weighted Load Balancing via health check reported weights. If set, the Backend Service must configure a non legacy HTTP-based Health Check, and health check replies are expected to contain non-standard HTTP response header field X-Load-Balancing-Endpoint-Weight to specify the per-instance weights. If set, Load Balancing is weighted based on the per-instance weights reported in the last processed health check replies, as long as every instance either reported a valid weight or had UNAVAILABLE_WEIGHT. Otherwise, Load Balancing remains equal-weight. This option is only supported in Network Load Balancing.
    WEIGHTED_MAGLEV = 254930962;

  }

  // The protocol this BackendService uses to communicate with backends. Possible values are HTTP, HTTPS, HTTP2, TCP, SSL, UDP or GRPC. depending on the chosen load balancer or Traffic Director configuration. Refer to the documentation for the load balancers or for Traffic Director for more information. Must be set to GRPC when the backend service is referenced by a URL map that is bound to target gRPC proxy.
  enum Protocol {
    // A value indicating that the enum field is not set.
    UNDEFINED_PROTOCOL = 0;

    // gRPC (available for Traffic Director).
    GRPC = 2196510;

    HTTP = 2228360;

    // HTTP/2 with SSL.
    HTTP2 = 69079210;

    HTTPS = 69079243;

    // TCP proxying with SSL.
    SSL = 82412;

    // TCP proxying or TCP pass-through.
    TCP = 82881;

    // UDP.
    UDP = 83873;

    // If a Backend Service has UNSPECIFIED as its protocol, it can be used with any L3/L4 Forwarding Rules.
    UNSPECIFIED = 526786327;

  }

  // Type of session affinity to use. The default is NONE. Only NONE and HEADER_FIELD are supported when the backend service is referenced by a URL map that is bound to target gRPC proxy that has validateForProxyless field set to true. For more details, see: [Session Affinity](https://cloud.google.com/load-balancing/docs/backend-service#session_affinity).
  enum SessionAffinity {
    // A value indicating that the enum field is not set.
    UNDEFINED_SESSION_AFFINITY = 0;

    // 2-tuple hash on packet's source and destination IP addresses. Connections from the same source IP address to the same destination IP address will be served by the same backend VM while that VM remains healthy.
    CLIENT_IP = 345665051;

    // 1-tuple hash only on packet's source IP address. Connections from the same source IP address will be served by the same backend VM while that VM remains healthy. This option can only be used for Internal TCP/UDP Load Balancing.
    CLIENT_IP_NO_DESTINATION = 106122516;

    // 5-tuple hash on packet's source and destination IP addresses, IP protocol, and source and destination ports. Connections for the same IP protocol from the same source IP address and port to the same destination IP address and port will be served by the same backend VM while that VM remains healthy. This option cannot be used for HTTP(S) load balancing.
    CLIENT_IP_PORT_PROTO = 221722926;

    // 3-tuple hash on packet's source and destination IP addresses, and IP protocol. Connections for the same IP protocol from the same source IP address to the same destination IP address will be served by the same backend VM while that VM remains healthy. This option cannot be used for HTTP(S) load balancing.
    CLIENT_IP_PROTO = 25322148;

    // Hash based on a cookie generated by the L7 loadbalancer. Only valid for HTTP(S) load balancing.
    GENERATED_COOKIE = 370321204;

    // The hash is based on a user specified header field.
    HEADER_FIELD = 200737960;

    // The hash is based on a user provided cookie.
    HTTP_COOKIE = 494981627;

    // No session affinity. Connections from the same client IP may go to any instance in the pool.
    NONE = 2402104;

  }

  // Lifetime of cookies in seconds. This setting is applicable to external and internal HTTP(S) load balancers and Traffic Director and requires GENERATED_COOKIE or HTTP_COOKIE session affinity. If set to 0, the cookie is non-persistent and lasts only until the end of the browser session (or equivalent). The maximum allowed value is two weeks (1,209,600). Not supported when the backend service is referenced by a URL map that is bound to target gRPC proxy that has validateForProxyless field set to true.
  optional int32 affinity_cookie_ttl_sec = 369996954;

  // The list of backends that serve this BackendService.
  repeated Backend backends = 510839903;

  // Cloud CDN configuration for this BackendService. Only available for specified load balancer types.
  optional BackendServiceCdnPolicy cdn_policy = 213976452;

  optional CircuitBreakers circuit_breakers = 421340061;

  // Compress text responses using Brotli or gzip compression, based on the client's Accept-Encoding header.
  // Check the CompressionMode enum for the list of possible values.
  optional string compression_mode = 95520988;

  optional ConnectionDraining connection_draining = 461096747;

  // Connection Tracking configuration for this BackendService. Connection tracking policy settings are only available for Network Load Balancing and Internal TCP/UDP Load Balancing.
  optional BackendServiceConnectionTrackingPolicy connection_tracking_policy = 143994969;

  // Consistent Hash-based load balancing can be used to provide soft session affinity based on HTTP headers, cookies or other properties. This load balancing policy is applicable only for HTTP connections. The affinity to a particular destination host will be lost when one or more hosts are added/removed from the destination service. This field specifies parameters that control consistent hashing. This field is only applicable when localityLbPolicy is set to MAGLEV or RING_HASH. This field is applicable to either: - A regional backend service with the service_protocol set to HTTP, HTTPS, or HTTP2, and load_balancing_scheme set to INTERNAL_MANAGED. - A global backend service with the load_balancing_scheme set to INTERNAL_SELF_MANAGED. 
  optional ConsistentHashLoadBalancerSettings consistent_hash = 905883;

  // [Output Only] Creation timestamp in RFC3339 text format.
  optional string creation_timestamp = 30525366;

  // Headers that the load balancer adds to proxied requests. See [Creating custom headers](https://cloud.google.com/load-balancing/docs/custom-headers).
  repeated string custom_request_headers = 27977992;

  // Headers that the load balancer adds to proxied responses. See [Creating custom headers](https://cloud.google.com/load-balancing/docs/custom-headers).
  repeated string custom_response_headers = 387539094;

  // An optional description of this resource. Provide this property when you create the resource.
  optional string description = 422937596;

  // [Output Only] The resource URL for the edge security policy associated with this backend service.
  optional string edge_security_policy = 41036943;

  // If true, enables Cloud CDN for the backend service of an external HTTP(S) load balancer.
  optional bool enable_c_d_n = 250733499;

  // Requires at least one backend instance group to be defined as a backup (failover) backend. For load balancers that have configurable failover: [Internal TCP/UDP Load Balancing](https://cloud.google.com/load-balancing/docs/internal/failover-overview) and [external TCP/UDP Load Balancing](https://cloud.google.com/load-balancing/docs/network/networklb-failover-overview).
  optional BackendServiceFailoverPolicy failover_policy = 105658655;

  // Fingerprint of this resource. A hash of the contents stored in this object. This field is used in optimistic locking. This field will be ignored when inserting a BackendService. An up-to-date fingerprint must be provided in order to update the BackendService, otherwise the request will fail with error 412 conditionNotMet. To see the latest fingerprint, make a get() request to retrieve a BackendService.
  optional string fingerprint = 234678500;

  // The list of URLs to the healthChecks, httpHealthChecks (legacy), or httpsHealthChecks (legacy) resource for health checking this backend service. Not all backend services support legacy health checks. See Load balancer guide. Currently, at most one health check can be specified for each backend service. Backend services with instance group or zonal NEG backends must have a health check. Backend services with internet or serverless NEG backends must not have a health check.
  repeated string health_checks = 448370606;

  // The configurations for Identity-Aware Proxy on this resource. Not available for Internal TCP/UDP Load Balancing and Network Load Balancing.
  optional BackendServiceIAP iap = 104024;

  // [Output Only] The unique identifier for the resource. This identifier is defined by the server.
  optional uint64 id = 3355;

  // [Output Only] Type of resource. Always compute#backendService for backend services.
  optional string kind = 3292052;

  // Specifies the load balancer type. A backend service created for one type of load balancer cannot be used with another. For more information, refer to Choosing a load balancer.
  // Check the LoadBalancingScheme enum for the list of possible values.
  optional string load_balancing_scheme = 363890244;

  // A list of locality load-balancing policies to be used in order of preference. When you use localityLbPolicies, you must set at least one value for either the localityLbPolicies[].policy or the localityLbPolicies[].customPolicy field. localityLbPolicies overrides any value set in the localityLbPolicy field. For an example of how to use this field, see Define a list of preferred policies. Caution: This field and its children are intended for use in a service mesh that includes gRPC clients only. Envoy proxies can't use backend services that have this configuration.
  repeated BackendServiceLocalityLoadBalancingPolicyConfig locality_lb_policies = 140982557;

  // The load balancing algorithm used within the scope of the locality. The possible values are: - ROUND_ROBIN: This is a simple policy in which each healthy backend is selected in round robin order. This is the default. - LEAST_REQUEST: An O(1) algorithm which selects two random healthy hosts and picks the host which has fewer active requests. - RING_HASH: The ring/modulo hash load balancer implements consistent hashing to backends. The algorithm has the property that the addition/removal of a host from a set of N hosts only affects 1/N of the requests. - RANDOM: The load balancer selects a random healthy host. - ORIGINAL_DESTINATION: Backend host is selected based on the client connection metadata, i.e., connections are opened to the same address as the destination address of the incoming connection before the connection was redirected to the load balancer. - MAGLEV: used as a drop in replacement for the ring hash load balancer. Maglev is not as stable as ring hash but has faster table lookup build times and host selection times. For more information about Maglev, see https://ai.google/research/pubs/pub44824 This field is applicable to either: - A regional backend service with the service_protocol set to HTTP, HTTPS, or HTTP2, and load_balancing_scheme set to INTERNAL_MANAGED. - A global backend service with the load_balancing_scheme set to INTERNAL_SELF_MANAGED. If sessionAffinity is not NONE, and this field is not set to MAGLEV or RING_HASH, session affinity settings will not take effect. Only ROUND_ROBIN and RING_HASH are supported when the backend service is referenced by a URL map that is bound to target gRPC proxy that has validateForProxyless field set to true.
  // Check the LocalityLbPolicy enum for the list of possible values.
  optional string locality_lb_policy = 131431487;

  // This field denotes the logging options for the load balancer traffic served by this backend service. If logging is enabled, logs will be exported to Stackdriver.
  optional BackendServiceLogConfig log_config = 351299741;

  // Specifies the default maximum duration (timeout) for streams to this service. Duration is computed from the beginning of the stream until the response has been completely processed, including all retries. A stream that does not complete in this duration is closed. If not specified, there will be no timeout limit, i.e. the maximum duration is infinite. This value can be overridden in the PathMatcher configuration of the UrlMap that references this backend service. This field is only allowed when the loadBalancingScheme of the backend service is INTERNAL_SELF_MANAGED.
  optional Duration max_stream_duration = 61428376;

  // Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
  optional string name = 3373707;

  // The URL of the network to which this backend service belongs. This field can only be specified when the load balancing scheme is set to INTERNAL.
  optional string network = 232872494;

  // Settings controlling the eviction of unhealthy hosts from the load balancing pool for the backend service. If not set, this feature is considered disabled. This field is applicable to either: - A regional backend service with the service_protocol set to HTTP, HTTPS, HTTP2, or GRPC, and load_balancing_scheme set to INTERNAL_MANAGED. - A global backend service with the load_balancing_scheme set to INTERNAL_SELF_MANAGED. 
  optional OutlierDetection outlier_detection = 354625086;

  // Deprecated in favor of portName. The TCP port to connect on the backend. The default value is 80. For Internal TCP/UDP Load Balancing and Network Load Balancing, omit port.
  optional int32 port = 3446913;

  // A named port on a backend instance group representing the port for communication to the backend VMs in that group. The named port must be [defined on each backend instance group](https://cloud.google.com/load-balancing/docs/backend-service#named_ports). This parameter has no meaning if the backends are NEGs. For Internal TCP/UDP Load Balancing and Network Load Balancing, omit port_name.
  optional string port_name = 41534345;

  // The protocol this BackendService uses to communicate with backends. Possible values are HTTP, HTTPS, HTTP2, TCP, SSL, UDP or GRPC. depending on the chosen load balancer or Traffic Director configuration. Refer to the documentation for the load balancers or for Traffic Director for more information. Must be set to GRPC when the backend service is referenced by a URL map that is bound to target gRPC proxy.
  // Check the Protocol enum for the list of possible values.
  optional string protocol = 84577944;

  // [Output Only] URL of the region where the regional backend service resides. This field is not applicable to global backend services. You must specify this field as part of the HTTP request URL. It is not settable as a field in the request body.
  optional string region = 138946292;

  // [Output Only] The resource URL for the security policy associated with this backend service.
  optional string security_policy = 171082513;

  // This field specifies the security settings that apply to this backend service. This field is applicable to a global backend service with the load_balancing_scheme set to INTERNAL_SELF_MANAGED.
  optional SecuritySettings security_settings = 478649922;

  // [Output Only] Server-defined URL for the resource.
  optional string self_link = 456214797;

  // URLs of networkservices.ServiceBinding resources. Can only be set if load balancing scheme is INTERNAL_SELF_MANAGED. If set, lists of backends and health checks must be both empty.
  repeated string service_bindings = 133581016;

  // Type of session affinity to use. The default is NONE. Only NONE and HEADER_FIELD are supported when the backend service is referenced by a URL map that is bound to target gRPC proxy that has validateForProxyless field set to true. For more details, see: [Session Affinity](https://cloud.google.com/load-balancing/docs/backend-service#session_affinity).
  // Check the SessionAffinity enum for the list of possible values.
  optional string session_affinity = 463888561;

  optional Subsetting subsetting = 450283536;

  // The backend service timeout has a different meaning depending on the type of load balancer. For more information see, Backend service settings. The default is 30 seconds. The full range of timeout values allowed goes from 1 through 2,147,483,647 seconds. This value can be overridden in the PathMatcher configuration of the UrlMap that references this backend service. Not supported when the backend service is referenced by a URL map that is bound to target gRPC proxy that has validateForProxyless field set to true. Instead, use maxStreamDuration.
  optional int32 timeout_sec = 79994995;

}

// Contains a list of BackendServicesScopedList.
message BackendServiceAggregatedList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 3355;

  // A list of BackendServicesScopedList resources.
  map<string, BackendServicesScopedList> items = 100526016;

  // Type of resource.
  optional string kind = 3292052;

  // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
  optional string next_page_token = 79797525;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 456214797;

  // [Output Only] Unreachable resources.
  repeated string unreachables = 243372063;

  // [Output Only] Informational warning message.
  optional Warning warning = 50704284;

}

// Message containing Cloud CDN configuration for a backend service.
message BackendServiceCdnPolicy {
  // Specifies the cache setting for all responses from this backend. The possible values are: USE_ORIGIN_HEADERS Requires the origin to set valid caching headers to cache content. Responses without these headers will not be cached at Google's edge, and will require a full trip to the origin on every request, potentially impacting performance and increasing load on the origin server. FORCE_CACHE_ALL Cache all content, ignoring any "private", "no-store" or "no-cache" directives in Cache-Control response headers. Warning: this may result in Cloud CDN caching private, per-user (user identifiable) content. CACHE_ALL_STATIC Automatically cache static content, including common image formats, media (video and audio), and web assets (JavaScript and CSS). Requests and responses that are marked as uncacheable, as well as dynamic content (including HTML), will not be cached.
  enum CacheMode {
    // A value indicating that the enum field is not set.
    UNDEFINED_CACHE_MODE = 0;

    // Automatically cache static content, including common image formats, media (video and audio), and web assets (JavaScript and CSS). Requests and responses that are marked as uncacheable, as well as dynamic content (including HTML), will not be cached.
    CACHE_ALL_STATIC = 355027945;

    // Cache all content, ignoring any "private", "no-store" or "no-cache" directives in Cache-Control response headers. Warning: this may result in Cloud CDN caching private, per-user (user identifiable) content.
    FORCE_CACHE_ALL = 486026928;

    INVALID_CACHE_MODE = 381295560;

    // Requires the origin to set valid caching headers to cache content. Responses without these headers will not be cached at Google's edge, and will require a full trip to the origin on every request, potentially impacting performance and increasing load on the origin server.
    USE_ORIGIN_HEADERS = 55380261;

  }

  // Bypass the cache when the specified request headers are matched - e.g. Pragma or Authorization headers. Up to 5 headers can be specified. The cache is bypassed for all cdnPolicy.cacheMode settings.
  repeated BackendServiceCdnPolicyBypassCacheOnRequestHeader bypass_cache_on_request_headers = 486203082;

  // The CacheKeyPolicy for this CdnPolicy.
  optional CacheKeyPolicy cache_key_policy = 159263727;

  // Specifies the cache setting for all responses from this backend. The possible values are: USE_ORIGIN_HEADERS Requires the origin to set valid caching headers to cache content. Responses without these headers will not be cached at Google's edge, and will require a full trip to the origin on every request, potentially impacting performance and increasing load on the origin server. FORCE_CACHE_ALL Cache all content, ignoring any "private", "no-store" or "no-cache" directives in Cache-Control response headers. Warning: this may result in Cloud CDN caching private, per-user (user identifiable) content. CACHE_ALL_STATIC Automatically cache static content, including common image formats, media (video and audio), and web assets (JavaScript and CSS). Requests and responses that are marked as uncacheable, as well as dynamic content (including HTML), will not be cached.
  // Check the CacheMode enum for the list of possible values.
  optional string cache_mode = 28877888;

  // Specifies a separate client (e.g. browser client) maximum TTL. This is used to clamp the max-age (or Expires) value sent to the client. With FORCE_CACHE_ALL, the lesser of client_ttl and default_ttl is used for the response max-age directive, along with a "public" directive. For cacheable content in CACHE_ALL_STATIC mode, client_ttl clamps the max-age from the origin (if specified), or else sets the response max-age directive to the lesser of the client_ttl and default_ttl, and also ensures a "public" cache-control directive is present. If a client TTL is not specified, a default value (1 hour) will be used. The maximum allowed value is 31,622,400s (1 year).
  optional int32 client_ttl = 29034360;

  // Specifies the default TTL for cached content served by this origin for responses that do not have an existing valid TTL (max-age or s-max-age). Setting a TTL of "0" means "always revalidate". The value of defaultTTL cannot be set to a value greater than that of maxTTL, but can be equal. When the cacheMode is set to FORCE_CACHE_ALL, the defaultTTL will overwrite the TTL set in all responses. The maximum allowed value is 31,622,400s (1 year), noting that infrequently accessed objects may be evicted from the cache before the defined TTL.
  optional int32 default_ttl = 100253422;

  // Specifies the maximum allowed TTL for cached content served by this origin. Cache directives that attempt to set a max-age or s-maxage higher than this, or an Expires header more than maxTTL seconds in the future will be capped at the value of maxTTL, as if it were the value of an s-maxage Cache-Control directive. Headers sent to the client will not be modified. Setting a TTL of "0" means "always revalidate". The maximum allowed value is 31,622,400s (1 year), noting that infrequently accessed objects may be evicted from the cache before the defined TTL.
  optional int32 max_ttl = 307578001;

  // Negative caching allows per-status code TTLs to be set, in order to apply fine-grained caching for common errors or redirects. This can reduce the load on your origin and improve end-user experience by reducing response latency. When the cache mode is set to CACHE_ALL_STATIC or USE_ORIGIN_HEADERS, negative caching applies to responses with the specified response code that lack any Cache-Control, Expires, or Pragma: no-cache directives. When the cache mode is set to FORCE_CACHE_ALL, negative caching applies to all responses with the specified response code, and override any caching headers. By default, Cloud CDN will apply the following default TTLs to these status codes: HTTP 300 (Multiple Choice), 301, 308 (Permanent Redirects): 10m HTTP 404 (Not Found), 410 (Gone), 451 (Unavailable For Legal Reasons): 120s HTTP 405 (Method Not Found), 421 (Misdirected Request), 501 (Not Implemented): 60s. These defaults can be overridden in negative_caching_policy.
  optional bool negative_caching = 336110005;

  // Sets a cache TTL for the specified HTTP status code. negative_caching must be enabled to configure negative_caching_policy. Omitting the policy and leaving negative_caching enabled will use Cloud CDN's default cache TTLs. Note that when specifying an explicit negative_caching_policy, you should take care to specify a cache TTL for all response codes that you wish to cache. Cloud CDN will not apply any default negative caching when a policy exists.
  repeated BackendServiceCdnPolicyNegativeCachingPolicy negative_caching_policy = 155359996;

  // If true then Cloud CDN will combine multiple concurrent cache fill requests into a small number of requests to the origin.
  optional bool request_coalescing = 532808276;

  // Serve existing content from the cache (if available) when revalidating content with the origin, or when an error is encountered when refreshing the cache. This setting defines the default "max-stale" duration for any cached responses that do not specify a max-stale directive. Stale responses that exceed the TTL configured here will not be served. The default limit (max-stale) is 86400s (1 day), which will allow stale content to be served up to this limit beyond the max-age (or s-max-age) of a cached response. The maximum allowed value is 604800 (1 week). Set this to zero (0) to disable serve-while-stale.
  optional int32 serve_while_stale = 236682203;

  // Maximum number of seconds the response to a signed URL request will be considered fresh. After this time period, the response will be revalidated before being served. Defaults to 1hr (3600s). When serving responses to signed URL requests, Cloud CDN will internally behave as though all responses from this backend had a "Cache-Control: public, max-age=[TTL]" header, regardless of any existing Cache-Control header. The actual headers served in responses will not be altered.
  optional int64 signed_url_cache_max_age_sec = 269374534;

  // [Output Only] Names of the keys for signing request URLs.
  repeated string signed_url_key_names = 371848885;

}

// Bypass the cache when the specified request headers are present, e.g. Pragma or Authorization headers. Values are case insensitive. The presence of such a header overrides the cache_mode setting.
message BackendServiceCdnPolicyBypassCacheOnRequestHeader {
  // The header field name to match on when bypassing cache. Values are case-insensitive.
  optional string header_name = 110223613;

}

// Specify CDN TTLs for response error codes.
message BackendServiceCdnPolicyNegativeCachingPolicy {
  // The HTTP status code to define a TTL against. Only HTTP status codes 300, 301, 302, 307, 308, 404, 405, 410, 421, 451 and 501 are can be specified as values, and you cannot specify a status code more than once.
  optional int32 code = 3059181;

  // The TTL (in seconds) for which to cache responses with the corresponding status code. The maximum allowed value is 1800s (30 minutes), noting that infrequently accessed objects may be evicted from the cache before the defined TTL.
  optional int32 ttl = 115180;

}

// Connection Tracking configuration for this BackendService.
message BackendServiceConnectionTrackingPolicy {
  // Specifies connection persistence when backends are unhealthy. The default value is DEFAULT_FOR_PROTOCOL. If set to DEFAULT_FOR_PROTOCOL, the existing connections persist on unhealthy backends only for connection-oriented protocols (TCP and SCTP) and only if the Tracking Mode is PER_CONNECTION (default tracking mode) or the Session Affinity is configured for 5-tuple. They do not persist for UDP. If set to NEVER_PERSIST, after a backend becomes unhealthy, the existing connections on the unhealthy backend are never persisted on the unhealthy backend. They are always diverted to newly selected healthy backends (unless all backends are unhealthy). If set to ALWAYS_PERSIST, existing connections always persist on unhealthy backends regardless of protocol and session affinity. It is generally not recommended to use this mode overriding the default. For more details, see [Connection Persistence for Network Load Balancing](https://cloud.google.com/load-balancing/docs/network/networklb-backend-service#connection-persistence) and [Connection Persistence for Internal TCP/UDP Load Balancing](https://cloud.google.com/load-balancing/docs/internal#connection-persistence).
  enum ConnectionPersistenceOnUnhealthyBackends {
    // A value indicating that the enum field is not set.
    UNDEFINED_CONNECTION_PERSISTENCE_ON_UNHEALTHY_BACKENDS = 0;

    ALWAYS_PERSIST = 38400900;

    DEFAULT_FOR_PROTOCOL = 145265356;

    NEVER_PERSIST = 138646241;

  }

  // Specifies the key used for connection tracking. There are two options: - PER_CONNECTION: This is the default mode. The Connection Tracking is performed as per the Connection Key (default Hash Method) for the specific protocol. - PER_SESSION: The Connection Tracking is performed as per the configured Session Affinity. It matches the configured Session Affinity. For more details, see [Tracking Mode for Network Load Balancing](https://cloud.google.com/load-balancing/docs/network/networklb-backend-service#tracking-mode) and [Tracking Mode for Internal TCP/UDP Load Balancing](https://cloud.google.com/load-balancing/docs/internal#tracking-mode).
  enum TrackingMode {
    // A value indicating that the enum field is not set.
    UNDEFINED_TRACKING_MODE = 0;

    INVALID_TRACKING_MODE = 49234371;

    PER_CONNECTION = 85162848;

    PER_SESSION = 182099252;

  }

  // Specifies connection persistence when backends are unhealthy. The default value is DEFAULT_FOR_PROTOCOL. If set to DEFAULT_FOR_PROTOCOL, the existing connections persist on unhealthy backends only for connection-oriented protocols (TCP and SCTP) and only if the Tracking Mode is PER_CONNECTION (default tracking mode) or the Session Affinity is configured for 5-tuple. They do not persist for UDP. If set to NEVER_PERSIST, after a backend becomes unhealthy, the existing connections on the unhealthy backend are never persisted on the unhealthy backend. They are always diverted to newly selected healthy backends (unless all backends are unhealthy). If set to ALWAYS_PERSIST, existing connections always persist on unhealthy backends regardless of protocol and session affinity. It is generally not recommended to use this mode overriding the default. For more details, see [Connection Persistence for Network Load Balancing](https://cloud.google.com/load-balancing/docs/network/networklb-backend-service#connection-persistence) and [Connection Persistence for Internal TCP/UDP Load Balancing](https://cloud.google.com/load-balancing/docs/internal#connection-persistence).
  // Check the ConnectionPersistenceOnUnhealthyBackends enum for the list of possible values.
  optional string connection_persistence_on_unhealthy_backends = 152439033;

  // Enable Strong Session Affinity for Network Load Balancing. This option is not available publicly.
  optional bool enable_strong_affinity = 24539924;

  // Specifies how long to keep a Connection Tracking entry while there is no matching traffic (in seconds). For Internal TCP/UDP Load Balancing: - The minimum (default) is 10 minutes and the maximum is 16 hours. - It can be set only if Connection Tracking is less than 5-tuple (i.e. Session Affinity is CLIENT_IP_NO_DESTINATION, CLIENT_IP or CLIENT_IP_PROTO, and Tracking Mode is PER_SESSION). For Network Load Balancer the default is 60 seconds. This option is not available publicly.
  optional int32 idle_timeout_sec = 24977544;

  // Specifies the key used for connection tracking. There are two options: - PER_CONNECTION: This is the default mode. The Connection Tracking is performed as per the Connection Key (default Hash Method) for the specific protocol. - PER_SESSION: The Connection Tracking is performed as per the configured Session Affinity. It matches the configured Session Affinity. For more details, see [Tracking Mode for Network Load Balancing](https://cloud.google.com/load-balancing/docs/network/networklb-backend-service#tracking-mode) and [Tracking Mode for Internal TCP/UDP Load Balancing](https://cloud.google.com/load-balancing/docs/internal#tracking-mode).
  // Check the TrackingMode enum for the list of possible values.
  optional string tracking_mode = 127757867;

}

// For load balancers that have configurable failover: [Internal TCP/UDP Load Balancing](https://cloud.google.com/load-balancing/docs/internal/failover-overview) and [external TCP/UDP Load Balancing](https://cloud.google.com/load-balancing/docs/network/networklb-failover-overview). On failover or failback, this field indicates whether connection draining will be honored. Google Cloud has a fixed connection draining timeout of 10 minutes. A setting of true terminates existing TCP connections to the active pool during failover and failback, immediately draining traffic. A setting of false allows existing TCP connections to persist, even on VMs no longer in the active pool, for up to the duration of the connection draining timeout (10 minutes).
message BackendServiceFailoverPolicy {
  // This can be set to true only if the protocol is TCP. The default is false.
  optional bool disable_connection_drain_on_failover = 182150753;

  // If set to true, connections to the load balancer are dropped when all primary and all backup backend VMs are unhealthy.If set to false, connections are distributed among all primary VMs when all primary and all backup backend VMs are unhealthy. For load balancers that have configurable failover: [Internal TCP/UDP Load Balancing](https://cloud.google.com/load-balancing/docs/internal/failover-overview) and [external TCP/UDP Load Balancing](https://cloud.google.com/load-balancing/docs/network/networklb-failover-overview). The default is false.
  optional bool drop_traffic_if_unhealthy = 112289428;

  // The value of the field must be in the range [0, 1]. If the value is 0, the load balancer performs a failover when the number of healthy primary VMs equals zero. For all other values, the load balancer performs a failover when the total number of healthy primary VMs is less than this ratio. For load balancers that have configurable failover: [Internal TCP/UDP Load Balancing](https://cloud.google.com/load-balancing/docs/internal/failover-overview) and [external TCP/UDP Load Balancing](https://cloud.google.com/load-balancing/docs/network/networklb-failover-overview).
  optional float failover_ratio = 212667006;

}

//
message BackendServiceGroupHealth {
  // Metadata defined as annotations on the network endpoint group.
  map<string, string> annotations = 112032548;

  // Health state of the backend instances or endpoints in requested instance or network endpoint group, determined based on configured health checks.
  repeated HealthStatus health_status = 380545845;

  // [Output Only] Type of resource. Always compute#backendServiceGroupHealth for the health of backend services.
  optional string kind = 3292052;

}

// Identity-Aware Proxy
message BackendServiceIAP {
  // Whether the serving infrastructure will authenticate and authorize all incoming requests. If true, the oauth2ClientId and oauth2ClientSecret fields must be non-empty.
  optional bool enabled = 1018689;

  // OAuth2 client ID to use for the authentication flow.
  optional string oauth2_client_id = 314017611;

  // OAuth2 client secret to use for the authentication flow. For security reasons, this value cannot be retrieved via the API. Instead, the SHA-256 hash of the value is returned in the oauth2ClientSecretSha256 field. @InputOnly
  optional string oauth2_client_secret = 50999520;

  // [Output Only] SHA256 hash value for the field oauth2_client_secret above.
  optional string oauth2_client_secret_sha256 = 112903782;

}

// Contains a list of BackendService resources.
message BackendServiceList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 3355;

  // A list of BackendService resources.
  repeated BackendService items = 100526016;

  // [Output Only] Type of resource. Always compute#backendServiceList for lists of backend services.
  optional string kind = 3292052;

  // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
  optional string next_page_token = 79797525;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 456214797;

  // [Output Only] Informational warning message.
  optional Warning warning = 50704284;

}

// Container for either a built-in LB policy supported by gRPC or Envoy or a custom one implemented by the end user.
message BackendServiceLocalityLoadBalancingPolicyConfig {
  optional BackendServiceLocalityLoadBalancingPolicyConfigCustomPolicy custom_policy = 4818368;

  optional BackendServiceLocalityLoadBalancingPolicyConfigPolicy policy = 91071794;

}

// The configuration for a custom policy implemented by the user and deployed with the client.
message BackendServiceLocalityLoadBalancingPolicyConfigCustomPolicy {
  // An optional, arbitrary JSON object with configuration data, understood by a locally installed custom policy implementation.
  optional string data = 3076010;

  // Identifies the custom policy. The value should match the name of a custom implementation registered on the gRPC clients. It should follow protocol buffer message naming conventions and include the full path (for example, myorg.CustomLbPolicy). The maximum length is 256 characters. Do not specify the same custom policy more than once for a backend. If you do, the configuration is rejected. For an example of how to use this field, see Use a custom policy.
  optional string name = 3373707;

}

// The configuration for a built-in load balancing policy.
message BackendServiceLocalityLoadBalancingPolicyConfigPolicy {
  // The name of a locality load-balancing policy. Valid values include ROUND_ROBIN and, for Java clients, LEAST_REQUEST. For information about these values, see the description of localityLbPolicy. Do not specify the same policy more than once for a backend. If you do, the configuration is rejected.
  enum Name {
    // A value indicating that the enum field is not set.
    UNDEFINED_NAME = 0;

    INVALID_LB_POLICY = 323318707;

    // An O(1) algorithm which selects two random healthy hosts and picks the host which has fewer active requests.
    LEAST_REQUEST = 46604921;

    // This algorithm implements consistent hashing to backends. Maglev can be used as a drop in replacement for the ring hash load balancer. Maglev is not as stable as ring hash but has faster table lookup build times and host selection times. For more information about Maglev, see https://ai.google/research/pubs/pub44824
    MAGLEV = 119180266;

    // Backend host is selected based on the client connection metadata, i.e., connections are opened to the same address as the destination address of the incoming connection before the connection was redirected to the load balancer.
    ORIGINAL_DESTINATION = 166297216;

    // The load balancer selects a random healthy host.
    RANDOM = 262527171;

    // The ring/modulo hash load balancer implements consistent hashing to backends. The algorithm has the property that the addition/removal of a host from a set of N hosts only affects 1/N of the requests.
    RING_HASH = 432795069;

    // This is a simple policy in which each healthy backend is selected in round robin order. This is the default.
    ROUND_ROBIN = 153895801;

    // Per-instance weighted Load Balancing via health check reported weights. If set, the Backend Service must configure a non legacy HTTP-based Health Check, and health check replies are expected to contain non-standard HTTP response header field X-Load-Balancing-Endpoint-Weight to specify the per-instance weights. If set, Load Balancing is weighted based on the per-instance weights reported in the last processed health check replies, as long as every instance either reported a valid weight or had UNAVAILABLE_WEIGHT. Otherwise, Load Balancing remains equal-weight. This option is only supported in Network Load Balancing.
    WEIGHTED_MAGLEV = 254930962;

  }

  // The name of a locality load-balancing policy. Valid values include ROUND_ROBIN and, for Java clients, LEAST_REQUEST. For information about these values, see the description of localityLbPolicy. Do not specify the same policy more than once for a backend. If you do, the configuration is rejected.
  // Check the Name enum for the list of possible values.
  optional string name = 3373707;

}

// The available logging options for the load balancer traffic served by this backend service.
message BackendServiceLogConfig {
  // This field can only be specified if logging is enabled for this backend service. Configures whether all, none or a subset of optional fields should be added to the reported logs. One of [INCLUDE_ALL_OPTIONAL, EXCLUDE_ALL_OPTIONAL, CUSTOM]. Default is EXCLUDE_ALL_OPTIONAL.
  enum OptionalMode {
    // A value indicating that the enum field is not set.
    UNDEFINED_OPTIONAL_MODE = 0;

    // A subset of optional fields.
    CUSTOM = 388595569;

    // None optional fields.
    EXCLUDE_ALL_OPTIONAL = 168636099;

    // All optional fields.
    INCLUDE_ALL_OPTIONAL = 535606965;

  }

  // Denotes whether to enable logging for the load balancer traffic served by this backend service. The default value is false.
  optional bool enable = 311764355;

  // This field can only be specified if logging is enabled for this backend service and "logConfig.optionalMode" was set to CUSTOM. Contains a list of optional fields you want to include in the logs. For example: serverInstance, serverGkeDetails.cluster, serverGkeDetails.pod.podNamespace
  repeated string optional_fields = 528589944;

  // This field can only be specified if logging is enabled for this backend service. Configures whether all, none or a subset of optional fields should be added to the reported logs. One of [INCLUDE_ALL_OPTIONAL, EXCLUDE_ALL_OPTIONAL, CUSTOM]. Default is EXCLUDE_ALL_OPTIONAL.
  // Check the OptionalMode enum for the list of possible values.
  optional string optional_mode = 128697122;

  // This field can only be specified if logging is enabled for this backend service. The value of the field must be in [0, 1]. This configures the sampling rate of requests to the load balancer where 1.0 means all logged requests are reported and 0.0 means no logged requests are reported. The default value is 1.0.
  optional float sample_rate = 153193045;

}

//
message BackendServiceReference {
  optional string backend_service = 306946058;

}

//
message BackendServicesScopedList {
  // A list of BackendServices contained in this scope.
  repeated BackendService backend_services = 388522409;

  // Informational warning which replaces the list of backend services when the list is empty.
  optional Warning warning = 50704284;

}

//
message BfdPacket {
  // The diagnostic code specifies the local system's reason for the last change in session state. This allows remote systems to determine the reason that the previous session failed, for example. These diagnostic codes are specified in section 4.1 of RFC5880
  enum Diagnostic {
    // A value indicating that the enum field is not set.
    UNDEFINED_DIAGNOSTIC = 0;

    ADMINISTRATIVELY_DOWN = 121685798;

    CONCATENATED_PATH_DOWN = 26186892;

    CONTROL_DETECTION_TIME_EXPIRED = 135478383;

    DIAGNOSTIC_UNSPECIFIED = 58720895;

    ECHO_FUNCTION_FAILED = 220687466;

    FORWARDING_PLANE_RESET = 19715882;

    NEIGHBOR_SIGNALED_SESSION_DOWN = 374226742;

    NO_DIAGNOSTIC = 222503141;

    PATH_DOWN = 290605180;

    REVERSE_CONCATENATED_PATH_DOWN = 479337129;

  }

  // The current BFD session state as seen by the transmitting system. These states are specified in section 4.1 of RFC5880
  enum State {
    // A value indicating that the enum field is not set.
    UNDEFINED_STATE = 0;

    ADMIN_DOWN = 128544690;

    DOWN = 2104482;

    INIT = 2252048;

    STATE_UNSPECIFIED = 470755401;

    UP = 2715;

  }

  // The Authentication Present bit of the BFD packet. This is specified in section 4.1 of RFC5880
  optional bool authentication_present = 105974260;

  // The Control Plane Independent bit of the BFD packet. This is specified in section 4.1 of RFC5880
  optional bool control_plane_independent = 62363573;

  // The demand bit of the BFD packet. This is specified in section 4.1 of RFC5880
  optional bool demand = 275180107;

  // The diagnostic code specifies the local system's reason for the last change in session state. This allows remote systems to determine the reason that the previous session failed, for example. These diagnostic codes are specified in section 4.1 of RFC5880
  // Check the Diagnostic enum for the list of possible values.
  optional string diagnostic = 62708647;

  // The Final bit of the BFD packet. This is specified in section 4.1 of RFC5880
  optional bool final = 97436022;

  // The length of the BFD Control packet in bytes. This is specified in section 4.1 of RFC5880
  optional uint32 length = 504249062;

  // The Required Min Echo RX Interval value in the BFD packet. This is specified in section 4.1 of RFC5880
  optional uint32 min_echo_rx_interval_ms = 97286868;

  // The Required Min RX Interval value in the BFD packet. This is specified in section 4.1 of RFC5880
  optional uint32 min_rx_interval_ms = 463399028;

  // The Desired Min TX Interval value in the BFD packet. This is specified in section 4.1 of RFC5880
  optional uint32 min_tx_interval_ms = 526023602;

  // The detection time multiplier of the BFD packet. This is specified in section 4.1 of RFC5880
  optional uint32 multiplier = 191331777;

  // The multipoint bit of the BFD packet. This is specified in section 4.1 of RFC5880
  optional bool multipoint = 191421431;

  // The My Discriminator value in the BFD packet. This is specified in section 4.1 of RFC5880
  optional uint32 my_discriminator = 76663113;

  // The Poll bit of the BFD packet. This is specified in section 4.1 of RFC5880
  optional bool poll = 3446719;

  // The current BFD session state as seen by the transmitting system. These states are specified in section 4.1 of RFC5880
  // Check the State enum for the list of possible values.
  optional string state = 109757585;

  // The version number of the BFD protocol, as specified in section 4.1 of RFC5880.
  optional uint32 version = 351608024;

  // The Your Discriminator value in the BFD packet. This is specified in section 4.1 of RFC5880
  optional uint32 your_discriminator = 515634064;

}

// Next free: 15
message BfdStatus {
  // The BFD session initialization mode for this BGP peer. If set to ACTIVE, the Cloud Router will initiate the BFD session for this BGP peer. If set to PASSIVE, the Cloud Router will wait for the peer router to initiate the BFD session for this BGP peer. If set to DISABLED, BFD is disabled for this BGP peer.
  enum BfdSessionInitializationMode {
    // A value indicating that the enum field is not set.
    UNDEFINED_BFD_SESSION_INITIALIZATION_MODE = 0;

    ACTIVE = 314733318;

    DISABLED = 516696700;

    PASSIVE = 462813959;

  }

  // The diagnostic code specifies the local system's reason for the last change in session state. This allows remote systems to determine the reason that the previous session failed, for example. These diagnostic codes are specified in section 4.1 of RFC5880
  enum LocalDiagnostic {
    // A value indicating that the enum field is not set.
    UNDEFINED_LOCAL_DIAGNOSTIC = 0;

    ADMINISTRATIVELY_DOWN = 121685798;

    CONCATENATED_PATH_DOWN = 26186892;

    CONTROL_DETECTION_TIME_EXPIRED = 135478383;

    DIAGNOSTIC_UNSPECIFIED = 58720895;

    ECHO_FUNCTION_FAILED = 220687466;

    FORWARDING_PLANE_RESET = 19715882;

    NEIGHBOR_SIGNALED_SESSION_DOWN = 374226742;

    NO_DIAGNOSTIC = 222503141;

    PATH_DOWN = 290605180;

    REVERSE_CONCATENATED_PATH_DOWN = 479337129;

  }

  // The current BFD session state as seen by the transmitting system. These states are specified in section 4.1 of RFC5880
  enum LocalState {
    // A value indicating that the enum field is not set.
    UNDEFINED_LOCAL_STATE = 0;

    ADMIN_DOWN = 128544690;

    DOWN = 2104482;

    INIT = 2252048;

    STATE_UNSPECIFIED = 470755401;

    UP = 2715;

  }

  // The BFD session initialization mode for this BGP peer. If set to ACTIVE, the Cloud Router will initiate the BFD session for this BGP peer. If set to PASSIVE, the Cloud Router will wait for the peer router to initiate the BFD session for this BGP peer. If set to DISABLED, BFD is disabled for this BGP peer.
  // Check the BfdSessionInitializationMode enum for the list of possible values.
  optional string bfd_session_initialization_mode = 218156954;

  // Unix timestamp of the most recent config update.
  optional int64 config_update_timestamp_micros = 457195569;

  // Control packet counts for the current BFD session.
  optional BfdStatusPacketCounts control_packet_counts = 132573561;

  // Inter-packet time interval statistics for control packets.
  repeated PacketIntervals control_packet_intervals = 500806649;

  // The diagnostic code specifies the local system's reason for the last change in session state. This allows remote systems to determine the reason that the previous session failed, for example. These diagnostic codes are specified in section 4.1 of RFC5880
  // Check the LocalDiagnostic enum for the list of possible values.
  optional string local_diagnostic = 463737083;

  // The current BFD session state as seen by the transmitting system. These states are specified in section 4.1 of RFC5880
  // Check the LocalState enum for the list of possible values.
  optional string local_state = 149195453;

  // Negotiated transmit interval for control packets.
  optional uint32 negotiated_local_control_tx_interval_ms = 21768340;

  // The most recent Rx control packet for this BFD session.
  optional BfdPacket rx_packet = 505069729;

  // The most recent Tx control packet for this BFD session.
  optional BfdPacket tx_packet = 111386275;

  // Session uptime in milliseconds. Value will be 0 if session is not up.
  optional int64 uptime_ms = 125398365;

}

//
message BfdStatusPacketCounts {
  // Number of packets received since the beginning of the current BFD session.
  optional uint32 num_rx = 39375263;

  // Number of packets received that were rejected because of errors since the beginning of the current BFD session.
  optional uint32 num_rx_rejected = 281007902;

  // Number of packets received that were successfully processed since the beginning of the current BFD session.
  optional uint32 num_rx_successful = 455361850;

  // Number of packets transmitted since the beginning of the current BFD session.
  optional uint32 num_tx = 39375325;

}

// Associates `members`, or principals, with a `role`.
message Binding {
  // This is deprecated and has no effect. Do not use.
  optional string binding_id = 441088277;

  // The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the principals in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
  optional Expr condition = 212430107;

  // Specifies the principals requesting access for a Google Cloud resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. Does not include identities that come from external identity providers (IdPs) through identity federation. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a Google service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`: An identifier for a [Kubernetes service account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts). For example, `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding.
  repeated string members = 412010777;

  // Role that is assigned to the list of `members`, or principals. For example, `roles/viewer`, `roles/editor`, or `roles/owner`.
  optional string role = 3506294;

}

// A request message for Instances.BulkInsert. See the method description for details.
message BulkInsertInstanceRequest {
  // The body resource for this request
  BulkInsertInstanceResource bulk_insert_instance_resource_resource = 41427278 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // The name of the zone for this request.
  string zone = 3744684 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "zone"
  ];

}

// A transient resource used in compute.instances.bulkInsert and compute.regionInstances.bulkInsert . This resource is not persisted anywhere, it is used only for processing the requests.
message BulkInsertInstanceResource {
  // The maximum number of instances to create.
  optional int64 count = 94851343;

  // The instance properties defining the VM instances to be created. Required if sourceInstanceTemplate is not provided.
  optional InstanceProperties instance_properties = 215355165;

  // Policy for chosing target zone. For more information, see Create VMs in bulk .
  optional LocationPolicy location_policy = 465689852;

  // The minimum number of instances to create. If no min_count is specified then count is used as the default value. If min_count instances cannot be created, then no instances will be created and instances already created will be deleted.
  optional int64 min_count = 523228386;

  // The string pattern used for the names of the VMs. Either name_pattern or per_instance_properties must be set. The pattern must contain one continuous sequence of placeholder hash characters (#) with each character corresponding to one digit of the generated instance name. Example: a name_pattern of inst-#### generates instance names such as inst-0001 and inst-0002. If existing instances in the same project and zone have names that match the name pattern then the generated instance numbers start after the biggest existing number. For example, if there exists an instance with name inst-0050, then instance names generated using the pattern inst-#### begin with inst-0051. The name pattern placeholder #...# can contain up to 18 characters.
  optional string name_pattern = 413815260;

  // Per-instance properties to be set on individual instances. Keys of this map specify requested instance names. Can be empty if name_pattern is used.
  map<string, BulkInsertInstanceResourcePerInstanceProperties> per_instance_properties = 108502267;

  // Specifies the instance template from which to create instances. You may combine sourceInstanceTemplate with instanceProperties to override specific values from an existing instance template. Bulk API follows the semantics of JSON Merge Patch described by RFC 7396. It can be a full or partial URL. For example, the following are all valid URLs to an instance template: - https://www.googleapis.com/compute/v1/projects/project /global/instanceTemplates/instanceTemplate - projects/project/global/instanceTemplates/instanceTemplate - global/instanceTemplates/instanceTemplate This field is optional.
  optional string source_instance_template = 332423616;

}

// Per-instance properties to be set on individual instances. To be extended in the future.
message BulkInsertInstanceResourcePerInstanceProperties {
  // This field is only temporary. It will be removed. Do not use it.
  optional string name = 3373707;

}

// A request message for RegionInstances.BulkInsert. See the method description for details.
message BulkInsertRegionInstanceRequest {
  // The body resource for this request
  BulkInsertInstanceResource bulk_insert_instance_resource_resource = 41427278 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // The name of the region for this request.
  string region = 138946292 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "region"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

}

//
message CacheInvalidationRule {
  // If set, this invalidation rule will only apply to requests with a Host header matching host.
  optional string host = 3208616;

  optional string path = 3433509;

}

// Message containing what to include in the cache key for a request for Cloud CDN.
message CacheKeyPolicy {
  // If true, requests to different hosts will be cached separately.
  optional bool include_host = 486867679;

  // Allows HTTP request headers (by name) to be used in the cache key.
  repeated string include_http_headers = 2489606;

  // Allows HTTP cookies (by name) to be used in the cache key. The name=value pair will be used in the cache key Cloud CDN generates.
  repeated string include_named_cookies = 87316530;

  // If true, http and https requests will be cached separately.
  optional bool include_protocol = 303507535;

  // If true, include query string parameters in the cache key according to query_string_whitelist and query_string_blacklist. If neither is set, the entire query string will be included. If false, the query string will be excluded from the cache key entirely.
  optional bool include_query_string = 474036639;

  // Names of query string parameters to exclude in cache keys. All other parameters will be included. Either specify query_string_whitelist or query_string_blacklist, not both. '&' and '=' will be percent encoded and not treated as delimiters.
  repeated string query_string_blacklist = 354964742;

  // Names of query string parameters to include in cache keys. All other parameters will be excluded. Either specify query_string_whitelist or query_string_blacklist, not both. '&' and '=' will be percent encoded and not treated as delimiters.
  repeated string query_string_whitelist = 52456496;

}

// Settings controlling the volume of requests, connections and retries to this backend service.
message CircuitBreakers {
  // The maximum number of connections to the backend service. If not specified, there is no limit. Not supported when the backend service is referenced by a URL map that is bound to target gRPC proxy that has validateForProxyless field set to true.
  optional int32 max_connections = 110652154;

  // The maximum number of pending requests allowed to the backend service. If not specified, there is no limit. Not supported when the backend service is referenced by a URL map that is bound to target gRPC proxy that has validateForProxyless field set to true.
  optional int32 max_pending_requests = 375558887;

  // The maximum number of parallel requests that allowed to the backend service. If not specified, there is no limit.
  optional int32 max_requests = 28097599;

  // Maximum requests for a single connection to the backend service. This parameter is respected by both the HTTP/1.1 and HTTP/2 implementations. If not specified, there is no limit. Setting this parameter to 1 will effectively disable keep alive. Not supported when the backend service is referenced by a URL map that is bound to target gRPC proxy that has validateForProxyless field set to true.
  optional int32 max_requests_per_connection = 361630528;

  // The maximum number of parallel retries allowed to the backend cluster. If not specified, the default is 1. Not supported when the backend service is referenced by a URL map that is bound to target gRPC proxy that has validateForProxyless field set to true.
  optional int32 max_retries = 55546219;

}

// A request message for FirewallPolicies.CloneRules. See the method description for details.
message CloneRulesFirewallPolicyRequest {
  // Name of the firewall policy to update.
  string firewall_policy = 498173265 [(google.api.field_behavior) = REQUIRED];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // The firewall policy from which to copy rules.
  optional string source_firewall_policy = 25013549;

}

// A request message for NetworkFirewallPolicies.CloneRules. See the method description for details.
message CloneRulesNetworkFirewallPolicyRequest {
  // Name of the firewall policy to update.
  string firewall_policy = 498173265 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // The firewall policy from which to copy rules.
  optional string source_firewall_policy = 25013549;

}

// A request message for RegionNetworkFirewallPolicies.CloneRules. See the method description for details.
message CloneRulesRegionNetworkFirewallPolicyRequest {
  // Name of the firewall policy to update.
  string firewall_policy = 498173265 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // Name of the region scoping this request.
  string region = 138946292 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "region"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // The firewall policy from which to copy rules.
  optional string source_firewall_policy = 25013549;

}

// Represents a regional Commitment resource. Creating a commitment resource means that you are purchasing a committed use contract with an explicit start and end time. You can create commitments based on vCPUs and memory usage and receive discounted rates. For full details, read Signing Up for Committed Use Discounts.
message Commitment {
  // The category of the commitment. Category MACHINE specifies commitments composed of machine resources such as VCPU or MEMORY, listed in resources. Category LICENSE specifies commitments composed of software licenses, listed in licenseResources. Note that only MACHINE commitments should have a Type specified.
  enum Category {
    // A value indicating that the enum field is not set.
    UNDEFINED_CATEGORY = 0;

    CATEGORY_UNSPECIFIED = 509189462;

    LICENSE = 347869217;

    MACHINE = 469553191;

  }

  // The plan for this commitment, which determines duration and discount rate. The currently supported plans are TWELVE_MONTH (1 year), and THIRTY_SIX_MONTH (3 years).
  enum Plan {
    // A value indicating that the enum field is not set.
    UNDEFINED_PLAN = 0;

    INVALID = 530283991;

    THIRTY_SIX_MONTH = 266295942;

    TWELVE_MONTH = 173083962;

  }

  // [Output Only] Status of the commitment with regards to eventual expiration (each commitment has an end date defined). One of the following values: NOT_YET_ACTIVE, ACTIVE, EXPIRED.
  enum Status {
    // A value indicating that the enum field is not set.
    UNDEFINED_STATUS = 0;

    ACTIVE = 314733318;

    // Deprecate CANCELED status. Will use separate status to differentiate cancel by mergeCud or manual cancellation.
    CANCELLED = 41957681;

    CREATING = 455564985;

    EXPIRED = 482489093;

    NOT_YET_ACTIVE = 20607337;

  }

  // The type of commitment, which affects the discount rate and the eligible resources. Type MEMORY_OPTIMIZED specifies a commitment that will only apply to memory optimized machines. Type ACCELERATOR_OPTIMIZED specifies a commitment that will only apply to accelerator optimized machines.
  enum Type {
    // A value indicating that the enum field is not set.
    UNDEFINED_TYPE = 0;

    ACCELERATOR_OPTIMIZED = 280848403;

    COMPUTE_OPTIMIZED = 158349023;

    COMPUTE_OPTIMIZED_C2D = 383246453;

    COMPUTE_OPTIMIZED_C3 = 428004784;

    GENERAL_PURPOSE = 299793543;

    GENERAL_PURPOSE_E2 = 301911877;

    GENERAL_PURPOSE_N2 = 301912156;

    GENERAL_PURPOSE_N2D = 232471400;

    GENERAL_PURPOSE_T2D = 232477166;

    MEMORY_OPTIMIZED = 281753417;

    MEMORY_OPTIMIZED_M3 = 276301372;

    TYPE_UNSPECIFIED = 437714322;

  }

  // Specifies whether to enable automatic renewal for the commitment. The default value is false if not specified. The field can be updated until the day of the commitment expiration at 12:00am PST. If the field is set to true, the commitment will be automatically renewed for either one or three years according to the terms of the existing commitment.
  optional bool auto_renew = 495520765;

  // The category of the commitment. Category MACHINE specifies commitments composed of machine resources such as VCPU or MEMORY, listed in resources. Category LICENSE specifies commitments composed of software licenses, listed in licenseResources. Note that only MACHINE commitments should have a Type specified.
  // Check the Category enum for the list of possible values.
  optional string category = 50511102;

  // [Output Only] Creation timestamp in RFC3339 text format.
  optional string creation_timestamp = 30525366;

  // An optional description of this resource. Provide this property when you create the resource.
  optional string description = 422937596;

  // [Output Only] Commitment end time in RFC3339 text format.
  optional string end_timestamp = 468096690;

  // [Output Only] The unique identifier for the resource. This identifier is defined by the server.
  optional uint64 id = 3355;

  // [Output Only] Type of the resource. Always compute#commitment for commitments.
  optional string kind = 3292052;

  // The license specification required as part of a license commitment.
  optional LicenseResourceCommitment license_resource = 437955148;

  // List of source commitments to be merged into a new commitment.
  repeated string merge_source_commitments = 188093761;

  // Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
  optional string name = 3373707;

  // The plan for this commitment, which determines duration and discount rate. The currently supported plans are TWELVE_MONTH (1 year), and THIRTY_SIX_MONTH (3 years).
  // Check the Plan enum for the list of possible values.
  optional string plan = 3443497;

  // [Output Only] URL of the region where this commitment may be used.
  optional string region = 138946292;

  // List of reservations in this commitment.
  repeated Reservation reservations = 399717927;

  // A list of commitment amounts for particular resources. Note that VCPU and MEMORY resource commitments must occur together.
  repeated ResourceCommitment resources = 164412965;

  // [Output Only] Server-defined URL for the resource.
  optional string self_link = 456214797;

  // Source commitment to be splitted into a new commitment.
  optional string split_source_commitment = 402611156;

  // [Output Only] Commitment start time in RFC3339 text format.
  optional string start_timestamp = 83645817;

  // [Output Only] Status of the commitment with regards to eventual expiration (each commitment has an end date defined). One of the following values: NOT_YET_ACTIVE, ACTIVE, EXPIRED.
  // Check the Status enum for the list of possible values.
  optional string status = 181260274;

  // [Output Only] An optional, human-readable explanation of the status.
  optional string status_message = 297428154;

  // The type of commitment, which affects the discount rate and the eligible resources. Type MEMORY_OPTIMIZED specifies a commitment that will only apply to memory optimized machines. Type ACCELERATOR_OPTIMIZED specifies a commitment that will only apply to accelerator optimized machines.
  // Check the Type enum for the list of possible values.
  optional string type = 3575610;

}

//
message CommitmentAggregatedList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 3355;

  // A list of CommitmentsScopedList resources.
  map<string, CommitmentsScopedList> items = 100526016;

  // [Output Only] Type of resource. Always compute#commitmentAggregatedList for aggregated lists of commitments.
  optional string kind = 3292052;

  // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
  optional string next_page_token = 79797525;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 456214797;

  // [Output Only] Unreachable resources.
  repeated string unreachables = 243372063;

  // [Output Only] Informational warning message.
  optional Warning warning = 50704284;

}

// Contains a list of Commitment resources.
message CommitmentList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 3355;

  // A list of Commitment resources.
  repeated Commitment items = 100526016;

  // [Output Only] Type of resource. Always compute#commitmentList for lists of commitments.
  optional string kind = 3292052;

  // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
  optional string next_page_token = 79797525;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 456214797;

  // [Output Only] Informational warning message.
  optional Warning warning = 50704284;

}

//
message CommitmentsScopedList {
  // [Output Only] A list of commitments contained in this scope.
  repeated Commitment commitments = 450664446;

  // [Output Only] Informational warning which replaces the list of commitments when the list is empty.
  optional Warning warning = 50704284;

}

// This is deprecated and has no effect. Do not use.
message Condition {
  // This is deprecated and has no effect. Do not use.
  // Additional supported values which may be not listed in the enum directly due to technical reasons:
  // NO_ATTR
  enum Iam {
    // A value indicating that the enum field is not set.
    UNDEFINED_IAM = 0;

    // This is deprecated and has no effect. Do not use.
    APPROVER = 357258949;

    // This is deprecated and has no effect. Do not use.
    ATTRIBUTION = 232465503;

    // This is deprecated and has no effect. Do not use.
    AUTHORITY = 504108835;

    // This is deprecated and has no effect. Do not use.
    CREDENTIALS_TYPE = 348222141;

    // This is deprecated and has no effect. Do not use.
    CREDS_ASSERTION = 332343272;

    // This is deprecated and has no effect. Do not use.
    JUSTIFICATION_TYPE = 206147719;

    // This is deprecated and has no effect. Do not use.
    SECURITY_REALM = 526269616;

  }

  // This is deprecated and has no effect. Do not use.
  enum Op {
    // A value indicating that the enum field is not set.
    UNDEFINED_OP = 0;

    // This is deprecated and has no effect. Do not use.
    DISCHARGED = 266338274;

    // This is deprecated and has no effect. Do not use.
    EQUALS = 442201023;

    // This is deprecated and has no effect. Do not use.
    IN = 2341;

    // This is deprecated and has no effect. Do not use.
    NOT_EQUALS = 19718859;

    // This is deprecated and has no effect. Do not use.
    NOT_IN = 161144369;

    // This is deprecated and has no effect. Do not use.
    NO_OP = 74481951;

  }

  // This is deprecated and has no effect. Do not use.
  // Additional supported values which may be not listed in the enum directly due to technical reasons:
  // NO_ATTR
  enum Sys {
    // A value indicating that the enum field is not set.
    UNDEFINED_SYS = 0;

    // This is deprecated and has no effect. Do not use.
    IP = 2343;

    // This is deprecated and has no effect. Do not use.
    NAME = 2388619;

    // This is deprecated and has no effect. Do not use.
    REGION = 266017524;

    // This is deprecated and has no effect. Do not use.
    SERVICE = 17781397;

  }

  // This is deprecated and has no effect. Do not use.
  // Check the Iam enum for the list of possible values.
  optional string iam = 104021;

  // This is deprecated and has no effect. Do not use.
  // Check the Op enum for the list of possible values.
  optional string op = 3553;

  // This is deprecated and has no effect. Do not use.
  optional string svc = 114272;

  // This is deprecated and has no effect. Do not use.
  // Check the Sys enum for the list of possible values.
  optional string sys = 114381;

  // This is deprecated and has no effect. Do not use.
  repeated string values = 249928994;

}

// A set of Confidential Instance options.
message ConfidentialInstanceConfig {
  // Defines whether the instance should have confidential compute enabled.
  optional bool enable_confidential_compute = 102135228;

}

// Message containing connection draining configuration.
message ConnectionDraining {
  // Configures a duration timeout for existing requests on a removed backend instance. For supported load balancers and protocols, as described in Enabling connection draining.
  optional int32 draining_timeout_sec = 225127070;

}

// This message defines settings for a consistent hash style load balancer.
message ConsistentHashLoadBalancerSettings {
  // Hash is based on HTTP Cookie. This field describes a HTTP cookie that will be used as the hash key for the consistent hash load balancer. If the cookie is not present, it will be generated. This field is applicable if the sessionAffinity is set to HTTP_COOKIE. Not supported when the backend service is referenced by a URL map that is bound to target gRPC proxy that has validateForProxyless field set to true.
  optional ConsistentHashLoadBalancerSettingsHttpCookie http_cookie = 6673915;

  // The hash based on the value of the specified header field. This field is applicable if the sessionAffinity is set to HEADER_FIELD.
  optional string http_header_name = 234798022;

  // The minimum number of virtual nodes to use for the hash ring. Defaults to 1024. Larger ring sizes result in more granular load distributions. If the number of hosts in the load balancing pool is larger than the ring size, each host will be assigned a single virtual node.
  optional int64 minimum_ring_size = 234380735;

}

// The information about the HTTP Cookie on which the hash function is based for load balancing policies that use a consistent hash.
message ConsistentHashLoadBalancerSettingsHttpCookie {
  // Name of the cookie.
  optional string name = 3373707;

  // Path to set for the cookie.
  optional string path = 3433509;

  // Lifetime of the cookie.
  optional Duration ttl = 115180;

}

// The specification for allowing client-side cross-origin requests. For more information about the W3C recommendation for cross-origin resource sharing (CORS), see Fetch API Living Standard.
message CorsPolicy {
  // In response to a preflight request, setting this to true indicates that the actual request can include user credentials. This field translates to the Access-Control-Allow-Credentials header. Default is false.
  optional bool allow_credentials = 481263366;

  // Specifies the content for the Access-Control-Allow-Headers header.
  repeated string allow_headers = 45179024;

  // Specifies the content for the Access-Control-Allow-Methods header.
  repeated string allow_methods = 205405372;

  // Specifies a regular expression that matches allowed origins. For more information about the regular expression syntax, see Syntax. An origin is allowed if it matches either an item in allowOrigins or an item in allowOriginRegexes. Regular expressions can only be used when the loadBalancingScheme is set to INTERNAL_SELF_MANAGED.
  repeated string allow_origin_regexes = 215385810;

  // Specifies the list of origins that is allowed to do CORS requests. An origin is allowed if it matches either an item in allowOrigins or an item in allowOriginRegexes.
  repeated string allow_origins = 194914071;

  // If true, the setting specifies the CORS policy is disabled. The default value of false, which indicates that the CORS policy is in effect.
  optional bool disabled = 270940796;

  // Specifies the content for the Access-Control-Expose-Headers header.
  repeated string expose_headers = 247604747;

  // Specifies how long results of a preflight request can be cached in seconds. This field translates to the Access-Control-Max-Age header.
  optional int32 max_age = 307559332;

}

// A request message for InstanceGroupManagers.CreateInstances. See the method description for details.
message CreateInstancesInstanceGroupManagerRequest {
  // The name of the managed instance group. It should conform to RFC1035.
  string instance_group_manager = 249363395 [(google.api.field_behavior) = REQUIRED];

  // The body resource for this request
  InstanceGroupManagersCreateInstancesRequest instance_group_managers_create_instances_request_resource = 24558867 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // The name of the zone where the managed instance group is located. It should conform to RFC1035.
  string zone = 3744684 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "zone"
  ];

}

// A request message for RegionInstanceGroupManagers.CreateInstances. See the method description for details.
message CreateInstancesRegionInstanceGroupManagerRequest {
  // The name of the managed instance group. It should conform to RFC1035.
  string instance_group_manager = 249363395 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // The name of the region where the managed instance group is located. It should conform to RFC1035.
  string region = 138946292 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "region"
  ];

  // The body resource for this request
  RegionInstanceGroupManagersCreateInstancesRequest region_instance_group_managers_create_instances_request_resource = 359014280 [(google.api.field_behavior) = REQUIRED];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

}

// A request message for Disks.CreateSnapshot. See the method description for details.
message CreateSnapshotDiskRequest {
  // Name of the persistent disk to snapshot.
  string disk = 3083677 [(google.api.field_behavior) = REQUIRED];

  // [Input Only] Whether to attempt an application consistent snapshot by informing the OS to prepare for the snapshot process.
  optional bool guest_flush = 385550813;

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // The body resource for this request
  Snapshot snapshot_resource = 481319977 [(google.api.field_behavior) = REQUIRED];

  // The name of the zone for this request.
  string zone = 3744684 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "zone"
  ];

}

// A request message for RegionDisks.CreateSnapshot. See the method description for details.
message CreateSnapshotRegionDiskRequest {
  // Name of the regional persistent disk to snapshot.
  string disk = 3083677 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // Name of the region for this request.
  string region = 138946292 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "region"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // The body resource for this request
  Snapshot snapshot_resource = 481319977 [(google.api.field_behavior) = REQUIRED];

}

//
message CustomerEncryptionKey {
  // The name of the encryption key that is stored in Google Cloud KMS. For example: "kmsKeyName": "projects/kms_project_id/locations/region/keyRings/ key_region/cryptoKeys/key 
  optional string kms_key_name = 484373913;

  // The service account being used for the encryption request for the given KMS key. If absent, the Compute Engine default service account is used. For example: "kmsKeyServiceAccount": "name@project_id.iam.gserviceaccount.com/ 
  optional string kms_key_service_account = 209986261;

  // Specifies a 256-bit customer-supplied encryption key, encoded in RFC 4648 base64 to either encrypt or decrypt this resource. You can provide either the rawKey or the rsaEncryptedKey. For example: "rawKey": "SGVsbG8gZnJvbSBHb29nbGUgQ2xvdWQgUGxhdGZvcm0=" 
  optional string raw_key = 449196488;

  // Specifies an RFC 4648 base64 encoded, RSA-wrapped 2048-bit customer-supplied encryption key to either encrypt or decrypt this resource. You can provide either the rawKey or the rsaEncryptedKey. For example: "rsaEncryptedKey": "ieCx/NcW06PcT7Ep1X6LUTc/hLvUDYyzSZPPVCVPTVEohpeHASqC8uw5TzyO9U+Fka9JFH z0mBibXUInrC/jEk014kCK/NPjYgEMOyssZ4ZINPKxlUh2zn1bV+MCaTICrdmuSBTWlUUiFoD D6PYznLwh8ZNdaheCeZ8ewEXgFQ8V+sDroLaN3Xs3MDTXQEMMoNUXMCZEIpg9Vtp9x2oe==" The key must meet the following requirements before you can provide it to Compute Engine: 1. The key is wrapped using a RSA public key certificate provided by Google. 2. After being wrapped, the key must be encoded in RFC 4648 base64 encoding. Gets the RSA public key certificate provided by Google at: https://cloud-certs.storage.googleapis.com/google-cloud-csek-ingress.pem 
  optional string rsa_encrypted_key = 335487397;

  // [Output only] The RFC 4648 base64 encoded SHA-256 hash of the customer-supplied encryption key that protects this resource.
  optional string sha256 = 170112551;

}

//
message CustomerEncryptionKeyProtectedDisk {
  // Decrypts data associated with the disk with a customer-supplied encryption key.
  optional CustomerEncryptionKey disk_encryption_key = 271660677;

  // Specifies a valid partial or full URL to an existing Persistent Disk resource. This field is only applicable for persistent disks. For example: "source": "/compute/v1/projects/project_id/zones/zone/disks/ disk_name 
  optional string source = 177235995;

}

//
message Data {
  // [Output Only] A key that provides more detail on the warning being returned. For example, for warnings where there are no results in a list request for a particular zone, this key might be scope and the key value might be the zone name. Other examples might be a key indicating a deprecated resource and a suggested replacement, or a warning about invalid network settings (for example, if an instance attempts to perform IP forwarding but is not enabled for IP forwarding).
  optional string key = 106079;

  // [Output Only] A warning data value corresponding to the key.
  optional string value = 111972721;

}

// A request message for Instances.DeleteAccessConfig. See the method description for details.
message DeleteAccessConfigInstanceRequest {
  // The name of the access config to delete.
  string access_config = 72856189 [(google.api.field_behavior) = REQUIRED];

  // The instance name for this request.
  string instance = 18257045 [(google.api.field_behavior) = REQUIRED];

  // The name of the network interface.
  string network_interface = 365387880 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // The name of the zone for this request.
  string zone = 3744684 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "zone"
  ];

}

// A request message for Addresses.Delete. See the method description for details.
message DeleteAddressRequest {
  // Name of the address resource to delete.
  string address = 462920692 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // Name of the region for this request.
  string region = 138946292 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "region"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

}

// A request message for Autoscalers.Delete. See the method description for details.
message DeleteAutoscalerRequest {
  // Name of the autoscaler to delete.
  string autoscaler = 517258967 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // Name of the zone for this request.
  string zone = 3744684 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "zone"
  ];

}

// A request message for BackendBuckets.Delete. See the method description for details.
message DeleteBackendBucketRequest {
  // Name of the BackendBucket resource to delete.
  string backend_bucket = 91714037 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

}

// A request message for BackendServices.Delete. See the method description for details.
message DeleteBackendServiceRequest {
  // Name of the BackendService resource to delete.
  string backend_service = 306946058 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

}

// A request message for Disks.Delete. See the method description for details.
message DeleteDiskRequest {
  // Name of the persistent disk to delete.
  string disk = 3083677 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // The name of the zone for this request.
  string zone = 3744684 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "zone"
  ];

}

// A request message for ExternalVpnGateways.Delete. See the method description for details.
message DeleteExternalVpnGatewayRequest {
  // Name of the externalVpnGateways to delete.
  string external_vpn_gateway = 109898629 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

}

// A request message for FirewallPolicies.Delete. See the method description for details.
message DeleteFirewallPolicyRequest {
  // Name of the firewall policy to delete.
  string firewall_policy = 498173265 [(google.api.field_behavior) = REQUIRED];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

}

// A request message for Firewalls.Delete. See the method description for details.
message DeleteFirewallRequest {
  // Name of the firewall rule to delete.
  string firewall = 511016192 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

}

// A request message for ForwardingRules.Delete. See the method description for details.
message DeleteForwardingRuleRequest {
  // Name of the ForwardingRule resource to delete.
  string forwarding_rule = 269964030 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // Name of the region scoping this request.
  string region = 138946292 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "region"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

}

// A request message for GlobalAddresses.Delete. See the method description for details.
message DeleteGlobalAddressRequest {
  // Name of the address resource to delete.
  string address = 462920692 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

}

// A request message for GlobalForwardingRules.Delete. See the method description for details.
message DeleteGlobalForwardingRuleRequest {
  // Name of the ForwardingRule resource to delete.
  string forwarding_rule = 269964030 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

}

// A request message for GlobalNetworkEndpointGroups.Delete. See the method description for details.
message DeleteGlobalNetworkEndpointGroupRequest {
  // The name of the network endpoint group to delete. It should comply with RFC1035.
  string network_endpoint_group = 433907078 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

}

// A request message for GlobalOperations.Delete. See the method description for details.
message DeleteGlobalOperationRequest {
  // Name of the Operations resource to delete.
  string operation = 52090215 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

}

// A response message for GlobalOperations.Delete. See the method description for details.
message DeleteGlobalOperationResponse {
}

// A request message for GlobalOrganizationOperations.Delete. See the method description for details.
message DeleteGlobalOrganizationOperationRequest {
  // Name of the Operations resource to delete.
  string operation = 52090215 [(google.api.field_behavior) = REQUIRED];

  // Parent ID for this request.
  optional string parent_id = 459714768;

}

// A response message for GlobalOrganizationOperations.Delete. See the method description for details.
message DeleteGlobalOrganizationOperationResponse {
}

// A request message for GlobalPublicDelegatedPrefixes.Delete. See the method description for details.
message DeleteGlobalPublicDelegatedPrefixeRequest {
  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // Name of the PublicDelegatedPrefix resource to delete.
  string public_delegated_prefix = 204238440 [(google.api.field_behavior) = REQUIRED];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

}

// A request message for HealthChecks.Delete. See the method description for details.
message DeleteHealthCheckRequest {
  // Name of the HealthCheck resource to delete.
  string health_check = 308876645 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

}

// A request message for Images.Delete. See the method description for details.
message DeleteImageRequest {
  // Name of the image resource to delete.
  string image = 100313435 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

}

// A request message for InstanceGroupManagers.Delete. See the method description for details.
message DeleteInstanceGroupManagerRequest {
  // The name of the managed instance group to delete.
  string instance_group_manager = 249363395 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // The name of the zone where the managed instance group is located.
  string zone = 3744684 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "zone"
  ];

}

// A request message for InstanceGroups.Delete. See the method description for details.
message DeleteInstanceGroupRequest {
  // The name of the instance group to delete.
  string instance_group = 81095253 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // The name of the zone where the instance group is located.
  string zone = 3744684 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "zone"
  ];

}

// A request message for Instances.Delete. See the method description for details.
message DeleteInstanceRequest {
  // Name of the instance resource to delete.
  string instance = 18257045 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // The name of the zone for this request.
  string zone = 3744684 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "zone"
  ];

}

// A request message for InstanceTemplates.Delete. See the method description for details.
message DeleteInstanceTemplateRequest {
  // The name of the instance template to delete.
  string instance_template = 309248228 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

}

// A request message for InstanceGroupManagers.DeleteInstances. See the method description for details.
message DeleteInstancesInstanceGroupManagerRequest {
  // The name of the managed instance group.
  string instance_group_manager = 249363395 [(google.api.field_behavior) = REQUIRED];

  // The body resource for this request
  InstanceGroupManagersDeleteInstancesRequest instance_group_managers_delete_instances_request_resource = 166421252 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // The name of the zone where the managed instance group is located.
  string zone = 3744684 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "zone"
  ];

}

// A request message for RegionInstanceGroupManagers.DeleteInstances. See the method description for details.
message DeleteInstancesRegionInstanceGroupManagerRequest {
  // Name of the managed instance group.
  string instance_group_manager = 249363395 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // Name of the region scoping this request.
  string region = 138946292 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "region"
  ];

  // The body resource for this request
  RegionInstanceGroupManagersDeleteInstancesRequest region_instance_group_managers_delete_instances_request_resource = 500876665 [(google.api.field_behavior) = REQUIRED];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

}

// A request message for InterconnectAttachments.Delete. See the method description for details.
message DeleteInterconnectAttachmentRequest {
  // Name of the interconnect attachment to delete.
  string interconnect_attachment = 308135284 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // Name of the region for this request.
  string region = 138946292 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "region"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

}

// A request message for Interconnects.Delete. See the method description for details.
message DeleteInterconnectRequest {
  // Name of the interconnect to delete.
  string interconnect = 224601230 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

}

// A request message for Licenses.Delete. See the method description for details.
message DeleteLicenseRequest {
  // Name of the license resource to delete.
  string license = 166757441 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

}

// A request message for MachineImages.Delete. See the method description for details.
message DeleteMachineImageRequest {
  // The name of the machine image to delete.
  string machine_image = 69189475 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

}

// A request message for NetworkAttachments.Delete. See the method description for details.
message DeleteNetworkAttachmentRequest {
  // Name of the NetworkAttachment resource to delete.
  string network_attachment = 224644052 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // Name of the region of this request.
  string region = 138946292 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "region"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000). end_interface: MixerMutationRequestBuilder
  optional string request_id = 37109963;

}

// A request message for NetworkEdgeSecurityServices.Delete. See the method description for details.
message DeleteNetworkEdgeSecurityServiceRequest {
  // Name of the network edge security service to delete.
  string network_edge_security_service = 157011879 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // Name of the region scoping this request.
  string region = 138946292 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "region"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

}

// A request message for NetworkEndpointGroups.Delete. See the method description for details.
message DeleteNetworkEndpointGroupRequest {
  // The name of the network endpoint group to delete. It should comply with RFC1035.
  string network_endpoint_group = 433907078 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // The name of the zone where the network endpoint group is located. It should comply with RFC1035.
  string zone = 3744684 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "zone"
  ];

}

// A request message for NetworkFirewallPolicies.Delete. See the method description for details.
message DeleteNetworkFirewallPolicyRequest {
  // Name of the firewall policy to delete.
  string firewall_policy = 498173265 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

}

// A request message for Networks.Delete. See the method description for details.
message DeleteNetworkRequest {
  // Name of the network to delete.
  string network = 232872494 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

}

// A request message for NodeGroups.Delete. See the method description for details.
message DeleteNodeGroupRequest {
  // Name of the NodeGroup resource to delete.
  string node_group = 469958146 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // The name of the zone for this request.
  string zone = 3744684 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "zone"
  ];

}

// A request message for NodeTemplates.Delete. See the method description for details.
message DeleteNodeTemplateRequest {
  // Name of the NodeTemplate resource to delete.
  string node_template = 323154455 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // The name of the region for this request.
  string region = 138946292 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "region"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

}

// A request message for NodeGroups.DeleteNodes. See the method description for details.
message DeleteNodesNodeGroupRequest {
  // Name of the NodeGroup resource whose nodes will be deleted.
  string node_group = 469958146 [(google.api.field_behavior) = REQUIRED];

  // The body resource for this request
  NodeGroupsDeleteNodesRequest node_groups_delete_nodes_request_resource = 183298962 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // The name of the zone for this request.
  string zone = 3744684 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "zone"
  ];

}

// A request message for PacketMirrorings.Delete. See the method description for details.
message DeletePacketMirroringRequest {
  // Name of the PacketMirroring resource to delete.
  string packet_mirroring = 22305996 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // Name of the region for this request.
  string region = 138946292 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "region"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

}

// A request message for InstanceGroupManagers.DeletePerInstanceConfigs. See the method description for details.
message DeletePerInstanceConfigsInstanceGroupManagerRequest {
  // The name of the managed instance group. It should conform to RFC1035.
  string instance_group_manager = 249363395 [(google.api.field_behavior) = REQUIRED];

  // The body resource for this request
  InstanceGroupManagersDeletePerInstanceConfigsReq instance_group_managers_delete_per_instance_configs_req_resource = 362427680 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // The name of the zone where the managed instance group is located. It should conform to RFC1035.
  string zone = 3744684 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "zone"
  ];

}

// A request message for RegionInstanceGroupManagers.DeletePerInstanceConfigs. See the method description for details.
message DeletePerInstanceConfigsRegionInstanceGroupManagerRequest {
  // The name of the managed instance group. It should conform to RFC1035.
  string instance_group_manager = 249363395 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // Name of the region scoping this request, should conform to RFC1035.
  string region = 138946292 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "region"
  ];

  // The body resource for this request
  RegionInstanceGroupManagerDeleteInstanceConfigReq region_instance_group_manager_delete_instance_config_req_resource = 740741 [(google.api.field_behavior) = REQUIRED];

}

// A request message for PublicAdvertisedPrefixes.Delete. See the method description for details.
message DeletePublicAdvertisedPrefixeRequest {
  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // Name of the PublicAdvertisedPrefix resource to delete.
  string public_advertised_prefix = 101874590 [(google.api.field_behavior) = REQUIRED];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

}

// A request message for PublicDelegatedPrefixes.Delete. See the method description for details.
message DeletePublicDelegatedPrefixeRequest {
  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // Name of the PublicDelegatedPrefix resource to delete.
  string public_delegated_prefix = 204238440 [(google.api.field_behavior) = REQUIRED];

  // Name of the region of this request.
  string region = 138946292 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "region"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

}

// A request message for RegionAutoscalers.Delete. See the method description for details.
message DeleteRegionAutoscalerRequest {
  // Name of the autoscaler to delete.
  string autoscaler = 517258967 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // Name of the region scoping this request.
  string region = 138946292 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "region"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

}

// A request message for RegionBackendServices.Delete. See the method description for details.
message DeleteRegionBackendServiceRequest {
  // Name of the BackendService resource to delete.
  string backend_service = 306946058 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // Name of the region scoping this request.
  string region = 138946292 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "region"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

}

// A request message for RegionDisks.Delete. See the method description for details.
message DeleteRegionDiskRequest {
  // Name of the regional persistent disk to delete.
  string disk = 3083677 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // Name of the region for this request.
  string region = 138946292 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "region"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

}

// A request message for RegionHealthChecks.Delete. See the method description for details.
message DeleteRegionHealthCheckRequest {
  // Name of the HealthCheck resource to delete.
  string health_check = 308876645 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // Name of the region scoping this request.
  string region = 138946292 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "region"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

}

// A request message for RegionHealthCheckServices.Delete. See the method description for details.
message DeleteRegionHealthCheckServiceRequest {
  // Name of the HealthCheckService to delete. The name must be 1-63 characters long, and comply with RFC1035.
  string health_check_service = 408374747 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // Name of the region scoping this request.
  string region = 138946292 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "region"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

}

// A request message for RegionInstanceGroupManagers.Delete. See the method description for details.
message DeleteRegionInstanceGroupManagerRequest {
  // Name of the managed instance group to delete.
  string instance_group_manager = 249363395 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // Name of the region scoping this request.
  string region = 138946292 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "region"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

}

// A request message for RegionInstanceTemplates.Delete. See the method description for details.
message DeleteRegionInstanceTemplateRequest {
  // The name of the instance template to delete.
  string instance_template = 309248228 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // The name of the region for this request.
  string region = 138946292 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "region"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

}

// A request message for RegionNetworkEndpointGroups.Delete. See the method description for details.
message DeleteRegionNetworkEndpointGroupRequest {
  // The name of the network endpoint group to delete. It should comply with RFC1035.
  string network_endpoint_group = 433907078 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // The name of the region where the network endpoint group is located. It should comply with RFC1035.
  string region = 138946292 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "region"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

}

// A request message for RegionNetworkFirewallPolicies.Delete. See the method description for details.
message DeleteRegionNetworkFirewallPolicyRequest {
  // Name of the firewall policy to delete.
  string firewall_policy = 498173265 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // Name of the region scoping this request.
  string region = 138946292 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "region"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

}

// A request message for RegionNotificationEndpoints.Delete. See the method description for details.
message DeleteRegionNotificationEndpointRequest {
  // Name of the NotificationEndpoint resource to delete.
  string notification_endpoint = 376807017 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // Name of the region scoping this request.
  string region = 138946292 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "region"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

}

// A request message for RegionOperations.Delete. See the method description for details.
message DeleteRegionOperationRequest {
  // Name of the Operations resource to delete.
  string operation = 52090215 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Name of the region for this request.
  string region = 138946292 [(google.api.field_behavior) = REQUIRED];

}

// A response message for RegionOperations.Delete. See the method description for details.
message DeleteRegionOperationResponse {
}

// A request message for RegionSecurityPolicies.Delete. See the method description for details.
message DeleteRegionSecurityPolicyRequest {
  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // Name of the region scoping this request.
  string region = 138946292 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "region"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // Name of the security policy to delete.
  string security_policy = 171082513 [(google.api.field_behavior) = REQUIRED];

}

// A request message for RegionSslCertificates.Delete. See the method description for details.
message DeleteRegionSslCertificateRequest {
  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // Name of the region scoping this request.
  string region = 138946292 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "region"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // Name of the SslCertificate resource to delete.
  string ssl_certificate = 46443492 [(google.api.field_behavior) = REQUIRED];

}

// A request message for RegionSslPolicies.Delete. See the method description for details.
message DeleteRegionSslPolicyRequest {
  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // Name of the region scoping this request.
  string region = 138946292 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "region"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // Name of the SSL policy to delete. The name must be 1-63 characters long, and comply with RFC1035.
  string ssl_policy = 295190213 [(google.api.field_behavior) = REQUIRED];

}

// A request message for RegionTargetHttpProxies.Delete. See the method description for details.
message DeleteRegionTargetHttpProxyRequest {
  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // Name of the region scoping this request.
  string region = 138946292 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "region"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // Name of the TargetHttpProxy resource to delete.
  string target_http_proxy = 206872421 [(google.api.field_behavior) = REQUIRED];

}

// A request message for RegionTargetHttpsProxies.Delete. See the method description for details.
message DeleteRegionTargetHttpsProxyRequest {
  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // Name of the region scoping this request.
  string region = 138946292 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "region"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // Name of the TargetHttpsProxy resource to delete.
  string target_https_proxy = 52336748 [(google.api.field_behavior) = REQUIRED];

}

// A request message for RegionTargetTcpProxies.Delete. See the method description for details.
message DeleteRegionTargetTcpProxyRequest {
  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // Name of the region scoping this request.
  string region = 138946292 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "region"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // Name of the TargetTcpProxy resource to delete.
  string target_tcp_proxy = 503065442 [(google.api.field_behavior) = REQUIRED];

}

// A request message for RegionUrlMaps.Delete. See the method description for details.
message DeleteRegionUrlMapRequest {
  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // Name of the region scoping this request.
  string region = 138946292 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "region"
  ];

  // begin_interface: MixerMutationRequestBuilder Request ID to support idempotency.
  optional string request_id = 37109963;

  // Name of the UrlMap resource to delete.
  string url_map = 367020684 [(google.api.field_behavior) = REQUIRED];

}

// A request message for Reservations.Delete. See the method description for details.
message DeleteReservationRequest {
  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // Name of the reservation to delete.
  string reservation = 47530956 [(google.api.field_behavior) = REQUIRED];

  // Name of the zone for this request.
  string zone = 3744684 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "zone"
  ];

}

// A request message for ResourcePolicies.Delete. See the method description for details.
message DeleteResourcePolicyRequest {
  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // Name of the region for this request.
  string region = 138946292 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "region"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // Name of the resource policy to delete.
  string resource_policy = 159240835 [(google.api.field_behavior) = REQUIRED];

}

// A request message for Routes.Delete. See the method description for details.
message DeleteRouteRequest {
  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // Name of the Route resource to delete.
  string route = 108704329 [(google.api.field_behavior) = REQUIRED];

}

// A request message for Routers.Delete. See the method description for details.
message DeleteRouterRequest {
  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // Name of the region for this request.
  string region = 138946292 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "region"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // Name of the Router resource to delete.
  string router = 148608841 [(google.api.field_behavior) = REQUIRED];

}

// A request message for SecurityPolicies.Delete. See the method description for details.
message DeleteSecurityPolicyRequest {
  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // Name of the security policy to delete.
  string security_policy = 171082513 [(google.api.field_behavior) = REQUIRED];

}

// A request message for ServiceAttachments.Delete. See the method description for details.
message DeleteServiceAttachmentRequest {
  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // Name of the region of this request.
  string region = 138946292 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "region"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // Name of the ServiceAttachment resource to delete.
  string service_attachment = 338957549 [(google.api.field_behavior) = REQUIRED];

}

// A request message for BackendBuckets.DeleteSignedUrlKey. See the method description for details.
message DeleteSignedUrlKeyBackendBucketRequest {
  // Name of the BackendBucket resource to which the Signed URL Key should be added. The name should conform to RFC1035.
  string backend_bucket = 91714037 [(google.api.field_behavior) = REQUIRED];

  // The name of the Signed URL Key to delete.
  string key_name = 500938859 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

}

// A request message for BackendServices.DeleteSignedUrlKey. See the method description for details.
message DeleteSignedUrlKeyBackendServiceRequest {
  // Name of the BackendService resource to which the Signed URL Key should be added. The name should conform to RFC1035.
  string backend_service = 306946058 [(google.api.field_behavior) = REQUIRED];

  // The name of the Signed URL Key to delete.
  string key_name = 500938859 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

}

// A request message for Snapshots.Delete. See the method description for details.
message DeleteSnapshotRequest {
  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // Name of the Snapshot resource to delete.
  string snapshot = 284874180 [(google.api.field_behavior) = REQUIRED];

}

// A request message for SslCertificates.Delete. See the method description for details.
message DeleteSslCertificateRequest {
  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // Name of the SslCertificate resource to delete.
  string ssl_certificate = 46443492 [(google.api.field_behavior) = REQUIRED];

}

// A request message for SslPolicies.Delete. See the method description for details.
message DeleteSslPolicyRequest {
  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // Name of the SSL policy to delete. The name must be 1-63 characters long, and comply with RFC1035.
  string ssl_policy = 295190213 [(google.api.field_behavior) = REQUIRED];

}

// A request message for Subnetworks.Delete. See the method description for details.
message DeleteSubnetworkRequest {
  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // Name of the region scoping this request.
  string region = 138946292 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "region"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // Name of the Subnetwork resource to delete.
  string subnetwork = 307827694 [(google.api.field_behavior) = REQUIRED];

}

// A request message for TargetGrpcProxies.Delete. See the method description for details.
message DeleteTargetGrpcProxyRequest {
  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // Name of the TargetGrpcProxy resource to delete.
  string target_grpc_proxy = 5020283 [(google.api.field_behavior) = REQUIRED];

}

// A request message for TargetHttpProxies.Delete. See the method description for details.
message DeleteTargetHttpProxyRequest {
  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // Name of the TargetHttpProxy resource to delete.
  string target_http_proxy = 206872421 [(google.api.field_behavior) = REQUIRED];

}

// A request message for TargetHttpsProxies.Delete. See the method description for details.
message DeleteTargetHttpsProxyRequest {
  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // Name of the TargetHttpsProxy resource to delete.
  string target_https_proxy = 52336748 [(google.api.field_behavior) = REQUIRED];

}

// A request message for TargetInstances.Delete. See the method description for details.
message DeleteTargetInstanceRequest {
  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // Name of the TargetInstance resource to delete.
  string target_instance = 289769347 [(google.api.field_behavior) = REQUIRED];

  // Name of the zone scoping this request.
  string zone = 3744684 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "zone"
  ];

}

// A request message for TargetPools.Delete. See the method description for details.
message DeleteTargetPoolRequest {
  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // Name of the region scoping this request.
  string region = 138946292 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "region"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // Name of the TargetPool resource to delete.
  string target_pool = 62796298 [(google.api.field_behavior) = REQUIRED];

}

// A request message for TargetSslProxies.Delete. See the method description for details.
message DeleteTargetSslProxyRequest {
  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // Name of the TargetSslProxy resource to delete.
  string target_ssl_proxy = 338795853 [(google.api.field_behavior) = REQUIRED];

}

// A request message for TargetTcpProxies.Delete. See the method description for details.
message DeleteTargetTcpProxyRequest {
  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // Name of the TargetTcpProxy resource to delete.
  string target_tcp_proxy = 503065442 [(google.api.field_behavior) = REQUIRED];

}

// A request message for TargetVpnGateways.Delete. See the method description for details.
message DeleteTargetVpnGatewayRequest {
  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // Name of the region for this request.
  string region = 138946292 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "region"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // Name of the target VPN gateway to delete.
  string target_vpn_gateway = 532512843 [(google.api.field_behavior) = REQUIRED];

}

// A request message for UrlMaps.Delete. See the method description for details.
message DeleteUrlMapRequest {
  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // Name of the UrlMap resource to delete.
  string url_map = 367020684 [(google.api.field_behavior) = REQUIRED];

}

// A request message for VpnGateways.Delete. See the method description for details.
message DeleteVpnGatewayRequest {
  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // Name of the region for this request.
  string region = 138946292 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "region"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // Name of the VPN gateway to delete.
  string vpn_gateway = 406684153 [(google.api.field_behavior) = REQUIRED];

}

// A request message for VpnTunnels.Delete. See the method description for details.
message DeleteVpnTunnelRequest {
  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // Name of the region for this request.
  string region = 138946292 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "region"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // Name of the VpnTunnel resource to delete.
  string vpn_tunnel = 143821331 [(google.api.field_behavior) = REQUIRED];

}

// A request message for ZoneOperations.Delete. See the method description for details.
message DeleteZoneOperationRequest {
  // Name of the Operations resource to delete.
  string operation = 52090215 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Name of the zone for this request.
  string zone = 3744684 [(google.api.field_behavior) = REQUIRED];

}

// A response message for ZoneOperations.Delete. See the method description for details.
message DeleteZoneOperationResponse {
}

//
message Denied {
  // The IP protocol to which this rule applies. The protocol type is required when creating a firewall rule. This value can either be one of the following well known protocol strings (tcp, udp, icmp, esp, ah, ipip, sctp) or the IP protocol number.
  optional string I_p_protocol = 488094525;

  // An optional list of ports to which this rule applies. This field is only applicable for the UDP or TCP protocol. Each entry must be either an integer or a range. If not specified, this rule applies to connections through any port. Example inputs include: ["22"], ["80","443"], and ["12345-12349"].
  repeated string ports = 106854418;

}

// A request message for Images.Deprecate. See the method description for details.
message DeprecateImageRequest {
  // The body resource for this request
  DeprecationStatus deprecation_status_resource = 333006064 [(google.api.field_behavior) = REQUIRED];

  // Image name.
  string image = 100313435 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

}

// Deprecation status for a public resource.
message DeprecationStatus {
  // The deprecation state of this resource. This can be ACTIVE, DEPRECATED, OBSOLETE, or DELETED. Operations which communicate the end of life date for an image, can use ACTIVE. Operations which create a new resource using a DEPRECATED resource will return successfully, but with a warning indicating the deprecated resource and recommending its replacement. Operations which use OBSOLETE or DELETED resources will be rejected and result in an error.
  enum State {
    // A value indicating that the enum field is not set.
    UNDEFINED_STATE = 0;

    ACTIVE = 314733318;

    DELETED = 120962041;

    DEPRECATED = 463360435;

    OBSOLETE = 66532761;

  }

  // An optional RFC3339 timestamp on or after which the state of this resource is intended to change to DELETED. This is only informational and the status will not change unless the client explicitly changes it.
  optional string deleted = 476721177;

  // An optional RFC3339 timestamp on or after which the state of this resource is intended to change to DEPRECATED. This is only informational and the status will not change unless the client explicitly changes it.
  optional string deprecated = 515138995;

  // An optional RFC3339 timestamp on or after which the state of this resource is intended to change to OBSOLETE. This is only informational and the status will not change unless the client explicitly changes it.
  optional string obsolete = 357647769;

  // The URL of the suggested replacement for a deprecated resource. The suggested replacement resource must be the same kind of resource as the deprecated resource.
  optional string replacement = 430919186;

  // The deprecation state of this resource. This can be ACTIVE, DEPRECATED, OBSOLETE, or DELETED. Operations which communicate the end of life date for an image, can use ACTIVE. Operations which create a new resource using a DEPRECATED resource will return successfully, but with a warning indicating the deprecated resource and recommending its replacement. Operations which use OBSOLETE or DELETED resources will be rejected and result in an error.
  // Check the State enum for the list of possible values.
  optional string state = 109757585;

}

// A request message for Instances.DetachDisk. See the method description for details.
message DetachDiskInstanceRequest {
  // The device name of the disk to detach. Make a get() request on the instance to view currently attached disks and device names.
  string device_name = 67541716 [(google.api.field_behavior) = REQUIRED];

  // Instance name for this request.
  string instance = 18257045 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // The name of the zone for this request.
  string zone = 3744684 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "zone"
  ];

}

// A request message for GlobalNetworkEndpointGroups.DetachNetworkEndpoints. See the method description for details.
message DetachNetworkEndpointsGlobalNetworkEndpointGroupRequest {
  // The body resource for this request
  GlobalNetworkEndpointGroupsDetachEndpointsRequest global_network_endpoint_groups_detach_endpoints_request_resource = 8898269 [(google.api.field_behavior) = REQUIRED];

  // The name of the network endpoint group where you are removing network endpoints. It should comply with RFC1035.
  string network_endpoint_group = 433907078 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

}

// A request message for NetworkEndpointGroups.DetachNetworkEndpoints. See the method description for details.
message DetachNetworkEndpointsNetworkEndpointGroupRequest {
  // The name of the network endpoint group where you are removing network endpoints. It should comply with RFC1035.
  string network_endpoint_group = 433907078 [(google.api.field_behavior) = REQUIRED];

  // The body resource for this request
  NetworkEndpointGroupsDetachEndpointsRequest network_endpoint_groups_detach_endpoints_request_resource = 515608697 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // The name of the zone where the network endpoint group is located. It should comply with RFC1035.
  string zone = 3744684 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "zone"
  ];

}

// A request message for Projects.DisableXpnHost. See the method description for details.
message DisableXpnHostProjectRequest {
  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

}

// A request message for Projects.DisableXpnResource. See the method description for details.
message DisableXpnResourceProjectRequest {
  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // The body resource for this request
  ProjectsDisableXpnResourceRequest projects_disable_xpn_resource_request_resource = 209136170 [(google.api.field_behavior) = REQUIRED];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

}

// Represents a Persistent Disk resource. Google Compute Engine has two Disk resources: * [Zonal](/compute/docs/reference/rest/v1/disks) * [Regional](/compute/docs/reference/rest/v1/regionDisks) Persistent disks are required for running your VM instances. Create both boot and non-boot (data) persistent disks. For more information, read Persistent Disks. For more storage options, read Storage options. The disks resource represents a zonal persistent disk. For more information, read Zonal persistent disks. The regionDisks resource represents a regional persistent disk. For more information, read Regional resources.
message Disk {
  // The architecture of the disk. Valid values are ARM64 or X86_64.
  enum Architecture {
    // A value indicating that the enum field is not set.
    UNDEFINED_ARCHITECTURE = 0;

    // Default value indicating Architecture is not set.
    ARCHITECTURE_UNSPECIFIED = 394750507;

    // Machines with architecture ARM64
    ARM64 = 62547450;

    // Machines with architecture X86_64
    X86_64 = 425300551;

  }

  // [Output Only] The status of disk creation. - CREATING: Disk is provisioning. - RESTORING: Source data is being copied into the disk. - FAILED: Disk creation failed. - READY: Disk is ready for use. - DELETING: Disk is deleting. 
  enum Status {
    // A value indicating that the enum field is not set.
    UNDEFINED_STATUS = 0;

    // Disk is provisioning
    CREATING = 455564985;

    // Disk is deleting.
    DELETING = 528602024;

    // Disk creation failed.
    FAILED = 455706685;

    // Disk is ready for use.
    READY = 77848963;

    // Source data is being copied into the disk.
    RESTORING = 404263851;

  }

  // The architecture of the disk. Valid values are ARM64 or X86_64.
  // Check the Architecture enum for the list of possible values.
  optional string architecture = 302803283;

  // [Output Only] Creation timestamp in RFC3339 text format.
  optional string creation_timestamp = 30525366;

  // An optional description of this resource. Provide this property when you create the resource.
  optional string description = 422937596;

  // Encrypts the disk using a customer-supplied encryption key or a customer-managed encryption key. Encryption keys do not protect access to metadata of the disk. After you encrypt a disk with a customer-supplied key, you must provide the same key if you use the disk later. For example, to create a disk snapshot, to create a disk image, to create a machine image, or to attach the disk to a virtual machine. After you encrypt a disk with a customer-managed key, the diskEncryptionKey.kmsKeyName is set to a key *version* name once the disk is created. The disk is encrypted with this version of the key. In the response, diskEncryptionKey.kmsKeyName appears in the following format: "diskEncryptionKey.kmsKeyName": "projects/kms_project_id/locations/region/keyRings/ key_region/cryptoKeys/key /cryptoKeysVersions/version If you do not provide an encryption key when creating the disk, then the disk is encrypted using an automatically generated key and you don't need to provide a key to use the disk later.
  optional CustomerEncryptionKey disk_encryption_key = 271660677;

  // A list of features to enable on the guest operating system. Applicable only for bootable images. Read Enabling guest operating system features to see a list of available options.
  repeated GuestOsFeature guest_os_features = 79294545;

  // [Output Only] The unique identifier for the resource. This identifier is defined by the server.
  optional uint64 id = 3355;

  // [Output Only] Type of the resource. Always compute#disk for disks.
  optional string kind = 3292052;

  // A fingerprint for the labels being applied to this disk, which is essentially a hash of the labels set used for optimistic locking. The fingerprint is initially generated by Compute Engine and changes after every request to modify or update labels. You must always provide an up-to-date fingerprint hash in order to update or change labels, otherwise the request will fail with error 412 conditionNotMet. To see the latest fingerprint, make a get() request to retrieve a disk.
  optional string label_fingerprint = 178124825;

  // Labels to apply to this disk. These can be later modified by the setLabels method.
  map<string, string> labels = 500195327;

  // [Output Only] Last attach timestamp in RFC3339 text format.
  optional string last_attach_timestamp = 42159653;

  // [Output Only] Last detach timestamp in RFC3339 text format.
  optional string last_detach_timestamp = 56471027;

  // Integer license codes indicating which licenses are attached to this disk.
  repeated int64 license_codes = 45482664;

  // A list of publicly visible licenses. Reserved for Google's use.
  repeated string licenses = 337642578;

  // An opaque location hint used to place the disk close to other resources. This field is for use by internal tools that use the public API.
  optional string location_hint = 350519505;

  // Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
  optional string name = 3373707;

  // Internal use only.
  optional string options = 361137822;

  // Input only. [Input Only] Additional params passed with the request, but not persisted as part of resource payload.
  optional DiskParams params = 78313862;

  // Physical block size of the persistent disk, in bytes. If not present in a request, a default value is used. The currently supported size is 4096, other sizes may be added in the future. If an unsupported value is requested, the error message will list the supported values for the caller's project.
  optional int64 physical_block_size_bytes = 420007943;

  // Indicates how many IOPS to provision for the disk. This sets the number of I/O operations per second that the disk can handle. Values must be between 10,000 and 120,000. For more details, see the Extreme persistent disk documentation.
  optional int64 provisioned_iops = 186769108;

  // [Output Only] URL of the region where the disk resides. Only applicable for regional resources. You must specify this field as part of the HTTP request URL. It is not settable as a field in the request body.
  optional string region = 138946292;

  // URLs of the zones where the disk should be replicated to. Only applicable for regional resources.
  repeated string replica_zones = 48438272;

  // Resource policies applied to this disk for automatic snapshot creations.
  repeated string resource_policies = 22220385;

  // [Output Only] Reserved for future use.
  optional bool satisfies_pzs = 480964267;

  // [Output Only] Server-defined fully-qualified URL for this resource.
  optional string self_link = 456214797;

  // Size, in GB, of the persistent disk. You can specify this field when creating a persistent disk using the sourceImage, sourceSnapshot, or sourceDisk parameter, or specify it alone to create an empty persistent disk. If you specify this field along with a source, the value of sizeGb must not be less than the size of the source. Acceptable values are 1 to 65536, inclusive.
  optional int64 size_gb = 494929369;

  // The source disk used to create this disk. You can provide this as a partial or full URL to the resource. For example, the following are valid values: - https://www.googleapis.com/compute/v1/projects/project/zones/zone /disks/disk - https://www.googleapis.com/compute/v1/projects/project/regions/region /disks/disk - projects/project/zones/zone/disks/disk - projects/project/regions/region/disks/disk - zones/zone/disks/disk - regions/region/disks/disk 
  optional string source_disk = 451753793;

  // [Output Only] The unique ID of the disk used to create this disk. This value identifies the exact disk that was used to create this persistent disk. For example, if you created the persistent disk from a disk that was later deleted and recreated under the same name, the source disk ID would identify the exact version of the disk that was used.
  optional string source_disk_id = 454190809;

  // The source image used to create this disk. If the source image is deleted, this field will not be set. To create a disk with one of the public operating system images, specify the image by its family name. For example, specify family/debian-9 to use the latest Debian 9 image: projects/debian-cloud/global/images/family/debian-9 Alternatively, use a specific version of a public operating system image: projects/debian-cloud/global/images/debian-9-stretch-vYYYYMMDD To create a disk with a custom image that you created, specify the image name in the following format: global/images/my-custom-image You can also specify a custom image by its image family, which returns the latest version of the image in that family. Replace the image name with family/family-name: global/images/family/my-image-family 
  optional string source_image = 50443319;

  // The customer-supplied encryption key of the source image. Required if the source image is protected by a customer-supplied encryption key.
  optional CustomerEncryptionKey source_image_encryption_key = 381503659;

  // [Output Only] The ID value of the image used to create this disk. This value identifies the exact image that was used to create this persistent disk. For example, if you created the persistent disk from an image that was later deleted and recreated under the same name, the source image ID would identify the exact version of the image that was used.
  optional string source_image_id = 55328291;

  // The source snapshot used to create this disk. You can provide this as a partial or full URL to the resource. For example, the following are valid values: - https://www.googleapis.com/compute/v1/projects/project /global/snapshots/snapshot - projects/project/global/snapshots/snapshot - global/snapshots/snapshot 
  optional string source_snapshot = 126061928;

  // The customer-supplied encryption key of the source snapshot. Required if the source snapshot is protected by a customer-supplied encryption key.
  optional CustomerEncryptionKey source_snapshot_encryption_key = 303679322;

  // [Output Only] The unique ID of the snapshot used to create this disk. This value identifies the exact snapshot that was used to create this persistent disk. For example, if you created the persistent disk from a snapshot that was later deleted and recreated under the same name, the source snapshot ID would identify the exact version of the snapshot that was used.
  optional string source_snapshot_id = 98962258;

  // The full Google Cloud Storage URI where the disk image is stored. This file must be a gzip-compressed tarball whose name ends in .tar.gz or virtual machine disk whose name ends in vmdk. Valid URIs may start with gs:// or https://storage.googleapis.com/. This flag is not optimized for creating multiple disks from a source storage object. To create many disks from a source storage object, use gcloud compute images import instead.
  optional string source_storage_object = 233052711;

  // [Output Only] The status of disk creation. - CREATING: Disk is provisioning. - RESTORING: Source data is being copied into the disk. - FAILED: Disk creation failed. - READY: Disk is ready for use. - DELETING: Disk is deleting.
  // Check the Status enum for the list of possible values.
  optional string status = 181260274;

  // URL of the disk type resource describing which disk type to use to create the disk. Provide this when creating the disk. For example: projects/project /zones/zone/diskTypes/pd-ssd . See Persistent disk types.
  optional string type = 3575610;

  // [Output Only] Links to the users of the disk (attached instances) in form: projects/project/zones/zone/instances/instance
  repeated string users = 111578632;

  // [Output Only] URL of the zone where the disk resides. You must specify this field as part of the HTTP request URL. It is not settable as a field in the request body.
  optional string zone = 3744684;

}

//
message DiskAggregatedList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 3355;

  // A list of DisksScopedList resources.
  map<string, DisksScopedList> items = 100526016;

  // [Output Only] Type of resource. Always compute#diskAggregatedList for aggregated lists of persistent disks.
  optional string kind = 3292052;

  // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
  optional string next_page_token = 79797525;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 456214797;

  // [Output Only] Unreachable resources.
  repeated string unreachables = 243372063;

  // [Output Only] Informational warning message.
  optional Warning warning = 50704284;

}

// A specification of the desired way to instantiate a disk in the instance template when its created from a source instance.
message DiskInstantiationConfig {
  // Specifies whether to include the disk and what image to use. Possible values are: - source-image: to use the same image that was used to create the source instance's corresponding disk. Applicable to the boot disk and additional read-write disks. - source-image-family: to use the same image family that was used to create the source instance's corresponding disk. Applicable to the boot disk and additional read-write disks. - custom-image: to use a user-provided image url for disk creation. Applicable to the boot disk and additional read-write disks. - attach-read-only: to attach a read-only disk. Applicable to read-only disks. - do-not-include: to exclude a disk from the template. Applicable to additional read-write disks, local SSDs, and read-only disks. 
  enum InstantiateFrom {
    // A value indicating that the enum field is not set.
    UNDEFINED_INSTANTIATE_FROM = 0;

    // Attach the existing disk in read-only mode. The request will fail if the disk was attached in read-write mode on the source instance. Applicable to: read-only disks.
    ATTACH_READ_ONLY = 513775419;

    // Create a blank disk. The disk will be created unformatted. Applicable to: additional read-write disks, local SSDs.
    BLANK = 63281460;

    // Use the custom image specified in the custom_image field. Applicable to: boot disk, additional read-write disks.
    CUSTOM_IMAGE = 196311789;

    // Use the default instantiation option for the corresponding type of disk. For boot disk and any other R/W disks, new custom images will be created from each disk. For read-only disks, they will be attached in read-only mode. Local SSD disks will be created as blank volumes.
    DEFAULT = 115302945;

    // Do not include the disk in the instance template. Applicable to: additional read-write disks, local SSDs, read-only disks.
    DO_NOT_INCLUDE = 104218952;

    // Use the same source image used for creation of the source instance's corresponding disk. The request will fail if the source VM's disk was created from a snapshot. Applicable to: boot disk, additional read-write disks.
    SOURCE_IMAGE = 62631959;

    // Use the same source image family used for creation of the source instance's corresponding disk. The request will fail if the source image of the source disk does not belong to any image family. Applicable to: boot disk, additional read-write disks.
    SOURCE_IMAGE_FAMILY = 76850316;

  }

  // Specifies whether the disk will be auto-deleted when the instance is deleted (but not when the disk is detached from the instance).
  optional bool auto_delete = 464761403;

  // The custom source image to be used to restore this disk when instantiating this instance template.
  optional string custom_image = 184123149;

  // Specifies the device name of the disk to which the configurations apply to.
  optional string device_name = 67541716;

  // Specifies whether to include the disk and what image to use. Possible values are: - source-image: to use the same image that was used to create the source instance's corresponding disk. Applicable to the boot disk and additional read-write disks. - source-image-family: to use the same image family that was used to create the source instance's corresponding disk. Applicable to the boot disk and additional read-write disks. - custom-image: to use a user-provided image url for disk creation. Applicable to the boot disk and additional read-write disks. - attach-read-only: to attach a read-only disk. Applicable to read-only disks. - do-not-include: to exclude a disk from the template. Applicable to additional read-write disks, local SSDs, and read-only disks.
  // Check the InstantiateFrom enum for the list of possible values.
  optional string instantiate_from = 393383903;

}

// A list of Disk resources.
message DiskList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 3355;

  // A list of Disk resources.
  repeated Disk items = 100526016;

  // [Output Only] Type of resource. Always compute#diskList for lists of disks.
  optional string kind = 3292052;

  // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
  optional string next_page_token = 79797525;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 456214797;

  // [Output Only] Informational warning message.
  optional Warning warning = 50704284;

}

//
message DiskMoveRequest {
  // The URL of the destination zone to move the disk. This can be a full or partial URL. For example, the following are all valid URLs to a zone: - https://www.googleapis.com/compute/v1/projects/project/zones/zone - projects/project/zones/zone - zones/zone 
  optional string destination_zone = 131854653;

  // The URL of the target disk to move. This can be a full or partial URL. For example, the following are all valid URLs to a disk: - https://www.googleapis.com/compute/v1/projects/project/zones/zone /disks/disk - projects/project/zones/zone/disks/disk - zones/zone/disks/disk 
  optional string target_disk = 62433163;

}

// Additional disk params.
message DiskParams {
  // Resource manager tags to be bound to the disk. Tag keys and values have the same definition as resource manager tags. Keys must be in the format `tagKeys/{tag_key_id}`, and values are in the format `tagValues/456`. The field is ignored (both PUT & PATCH) when empty.
  map<string, string> resource_manager_tags = 377671164;

}

// Represents a Disk Type resource. Google Compute Engine has two Disk Type resources: * [Regional](/compute/docs/reference/rest/v1/regionDiskTypes) * [Zonal](/compute/docs/reference/rest/v1/diskTypes) You can choose from a variety of disk types based on your needs. For more information, read Storage options. The diskTypes resource represents disk types for a zonal persistent disk. For more information, read Zonal persistent disks. The regionDiskTypes resource represents disk types for a regional persistent disk. For more information, read Regional persistent disks.
message DiskType {
  // [Output Only] Creation timestamp in RFC3339 text format.
  optional string creation_timestamp = 30525366;

  // [Output Only] Server-defined default disk size in GB.
  optional int64 default_disk_size_gb = 270619253;

  // [Output Only] The deprecation status associated with this disk type.
  optional DeprecationStatus deprecated = 515138995;

  // [Output Only] An optional description of this resource.
  optional string description = 422937596;

  // [Output Only] The unique identifier for the resource. This identifier is defined by the server.
  optional uint64 id = 3355;

  // [Output Only] Type of the resource. Always compute#diskType for disk types.
  optional string kind = 3292052;

  // [Output Only] Name of the resource.
  optional string name = 3373707;

  // [Output Only] URL of the region where the disk type resides. Only applicable for regional resources. You must specify this field as part of the HTTP request URL. It is not settable as a field in the request body.
  optional string region = 138946292;

  // [Output Only] Server-defined URL for the resource.
  optional string self_link = 456214797;

  // [Output Only] An optional textual description of the valid disk size, such as "10GB-10TB".
  optional string valid_disk_size = 493962464;

  // [Output Only] URL of the zone where the disk type resides. You must specify this field as part of the HTTP request URL. It is not settable as a field in the request body.
  optional string zone = 3744684;

}

//
message DiskTypeAggregatedList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 3355;

  // A list of DiskTypesScopedList resources.
  map<string, DiskTypesScopedList> items = 100526016;

  // [Output Only] Type of resource. Always compute#diskTypeAggregatedList.
  optional string kind = 3292052;

  // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
  optional string next_page_token = 79797525;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 456214797;

  // [Output Only] Unreachable resources.
  repeated string unreachables = 243372063;

  // [Output Only] Informational warning message.
  optional Warning warning = 50704284;

}

// Contains a list of disk types.
message DiskTypeList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 3355;

  // A list of DiskType resources.
  repeated DiskType items = 100526016;

  // [Output Only] Type of resource. Always compute#diskTypeList for disk types.
  optional string kind = 3292052;

  // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
  optional string next_page_token = 79797525;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 456214797;

  // [Output Only] Informational warning message.
  optional Warning warning = 50704284;

}

//
message DiskTypesScopedList {
  // [Output Only] A list of disk types contained in this scope.
  repeated DiskType disk_types = 198926167;

  // [Output Only] Informational warning which replaces the list of disk types when the list is empty.
  optional Warning warning = 50704284;

}

//
message DisksAddResourcePoliciesRequest {
  // Full or relative path to the resource policy to be added to this disk. You can only specify one resource policy.
  repeated string resource_policies = 22220385;

}

//
message DisksRemoveResourcePoliciesRequest {
  // Resource policies to be removed from this disk.
  repeated string resource_policies = 22220385;

}

//
message DisksResizeRequest {
  // The new size of the persistent disk, which is specified in GB.
  optional int64 size_gb = 494929369;

}

//
message DisksScopedList {
  // [Output Only] A list of disks contained in this scope.
  repeated Disk disks = 95594102;

  // [Output Only] Informational warning which replaces the list of disks when the list is empty.
  optional Warning warning = 50704284;

}

// A set of Display Device options
message DisplayDevice {
  // Defines whether the instance has Display enabled.
  optional bool enable_display = 14266886;

}

//
message DistributionPolicy {
  // The distribution shape to which the group converges either proactively or on resize events (depending on the value set in updatePolicy.instanceRedistributionType).
  enum TargetShape {
    // A value indicating that the enum field is not set.
    UNDEFINED_TARGET_SHAPE = 0;

    // The group picks zones for creating VM instances to fulfill the requested number of VMs within present resource constraints and to maximize utilization of unused zonal reservations. Recommended for batch workloads that do not require high availability.
    ANY = 64972;

    // The group prioritizes acquisition of resources, scheduling VMs in zones where resources are available while distributing VMs as evenly as possible across selected zones to minimize the impact of zonal failure. Recommended for highly available serving workloads.
    BALANCED = 468409608;

    // The group schedules VM instance creation and deletion to achieve and maintain an even number of managed instances across the selected zones. The distribution is even when the number of managed instances does not differ by more than 1 between any two zones. Recommended for highly available serving workloads.
    EVEN = 2140442;

  }

  // The distribution shape to which the group converges either proactively or on resize events (depending on the value set in updatePolicy.instanceRedistributionType).
  // Check the TargetShape enum for the list of possible values.
  optional string target_shape = 338621299;

  // Zones where the regional managed instance group will create and manage its instances.
  repeated DistributionPolicyZoneConfiguration zones = 116085319;

}

//
message DistributionPolicyZoneConfiguration {
  // The URL of the zone. The zone must exist in the region where the managed instance group is located.
  optional string zone = 3744684;

}

// A Duration represents a fixed-length span of time represented as a count of seconds and fractions of seconds at nanosecond resolution. It is independent of any calendar and concepts like "day" or "month". Range is approximately 10,000 years.
message Duration {
  // Span of time that's a fraction of a second at nanosecond resolution. Durations less than one second are represented with a 0 `seconds` field and a positive `nanos` field. Must be from 0 to 999,999,999 inclusive.
  optional int32 nanos = 104586303;

  // Span of time at a resolution of a second. Must be from 0 to 315,576,000,000 inclusive. Note: these bounds are computed from: 60 sec/min * 60 min/hr * 24 hr/day * 365.25 days/year * 10000 years
  optional int64 seconds = 359484031;

}

// A request message for Projects.EnableXpnHost. See the method description for details.
message EnableXpnHostProjectRequest {
  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

}

// A request message for Projects.EnableXpnResource. See the method description for details.
message EnableXpnResourceProjectRequest {
  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // The body resource for this request
  ProjectsEnableXpnResourceRequest projects_enable_xpn_resource_request_resource = 421980207 [(google.api.field_behavior) = REQUIRED];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

}

// [Output Only] If errors are generated during processing of the operation, this field will be populated.
message Error {
  // [Output Only] The array of errors encountered while processing this operation.
  repeated Errors errors = 315977579;

}

//
message ErrorDetails {
  optional ErrorInfo error_info = 25251973;

  optional Help help = 3198785;

  optional LocalizedMessage localized_message = 404537155;

  optional QuotaExceededInfo quota_info = 93923861;

}

// Describes the cause of the error with structured details. Example of an error when contacting the "pubsub.googleapis.com" API when it is not enabled: { "reason": "API_DISABLED" "domain": "googleapis.com" "metadata": { "resource": "projects/123", "service": "pubsub.googleapis.com" } } This response indicates that the pubsub.googleapis.com API is not enabled. Example of an error that is returned when attempting to create a Spanner instance in a region that is out of stock: { "reason": "STOCKOUT" "domain": "spanner.googleapis.com", "metadata": { "availableRegions": "us-central1,us-east2" } }
message ErrorInfo {
  // The logical grouping to which the "reason" belongs. The error domain is typically the registered service name of the tool or product that generates the error. Example: "pubsub.googleapis.com". If the error is generated by some common infrastructure, the error domain must be a globally unique value that identifies the infrastructure. For Google API infrastructure, the error domain is "googleapis.com".
  optional string domain = 284415172;

  // Additional structured details about this error. Keys should match /[a-zA-Z0-9-_]/ and be limited to 64 characters in length. When identifying the current value of an exceeded limit, the units should be contained in the key, not the value. For example, rather than {"instanceLimit": "100/request"}, should be returned as, {"instanceLimitPerRequest": "100"}, if the client exceeds the number of instances that can be created in a single (batch) request.
  map<string, string> metadatas = 8514340;

  // The reason of the error. This is a constant value that identifies the proximate cause of the error. Error reasons are unique within a particular domain of errors. This should be at most 63 characters and match a regular expression of `A-Z+[A-Z0-9]`, which represents UPPER_SNAKE_CASE.
  optional string reason = 138777156;

}

//
message Errors {
  // [Output Only] The error type identifier for this error.
  optional string code = 3059181;

  // [Output Only] An optional list of messages that contain the error details. There is a set of defined message types to use for providing details.The syntax depends on the error code. For example, QuotaExceededInfo will have details when the error code is QUOTA_EXCEEDED.
  repeated ErrorDetails error_details = 274653963;

  // [Output Only] Indicates the field in the request that caused the error. This property is optional.
  optional string location = 290430901;

  // [Output Only] An optional, human-readable error message.
  optional string message = 418054151;

}

//
message ExchangedPeeringRoute {
  // The type of the peering route.
  enum Type {
    // A value indicating that the enum field is not set.
    UNDEFINED_TYPE = 0;

    // For routes exported from local network.
    DYNAMIC_PEERING_ROUTE = 469794858;

    // The peering route.
    STATIC_PEERING_ROUTE = 473407545;

    // The peering route corresponding to subnetwork range.
    SUBNET_PEERING_ROUTE = 465782504;

  }

  // The destination range of the route.
  optional string dest_range = 381327712;

  // True if the peering route has been imported from a peer. The actual import happens if the field networkPeering.importCustomRoutes is true for this network, and networkPeering.exportCustomRoutes is true for the peer network, and the import does not result in a route conflict.
  optional bool imported = 114502404;

  // The region of peering route next hop, only applies to dynamic routes.
  optional string next_hop_region = 122577014;

  // The priority of the peering route.
  optional uint32 priority = 445151652;

  // The type of the peering route.
  // Check the Type enum for the list of possible values.
  optional string type = 3575610;

}

//
message ExchangedPeeringRoutesList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 3355;

  // A list of ExchangedPeeringRoute resources.
  repeated ExchangedPeeringRoute items = 100526016;

  // [Output Only] Type of resource. Always compute#exchangedPeeringRoutesList for exchanged peering routes lists.
  optional string kind = 3292052;

  // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
  optional string next_page_token = 79797525;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 456214797;

  // [Output Only] Informational warning message.
  optional Warning warning = 50704284;

}

// A request message for Subnetworks.ExpandIpCidrRange. See the method description for details.
message ExpandIpCidrRangeSubnetworkRequest {
  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // Name of the region scoping this request.
  string region = 138946292 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "region"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // Name of the Subnetwork resource to update.
  string subnetwork = 307827694 [(google.api.field_behavior) = REQUIRED];

  // The body resource for this request
  SubnetworksExpandIpCidrRangeRequest subnetworks_expand_ip_cidr_range_request_resource = 477014110 [(google.api.field_behavior) = REQUIRED];

}

// Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: "Summary size limit" description: "Determines if a summary is less than 100 chars" expression: "document.summary.size() < 100" Example (Equality): title: "Requestor is owner" description: "Determines if requestor is the document owner" expression: "document.owner == request.auth.claims.email" Example (Logic): title: "Public documents" description: "Determine whether the document should be publicly visible" expression: "document.type != 'private' && document.type != 'internal'" Example (Data Manipulation): title: "Notification string" description: "Create a notification string with a timestamp." expression: "'New message received at ' + string(document.create_time)" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.
message Expr {
  // Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
  optional string description = 422937596;

  // Textual representation of an expression in Common Expression Language syntax.
  optional string expression = 352031384;

  // Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.
  optional string location = 290430901;

  // Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.
  optional string title = 110371416;

}

// Represents an external VPN gateway. External VPN gateway is the on-premises VPN gateway(s) or another cloud provider's VPN gateway that connects to your Google Cloud VPN gateway. To create a highly available VPN from Google Cloud Platform to your VPN gateway or another cloud provider's VPN gateway, you must create a external VPN gateway resource with information about the other gateway. For more information about using external VPN gateways, see Creating an HA VPN gateway and tunnel pair to a peer VPN.
message ExternalVpnGateway {
  // Indicates the user-supplied redundancy type of this external VPN gateway.
  enum RedundancyType {
    // A value indicating that the enum field is not set.
    UNDEFINED_REDUNDANCY_TYPE = 0;

    // The external VPN gateway has four public IP addresses; at the time of writing this API, the AWS virtual private gateway is an example which has four public IP addresses for high availability connections; there should be two VPN connections in the AWS virtual private gateway , each AWS VPN connection has two public IP addresses; please make sure to put two public IP addresses from one AWS VPN connection into interfaces 0 and 1 of this external VPN gateway, and put the other two public IP addresses from another AWS VPN connection into interfaces 2 and 3 of this external VPN gateway. When displaying highly available configuration status for the VPN tunnels connected to FOUR_IPS_REDUNDANCY external VPN gateway, Google will always detect whether interfaces 0 and 1 are connected on one interface of HA Cloud VPN gateway, and detect whether interfaces 2 and 3 are connected to another interface of the HA Cloud VPN gateway.
    FOUR_IPS_REDUNDANCY = 520087913;

    // The external VPN gateway has only one public IP address which internally provide redundancy or failover.
    SINGLE_IP_INTERNALLY_REDUNDANT = 133914873;

    // The external VPN gateway has two public IP addresses which are redundant with each other, the following two types of setup on your on-premises side would have this type of redundancy: (1) Two separate on-premises gateways, each with one public IP address, the two on-premises gateways are redundant with each other. (2) A single on-premise gateway with two public IP addresses that are redundant with eatch other.
    TWO_IPS_REDUNDANCY = 367049635;

  }

  // [Output Only] Creation timestamp in RFC3339 text format.
  optional string creation_timestamp = 30525366;

  // An optional description of this resource. Provide this property when you create the resource.
  optional string description = 422937596;

  // [Output Only] The unique identifier for the resource. This identifier is defined by the server.
  optional uint64 id = 3355;

  // A list of interfaces for this external VPN gateway. If your peer-side gateway is an on-premises gateway and non-AWS cloud providers' gateway, at most two interfaces can be provided for an external VPN gateway. If your peer side is an AWS virtual private gateway, four interfaces should be provided for an external VPN gateway.
  repeated ExternalVpnGatewayInterface interfaces = 12073562;

  // [Output Only] Type of the resource. Always compute#externalVpnGateway for externalVpnGateways.
  optional string kind = 3292052;

  // A fingerprint for the labels being applied to this ExternalVpnGateway, which is essentially a hash of the labels set used for optimistic locking. The fingerprint is initially generated by Compute Engine and changes after every request to modify or update labels. You must always provide an up-to-date fingerprint hash in order to update or change labels, otherwise the request will fail with error 412 conditionNotMet. To see the latest fingerprint, make a get() request to retrieve an ExternalVpnGateway.
  optional string label_fingerprint = 178124825;

  // Labels for this resource. These can only be added or modified by the setLabels method. Each label key/value pair must comply with RFC1035. Label values may be empty.
  map<string, string> labels = 500195327;

  // Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
  optional string name = 3373707;

  // Indicates the user-supplied redundancy type of this external VPN gateway.
  // Check the RedundancyType enum for the list of possible values.
  optional string redundancy_type = 271443740;

  // [Output Only] Server-defined URL for the resource.
  optional string self_link = 456214797;

}

// The interface for the external VPN gateway.
message ExternalVpnGatewayInterface {
  // The numeric ID of this interface. The allowed input values for this id for different redundancy types of external VPN gateway: - SINGLE_IP_INTERNALLY_REDUNDANT - 0 - TWO_IPS_REDUNDANCY - 0, 1 - FOUR_IPS_REDUNDANCY - 0, 1, 2, 3 
  optional uint32 id = 3355;

  // IP address of the interface in the external VPN gateway. Only IPv4 is supported. This IP address can be either from your on-premise gateway or another Cloud provider's VPN gateway, it cannot be an IP address from Google Compute Engine.
  optional string ip_address = 406272220;

}

// Response to the list request, and contains a list of externalVpnGateways.
message ExternalVpnGatewayList {
  optional string etag = 3123477;

  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 3355;

  // A list of ExternalVpnGateway resources.
  repeated ExternalVpnGateway items = 100526016;

  // [Output Only] Type of resource. Always compute#externalVpnGatewayList for lists of externalVpnGateways.
  optional string kind = 3292052;

  // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
  optional string next_page_token = 79797525;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 456214797;

  // [Output Only] Informational warning message.
  optional Warning warning = 50704284;

}

//
message FileContentBuffer {
  // The file type of source file.
  enum FileType {
    // A value indicating that the enum field is not set.
    UNDEFINED_FILE_TYPE = 0;

    BIN = 65767;

    UNDEFINED = 137851184;

    X509 = 2674086;

  }

  // The raw content in the secure keys file.
  optional string content = 414659705;

  // The file type of source file.
  // Check the FileType enum for the list of possible values.
  optional string file_type = 294346781;

}

// Represents a Firewall Rule resource. Firewall rules allow or deny ingress traffic to, and egress traffic from your instances. For more information, read Firewall rules.
message Firewall {
  // Direction of traffic to which this firewall applies, either `INGRESS` or `EGRESS`. The default is `INGRESS`. For `EGRESS` traffic, you cannot specify the sourceTags fields.
  enum Direction {
    // A value indicating that the enum field is not set.
    UNDEFINED_DIRECTION = 0;

    // Indicates that firewall should apply to outgoing traffic.
    EGRESS = 432880501;

    // Indicates that firewall should apply to incoming traffic.
    INGRESS = 516931221;

  }

  // The list of ALLOW rules specified by this firewall. Each rule specifies a protocol and port-range tuple that describes a permitted connection.
  repeated Allowed allowed = 162398632;

  // [Output Only] Creation timestamp in RFC3339 text format.
  optional string creation_timestamp = 30525366;

  // The list of DENY rules specified by this firewall. Each rule specifies a protocol and port-range tuple that describes a denied connection.
  repeated Denied denied = 275217307;

  // An optional description of this resource. Provide this field when you create the resource.
  optional string description = 422937596;

  // If destination ranges are specified, the firewall rule applies only to traffic that has destination IP address in these ranges. These ranges must be expressed in CIDR format. Both IPv4 and IPv6 are supported.
  repeated string destination_ranges = 305699879;

  // Direction of traffic to which this firewall applies, either `INGRESS` or `EGRESS`. The default is `INGRESS`. For `EGRESS` traffic, you cannot specify the sourceTags fields.
  // Check the Direction enum for the list of possible values.
  optional string direction = 111150975;

  // Denotes whether the firewall rule is disabled. When set to true, the firewall rule is not enforced and the network behaves as if it did not exist. If this is unspecified, the firewall rule will be enabled.
  optional bool disabled = 270940796;

  // [Output Only] The unique identifier for the resource. This identifier is defined by the server.
  optional uint64 id = 3355;

  // [Output Only] Type of the resource. Always compute#firewall for firewall rules.
  optional string kind = 3292052;

  // This field denotes the logging options for a particular firewall rule. If logging is enabled, logs will be exported to Cloud Logging.
  optional FirewallLogConfig log_config = 351299741;

  // Name of the resource; provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?`. The first character must be a lowercase letter, and all following characters (except for the last character) must be a dash, lowercase letter, or digit. The last character must be a lowercase letter or digit.
  optional string name = 3373707;

  // URL of the network resource for this firewall rule. If not specified when creating a firewall rule, the default network is used: global/networks/default If you choose to specify this field, you can specify the network as a full or partial URL. For example, the following are all valid URLs: - https://www.googleapis.com/compute/v1/projects/myproject/global/networks/my-network - projects/myproject/global/networks/my-network - global/networks/default 
  optional string network = 232872494;

  // Priority for this rule. This is an integer between `0` and `65535`, both inclusive. The default value is `1000`. Relative priorities determine which rule takes effect if multiple rules apply. Lower values indicate higher priority. For example, a rule with priority `0` has higher precedence than a rule with priority `1`. DENY rules take precedence over ALLOW rules if they have equal priority. Note that VPC networks have implied rules with a priority of `65535`. To avoid conflicts with the implied rules, use a priority number less than `65535`.
  optional int32 priority = 445151652;

  // [Output Only] Server-defined URL for the resource.
  optional string self_link = 456214797;

  // If source ranges are specified, the firewall rule applies only to traffic that has a source IP address in these ranges. These ranges must be expressed in CIDR format. One or both of sourceRanges and sourceTags may be set. If both fields are set, the rule applies to traffic that has a source IP address within sourceRanges OR a source IP from a resource with a matching tag listed in the sourceTags field. The connection does not need to match both fields for the rule to apply. Both IPv4 and IPv6 are supported.
  repeated string source_ranges = 200097658;

  // If source service accounts are specified, the firewall rules apply only to traffic originating from an instance with a service account in this list. Source service accounts cannot be used to control traffic to an instance's external IP address because service accounts are associated with an instance, not an IP address. sourceRanges can be set at the same time as sourceServiceAccounts. If both are set, the firewall applies to traffic that has a source IP address within the sourceRanges OR a source IP that belongs to an instance with service account listed in sourceServiceAccount. The connection does not need to match both fields for the firewall to apply. sourceServiceAccounts cannot be used at the same time as sourceTags or targetTags.
  repeated string source_service_accounts = 105100756;

  // If source tags are specified, the firewall rule applies only to traffic with source IPs that match the primary network interfaces of VM instances that have the tag and are in the same VPC network. Source tags cannot be used to control traffic to an instance's external IP address, it only applies to traffic between instances in the same virtual network. Because tags are associated with instances, not IP addresses. One or both of sourceRanges and sourceTags may be set. If both fields are set, the firewall applies to traffic that has a source IP address within sourceRanges OR a source IP from a resource with a matching tag listed in the sourceTags field. The connection does not need to match both fields for the firewall to apply.
  repeated string source_tags = 452222397;

  // A list of service accounts indicating sets of instances located in the network that may make network connections as specified in allowed[]. targetServiceAccounts cannot be used at the same time as targetTags or sourceTags. If neither targetServiceAccounts nor targetTags are specified, the firewall rule applies to all instances on the specified network.
  repeated string target_service_accounts = 457639710;

  // A list of tags that controls which instances the firewall rule applies to. If targetTags are specified, then the firewall rule applies only to instances in the VPC network that have one of those tags. If no targetTags are specified, the firewall rule applies to all instances on the specified network.
  repeated string target_tags = 62901767;

}

// Contains a list of firewalls.
message FirewallList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 3355;

  // A list of Firewall resources.
  repeated Firewall items = 100526016;

  // [Output Only] Type of resource. Always compute#firewallList for lists of firewalls.
  optional string kind = 3292052;

  // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
  optional string next_page_token = 79797525;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 456214797;

  // [Output Only] Informational warning message.
  optional Warning warning = 50704284;

}

// The available logging options for a firewall rule.
message FirewallLogConfig {
  // This field can only be specified for a particular firewall rule if logging is enabled for that rule. This field denotes whether to include or exclude metadata for firewall logs.
  enum Metadata {
    // A value indicating that the enum field is not set.
    UNDEFINED_METADATA = 0;

    EXCLUDE_ALL_METADATA = 334519954;

    INCLUDE_ALL_METADATA = 164619908;

  }

  // This field denotes whether to enable logging for a particular firewall rule.
  optional bool enable = 311764355;

  // This field can only be specified for a particular firewall rule if logging is enabled for that rule. This field denotes whether to include or exclude metadata for firewall logs.
  // Check the Metadata enum for the list of possible values.
  optional string metadata = 86866735;

}

//
message FirewallPoliciesListAssociationsResponse {
  // A list of associations.
  repeated FirewallPolicyAssociation associations = 508736530;

  // [Output Only] Type of firewallPolicy associations. Always compute#FirewallPoliciesListAssociations for lists of firewallPolicy associations.
  optional string kind = 3292052;

}

// Represents a Firewall Policy resource.
message FirewallPolicy {
  // A list of associations that belong to this firewall policy.
  repeated FirewallPolicyAssociation associations = 508736530;

  // [Output Only] Creation timestamp in RFC3339 text format.
  optional string creation_timestamp = 30525366;

  // An optional description of this resource. Provide this property when you create the resource.
  optional string description = 422937596;

  // Deprecated, please use short name instead. User-provided name of the Organization firewall policy. The name should be unique in the organization in which the firewall policy is created. This field is not applicable to network firewall policies. This name must be set on creation and cannot be changed. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
  optional string display_name = 4473832;

  // Specifies a fingerprint for this resource, which is essentially a hash of the metadata's contents and used for optimistic locking. The fingerprint is initially generated by Compute Engine and changes after every request to modify or update metadata. You must always provide an up-to-date fingerprint hash in order to update or change metadata, otherwise the request will fail with error 412 conditionNotMet. To see the latest fingerprint, make get() request to the firewall policy.
  optional string fingerprint = 234678500;

  // [Output Only] The unique identifier for the resource. This identifier is defined by the server.
  optional uint64 id = 3355;

  // [Output only] Type of the resource. Always compute#firewallPolicyfor firewall policies
  optional string kind = 3292052;

  // Name of the resource. For Organization Firewall Policies it's a [Output Only] numeric ID allocated by Google Cloud which uniquely identifies the Organization Firewall Policy.
  optional string name = 3373707;

  // [Output Only] The parent of the firewall policy. This field is not applicable to network firewall policies.
  optional string parent = 78317738;

  // [Output Only] URL of the region where the regional firewall policy resides. This field is not applicable to global firewall policies. You must specify this field as part of the HTTP request URL. It is not settable as a field in the request body.
  optional string region = 138946292;

  // [Output Only] Total count of all firewall policy rule tuples. A firewall policy can not exceed a set number of tuples.
  optional int32 rule_tuple_count = 388342037;

  // A list of rules that belong to this policy. There must always be a default rule (rule with priority 2147483647 and match "*"). If no rules are provided when creating a firewall policy, a default rule with action "allow" will be added.
  repeated FirewallPolicyRule rules = 108873975;

  // [Output Only] Server-defined URL for the resource.
  optional string self_link = 456214797;

  // [Output Only] Server-defined URL for this resource with the resource id.
  optional string self_link_with_id = 44520962;

  // User-provided name of the Organization firewall policy. The name should be unique in the organization in which the firewall policy is created. This field is not applicable to network firewall policies. This name must be set on creation and cannot be changed. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
  optional string short_name = 492051566;

}

//
message FirewallPolicyAssociation {
  // The target that the firewall policy is attached to.
  optional string attachment_target = 175773741;

  // [Output Only] Deprecated, please use short name instead. The display name of the firewall policy of the association.
  optional string display_name = 4473832;

  // [Output Only] The firewall policy ID of the association.
  optional string firewall_policy_id = 357211849;

  // The name for an association.
  optional string name = 3373707;

  // [Output Only] The short name of the firewall policy of the association.
  optional string short_name = 492051566;

}

//
message FirewallPolicyList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 3355;

  // A list of FirewallPolicy resources.
  repeated FirewallPolicy items = 100526016;

  // [Output Only] Type of resource. Always compute#firewallPolicyList for listsof FirewallPolicies
  optional string kind = 3292052;

  // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
  optional string next_page_token = 79797525;

  // [Output Only] Informational warning message.
  optional Warning warning = 50704284;

}

// Represents a rule that describes one or more match conditions along with the action to be taken when traffic matches this condition (allow or deny).
message FirewallPolicyRule {
  // The direction in which this rule applies.
  enum Direction {
    // A value indicating that the enum field is not set.
    UNDEFINED_DIRECTION = 0;

    EGRESS = 432880501;

    INGRESS = 516931221;

  }

  // The Action to perform when the client connection triggers the rule. Valid actions are "allow", "deny" and "goto_next".
  optional string action = 187661878;

  // An optional description for this resource.
  optional string description = 422937596;

  // The direction in which this rule applies.
  // Check the Direction enum for the list of possible values.
  optional string direction = 111150975;

  // Denotes whether the firewall policy rule is disabled. When set to true, the firewall policy rule is not enforced and traffic behaves as if it did not exist. If this is unspecified, the firewall policy rule will be enabled.
  optional bool disabled = 270940796;

  // Denotes whether to enable logging for a particular rule. If logging is enabled, logs will be exported to the configured export destination in Stackdriver. Logs may be exported to BigQuery or Pub/Sub. Note: you cannot enable logging on "goto_next" rules.
  optional bool enable_logging = 295396515;

  // [Output only] Type of the resource. Always compute#firewallPolicyRule for firewall policy rules
  optional string kind = 3292052;

  // A match condition that incoming traffic is evaluated against. If it evaluates to true, the corresponding 'action' is enforced.
  optional FirewallPolicyRuleMatcher match = 103668165;

  // An integer indicating the priority of a rule in the list. The priority must be a positive value between 0 and 2147483647. Rules are evaluated from highest to lowest priority where 0 is the highest priority and 2147483647 is the lowest prority.
  optional int32 priority = 445151652;

  // An optional name for the rule. This field is not a unique identifier and can be updated.
  optional string rule_name = 55286254;

  // [Output Only] Calculation of the complexity of a single firewall policy rule.
  optional int32 rule_tuple_count = 388342037;

  // A list of network resource URLs to which this rule applies. This field allows you to control which network's VMs get this rule. If this field is left blank, all VMs within the organization will receive the rule.
  repeated string target_resources = 528230647;

  // A list of secure tags that controls which instances the firewall rule applies to. If targetSecureTag are specified, then the firewall rule applies only to instances in the VPC network that have one of those EFFECTIVE secure tags, if all the target_secure_tag are in INEFFECTIVE state, then this rule will be ignored. targetSecureTag may not be set at the same time as targetServiceAccounts. If neither targetServiceAccounts nor targetSecureTag are specified, the firewall rule applies to all instances on the specified network. Maximum number of target label tags allowed is 256.
  repeated FirewallPolicyRuleSecureTag target_secure_tags = 468132403;

  // A list of service accounts indicating the sets of instances that are applied with this rule.
  repeated string target_service_accounts = 457639710;

}

// Represents a match condition that incoming traffic is evaluated against. Exactly one field must be specified.
message FirewallPolicyRuleMatcher {
  // CIDR IP address range. Maximum number of destination CIDR IP ranges allowed is 5000.
  repeated string dest_ip_ranges = 337357713;

  // Pairs of IP protocols and ports that the rule should match.
  repeated FirewallPolicyRuleMatcherLayer4Config layer4_configs = 373534261;

  // CIDR IP address range. Maximum number of source CIDR IP ranges allowed is 5000.
  repeated string src_ip_ranges = 432128083;

  // List of secure tag values, which should be matched at the source of the traffic. For INGRESS rule, if all the srcSecureTag are INEFFECTIVE, and there is no srcIpRange, this rule will be ignored. Maximum number of source tag values allowed is 256.
  repeated FirewallPolicyRuleSecureTag src_secure_tags = 508791302;

}

//
message FirewallPolicyRuleMatcherLayer4Config {
  // The IP protocol to which this rule applies. The protocol type is required when creating a firewall rule. This value can either be one of the following well known protocol strings (tcp, udp, icmp, esp, ah, ipip, sctp), or the IP protocol number.
  optional string ip_protocol = 475958960;

  // An optional list of ports to which this rule applies. This field is only applicable for UDP or TCP protocol. Each entry must be either an integer or a range. If not specified, this rule applies to connections through any port. Example inputs include: ["22"], ["80","443"], and ["12345-12349"].
  repeated string ports = 106854418;

}

//
message FirewallPolicyRuleSecureTag {
  // [Output Only] State of the secure tag, either `EFFECTIVE` or `INEFFECTIVE`. A secure tag is `INEFFECTIVE` when it is deleted or its network is deleted.
  enum State {
    // A value indicating that the enum field is not set.
    UNDEFINED_STATE = 0;

    EFFECTIVE = 244201863;

    INEFFECTIVE = 304458242;

  }

  // Name of the secure tag, created with TagManager's TagValue API.
  optional string name = 3373707;

  // [Output Only] State of the secure tag, either `EFFECTIVE` or `INEFFECTIVE`. A secure tag is `INEFFECTIVE` when it is deleted or its network is deleted.
  // Check the State enum for the list of possible values.
  optional string state = 109757585;

}

// Encapsulates numeric value that can be either absolute or relative.
message FixedOrPercent {
  // [Output Only] Absolute value of VM instances calculated based on the specific mode. - If the value is fixed, then the calculated value is equal to the fixed value. - If the value is a percent, then the calculated value is percent/100 * targetSize. For example, the calculated value of a 80% of a managed instance group with 150 instances would be (80/100 * 150) = 120 VM instances. If there is a remainder, the number is rounded. 
  optional int32 calculated = 472082878;

  // Specifies a fixed number of VM instances. This must be a positive integer.
  optional int32 fixed = 97445748;

  // Specifies a percentage of instances between 0 to 100%, inclusive. For example, specify 80 for 80%.
  optional int32 percent = 394814533;

}

// Represents a Forwarding Rule resource. Forwarding rule resources in Google Cloud can be either regional or global in scope: * [Global](https://cloud.google.com/compute/docs/reference/rest/v1/globalForwardingRules) * [Regional](https://cloud.google.com/compute/docs/reference/rest/v1/forwardingRules) A forwarding rule and its corresponding IP address represent the frontend configuration of a Google Cloud Platform load balancer. Forwarding rules can also reference target instances and Cloud VPN Classic gateways (targetVpnGateway). For more information, read Forwarding rule concepts and Using protocol forwarding.
message ForwardingRule {
  // The IP protocol to which this rule applies. For protocol forwarding, valid options are TCP, UDP, ESP, AH, SCTP, ICMP and L3_DEFAULT. The valid IP protocols are different for different load balancing products as described in [Load balancing features](https://cloud.google.com/load-balancing/docs/features#protocols_from_the_load_balancer_to_the_backends).
  enum IPProtocolEnum {
    // A value indicating that the enum field is not set.
    UNDEFINED_I_P_PROTOCOL_ENUM = 0;

    AH = 2087;

    ESP = 68962;

    ICMP = 2241597;

    L3_DEFAULT = 48151369;

    SCTP = 2539724;

    TCP = 82881;

    UDP = 83873;

  }

  // The IP Version that will be used by this forwarding rule. Valid options are IPV4 or IPV6.
  enum IpVersion {
    // A value indicating that the enum field is not set.
    UNDEFINED_IP_VERSION = 0;

    IPV4 = 2254341;

    IPV6 = 2254343;

    UNSPECIFIED_VERSION = 21850000;

  }

  // Specifies the forwarding rule type. For more information about forwarding rules, refer to Forwarding rule concepts.
  enum LoadBalancingScheme {
    // A value indicating that the enum field is not set.
    UNDEFINED_LOAD_BALANCING_SCHEME = 0;

    EXTERNAL = 35607499;

    EXTERNAL_MANAGED = 512006923;

    INTERNAL = 279295677;

    INTERNAL_MANAGED = 37350397;

    INTERNAL_SELF_MANAGED = 236211150;

    INVALID = 530283991;

  }

  // This signifies the networking tier used for configuring this load balancer and can only take the following values: PREMIUM, STANDARD. For regional ForwardingRule, the valid values are PREMIUM and STANDARD. For GlobalForwardingRule, the valid value is PREMIUM. If this field is not specified, it is assumed to be PREMIUM. If IPAddress is specified, this value must be equal to the networkTier of the Address.
  enum NetworkTier {
    // A value indicating that the enum field is not set.
    UNDEFINED_NETWORK_TIER = 0;

    // Public internet quality with fixed bandwidth.
    FIXED_STANDARD = 310464328;

    // High quality, Google-grade network tier, support for all networking products.
    PREMIUM = 399530551;

    // Public internet quality, only limited support for other networking products.
    STANDARD = 484642493;

    // (Output only) Temporary tier for FIXED_STANDARD when fixed standard tier is expired or not configured.
    STANDARD_OVERRIDES_FIXED_STANDARD = 465847234;

  }

  //
  enum PscConnectionStatus {
    // A value indicating that the enum field is not set.
    UNDEFINED_PSC_CONNECTION_STATUS = 0;

    // The connection has been accepted by the producer.
    ACCEPTED = 246714279;

    // The connection has been closed by the producer and will not serve traffic going forward.
    CLOSED = 380163436;

    // The connection has been accepted by the producer, but the producer needs to take further action before the forwarding rule can serve traffic.
    NEEDS_ATTENTION = 344491452;

    // The connection is pending acceptance by the producer.
    PENDING = 35394935;

    // The connection has been rejected by the producer.
    REJECTED = 174130302;

    STATUS_UNSPECIFIED = 42133066;

  }

  // IP address for which this forwarding rule accepts traffic. When a client sends traffic to this IP address, the forwarding rule directs the traffic to the referenced target or backendService. While creating a forwarding rule, specifying an IPAddress is required under the following circumstances: - When the target is set to targetGrpcProxy and validateForProxyless is set to true, the IPAddress should be set to 0.0.0.0. - When the target is a Private Service Connect Google APIs bundle, you must specify an IPAddress. Otherwise, you can optionally specify an IP address that references an existing static (reserved) IP address resource. When omitted, Google Cloud assigns an ephemeral IP address. Use one of the following formats to specify an IP address while creating a forwarding rule: * IP address number, as in `100.1.2.3` * IPv6 address range, as in `2600:1234::/96` * Full resource URL, as in https://www.googleapis.com/compute/v1/projects/ project_id/regions/region/addresses/address-name * Partial URL or by name, as in: - projects/project_id/regions/region/addresses/address-name - regions/region/addresses/address-name - global/addresses/address-name - address-name The forwarding rule's target or backendService, and in most cases, also the loadBalancingScheme, determine the type of IP address that you can use. For detailed information, see [IP address specifications](https://cloud.google.com/load-balancing/docs/forwarding-rule-concepts#ip_address_specifications). When reading an IPAddress, the API always returns the IP address number.
  optional string I_p_address = 42976943;

  // The IP protocol to which this rule applies. For protocol forwarding, valid options are TCP, UDP, ESP, AH, SCTP, ICMP and L3_DEFAULT. The valid IP protocols are different for different load balancing products as described in [Load balancing features](https://cloud.google.com/load-balancing/docs/features#protocols_from_the_load_balancer_to_the_backends).
  // Check the IPProtocolEnum enum for the list of possible values.
  optional string I_p_protocol = 488094525;

  // This field can only be used: - If IPProtocol is one of TCP, UDP, or SCTP. - By internal TCP/UDP load balancers, backend service-based network load balancers, and internal and external protocol forwarding. Set this field to true to allow packets addressed to any port or packets lacking destination port information (for example, UDP fragments after the first fragment) to be forwarded to the backends configured with this forwarding rule. The ports, port_range, and allPorts fields are mutually exclusive.
  optional bool all_ports = 445175796;

  // This field is used along with the backend_service field for internal load balancing or with the target field for internal TargetInstance. If the field is set to TRUE, clients can access ILB from all regions. Otherwise only allows access from clients in the same region as the internal load balancer.
  optional bool allow_global_access = 499409674;

  // Identifies the backend service to which the forwarding rule sends traffic. Required for Internal TCP/UDP Load Balancing and Network Load Balancing; must be omitted for all other load balancer types.
  optional string backend_service = 306946058;

  // [Output Only] The URL for the corresponding base Forwarding Rule. By base Forwarding Rule, we mean the Forwarding Rule that has the same IP address, protocol, and port settings with the current Forwarding Rule, but without sourceIPRanges specified. Always empty if the current Forwarding Rule does not have sourceIPRanges specified.
  optional string base_forwarding_rule = 524873104;

  // [Output Only] Creation timestamp in RFC3339 text format.
  optional string creation_timestamp = 30525366;

  // An optional description of this resource. Provide this property when you create the resource.
  optional string description = 422937596;

  // Fingerprint of this resource. A hash of the contents stored in this object. This field is used in optimistic locking. This field will be ignored when inserting a ForwardingRule. Include the fingerprint in patch request to ensure that you do not overwrite changes that were applied from another concurrent request. To see the latest fingerprint, make a get() request to retrieve a ForwardingRule.
  optional string fingerprint = 234678500;

  // [Output Only] The unique identifier for the resource. This identifier is defined by the server.
  optional uint64 id = 3355;

  // The IP Version that will be used by this forwarding rule. Valid options are IPV4 or IPV6.
  // Check the IpVersion enum for the list of possible values.
  optional string ip_version = 294959552;

  // Indicates whether or not this load balancer can be used as a collector for packet mirroring. To prevent mirroring loops, instances behind this load balancer will not have their traffic mirrored even if a PacketMirroring rule applies to them. This can only be set to true for load balancers that have their loadBalancingScheme set to INTERNAL.
  optional bool is_mirroring_collector = 119255164;

  // [Output Only] Type of the resource. Always compute#forwardingRule for Forwarding Rule resources.
  optional string kind = 3292052;

  // A fingerprint for the labels being applied to this resource, which is essentially a hash of the labels set used for optimistic locking. The fingerprint is initially generated by Compute Engine and changes after every request to modify or update labels. You must always provide an up-to-date fingerprint hash in order to update or change labels, otherwise the request will fail with error 412 conditionNotMet. To see the latest fingerprint, make a get() request to retrieve a ForwardingRule.
  optional string label_fingerprint = 178124825;

  // Labels for this resource. These can only be added or modified by the setLabels method. Each label key/value pair must comply with RFC1035. Label values may be empty.
  map<string, string> labels = 500195327;

  // Specifies the forwarding rule type. For more information about forwarding rules, refer to Forwarding rule concepts.
  // Check the LoadBalancingScheme enum for the list of possible values.
  optional string load_balancing_scheme = 363890244;

  // Opaque filter criteria used by load balancer to restrict routing configuration to a limited set of xDS compliant clients. In their xDS requests to load balancer, xDS clients present node metadata. When there is a match, the relevant configuration is made available to those proxies. Otherwise, all the resources (e.g. TargetHttpProxy, UrlMap) referenced by the ForwardingRule are not visible to those proxies. For each metadataFilter in this list, if its filterMatchCriteria is set to MATCH_ANY, at least one of the filterLabels must match the corresponding label provided in the metadata. If its filterMatchCriteria is set to MATCH_ALL, then all of its filterLabels must match with corresponding labels provided in the metadata. If multiple metadataFilters are specified, all of them need to be satisfied in order to be considered a match. metadataFilters specified here will be applifed before those specified in the UrlMap that this ForwardingRule references. metadataFilters only applies to Loadbalancers that have their loadBalancingScheme set to INTERNAL_SELF_MANAGED.
  repeated MetadataFilter metadata_filters = 464725739;

  // Name of the resource; provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash. For Private Service Connect forwarding rules that forward traffic to Google APIs, the forwarding rule name must be a 1-20 characters string with lowercase letters and numbers and must start with a letter.
  optional string name = 3373707;

  // This field is not used for external load balancing. For Internal TCP/UDP Load Balancing, this field identifies the network that the load balanced IP should belong to for this Forwarding Rule. If this field is not specified, the default network will be used. For Private Service Connect forwarding rules that forward traffic to Google APIs, a network must be provided.
  optional string network = 232872494;

  // This signifies the networking tier used for configuring this load balancer and can only take the following values: PREMIUM, STANDARD. For regional ForwardingRule, the valid values are PREMIUM and STANDARD. For GlobalForwardingRule, the valid value is PREMIUM. If this field is not specified, it is assumed to be PREMIUM. If IPAddress is specified, this value must be equal to the networkTier of the Address.
  // Check the NetworkTier enum for the list of possible values.
  optional string network_tier = 517397843;

  // This is used in PSC consumer ForwardingRule to control whether it should try to auto-generate a DNS zone or not. Non-PSC forwarding rules do not use this field.
  optional bool no_automate_dns_zone = 64546991;

  // This field can only be used: - If IPProtocol is one of TCP, UDP, or SCTP. - By backend service-based network load balancers, target pool-based network load balancers, internal proxy load balancers, external proxy load balancers, Traffic Director, external protocol forwarding, and Classic VPN. Some products have restrictions on what ports can be used. See port specifications for details. Only packets addressed to ports in the specified range will be forwarded to the backends configured with this forwarding rule. The ports, port_range, and allPorts fields are mutually exclusive. For external forwarding rules, two or more forwarding rules cannot use the same [IPAddress, IPProtocol] pair, and cannot have overlapping portRanges. For internal forwarding rules within the same VPC network, two or more forwarding rules cannot use the same [IPAddress, IPProtocol] pair, and cannot have overlapping portRanges. @pattern: \\d+(?:-\\d+)?
  optional string port_range = 217518079;

  // This field can only be used: - If IPProtocol is one of TCP, UDP, or SCTP. - By internal TCP/UDP load balancers, backend service-based network load balancers, and internal protocol forwarding. You can specify a list of up to five ports by number, separated by commas. The ports can be contiguous or discontiguous. Only packets addressed to these ports will be forwarded to the backends configured with this forwarding rule. For external forwarding rules, two or more forwarding rules cannot use the same [IPAddress, IPProtocol] pair, and cannot share any values defined in ports. For internal forwarding rules within the same VPC network, two or more forwarding rules cannot use the same [IPAddress, IPProtocol] pair, and cannot share any values defined in ports. The ports, port_range, and allPorts fields are mutually exclusive. @pattern: \\d+(?:-\\d+)?
  repeated string ports = 106854418;

  // [Output Only] The PSC connection id of the PSC Forwarding Rule.
  optional uint64 psc_connection_id = 292082397;

  // 
  // Check the PscConnectionStatus enum for the list of possible values.
  optional string psc_connection_status = 184149172;

  // [Output Only] URL of the region where the regional forwarding rule resides. This field is not applicable to global forwarding rules. You must specify this field as part of the HTTP request URL. It is not settable as a field in the request body.
  optional string region = 138946292;

  // [Output Only] Server-defined URL for the resource.
  optional string self_link = 456214797;

  // Service Directory resources to register this forwarding rule with. Currently, only supports a single Service Directory resource.
  repeated ForwardingRuleServiceDirectoryRegistration service_directory_registrations = 223549694;

  // An optional prefix to the service name for this Forwarding Rule. If specified, the prefix is the first label of the fully qualified service name. The label must be 1-63 characters long, and comply with RFC1035. Specifically, the label must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash. This field is only used for internal load balancing.
  optional string service_label = 417008874;

  // [Output Only] The internal fully qualified service name for this Forwarding Rule. This field is only used for internal load balancing.
  optional string service_name = 359880149;

  // If not empty, this Forwarding Rule will only forward the traffic when the source IP address matches one of the IP addresses or CIDR ranges set here. Note that a Forwarding Rule can only have up to 64 source IP ranges, and this field can only be used with a regional Forwarding Rule whose scheme is EXTERNAL. Each source_ip_range entry should be either an IP address (for example, 1.2.3.4) or a CIDR range (for example, 1.2.3.0/24).
  repeated string source_ip_ranges = 111563210;

  // This field identifies the subnetwork that the load balanced IP should belong to for this Forwarding Rule, used in internal load balancing and network load balancing with IPv6. If the network specified is in auto subnet mode, this field is optional. However, a subnetwork must be specified if the network is in custom subnet mode or when creating external forwarding rule with IPv6.
  optional string subnetwork = 307827694;

  // The URL of the target resource to receive the matched traffic. For regional forwarding rules, this target must be in the same region as the forwarding rule. For global forwarding rules, this target must be a global load balancing resource. The forwarded traffic must be of a type appropriate to the target object. - For load balancers, see the "Target" column in [Port specifications](https://cloud.google.com/load-balancing/docs/forwarding-rule-concepts#ip_address_specifications). - For Private Service Connect forwarding rules that forward traffic to Google APIs, provide the name of a supported Google API bundle: - vpc-sc - APIs that support VPC Service Controls. - all-apis - All supported Google APIs. - For Private Service Connect forwarding rules that forward traffic to managed services, the target must be a service attachment. 
  optional string target = 192835985;

}

//
message ForwardingRuleAggregatedList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 3355;

  // A list of ForwardingRulesScopedList resources.
  map<string, ForwardingRulesScopedList> items = 100526016;

  // [Output Only] Type of resource. Always compute#forwardingRuleAggregatedList for lists of forwarding rules.
  optional string kind = 3292052;

  // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
  optional string next_page_token = 79797525;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 456214797;

  // [Output Only] Unreachable resources.
  repeated string unreachables = 243372063;

  // [Output Only] Informational warning message.
  optional Warning warning = 50704284;

}

// Contains a list of ForwardingRule resources.
message ForwardingRuleList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 3355;

  // A list of ForwardingRule resources.
  repeated ForwardingRule items = 100526016;

  // Type of resource.
  optional string kind = 3292052;

  // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
  optional string next_page_token = 79797525;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 456214797;

  // [Output Only] Informational warning message.
  optional Warning warning = 50704284;

}

//
message ForwardingRuleReference {
  optional string forwarding_rule = 269964030;

}

// Describes the auto-registration of the Forwarding Rule to Service Directory. The region and project of the Service Directory resource generated from this registration will be the same as this Forwarding Rule.
message ForwardingRuleServiceDirectoryRegistration {
  // Service Directory namespace to register the forwarding rule under.
  optional string namespace = 178476379;

  // Service Directory service to register the forwarding rule under.
  optional string service = 373540533;

  // [Optional] Service Directory region to register this global forwarding rule under. Default to "us-central1". Only used for PSC for Google APIs. All PSC for Google APIs Forwarding Rules on the same network should use the same Service Directory region.
  optional string service_directory_region = 74030416;

}

//
message ForwardingRulesScopedList {
  // A list of forwarding rules contained in this scope.
  repeated ForwardingRule forwarding_rules = 315821365;

  // Informational warning which replaces the list of forwarding rules when the list is empty.
  optional Warning warning = 50704284;

}

//
message GRPCHealthCheck {
  // Specifies how a port is selected for health checking. Can be one of the following values: USE_FIXED_PORT: Specifies a port number explicitly using the port field in the health check. Supported by backend services for pass-through load balancers and backend services for proxy load balancers. Not supported by target pools. The health check supports all backends supported by the backend service provided the backend can be health checked. For example, GCE_VM_IP network endpoint groups, GCE_VM_IP_PORT network endpoint groups, and instance group backends. USE_NAMED_PORT: Not supported. USE_SERVING_PORT: Provides an indirect method of specifying the health check port by referring to the backend service. Only supported by backend services for proxy load balancers. Not supported by target pools. Not supported by backend services for pass-through load balancers. Supports all backends that can be health checked; for example, GCE_VM_IP_PORT network endpoint groups and instance group backends. For GCE_VM_IP_PORT network endpoint group backends, the health check uses the port number specified for each endpoint in the network endpoint group. For instance group backends, the health check uses the port number determined by looking up the backend service's named port in the instance group's list of named ports.
  enum PortSpecification {
    // A value indicating that the enum field is not set.
    UNDEFINED_PORT_SPECIFICATION = 0;

    // The port number in the health check's port is used for health checking. Applies to network endpoint group and instance group backends.
    USE_FIXED_PORT = 190235748;

    // Not supported.
    USE_NAMED_PORT = 349300671;

    // For network endpoint group backends, the health check uses the port number specified on each endpoint in the network endpoint group. For instance group backends, the health check uses the port number specified for the backend service's named port defined in the instance group's named ports.
    USE_SERVING_PORT = 362637516;

  }

  // The gRPC service name for the health check. This field is optional. The value of grpc_service_name has the following meanings by convention: - Empty service_name means the overall status of all services at the backend. - Non-empty service_name means the health of that gRPC service, as defined by the owner of the service. The grpc_service_name can only be ASCII.
  optional string grpc_service_name = 136533078;

  // The TCP port number to which the health check prober sends packets. Valid values are 1 through 65535.
  optional int32 port = 3446913;

  // Not supported.
  optional string port_name = 41534345;

  // Specifies how a port is selected for health checking. Can be one of the following values: USE_FIXED_PORT: Specifies a port number explicitly using the port field in the health check. Supported by backend services for pass-through load balancers and backend services for proxy load balancers. Not supported by target pools. The health check supports all backends supported by the backend service provided the backend can be health checked. For example, GCE_VM_IP network endpoint groups, GCE_VM_IP_PORT network endpoint groups, and instance group backends. USE_NAMED_PORT: Not supported. USE_SERVING_PORT: Provides an indirect method of specifying the health check port by referring to the backend service. Only supported by backend services for proxy load balancers. Not supported by target pools. Not supported by backend services for pass-through load balancers. Supports all backends that can be health checked; for example, GCE_VM_IP_PORT network endpoint groups and instance group backends. For GCE_VM_IP_PORT network endpoint group backends, the health check uses the port number specified for each endpoint in the network endpoint group. For instance group backends, the health check uses the port number determined by looking up the backend service's named port in the instance group's list of named ports.
  // Check the PortSpecification enum for the list of possible values.
  optional string port_specification = 51590597;

}

// A request message for AcceleratorTypes.Get. See the method description for details.
message GetAcceleratorTypeRequest {
  // Name of the accelerator type to return.
  string accelerator_type = 138031246 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // The name of the zone for this request.
  string zone = 3744684 [(google.api.field_behavior) = REQUIRED];

}

// A request message for Addresses.Get. See the method description for details.
message GetAddressRequest {
  // Name of the address resource to return.
  string address = 462920692 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Name of the region for this request.
  string region = 138946292 [(google.api.field_behavior) = REQUIRED];

}

// A request message for FirewallPolicies.GetAssociation. See the method description for details.
message GetAssociationFirewallPolicyRequest {
  // Name of the firewall policy to which the queried rule belongs.
  string firewall_policy = 498173265 [(google.api.field_behavior) = REQUIRED];

  // The name of the association to get from the firewall policy.
  optional string name = 3373707;

}

// A request message for NetworkFirewallPolicies.GetAssociation. See the method description for details.
message GetAssociationNetworkFirewallPolicyRequest {
  // Name of the firewall policy to which the queried association belongs.
  string firewall_policy = 498173265 [(google.api.field_behavior) = REQUIRED];

  // The name of the association to get from the firewall policy.
  optional string name = 3373707;

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

}

// A request message for RegionNetworkFirewallPolicies.GetAssociation. See the method description for details.
message GetAssociationRegionNetworkFirewallPolicyRequest {
  // Name of the firewall policy to which the queried association belongs.
  string firewall_policy = 498173265 [(google.api.field_behavior) = REQUIRED];

  // The name of the association to get from the firewall policy.
  optional string name = 3373707;

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Name of the region scoping this request.
  string region = 138946292 [(google.api.field_behavior) = REQUIRED];

}

// A request message for Autoscalers.Get. See the method description for details.
message GetAutoscalerRequest {
  // Name of the autoscaler to return.
  string autoscaler = 517258967 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Name of the zone for this request.
  string zone = 3744684 [(google.api.field_behavior) = REQUIRED];

}

// A request message for BackendBuckets.Get. See the method description for details.
message GetBackendBucketRequest {
  // Name of the BackendBucket resource to return.
  string backend_bucket = 91714037 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

}

// A request message for BackendServices.Get. See the method description for details.
message GetBackendServiceRequest {
  // Name of the BackendService resource to return.
  string backend_service = 306946058 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

}

// A request message for Interconnects.GetDiagnostics. See the method description for details.
message GetDiagnosticsInterconnectRequest {
  // Name of the interconnect resource to query.
  string interconnect = 224601230 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

}

// A request message for Disks.Get. See the method description for details.
message GetDiskRequest {
  // Name of the persistent disk to return.
  string disk = 3083677 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // The name of the zone for this request.
  string zone = 3744684 [(google.api.field_behavior) = REQUIRED];

}

// A request message for DiskTypes.Get. See the method description for details.
message GetDiskTypeRequest {
  // Name of the disk type to return.
  string disk_type = 93009052 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // The name of the zone for this request.
  string zone = 3744684 [(google.api.field_behavior) = REQUIRED];

}

// A request message for Instances.GetEffectiveFirewalls. See the method description for details.
message GetEffectiveFirewallsInstanceRequest {
  // Name of the instance scoping this request.
  string instance = 18257045 [(google.api.field_behavior) = REQUIRED];

  // The name of the network interface to get the effective firewalls.
  string network_interface = 365387880 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // The name of the zone for this request.
  string zone = 3744684 [(google.api.field_behavior) = REQUIRED];

}

// A request message for Networks.GetEffectiveFirewalls. See the method description for details.
message GetEffectiveFirewallsNetworkRequest {
  // Name of the network for this request.
  string network = 232872494 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

}

// A request message for RegionNetworkFirewallPolicies.GetEffectiveFirewalls. See the method description for details.
message GetEffectiveFirewallsRegionNetworkFirewallPolicyRequest {
  // Network reference
  string network = 232872494 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Name of the region scoping this request.
  string region = 138946292 [(google.api.field_behavior) = REQUIRED];

}

// A request message for ExternalVpnGateways.Get. See the method description for details.
message GetExternalVpnGatewayRequest {
  // Name of the externalVpnGateway to return.
  string external_vpn_gateway = 109898629 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

}

// A request message for FirewallPolicies.Get. See the method description for details.
message GetFirewallPolicyRequest {
  // Name of the firewall policy to get.
  string firewall_policy = 498173265 [(google.api.field_behavior) = REQUIRED];

}

// A request message for Firewalls.Get. See the method description for details.
message GetFirewallRequest {
  // Name of the firewall rule to return.
  string firewall = 511016192 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

}

// A request message for ForwardingRules.Get. See the method description for details.
message GetForwardingRuleRequest {
  // Name of the ForwardingRule resource to return.
  string forwarding_rule = 269964030 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Name of the region scoping this request.
  string region = 138946292 [(google.api.field_behavior) = REQUIRED];

}

// A request message for Images.GetFromFamily. See the method description for details.
message GetFromFamilyImageRequest {
  // Name of the image family to search for.
  string family = 328751972 [(google.api.field_behavior) = REQUIRED];

  // The image project that the image belongs to. For example, to get a CentOS image, specify centos-cloud as the image project.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

}

// A request message for GlobalAddresses.Get. See the method description for details.
message GetGlobalAddressRequest {
  // Name of the address resource to return.
  string address = 462920692 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

}

// A request message for GlobalForwardingRules.Get. See the method description for details.
message GetGlobalForwardingRuleRequest {
  // Name of the ForwardingRule resource to return.
  string forwarding_rule = 269964030 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

}

// A request message for GlobalNetworkEndpointGroups.Get. See the method description for details.
message GetGlobalNetworkEndpointGroupRequest {
  // The name of the network endpoint group. It should comply with RFC1035.
  string network_endpoint_group = 433907078 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

}

// A request message for GlobalOperations.Get. See the method description for details.
message GetGlobalOperationRequest {
  // Name of the Operations resource to return.
  string operation = 52090215 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_response_field) = "name"
  ];

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

}

// A request message for GlobalOrganizationOperations.Get. See the method description for details.
message GetGlobalOrganizationOperationRequest {
  // Name of the Operations resource to return.
  string operation = 52090215 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_response_field) = "name"
  ];

  // Parent ID for this request.
  optional string parent_id = 459714768;

}

// A request message for GlobalPublicDelegatedPrefixes.Get. See the method description for details.
message GetGlobalPublicDelegatedPrefixeRequest {
  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Name of the PublicDelegatedPrefix resource to return.
  string public_delegated_prefix = 204238440 [(google.api.field_behavior) = REQUIRED];

}

// A request message for Instances.GetGuestAttributes. See the method description for details.
message GetGuestAttributesInstanceRequest {
  // Name of the instance scoping this request.
  string instance = 18257045 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Specifies the guest attributes path to be queried.
  optional string query_path = 368591164;

  // Specifies the key for the guest attributes entry.
  optional string variable_key = 164364828;

  // The name of the zone for this request.
  string zone = 3744684 [(google.api.field_behavior) = REQUIRED];

}

// A request message for BackendServices.GetHealth. See the method description for details.
message GetHealthBackendServiceRequest {
  // Name of the BackendService resource to which the queried instance belongs.
  string backend_service = 306946058 [(google.api.field_behavior) = REQUIRED];

  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // The body resource for this request
  ResourceGroupReference resource_group_reference_resource = 112951123 [(google.api.field_behavior) = REQUIRED];

}

// A request message for HealthChecks.Get. See the method description for details.
message GetHealthCheckRequest {
  // Name of the HealthCheck resource to return.
  string health_check = 308876645 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

}

// A request message for RegionBackendServices.GetHealth. See the method description for details.
message GetHealthRegionBackendServiceRequest {
  // Name of the BackendService resource for which to get health.
  string backend_service = 306946058 [(google.api.field_behavior) = REQUIRED];

  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Name of the region scoping this request.
  string region = 138946292 [(google.api.field_behavior) = REQUIRED];

  // The body resource for this request
  ResourceGroupReference resource_group_reference_resource = 112951123 [(google.api.field_behavior) = REQUIRED];

}

// A request message for TargetPools.GetHealth. See the method description for details.
message GetHealthTargetPoolRequest {
  // The body resource for this request
  InstanceReference instance_reference_resource = 292926060 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Name of the region scoping this request.
  string region = 138946292 [(google.api.field_behavior) = REQUIRED];

  // Name of the TargetPool resource to which the queried instance belongs.
  string target_pool = 62796298 [(google.api.field_behavior) = REQUIRED];

}

// A request message for BackendServices.GetIamPolicy. See the method description for details.
message GetIamPolicyBackendServiceRequest {
  // Requested IAM Policy version.
  optional int32 options_requested_policy_version = 499220029;

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Name or id of the resource for this request.
  string resource = 195806222 [(google.api.field_behavior) = REQUIRED];

}

// A request message for Disks.GetIamPolicy. See the method description for details.
message GetIamPolicyDiskRequest {
  // Requested IAM Policy version.
  optional int32 options_requested_policy_version = 499220029;

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Name or id of the resource for this request.
  string resource = 195806222 [(google.api.field_behavior) = REQUIRED];

  // The name of the zone for this request.
  string zone = 3744684 [(google.api.field_behavior) = REQUIRED];

}

// A request message for FirewallPolicies.GetIamPolicy. See the method description for details.
message GetIamPolicyFirewallPolicyRequest {
  // Requested IAM Policy version.
  optional int32 options_requested_policy_version = 499220029;

  // Name or id of the resource for this request.
  string resource = 195806222 [(google.api.field_behavior) = REQUIRED];

}

// A request message for Images.GetIamPolicy. See the method description for details.
message GetIamPolicyImageRequest {
  // Requested IAM Policy version.
  optional int32 options_requested_policy_version = 499220029;

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Name or id of the resource for this request.
  string resource = 195806222 [(google.api.field_behavior) = REQUIRED];

}

// A request message for Instances.GetIamPolicy. See the method description for details.
message GetIamPolicyInstanceRequest {
  // Requested IAM Policy version.
  optional int32 options_requested_policy_version = 499220029;

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Name or id of the resource for this request.
  string resource = 195806222 [(google.api.field_behavior) = REQUIRED];

  // The name of the zone for this request.
  string zone = 3744684 [(google.api.field_behavior) = REQUIRED];

}

// A request message for InstanceTemplates.GetIamPolicy. See the method description for details.
message GetIamPolicyInstanceTemplateRequest {
  // Requested IAM Policy version.
  optional int32 options_requested_policy_version = 499220029;

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Name or id of the resource for this request.
  string resource = 195806222 [(google.api.field_behavior) = REQUIRED];

}

// A request message for Licenses.GetIamPolicy. See the method description for details.
message GetIamPolicyLicenseRequest {
  // Requested IAM Policy version.
  optional int32 options_requested_policy_version = 499220029;

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Name or id of the resource for this request.
  string resource = 195806222 [(google.api.field_behavior) = REQUIRED];

}

// A request message for MachineImages.GetIamPolicy. See the method description for details.
message GetIamPolicyMachineImageRequest {
  // Requested IAM Policy version.
  optional int32 options_requested_policy_version = 499220029;

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Name or id of the resource for this request.
  string resource = 195806222 [(google.api.field_behavior) = REQUIRED];

}

// A request message for NetworkAttachments.GetIamPolicy. See the method description for details.
message GetIamPolicyNetworkAttachmentRequest {
  // Requested IAM Policy version.
  optional int32 options_requested_policy_version = 499220029;

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // The name of the region for this request.
  string region = 138946292 [(google.api.field_behavior) = REQUIRED];

  // Name or id of the resource for this request.
  string resource = 195806222 [(google.api.field_behavior) = REQUIRED];

}

// A request message for NetworkFirewallPolicies.GetIamPolicy. See the method description for details.
message GetIamPolicyNetworkFirewallPolicyRequest {
  // Requested IAM Policy version.
  optional int32 options_requested_policy_version = 499220029;

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Name or id of the resource for this request.
  string resource = 195806222 [(google.api.field_behavior) = REQUIRED];

}

// A request message for NodeGroups.GetIamPolicy. See the method description for details.
message GetIamPolicyNodeGroupRequest {
  // Requested IAM Policy version.
  optional int32 options_requested_policy_version = 499220029;

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Name or id of the resource for this request.
  string resource = 195806222 [(google.api.field_behavior) = REQUIRED];

  // The name of the zone for this request.
  string zone = 3744684 [(google.api.field_behavior) = REQUIRED];

}

// A request message for NodeTemplates.GetIamPolicy. See the method description for details.
message GetIamPolicyNodeTemplateRequest {
  // Requested IAM Policy version.
  optional int32 options_requested_policy_version = 499220029;

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // The name of the region for this request.
  string region = 138946292 [(google.api.field_behavior) = REQUIRED];

  // Name or id of the resource for this request.
  string resource = 195806222 [(google.api.field_behavior) = REQUIRED];

}

// A request message for RegionBackendServices.GetIamPolicy. See the method description for details.
message GetIamPolicyRegionBackendServiceRequest {
  // Requested IAM Policy version.
  optional int32 options_requested_policy_version = 499220029;

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // The name of the region for this request.
  string region = 138946292 [(google.api.field_behavior) = REQUIRED];

  // Name or id of the resource for this request.
  string resource = 195806222 [(google.api.field_behavior) = REQUIRED];

}

// A request message for RegionDisks.GetIamPolicy. See the method description for details.
message GetIamPolicyRegionDiskRequest {
  // Requested IAM Policy version.
  optional int32 options_requested_policy_version = 499220029;

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // The name of the region for this request.
  string region = 138946292 [(google.api.field_behavior) = REQUIRED];

  // Name or id of the resource for this request.
  string resource = 195806222 [(google.api.field_behavior) = REQUIRED];

}

// A request message for RegionNetworkFirewallPolicies.GetIamPolicy. See the method description for details.
message GetIamPolicyRegionNetworkFirewallPolicyRequest {
  // Requested IAM Policy version.
  optional int32 options_requested_policy_version = 499220029;

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // The name of the region for this request.
  string region = 138946292 [(google.api.field_behavior) = REQUIRED];

  // Name or id of the resource for this request.
  string resource = 195806222 [(google.api.field_behavior) = REQUIRED];

}

// A request message for Reservations.GetIamPolicy. See the method description for details.
message GetIamPolicyReservationRequest {
  // Requested IAM Policy version.
  optional int32 options_requested_policy_version = 499220029;

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Name or id of the resource for this request.
  string resource = 195806222 [(google.api.field_behavior) = REQUIRED];

  // The name of the zone for this request.
  string zone = 3744684 [(google.api.field_behavior) = REQUIRED];

}

// A request message for ResourcePolicies.GetIamPolicy. See the method description for details.
message GetIamPolicyResourcePolicyRequest {
  // Requested IAM Policy version.
  optional int32 options_requested_policy_version = 499220029;

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // The name of the region for this request.
  string region = 138946292 [(google.api.field_behavior) = REQUIRED];

  // Name or id of the resource for this request.
  string resource = 195806222 [(google.api.field_behavior) = REQUIRED];

}

// A request message for ServiceAttachments.GetIamPolicy. See the method description for details.
message GetIamPolicyServiceAttachmentRequest {
  // Requested IAM Policy version.
  optional int32 options_requested_policy_version = 499220029;

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // The name of the region for this request.
  string region = 138946292 [(google.api.field_behavior) = REQUIRED];

  // Name or id of the resource for this request.
  string resource = 195806222 [(google.api.field_behavior) = REQUIRED];

}

// A request message for Snapshots.GetIamPolicy. See the method description for details.
message GetIamPolicySnapshotRequest {
  // Requested IAM Policy version.
  optional int32 options_requested_policy_version = 499220029;

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Name or id of the resource for this request.
  string resource = 195806222 [(google.api.field_behavior) = REQUIRED];

}

// A request message for Subnetworks.GetIamPolicy. See the method description for details.
message GetIamPolicySubnetworkRequest {
  // Requested IAM Policy version.
  optional int32 options_requested_policy_version = 499220029;

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // The name of the region for this request.
  string region = 138946292 [(google.api.field_behavior) = REQUIRED];

  // Name or id of the resource for this request.
  string resource = 195806222 [(google.api.field_behavior) = REQUIRED];

}

// A request message for ImageFamilyViews.Get. See the method description for details.
message GetImageFamilyViewRequest {
  // Name of the image family to search for.
  string family = 328751972 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // The name of the zone for this request.
  string zone = 3744684 [(google.api.field_behavior) = REQUIRED];

}

// A request message for Images.Get. See the method description for details.
message GetImageRequest {
  // Name of the image resource to return.
  string image = 100313435 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

}

// A request message for InstanceGroupManagers.Get. See the method description for details.
message GetInstanceGroupManagerRequest {
  // The name of the managed instance group.
  string instance_group_manager = 249363395 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // The name of the zone where the managed instance group is located.
  string zone = 3744684 [(google.api.field_behavior) = REQUIRED];

}

// A request message for InstanceGroups.Get. See the method description for details.
message GetInstanceGroupRequest {
  // The name of the instance group.
  string instance_group = 81095253 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // The name of the zone where the instance group is located.
  string zone = 3744684 [(google.api.field_behavior) = REQUIRED];

}

// A request message for Instances.Get. See the method description for details.
message GetInstanceRequest {
  // Name of the instance resource to return.
  string instance = 18257045 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // The name of the zone for this request.
  string zone = 3744684 [(google.api.field_behavior) = REQUIRED];

}

// A request message for InstanceTemplates.Get. See the method description for details.
message GetInstanceTemplateRequest {
  // The name of the instance template.
  string instance_template = 309248228 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

}

// A request message for InterconnectAttachments.Get. See the method description for details.
message GetInterconnectAttachmentRequest {
  // Name of the interconnect attachment to return.
  string interconnect_attachment = 308135284 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Name of the region for this request.
  string region = 138946292 [(google.api.field_behavior) = REQUIRED];

}

// A request message for InterconnectLocations.Get. See the method description for details.
message GetInterconnectLocationRequest {
  // Name of the interconnect location to return.
  string interconnect_location = 492235846 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

}

// A request message for Interconnects.Get. See the method description for details.
message GetInterconnectRequest {
  // Name of the interconnect to return.
  string interconnect = 224601230 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

}

// A request message for LicenseCodes.Get. See the method description for details.
message GetLicenseCodeRequest {
  // Number corresponding to the License code resource to return.
  string license_code = 1467179 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

}

// A request message for Licenses.Get. See the method description for details.
message GetLicenseRequest {
  // Name of the License resource to return.
  string license = 166757441 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

}

// A request message for MachineImages.Get. See the method description for details.
message GetMachineImageRequest {
  // The name of the machine image.
  string machine_image = 69189475 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

}

// A request message for MachineTypes.Get. See the method description for details.
message GetMachineTypeRequest {
  // Name of the machine type to return.
  string machine_type = 227711026 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // The name of the zone for this request.
  string zone = 3744684 [(google.api.field_behavior) = REQUIRED];

}

// A request message for Routers.GetNatMappingInfo. See the method description for details.
message GetNatMappingInfoRoutersRequest {
  // A filter expression that filters resources listed in the response. Most Compute resources support two types of filter expressions: expressions that support regular expressions and expressions that follow API improvement proposal AIP-160. If you want to use AIP-160, your expression must specify the field name, an operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The operator must be either `=`, `!=`, `>`, `<`, `<=`, `>=` or `:`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. The `:` operator can be used with string fields to match substrings. For non-string fields it is equivalent to the `=` operator. The `:*` comparison can be used to test whether a key has been defined. For example, to find all objects with `owner` label use: ``` labels.owner:* ``` You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ``` If you want to use a regular expression, use the `eq` (equal) or `ne` (not equal) operator against a single un-parenthesized expression with or without quotes or against multiple parenthesized expressions. Examples: `fieldname eq unquoted literal` `fieldname eq 'single quoted literal'` `fieldname eq "double quoted literal"` `(fieldname1 eq literal) (fieldname2 ne "literal")` The literal value is interpreted as a regular expression using Google RE2 library syntax. The literal value must match the entire field. For example, to filter for instances that do not end with name "instance", you would use `name ne .*instance`.
  optional string filter = 336120696;

  // The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)
  optional uint32 max_results = 54715419;

  // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported.
  optional string order_by = 160562920;

  // Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results.
  optional string page_token = 19994697;

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Name of the region for this request.
  string region = 138946292 [(google.api.field_behavior) = REQUIRED];

  // Opt-in for partial success behavior which provides partial results in case of failure. The default value is false.
  optional bool return_partial_success = 517198390;

  // Name of the Router resource to query for Nat Mapping information of VM endpoints.
  string router = 148608841 [(google.api.field_behavior) = REQUIRED];

}

// A request message for NetworkAttachments.Get. See the method description for details.
message GetNetworkAttachmentRequest {
  // Name of the NetworkAttachment resource to return.
  string network_attachment = 224644052 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Name of the region of this request.
  string region = 138946292 [(google.api.field_behavior) = REQUIRED];

}

// A request message for NetworkEdgeSecurityServices.Get. See the method description for details.
message GetNetworkEdgeSecurityServiceRequest {
  // Name of the network edge security service to get.
  string network_edge_security_service = 157011879 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Name of the region scoping this request.
  string region = 138946292 [(google.api.field_behavior) = REQUIRED];

}

// A request message for NetworkEndpointGroups.Get. See the method description for details.
message GetNetworkEndpointGroupRequest {
  // The name of the network endpoint group. It should comply with RFC1035.
  string network_endpoint_group = 433907078 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // The name of the zone where the network endpoint group is located. It should comply with RFC1035.
  string zone = 3744684 [(google.api.field_behavior) = REQUIRED];

}

// A request message for NetworkFirewallPolicies.Get. See the method description for details.
message GetNetworkFirewallPolicyRequest {
  // Name of the firewall policy to get.
  string firewall_policy = 498173265 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

}

// A request message for Networks.Get. See the method description for details.
message GetNetworkRequest {
  // Name of the network to return.
  string network = 232872494 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

}

// A request message for NodeGroups.Get. See the method description for details.
message GetNodeGroupRequest {
  // Name of the node group to return.
  string node_group = 469958146 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // The name of the zone for this request.
  string zone = 3744684 [(google.api.field_behavior) = REQUIRED];

}

// A request message for NodeTemplates.Get. See the method description for details.
message GetNodeTemplateRequest {
  // Name of the node template to return.
  string node_template = 323154455 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // The name of the region for this request.
  string region = 138946292 [(google.api.field_behavior) = REQUIRED];

}

// A request message for NodeTypes.Get. See the method description for details.
message GetNodeTypeRequest {
  // Name of the node type to return.
  string node_type = 465832791 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // The name of the zone for this request.
  string zone = 3744684 [(google.api.field_behavior) = REQUIRED];

}

// A request message for PacketMirrorings.Get. See the method description for details.
message GetPacketMirroringRequest {
  // Name of the PacketMirroring resource to return.
  string packet_mirroring = 22305996 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Name of the region for this request.
  string region = 138946292 [(google.api.field_behavior) = REQUIRED];

}

// A request message for Projects.Get. See the method description for details.
message GetProjectRequest {
  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

}

// A request message for PublicAdvertisedPrefixes.Get. See the method description for details.
message GetPublicAdvertisedPrefixeRequest {
  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Name of the PublicAdvertisedPrefix resource to return.
  string public_advertised_prefix = 101874590 [(google.api.field_behavior) = REQUIRED];

}

// A request message for PublicDelegatedPrefixes.Get. See the method description for details.
message GetPublicDelegatedPrefixeRequest {
  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Name of the PublicDelegatedPrefix resource to return.
  string public_delegated_prefix = 204238440 [(google.api.field_behavior) = REQUIRED];

  // Name of the region of this request.
  string region = 138946292 [(google.api.field_behavior) = REQUIRED];

}

// A request message for RegionAutoscalers.Get. See the method description for details.
message GetRegionAutoscalerRequest {
  // Name of the autoscaler to return.
  string autoscaler = 517258967 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Name of the region scoping this request.
  string region = 138946292 [(google.api.field_behavior) = REQUIRED];

}

// A request message for RegionBackendServices.Get. See the method description for details.
message GetRegionBackendServiceRequest {
  // Name of the BackendService resource to return.
  string backend_service = 306946058 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Name of the region scoping this request.
  string region = 138946292 [(google.api.field_behavior) = REQUIRED];

}

// A request message for RegionCommitments.Get. See the method description for details.
message GetRegionCommitmentRequest {
  // Name of the commitment to return.
  string commitment = 482134805 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Name of the region for this request.
  string region = 138946292 [(google.api.field_behavior) = REQUIRED];

}

// A request message for RegionDisks.Get. See the method description for details.
message GetRegionDiskRequest {
  // Name of the regional persistent disk to return.
  string disk = 3083677 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Name of the region for this request.
  string region = 138946292 [(google.api.field_behavior) = REQUIRED];

}

// A request message for RegionDiskTypes.Get. See the method description for details.
message GetRegionDiskTypeRequest {
  // Name of the disk type to return.
  string disk_type = 93009052 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // The name of the region for this request.
  string region = 138946292 [(google.api.field_behavior) = REQUIRED];

}

// A request message for RegionHealthChecks.Get. See the method description for details.
message GetRegionHealthCheckRequest {
  // Name of the HealthCheck resource to return.
  string health_check = 308876645 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Name of the region scoping this request.
  string region = 138946292 [(google.api.field_behavior) = REQUIRED];

}

// A request message for RegionHealthCheckServices.Get. See the method description for details.
message GetRegionHealthCheckServiceRequest {
  // Name of the HealthCheckService to update. The name must be 1-63 characters long, and comply with RFC1035.
  string health_check_service = 408374747 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Name of the region scoping this request.
  string region = 138946292 [(google.api.field_behavior) = REQUIRED];

}

// A request message for RegionInstanceGroupManagers.Get. See the method description for details.
message GetRegionInstanceGroupManagerRequest {
  // Name of the managed instance group to return.
  string instance_group_manager = 249363395 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Name of the region scoping this request.
  string region = 138946292 [(google.api.field_behavior) = REQUIRED];

}

// A request message for RegionInstanceGroups.Get. See the method description for details.
message GetRegionInstanceGroupRequest {
  // Name of the instance group resource to return.
  string instance_group = 81095253 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Name of the region scoping this request.
  string region = 138946292 [(google.api.field_behavior) = REQUIRED];

}

// A request message for RegionInstanceTemplates.Get. See the method description for details.
message GetRegionInstanceTemplateRequest {
  // The name of the instance template.
  string instance_template = 309248228 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // The name of the region for this request.
  string region = 138946292 [(google.api.field_behavior) = REQUIRED];

}

// A request message for RegionNetworkEndpointGroups.Get. See the method description for details.
message GetRegionNetworkEndpointGroupRequest {
  // The name of the network endpoint group. It should comply with RFC1035.
  string network_endpoint_group = 433907078 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // The name of the region where the network endpoint group is located. It should comply with RFC1035.
  string region = 138946292 [(google.api.field_behavior) = REQUIRED];

}

// A request message for RegionNetworkFirewallPolicies.Get. See the method description for details.
message GetRegionNetworkFirewallPolicyRequest {
  // Name of the firewall policy to get.
  string firewall_policy = 498173265 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Name of the region scoping this request.
  string region = 138946292 [(google.api.field_behavior) = REQUIRED];

}

// A request message for RegionNotificationEndpoints.Get. See the method description for details.
message GetRegionNotificationEndpointRequest {
  // Name of the NotificationEndpoint resource to return.
  string notification_endpoint = 376807017 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Name of the region scoping this request.
  string region = 138946292 [(google.api.field_behavior) = REQUIRED];

}

// A request message for RegionOperations.Get. See the method description for details.
message GetRegionOperationRequest {
  // Name of the Operations resource to return.
  string operation = 52090215 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_response_field) = "name"
  ];

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Name of the region for this request.
  string region = 138946292 [(google.api.field_behavior) = REQUIRED];

}

// A request message for Regions.Get. See the method description for details.
message GetRegionRequest {
  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Name of the region resource to return.
  string region = 138946292 [(google.api.field_behavior) = REQUIRED];

}

// A request message for RegionSecurityPolicies.Get. See the method description for details.
message GetRegionSecurityPolicyRequest {
  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Name of the region scoping this request.
  string region = 138946292 [(google.api.field_behavior) = REQUIRED];

  // Name of the security policy to get.
  string security_policy = 171082513 [(google.api.field_behavior) = REQUIRED];

}

// A request message for RegionSslCertificates.Get. See the method description for details.
message GetRegionSslCertificateRequest {
  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Name of the region scoping this request.
  string region = 138946292 [(google.api.field_behavior) = REQUIRED];

  // Name of the SslCertificate resource to return.
  string ssl_certificate = 46443492 [(google.api.field_behavior) = REQUIRED];

}

// A request message for RegionSslPolicies.Get. See the method description for details.
message GetRegionSslPolicyRequest {
  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Name of the region scoping this request.
  string region = 138946292 [(google.api.field_behavior) = REQUIRED];

  // Name of the SSL policy to update. The name must be 1-63 characters long, and comply with RFC1035.
  string ssl_policy = 295190213 [(google.api.field_behavior) = REQUIRED];

}

// A request message for RegionTargetHttpProxies.Get. See the method description for details.
message GetRegionTargetHttpProxyRequest {
  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Name of the region scoping this request.
  string region = 138946292 [(google.api.field_behavior) = REQUIRED];

  // Name of the TargetHttpProxy resource to return.
  string target_http_proxy = 206872421 [(google.api.field_behavior) = REQUIRED];

}

// A request message for RegionTargetHttpsProxies.Get. See the method description for details.
message GetRegionTargetHttpsProxyRequest {
  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Name of the region scoping this request.
  string region = 138946292 [(google.api.field_behavior) = REQUIRED];

  // Name of the TargetHttpsProxy resource to return.
  string target_https_proxy = 52336748 [(google.api.field_behavior) = REQUIRED];

}

// A request message for RegionTargetTcpProxies.Get. See the method description for details.
message GetRegionTargetTcpProxyRequest {
  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Name of the region scoping this request.
  string region = 138946292 [(google.api.field_behavior) = REQUIRED];

  // Name of the TargetTcpProxy resource to return.
  string target_tcp_proxy = 503065442 [(google.api.field_behavior) = REQUIRED];

}

// A request message for RegionUrlMaps.Get. See the method description for details.
message GetRegionUrlMapRequest {
  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Name of the region scoping this request.
  string region = 138946292 [(google.api.field_behavior) = REQUIRED];

  // Name of the UrlMap resource to return.
  string url_map = 367020684 [(google.api.field_behavior) = REQUIRED];

}

// A request message for Reservations.Get. See the method description for details.
message GetReservationRequest {
  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Name of the reservation to retrieve.
  string reservation = 47530956 [(google.api.field_behavior) = REQUIRED];

  // Name of the zone for this request.
  string zone = 3744684 [(google.api.field_behavior) = REQUIRED];

}

// A request message for ResourcePolicies.Get. See the method description for details.
message GetResourcePolicyRequest {
  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Name of the region for this request.
  string region = 138946292 [(google.api.field_behavior) = REQUIRED];

  // Name of the resource policy to retrieve.
  string resource_policy = 159240835 [(google.api.field_behavior) = REQUIRED];

}

// A request message for Routes.Get. See the method description for details.
message GetRouteRequest {
  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Name of the Route resource to return.
  string route = 108704329 [(google.api.field_behavior) = REQUIRED];

}

// A request message for Routers.Get. See the method description for details.
message GetRouterRequest {
  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Name of the region for this request.
  string region = 138946292 [(google.api.field_behavior) = REQUIRED];

  // Name of the Router resource to return.
  string router = 148608841 [(google.api.field_behavior) = REQUIRED];

}

// A request message for Routers.GetRouterStatus. See the method description for details.
message GetRouterStatusRouterRequest {
  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Name of the region for this request.
  string region = 138946292 [(google.api.field_behavior) = REQUIRED];

  // Name of the Router resource to query.
  string router = 148608841 [(google.api.field_behavior) = REQUIRED];

}

// A request message for FirewallPolicies.GetRule. See the method description for details.
message GetRuleFirewallPolicyRequest {
  // Name of the firewall policy to which the queried rule belongs.
  string firewall_policy = 498173265 [(google.api.field_behavior) = REQUIRED];

  // The priority of the rule to get from the firewall policy.
  optional int32 priority = 445151652;

}

// A request message for NetworkFirewallPolicies.GetRule. See the method description for details.
message GetRuleNetworkFirewallPolicyRequest {
  // Name of the firewall policy to which the queried rule belongs.
  string firewall_policy = 498173265 [(google.api.field_behavior) = REQUIRED];

  // The priority of the rule to get from the firewall policy.
  optional int32 priority = 445151652;

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

}

// A request message for RegionNetworkFirewallPolicies.GetRule. See the method description for details.
message GetRuleRegionNetworkFirewallPolicyRequest {
  // Name of the firewall policy to which the queried rule belongs.
  string firewall_policy = 498173265 [(google.api.field_behavior) = REQUIRED];

  // The priority of the rule to get from the firewall policy.
  optional int32 priority = 445151652;

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Name of the region scoping this request.
  string region = 138946292 [(google.api.field_behavior) = REQUIRED];

}

// A request message for SecurityPolicies.GetRule. See the method description for details.
message GetRuleSecurityPolicyRequest {
  // The priority of the rule to get from the security policy.
  optional int32 priority = 445151652;

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Name of the security policy to which the queried rule belongs.
  string security_policy = 171082513 [(google.api.field_behavior) = REQUIRED];

}

// A request message for Instances.GetScreenshot. See the method description for details.
message GetScreenshotInstanceRequest {
  // Name of the instance scoping this request.
  string instance = 18257045 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // The name of the zone for this request.
  string zone = 3744684 [(google.api.field_behavior) = REQUIRED];

}

// A request message for SecurityPolicies.Get. See the method description for details.
message GetSecurityPolicyRequest {
  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Name of the security policy to get.
  string security_policy = 171082513 [(google.api.field_behavior) = REQUIRED];

}

// A request message for Instances.GetSerialPortOutput. See the method description for details.
message GetSerialPortOutputInstanceRequest {
  // Name of the instance for this request.
  string instance = 18257045 [(google.api.field_behavior) = REQUIRED];

  // Specifies which COM or serial port to retrieve data from.
  optional int32 port = 3446913;

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Specifies the starting byte position of the output to return. To start with the first byte of output to the specified port, omit this field or set it to `0`. If the output for that byte position is available, this field matches the `start` parameter sent with the request. If the amount of serial console output exceeds the size of the buffer (1 MB), the oldest output is discarded and is no longer available. If the requested start position refers to discarded output, the start position is adjusted to the oldest output still available, and the adjusted start position is returned as the `start` property value. You can also provide a negative start position, which translates to the most recent number of bytes written to the serial port. For example, -3 is interpreted as the most recent 3 bytes written to the serial console.
  optional int64 start = 109757538;

  // The name of the zone for this request.
  string zone = 3744684 [(google.api.field_behavior) = REQUIRED];

}

// A request message for ServiceAttachments.Get. See the method description for details.
message GetServiceAttachmentRequest {
  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Name of the region of this request.
  string region = 138946292 [(google.api.field_behavior) = REQUIRED];

  // Name of the ServiceAttachment resource to return.
  string service_attachment = 338957549 [(google.api.field_behavior) = REQUIRED];

}

// A request message for Instances.GetShieldedInstanceIdentity. See the method description for details.
message GetShieldedInstanceIdentityInstanceRequest {
  // Name or id of the instance scoping this request.
  string instance = 18257045 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // The name of the zone for this request.
  string zone = 3744684 [(google.api.field_behavior) = REQUIRED];

}

// A request message for Snapshots.Get. See the method description for details.
message GetSnapshotRequest {
  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Name of the Snapshot resource to return.
  string snapshot = 284874180 [(google.api.field_behavior) = REQUIRED];

}

// A request message for SslCertificates.Get. See the method description for details.
message GetSslCertificateRequest {
  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Name of the SslCertificate resource to return.
  string ssl_certificate = 46443492 [(google.api.field_behavior) = REQUIRED];

}

// A request message for SslPolicies.Get. See the method description for details.
message GetSslPolicyRequest {
  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Name of the SSL policy to update. The name must be 1-63 characters long, and comply with RFC1035.
  string ssl_policy = 295190213 [(google.api.field_behavior) = REQUIRED];

}

// A request message for VpnGateways.GetStatus. See the method description for details.
message GetStatusVpnGatewayRequest {
  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Name of the region for this request.
  string region = 138946292 [(google.api.field_behavior) = REQUIRED];

  // Name of the VPN gateway to return.
  string vpn_gateway = 406684153 [(google.api.field_behavior) = REQUIRED];

}

// A request message for Subnetworks.Get. See the method description for details.
message GetSubnetworkRequest {
  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Name of the region scoping this request.
  string region = 138946292 [(google.api.field_behavior) = REQUIRED];

  // Name of the Subnetwork resource to return.
  string subnetwork = 307827694 [(google.api.field_behavior) = REQUIRED];

}

// A request message for TargetGrpcProxies.Get. See the method description for details.
message GetTargetGrpcProxyRequest {
  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Name of the TargetGrpcProxy resource to return.
  string target_grpc_proxy = 5020283 [(google.api.field_behavior) = REQUIRED];

}

// A request message for TargetHttpProxies.Get. See the method description for details.
message GetTargetHttpProxyRequest {
  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Name of the TargetHttpProxy resource to return.
  string target_http_proxy = 206872421 [(google.api.field_behavior) = REQUIRED];

}

// A request message for TargetHttpsProxies.Get. See the method description for details.
message GetTargetHttpsProxyRequest {
  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Name of the TargetHttpsProxy resource to return.
  string target_https_proxy = 52336748 [(google.api.field_behavior) = REQUIRED];

}

// A request message for TargetInstances.Get. See the method description for details.
message GetTargetInstanceRequest {
  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Name of the TargetInstance resource to return.
  string target_instance = 289769347 [(google.api.field_behavior) = REQUIRED];

  // Name of the zone scoping this request.
  string zone = 3744684 [(google.api.field_behavior) = REQUIRED];

}

// A request message for TargetPools.Get. See the method description for details.
message GetTargetPoolRequest {
  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Name of the region scoping this request.
  string region = 138946292 [(google.api.field_behavior) = REQUIRED];

  // Name of the TargetPool resource to return.
  string target_pool = 62796298 [(google.api.field_behavior) = REQUIRED];

}

// A request message for TargetSslProxies.Get. See the method description for details.
message GetTargetSslProxyRequest {
  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Name of the TargetSslProxy resource to return.
  string target_ssl_proxy = 338795853 [(google.api.field_behavior) = REQUIRED];

}

// A request message for TargetTcpProxies.Get. See the method description for details.
message GetTargetTcpProxyRequest {
  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Name of the TargetTcpProxy resource to return.
  string target_tcp_proxy = 503065442 [(google.api.field_behavior) = REQUIRED];

}

// A request message for TargetVpnGateways.Get. See the method description for details.
message GetTargetVpnGatewayRequest {
  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Name of the region for this request.
  string region = 138946292 [(google.api.field_behavior) = REQUIRED];

  // Name of the target VPN gateway to return.
  string target_vpn_gateway = 532512843 [(google.api.field_behavior) = REQUIRED];

}

// A request message for UrlMaps.Get. See the method description for details.
message GetUrlMapRequest {
  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Name of the UrlMap resource to return.
  string url_map = 367020684 [(google.api.field_behavior) = REQUIRED];

}

// A request message for VpnGateways.Get. See the method description for details.
message GetVpnGatewayRequest {
  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Name of the region for this request.
  string region = 138946292 [(google.api.field_behavior) = REQUIRED];

  // Name of the VPN gateway to return.
  string vpn_gateway = 406684153 [(google.api.field_behavior) = REQUIRED];

}

// A request message for VpnTunnels.Get. See the method description for details.
message GetVpnTunnelRequest {
  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Name of the region for this request.
  string region = 138946292 [(google.api.field_behavior) = REQUIRED];

  // Name of the VpnTunnel resource to return.
  string vpn_tunnel = 143821331 [(google.api.field_behavior) = REQUIRED];

}

// A request message for Projects.GetXpnHost. See the method description for details.
message GetXpnHostProjectRequest {
  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

}

// A request message for Projects.GetXpnResources. See the method description for details.
message GetXpnResourcesProjectsRequest {
  // A filter expression that filters resources listed in the response. Most Compute resources support two types of filter expressions: expressions that support regular expressions and expressions that follow API improvement proposal AIP-160. If you want to use AIP-160, your expression must specify the field name, an operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The operator must be either `=`, `!=`, `>`, `<`, `<=`, `>=` or `:`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. The `:` operator can be used with string fields to match substrings. For non-string fields it is equivalent to the `=` operator. The `:*` comparison can be used to test whether a key has been defined. For example, to find all objects with `owner` label use: ``` labels.owner:* ``` You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ``` If you want to use a regular expression, use the `eq` (equal) or `ne` (not equal) operator against a single un-parenthesized expression with or without quotes or against multiple parenthesized expressions. Examples: `fieldname eq unquoted literal` `fieldname eq 'single quoted literal'` `fieldname eq "double quoted literal"` `(fieldname1 eq literal) (fieldname2 ne "literal")` The literal value is interpreted as a regular expression using Google RE2 library syntax. The literal value must match the entire field. For example, to filter for instances that do not end with name "instance", you would use `name ne .*instance`.
  optional string filter = 336120696;

  // The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)
  optional uint32 max_results = 54715419;

  // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported.
  optional string order_by = 160562920;

  // Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results.
  optional string page_token = 19994697;

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Opt-in for partial success behavior which provides partial results in case of failure. The default value is false.
  optional bool return_partial_success = 517198390;

}

// A request message for ZoneOperations.Get. See the method description for details.
message GetZoneOperationRequest {
  // Name of the Operations resource to return.
  string operation = 52090215 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_response_field) = "name"
  ];

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Name of the zone for this request.
  string zone = 3744684 [(google.api.field_behavior) = REQUIRED];

}

// A request message for Zones.Get. See the method description for details.
message GetZoneRequest {
  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Name of the zone resource to return.
  string zone = 3744684 [(google.api.field_behavior) = REQUIRED];

}

//
message GlobalNetworkEndpointGroupsAttachEndpointsRequest {
  // The list of network endpoints to be attached.
  repeated NetworkEndpoint network_endpoints = 149850285;

}

//
message GlobalNetworkEndpointGroupsDetachEndpointsRequest {
  // The list of network endpoints to be detached.
  repeated NetworkEndpoint network_endpoints = 149850285;

}

//
message GlobalOrganizationSetPolicyRequest {
  // Flatten Policy to create a backward compatible wire-format. Deprecated. Use 'policy' to specify bindings.
  repeated Binding bindings = 403251854;

  // Flatten Policy to create a backward compatible wire-format. Deprecated. Use 'policy' to specify the etag.
  optional string etag = 3123477;

  // REQUIRED: The complete policy to be applied to the 'resource'. The size of the policy is limited to a few 10s of KB. An empty policy is in general a valid policy but certain services (like Projects) might reject them.
  optional Policy policy = 91071794;

}

//
message GlobalSetLabelsRequest {
  // The fingerprint of the previous set of labels for this resource, used to detect conflicts. The fingerprint is initially generated by Compute Engine and changes after every request to modify or update labels. You must always provide an up-to-date fingerprint hash when updating or changing labels, otherwise the request will fail with error 412 conditionNotMet. Make a get() request to the resource to get the latest fingerprint.
  optional string label_fingerprint = 178124825;

  // A list of labels to apply for this resource. Each label must comply with the requirements for labels. For example, "webserver-frontend": "images". A label value can also be empty (e.g. "my-label": "").
  map<string, string> labels = 500195327;

}

//
message GlobalSetPolicyRequest {
  // Flatten Policy to create a backward compatible wire-format. Deprecated. Use 'policy' to specify bindings.
  repeated Binding bindings = 403251854;

  // Flatten Policy to create a backward compatible wire-format. Deprecated. Use 'policy' to specify the etag.
  optional string etag = 3123477;

  // REQUIRED: The complete policy to be applied to the 'resource'. The size of the policy is limited to a few 10s of KB. An empty policy is in general a valid policy but certain services (like Projects) might reject them.
  optional Policy policy = 91071794;

}

// A guest attributes entry.
message GuestAttributes {
  // [Output Only] Type of the resource. Always compute#guestAttributes for guest attributes entry.
  optional string kind = 3292052;

  // The path to be queried. This can be the default namespace ('') or a nested namespace ('\/') or a specified key ('\/\').
  optional string query_path = 368591164;

  // [Output Only] The value of the requested queried path.
  optional GuestAttributesValue query_value = 157570874;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 456214797;

  // The key to search for.
  optional string variable_key = 164364828;

  // [Output Only] The value found for the requested key.
  optional string variable_value = 124582382;

}

// A guest attributes namespace/key/value entry.
message GuestAttributesEntry {
  // Key for the guest attribute entry.
  optional string key = 106079;

  // Namespace for the guest attribute entry.
  optional string namespace = 178476379;

  // Value for the guest attribute entry.
  optional string value = 111972721;

}

// Array of guest attribute namespace/key/value tuples.
message GuestAttributesValue {
  repeated GuestAttributesEntry items = 100526016;

}

// Guest OS features.
message GuestOsFeature {
  // The ID of a supported feature. To add multiple values, use commas to separate values. Set to one or more of the following values: - VIRTIO_SCSI_MULTIQUEUE - WINDOWS - MULTI_IP_SUBNET - UEFI_COMPATIBLE - GVNIC - SEV_CAPABLE - SUSPEND_RESUME_COMPATIBLE - SEV_SNP_CAPABLE - TDX_CAPABLE For more information, see Enabling guest operating system features.
  enum Type {
    // A value indicating that the enum field is not set.
    UNDEFINED_TYPE = 0;

    FEATURE_TYPE_UNSPECIFIED = 531767259;

    GVNIC = 68209305;

    MULTI_IP_SUBNET = 151776719;

    SECURE_BOOT = 376811194;

    SEV_CAPABLE = 87083793;

    SEV_LIVE_MIGRATABLE = 392039820;

    SEV_SNP_CAPABLE = 426919;

    UEFI_COMPATIBLE = 195865408;

    VIRTIO_SCSI_MULTIQUEUE = 201597069;

    WINDOWS = 456863331;

  }

  // The ID of a supported feature. To add multiple values, use commas to separate values. Set to one or more of the following values: - VIRTIO_SCSI_MULTIQUEUE - WINDOWS - MULTI_IP_SUBNET - UEFI_COMPATIBLE - GVNIC - SEV_CAPABLE - SUSPEND_RESUME_COMPATIBLE - SEV_SNP_CAPABLE - TDX_CAPABLE For more information, see Enabling guest operating system features.
  // Check the Type enum for the list of possible values.
  optional string type = 3575610;

}

//
message HTTP2HealthCheck {
  // Specifies how a port is selected for health checking. Can be one of the following values: USE_FIXED_PORT: Specifies a port number explicitly using the port field in the health check. Supported by backend services for pass-through load balancers and backend services for proxy load balancers. Not supported by target pools. The health check supports all backends supported by the backend service provided the backend can be health checked. For example, GCE_VM_IP network endpoint groups, GCE_VM_IP_PORT network endpoint groups, and instance group backends. USE_NAMED_PORT: Not supported. USE_SERVING_PORT: Provides an indirect method of specifying the health check port by referring to the backend service. Only supported by backend services for proxy load balancers. Not supported by target pools. Not supported by backend services for pass-through load balancers. Supports all backends that can be health checked; for example, GCE_VM_IP_PORT network endpoint groups and instance group backends. For GCE_VM_IP_PORT network endpoint group backends, the health check uses the port number specified for each endpoint in the network endpoint group. For instance group backends, the health check uses the port number determined by looking up the backend service's named port in the instance group's list of named ports.
  enum PortSpecification {
    // A value indicating that the enum field is not set.
    UNDEFINED_PORT_SPECIFICATION = 0;

    // The port number in the health check's port is used for health checking. Applies to network endpoint group and instance group backends.
    USE_FIXED_PORT = 190235748;

    // Not supported.
    USE_NAMED_PORT = 349300671;

    // For network endpoint group backends, the health check uses the port number specified on each endpoint in the network endpoint group. For instance group backends, the health check uses the port number specified for the backend service's named port defined in the instance group's named ports.
    USE_SERVING_PORT = 362637516;

  }

  // Specifies the type of proxy header to append before sending data to the backend, either NONE or PROXY_V1. The default is NONE.
  enum ProxyHeader {
    // A value indicating that the enum field is not set.
    UNDEFINED_PROXY_HEADER = 0;

    NONE = 2402104;

    PROXY_V1 = 334352940;

  }

  // The value of the host header in the HTTP/2 health check request. If left empty (default value), the host header is set to the destination IP address to which health check packets are sent. The destination IP address depends on the type of load balancer. For details, see: https://cloud.google.com/load-balancing/docs/health-check-concepts#hc-packet-dest
  optional string host = 3208616;

  // The TCP port number to which the health check prober sends packets. The default value is 443. Valid values are 1 through 65535.
  optional int32 port = 3446913;

  // Not supported.
  optional string port_name = 41534345;

  // Specifies how a port is selected for health checking. Can be one of the following values: USE_FIXED_PORT: Specifies a port number explicitly using the port field in the health check. Supported by backend services for pass-through load balancers and backend services for proxy load balancers. Not supported by target pools. The health check supports all backends supported by the backend service provided the backend can be health checked. For example, GCE_VM_IP network endpoint groups, GCE_VM_IP_PORT network endpoint groups, and instance group backends. USE_NAMED_PORT: Not supported. USE_SERVING_PORT: Provides an indirect method of specifying the health check port by referring to the backend service. Only supported by backend services for proxy load balancers. Not supported by target pools. Not supported by backend services for pass-through load balancers. Supports all backends that can be health checked; for example, GCE_VM_IP_PORT network endpoint groups and instance group backends. For GCE_VM_IP_PORT network endpoint group backends, the health check uses the port number specified for each endpoint in the network endpoint group. For instance group backends, the health check uses the port number determined by looking up the backend service's named port in the instance group's list of named ports.
  // Check the PortSpecification enum for the list of possible values.
  optional string port_specification = 51590597;

  // Specifies the type of proxy header to append before sending data to the backend, either NONE or PROXY_V1. The default is NONE.
  // Check the ProxyHeader enum for the list of possible values.
  optional string proxy_header = 160374142;

  // The request path of the HTTP/2 health check request. The default value is /.
  optional string request_path = 229403605;

  // Creates a content-based HTTP/2 health check. In addition to the required HTTP 200 (OK) status code, you can configure the health check to pass only when the backend sends this specific ASCII response string within the first 1024 bytes of the HTTP response body. For details, see: https://cloud.google.com/load-balancing/docs/health-check-concepts#criteria-protocol-http
  optional string response = 196547649;

}

//
message HTTPHealthCheck {
  // Specifies how a port is selected for health checking. Can be one of the following values: USE_FIXED_PORT: Specifies a port number explicitly using the port field in the health check. Supported by backend services for pass-through load balancers and backend services for proxy load balancers. Also supported in legacy HTTP health checks for target pools. The health check supports all backends supported by the backend service provided the backend can be health checked. For example, GCE_VM_IP network endpoint groups, GCE_VM_IP_PORT network endpoint groups, and instance group backends. USE_NAMED_PORT: Not supported. USE_SERVING_PORT: Provides an indirect method of specifying the health check port by referring to the backend service. Only supported by backend services for proxy load balancers. Not supported by target pools. Not supported by backend services for pass-through load balancers. Supports all backends that can be health checked; for example, GCE_VM_IP_PORT network endpoint groups and instance group backends. For GCE_VM_IP_PORT network endpoint group backends, the health check uses the port number specified for each endpoint in the network endpoint group. For instance group backends, the health check uses the port number determined by looking up the backend service's named port in the instance group's list of named ports.
  enum PortSpecification {
    // A value indicating that the enum field is not set.
    UNDEFINED_PORT_SPECIFICATION = 0;

    // The port number in the health check's port is used for health checking. Applies to network endpoint group and instance group backends.
    USE_FIXED_PORT = 190235748;

    // Not supported.
    USE_NAMED_PORT = 349300671;

    // For network endpoint group backends, the health check uses the port number specified on each endpoint in the network endpoint group. For instance group backends, the health check uses the port number specified for the backend service's named port defined in the instance group's named ports.
    USE_SERVING_PORT = 362637516;

  }

  // Specifies the type of proxy header to append before sending data to the backend, either NONE or PROXY_V1. The default is NONE.
  enum ProxyHeader {
    // A value indicating that the enum field is not set.
    UNDEFINED_PROXY_HEADER = 0;

    NONE = 2402104;

    PROXY_V1 = 334352940;

  }

  // The value of the host header in the HTTP health check request. If left empty (default value), the host header is set to the destination IP address to which health check packets are sent. The destination IP address depends on the type of load balancer. For details, see: https://cloud.google.com/load-balancing/docs/health-check-concepts#hc-packet-dest
  optional string host = 3208616;

  // The TCP port number to which the health check prober sends packets. The default value is 80. Valid values are 1 through 65535.
  optional int32 port = 3446913;

  // Not supported.
  optional string port_name = 41534345;

  // Specifies how a port is selected for health checking. Can be one of the following values: USE_FIXED_PORT: Specifies a port number explicitly using the port field in the health check. Supported by backend services for pass-through load balancers and backend services for proxy load balancers. Also supported in legacy HTTP health checks for target pools. The health check supports all backends supported by the backend service provided the backend can be health checked. For example, GCE_VM_IP network endpoint groups, GCE_VM_IP_PORT network endpoint groups, and instance group backends. USE_NAMED_PORT: Not supported. USE_SERVING_PORT: Provides an indirect method of specifying the health check port by referring to the backend service. Only supported by backend services for proxy load balancers. Not supported by target pools. Not supported by backend services for pass-through load balancers. Supports all backends that can be health checked; for example, GCE_VM_IP_PORT network endpoint groups and instance group backends. For GCE_VM_IP_PORT network endpoint group backends, the health check uses the port number specified for each endpoint in the network endpoint group. For instance group backends, the health check uses the port number determined by looking up the backend service's named port in the instance group's list of named ports.
  // Check the PortSpecification enum for the list of possible values.
  optional string port_specification = 51590597;

  // Specifies the type of proxy header to append before sending data to the backend, either NONE or PROXY_V1. The default is NONE.
  // Check the ProxyHeader enum for the list of possible values.
  optional string proxy_header = 160374142;

  // The request path of the HTTP health check request. The default value is /.
  optional string request_path = 229403605;

  // Creates a content-based HTTP health check. In addition to the required HTTP 200 (OK) status code, you can configure the health check to pass only when the backend sends this specific ASCII response string within the first 1024 bytes of the HTTP response body. For details, see: https://cloud.google.com/load-balancing/docs/health-check-concepts#criteria-protocol-http
  optional string response = 196547649;

}

//
message HTTPSHealthCheck {
  // Specifies how a port is selected for health checking. Can be one of the following values: USE_FIXED_PORT: Specifies a port number explicitly using the port field in the health check. Supported by backend services for pass-through load balancers and backend services for proxy load balancers. Not supported by target pools. The health check supports all backends supported by the backend service provided the backend can be health checked. For example, GCE_VM_IP network endpoint groups, GCE_VM_IP_PORT network endpoint groups, and instance group backends. USE_NAMED_PORT: Not supported. USE_SERVING_PORT: Provides an indirect method of specifying the health check port by referring to the backend service. Only supported by backend services for proxy load balancers. Not supported by target pools. Not supported by backend services for pass-through load balancers. Supports all backends that can be health checked; for example, GCE_VM_IP_PORT network endpoint groups and instance group backends. For GCE_VM_IP_PORT network endpoint group backends, the health check uses the port number specified for each endpoint in the network endpoint group. For instance group backends, the health check uses the port number determined by looking up the backend service's named port in the instance group's list of named ports.
  enum PortSpecification {
    // A value indicating that the enum field is not set.
    UNDEFINED_PORT_SPECIFICATION = 0;

    // The port number in the health check's port is used for health checking. Applies to network endpoint group and instance group backends.
    USE_FIXED_PORT = 190235748;

    // Not supported.
    USE_NAMED_PORT = 349300671;

    // For network endpoint group backends, the health check uses the port number specified on each endpoint in the network endpoint group. For instance group backends, the health check uses the port number specified for the backend service's named port defined in the instance group's named ports.
    USE_SERVING_PORT = 362637516;

  }

  // Specifies the type of proxy header to append before sending data to the backend, either NONE or PROXY_V1. The default is NONE.
  enum ProxyHeader {
    // A value indicating that the enum field is not set.
    UNDEFINED_PROXY_HEADER = 0;

    NONE = 2402104;

    PROXY_V1 = 334352940;

  }

  // The value of the host header in the HTTPS health check request. If left empty (default value), the host header is set to the destination IP address to which health check packets are sent. The destination IP address depends on the type of load balancer. For details, see: https://cloud.google.com/load-balancing/docs/health-check-concepts#hc-packet-dest
  optional string host = 3208616;

  // The TCP port number to which the health check prober sends packets. The default value is 443. Valid values are 1 through 65535.
  optional int32 port = 3446913;

  // Not supported.
  optional string port_name = 41534345;

  // Specifies how a port is selected for health checking. Can be one of the following values: USE_FIXED_PORT: Specifies a port number explicitly using the port field in the health check. Supported by backend services for pass-through load balancers and backend services for proxy load balancers. Not supported by target pools. The health check supports all backends supported by the backend service provided the backend can be health checked. For example, GCE_VM_IP network endpoint groups, GCE_VM_IP_PORT network endpoint groups, and instance group backends. USE_NAMED_PORT: Not supported. USE_SERVING_PORT: Provides an indirect method of specifying the health check port by referring to the backend service. Only supported by backend services for proxy load balancers. Not supported by target pools. Not supported by backend services for pass-through load balancers. Supports all backends that can be health checked; for example, GCE_VM_IP_PORT network endpoint groups and instance group backends. For GCE_VM_IP_PORT network endpoint group backends, the health check uses the port number specified for each endpoint in the network endpoint group. For instance group backends, the health check uses the port number determined by looking up the backend service's named port in the instance group's list of named ports.
  // Check the PortSpecification enum for the list of possible values.
  optional string port_specification = 51590597;

  // Specifies the type of proxy header to append before sending data to the backend, either NONE or PROXY_V1. The default is NONE.
  // Check the ProxyHeader enum for the list of possible values.
  optional string proxy_header = 160374142;

  // The request path of the HTTPS health check request. The default value is /.
  optional string request_path = 229403605;

  // Creates a content-based HTTPS health check. In addition to the required HTTP 200 (OK) status code, you can configure the health check to pass only when the backend sends this specific ASCII response string within the first 1024 bytes of the HTTP response body. For details, see: https://cloud.google.com/load-balancing/docs/health-check-concepts#criteria-protocol-http
  optional string response = 196547649;

}

// Represents a Health Check resource. Google Compute Engine has two Health Check resources: * [Global](/compute/docs/reference/rest/v1/healthChecks) * [Regional](/compute/docs/reference/rest/v1/regionHealthChecks) Internal HTTP(S) load balancers must use regional health checks (`compute.v1.regionHealthChecks`). Traffic Director must use global health checks (`compute.v1.HealthChecks`). Internal TCP/UDP load balancers can use either regional or global health checks (`compute.v1.regionHealthChecks` or `compute.v1.HealthChecks`). External HTTP(S), TCP proxy, and SSL proxy load balancers as well as managed instance group auto-healing must use global health checks (`compute.v1.HealthChecks`). Backend service-based network load balancers must use regional health checks (`compute.v1.regionHealthChecks`). Target pool-based network load balancers must use legacy HTTP health checks (`compute.v1.httpHealthChecks`). For more information, see Health checks overview.
message HealthCheck {
  // Specifies the type of the healthCheck, either TCP, SSL, HTTP, HTTPS, HTTP2 or GRPC. Exactly one of the protocol-specific health check fields must be specified, which must match type field.
  enum Type {
    // A value indicating that the enum field is not set.
    UNDEFINED_TYPE = 0;

    GRPC = 2196510;

    HTTP = 2228360;

    HTTP2 = 69079210;

    HTTPS = 69079243;

    INVALID = 530283991;

    SSL = 82412;

    TCP = 82881;

  }

  // How often (in seconds) to send a health check. The default value is 5 seconds.
  optional int32 check_interval_sec = 345561006;

  // [Output Only] Creation timestamp in 3339 text format.
  optional string creation_timestamp = 30525366;

  // An optional description of this resource. Provide this property when you create the resource.
  optional string description = 422937596;

  optional GRPCHealthCheck grpc_health_check = 85529574;

  // A so-far unhealthy instance will be marked healthy after this many consecutive successes. The default value is 2.
  optional int32 healthy_threshold = 403212361;

  optional HTTP2HealthCheck http2_health_check = 11360986;

  optional HTTPHealthCheck http_health_check = 412586940;

  optional HTTPSHealthCheck https_health_check = 436046905;

  // [Output Only] The unique identifier for the resource. This identifier is defined by the server.
  optional uint64 id = 3355;

  // Type of the resource.
  optional string kind = 3292052;

  // Configure logging on this health check.
  optional HealthCheckLogConfig log_config = 351299741;

  // Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. For example, a name that is 1-63 characters long, matches the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?`, and otherwise complies with RFC1035. This regular expression describes a name where the first character is a lowercase letter, and all following characters are a dash, lowercase letter, or digit, except the last character, which isn't a dash.
  optional string name = 3373707;

  // [Output Only] Region where the health check resides. Not applicable to global health checks.
  optional string region = 138946292;

  // [Output Only] Server-defined URL for the resource.
  optional string self_link = 456214797;

  optional SSLHealthCheck ssl_health_check = 280032440;

  optional TCPHealthCheck tcp_health_check = 469980419;

  // How long (in seconds) to wait before claiming failure. The default value is 5 seconds. It is invalid for timeoutSec to have greater value than checkIntervalSec.
  optional int32 timeout_sec = 79994995;

  // Specifies the type of the healthCheck, either TCP, SSL, HTTP, HTTPS, HTTP2 or GRPC. Exactly one of the protocol-specific health check fields must be specified, which must match type field.
  // Check the Type enum for the list of possible values.
  optional string type = 3575610;

  // A so-far healthy instance will be marked unhealthy after this many consecutive failures. The default value is 2.
  optional int32 unhealthy_threshold = 227958480;

}

// Contains a list of HealthCheck resources.
message HealthCheckList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 3355;

  // A list of HealthCheck resources.
  repeated HealthCheck items = 100526016;

  // Type of resource.
  optional string kind = 3292052;

  // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
  optional string next_page_token = 79797525;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 456214797;

  // [Output Only] Informational warning message.
  optional Warning warning = 50704284;

}

// Configuration of logging on a health check. If logging is enabled, logs will be exported to Stackdriver.
message HealthCheckLogConfig {
  // Indicates whether or not to export logs. This is false by default, which means no health check logging will be done.
  optional bool enable = 311764355;

}

// A full or valid partial URL to a health check. For example, the following are valid URLs: - https://www.googleapis.com/compute/beta/projects/project-id/global/httpHealthChecks/health-check - projects/project-id/global/httpHealthChecks/health-check - global/httpHealthChecks/health-check 
message HealthCheckReference {
  optional string health_check = 308876645;

}

// Represents a Health-Check as a Service resource.
message HealthCheckService {
  // Optional. Policy for how the results from multiple health checks for the same endpoint are aggregated. Defaults to NO_AGGREGATION if unspecified. - NO_AGGREGATION. An EndpointHealth message is returned for each pair in the health check service. - AND. If any health check of an endpoint reports UNHEALTHY, then UNHEALTHY is the HealthState of the endpoint. If all health checks report HEALTHY, the HealthState of the endpoint is HEALTHY. . This is only allowed with regional HealthCheckService.
  enum HealthStatusAggregationPolicy {
    // A value indicating that the enum field is not set.
    UNDEFINED_HEALTH_STATUS_AGGREGATION_POLICY = 0;

    // If any backend's health check reports UNHEALTHY, then UNHEALTHY is the HealthState of the entire health check service. If all backend's are healthy, the HealthState of the health check service is HEALTHY.
    AND = 64951;

    // An EndpointHealth message is returned for each backend in the health check service.
    NO_AGGREGATION = 426445124;

  }

  // [Output Only] Creation timestamp in RFC3339 text format.
  optional string creation_timestamp = 30525366;

  // An optional description of this resource. Provide this property when you create the resource.
  optional string description = 422937596;

  // Fingerprint of this resource. A hash of the contents stored in this object. This field is used in optimistic locking. This field will be ignored when inserting a HealthCheckService. An up-to-date fingerprint must be provided in order to patch/update the HealthCheckService; Otherwise, the request will fail with error 412 conditionNotMet. To see the latest fingerprint, make a get() request to retrieve the HealthCheckService.
  optional string fingerprint = 234678500;

  // A list of URLs to the HealthCheck resources. Must have at least one HealthCheck, and not more than 10 for regional HealthCheckService, and not more than 1 for global HealthCheckService. HealthCheck resources must have portSpecification=USE_SERVING_PORT or portSpecification=USE_FIXED_PORT. For regional HealthCheckService, the HealthCheck must be regional and in the same region. For global HealthCheckService, HealthCheck must be global. Mix of regional and global HealthChecks is not supported. Multiple regional HealthChecks must belong to the same region. Regional HealthChecks must belong to the same region as zones of NetworkEndpointGroups. For global HealthCheckService using global INTERNET_IP_PORT NetworkEndpointGroups, the global HealthChecks must specify sourceRegions, and HealthChecks that specify sourceRegions can only be used with global INTERNET_IP_PORT NetworkEndpointGroups.
  repeated string health_checks = 448370606;

  // Optional. Policy for how the results from multiple health checks for the same endpoint are aggregated. Defaults to NO_AGGREGATION if unspecified. - NO_AGGREGATION. An EndpointHealth message is returned for each pair in the health check service. - AND. If any health check of an endpoint reports UNHEALTHY, then UNHEALTHY is the HealthState of the endpoint. If all health checks report HEALTHY, the HealthState of the endpoint is HEALTHY. . This is only allowed with regional HealthCheckService.
  // Check the HealthStatusAggregationPolicy enum for the list of possible values.
  optional string health_status_aggregation_policy = 253163129;

  // [Output Only] The unique identifier for the resource. This identifier is defined by the server.
  optional uint64 id = 3355;

  // [Output only] Type of the resource. Always compute#healthCheckServicefor health check services.
  optional string kind = 3292052;

  // Name of the resource. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
  optional string name = 3373707;

  // A list of URLs to the NetworkEndpointGroup resources. Must not have more than 100. For regional HealthCheckService, NEGs must be in zones in the region of the HealthCheckService. For global HealthCheckServices, the NetworkEndpointGroups must be global INTERNET_IP_PORT.
  repeated string network_endpoint_groups = 29346733;

  // A list of URLs to the NotificationEndpoint resources. Must not have more than 10. A list of endpoints for receiving notifications of change in health status. For regional HealthCheckService, NotificationEndpoint must be regional and in the same region. For global HealthCheckService, NotificationEndpoint must be global.
  repeated string notification_endpoints = 406728490;

  // [Output Only] URL of the region where the health check service resides. This field is not applicable to global health check services. You must specify this field as part of the HTTP request URL. It is not settable as a field in the request body.
  optional string region = 138946292;

  // [Output Only] Server-defined URL for the resource.
  optional string self_link = 456214797;

}

// A full or valid partial URL to a health check service. For example, the following are valid URLs: - https://www.googleapis.com/compute/beta/projects/project-id/regions/us-west1/healthCheckServices/health-check-service - projects/project-id/regions/us-west1/healthCheckServices/health-check-service - regions/us-west1/healthCheckServices/health-check-service 
message HealthCheckServiceReference {
  optional string health_check_service = 408374747;

}

//
message HealthCheckServicesList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 3355;

  // A list of HealthCheckService resources.
  repeated HealthCheckService items = 100526016;

  // [Output Only] Type of the resource. Always compute#healthCheckServicesList for lists of HealthCheckServices.
  optional string kind = 3292052;

  // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
  optional string next_page_token = 79797525;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 456214797;

  // [Output Only] Informational warning message.
  optional Warning warning = 50704284;

}

//
message HealthChecksAggregatedList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 3355;

  // A list of HealthChecksScopedList resources.
  map<string, HealthChecksScopedList> items = 100526016;

  // Type of resource.
  optional string kind = 3292052;

  // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
  optional string next_page_token = 79797525;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 456214797;

  // [Output Only] Unreachable resources.
  repeated string unreachables = 243372063;

  // [Output Only] Informational warning message.
  optional Warning warning = 50704284;

}

//
message HealthChecksScopedList {
  // A list of HealthChecks contained in this scope.
  repeated HealthCheck health_checks = 448370606;

  // Informational warning which replaces the list of backend services when the list is empty.
  optional Warning warning = 50704284;

}

//
message HealthStatus {
  // Health state of the instance.
  enum HealthState {
    // A value indicating that the enum field is not set.
    UNDEFINED_HEALTH_STATE = 0;

    HEALTHY = 439801213;

    UNHEALTHY = 462118084;

  }

  //
  enum WeightError {
    // A value indicating that the enum field is not set.
    UNDEFINED_WEIGHT_ERROR = 0;

    // The response to a Health Check probe had the HTTP response header field X-Load-Balancing-Endpoint-Weight, but its content was invalid (i.e., not a non-negative single-precision floating-point number in decimal string representation).
    INVALID_WEIGHT = 383698400;

    // The response to a Health Check probe did not have the HTTP response header field X-Load-Balancing-Endpoint-Weight.
    MISSING_WEIGHT = 384027537;

    // This is the value when the accompanied health status is either TIMEOUT (i.e.,the Health Check probe was not able to get a response in time) or UNKNOWN. For the latter, it should be typically because there has not been sufficient time to parse and report the weight for a new backend (which is with 0.0.0.0 ip address). However, it can be also due to an outage case for which the health status is explicitly reset to UNKNOWN.
    UNAVAILABLE_WEIGHT = 439464295;

    // This is the default value when WeightReportMode is DISABLE, and is also the initial value when WeightReportMode has just updated to ENABLE or DRY_RUN and there has not been sufficient time to parse and report the backend weight.
    WEIGHT_NONE = 502428831;

  }

  // Metadata defined as annotations for network endpoint.
  map<string, string> annotations = 112032548;

  // URL of the forwarding rule associated with the health status of the instance.
  optional string forwarding_rule = 269964030;

  // A forwarding rule IP address assigned to this instance.
  optional string forwarding_rule_ip = 172250632;

  // Health state of the instance.
  // Check the HealthState enum for the list of possible values.
  optional string health_state = 324007150;

  // URL of the instance resource.
  optional string instance = 18257045;

  // For target pool based Network Load Balancing, it indicates the forwarding rule's IP address assigned to this instance. For other types of load balancing, the field indicates VM internal ip.
  optional string ip_address = 406272220;

  // The named port of the instance group, not necessarily the port that is health-checked.
  optional int32 port = 3446913;

  optional string weight = 282149496;

  // 
  // Check the WeightError enum for the list of possible values.
  optional string weight_error = 522501505;

}

//
message HealthStatusForNetworkEndpoint {
  // Health state of the network endpoint determined based on the health checks configured.
  enum HealthState {
    // A value indicating that the enum field is not set.
    UNDEFINED_HEALTH_STATE = 0;

    // Endpoint is being drained.
    DRAINING = 480455402;

    // Endpoint is healthy.
    HEALTHY = 439801213;

    // Endpoint is unhealthy.
    UNHEALTHY = 462118084;

    // Health status of the endpoint is unknown.
    UNKNOWN = 433141802;

  }

  // URL of the backend service associated with the health state of the network endpoint.
  optional BackendServiceReference backend_service = 306946058;

  // URL of the forwarding rule associated with the health state of the network endpoint.
  optional ForwardingRuleReference forwarding_rule = 269964030;

  // URL of the health check associated with the health state of the network endpoint.
  optional HealthCheckReference health_check = 308876645;

  // URL of the health check service associated with the health state of the network endpoint.
  optional HealthCheckServiceReference health_check_service = 408374747;

  // Health state of the network endpoint determined based on the health checks configured.
  // Check the HealthState enum for the list of possible values.
  optional string health_state = 324007150;

}

// Provides links to documentation or for performing an out of band action. For example, if a quota check failed with an error indicating the calling project hasn't enabled the accessed service, this can contain a URL pointing directly to the right place in the developer console to flip the bit.
message Help {
  // URL(s) pointing to additional information on handling the current error.
  repeated HelpLink links = 102977465;

}

// Describes a URL link.
message HelpLink {
  // Describes what the link offers.
  optional string description = 422937596;

  // The URL of the link.
  optional string url = 116079;

}

// UrlMaps A host-matching rule for a URL. If matched, will use the named PathMatcher to select the BackendService.
message HostRule {
  // An optional description of this resource. Provide this property when you create the resource.
  optional string description = 422937596;

  // The list of host patterns to match. They must be valid hostnames with optional port numbers in the format host:port. * matches any string of ([a-z0-9-.]*). In that case, * must be the first character, and if followed by anything, the immediate following character must be either - or .. * based matching is not supported when the URL map is bound to a target gRPC proxy that has the validateForProxyless field set to true.
  repeated string hosts = 99467211;

  // The name of the PathMatcher to use to match the path portion of the URL if the hostRule matches the URL's host portion.
  optional string path_matcher = 337813272;

}

// Specification for how requests are aborted as part of fault injection.
message HttpFaultAbort {
  // The HTTP status code used to abort the request. The value must be from 200 to 599 inclusive. For gRPC protocol, the gRPC status code is mapped to HTTP status code according to this mapping table. HTTP status 200 is mapped to gRPC status UNKNOWN. Injecting an OK status is currently not supported by Traffic Director.
  optional uint32 http_status = 468949897;

  // The percentage of traffic for connections, operations, or requests that is aborted as part of fault injection. The value must be from 0.0 to 100.0 inclusive.
  optional double percentage = 151909018;

}

// Specifies the delay introduced by the load balancer before forwarding the request to the backend service as part of fault injection.
message HttpFaultDelay {
  // Specifies the value of the fixed delay interval.
  optional Duration fixed_delay = 317037816;

  // The percentage of traffic for connections, operations, or requests for which a delay is introduced as part of fault injection. The value must be from 0.0 to 100.0 inclusive.
  optional double percentage = 151909018;

}

// The specification for fault injection introduced into traffic to test the resiliency of clients to backend service failure. As part of fault injection, when clients send requests to a backend service, delays can be introduced by the load balancer on a percentage of requests before sending those request to the backend service. Similarly requests from clients can be aborted by the load balancer for a percentage of requests.
message HttpFaultInjection {
  // The specification for how client requests are aborted as part of fault injection.
  optional HttpFaultAbort abort = 92611376;

  // The specification for how client requests are delayed as part of fault injection, before being sent to a backend service.
  optional HttpFaultDelay delay = 95467907;

}

// The request and response header transformations that take effect before the request is passed along to the selected backendService.
message HttpHeaderAction {
  // Headers to add to a matching request before forwarding the request to the backendService.
  repeated HttpHeaderOption request_headers_to_add = 72111974;

  // A list of header names for headers that need to be removed from the request before forwarding the request to the backendService.
  repeated string request_headers_to_remove = 218425247;

  // Headers to add the response before sending the response back to the client.
  repeated HttpHeaderOption response_headers_to_add = 32136052;

  // A list of header names for headers that need to be removed from the response before sending the response back to the client.
  repeated string response_headers_to_remove = 75415761;

}

// matchRule criteria for request header matches.
message HttpHeaderMatch {
  // The value should exactly match contents of exactMatch. Only one of exactMatch, prefixMatch, suffixMatch, regexMatch, presentMatch or rangeMatch must be set.
  optional string exact_match = 457641093;

  // The name of the HTTP header to match. For matching against the HTTP request's authority, use a headerMatch with the header name ":authority". For matching a request's method, use the headerName ":method". When the URL map is bound to a target gRPC proxy that has the validateForProxyless field set to true, only non-binary user-specified custom metadata and the `content-type` header are supported. The following transport-level headers cannot be used in header matching rules: `:authority`, `:method`, `:path`, `:scheme`, `user-agent`, `accept-encoding`, `content-encoding`, `grpc-accept-encoding`, `grpc-encoding`, `grpc-previous-rpc-attempts`, `grpc-tags-bin`, `grpc-timeout` and `grpc-trace-bin`.
  optional string header_name = 110223613;

  // If set to false, the headerMatch is considered a match if the preceding match criteria are met. If set to true, the headerMatch is considered a match if the preceding match criteria are NOT met. The default setting is false. 
  optional bool invert_match = 501130268;

  // The value of the header must start with the contents of prefixMatch. Only one of exactMatch, prefixMatch, suffixMatch, regexMatch, presentMatch or rangeMatch must be set.
  optional string prefix_match = 257898968;

  // A header with the contents of headerName must exist. The match takes place whether or not the request's header has a value. Only one of exactMatch, prefixMatch, suffixMatch, regexMatch, presentMatch or rangeMatch must be set.
  optional bool present_match = 67435841;

  // The header value must be an integer and its value must be in the range specified in rangeMatch. If the header does not contain an integer, number or is empty, the match fails. For example for a range [-5, 0] - -3 will match. - 0 will not match. - 0.25 will not match. - -3someString will not match. Only one of exactMatch, prefixMatch, suffixMatch, regexMatch, presentMatch or rangeMatch must be set. rangeMatch is not supported for load balancers that have loadBalancingScheme set to EXTERNAL.
  optional Int64RangeMatch range_match = 97244227;

  // The value of the header must match the regular expression specified in regexMatch. For more information about regular expression syntax, see Syntax. For matching against a port specified in the HTTP request, use a headerMatch with headerName set to PORT and a regular expression that satisfies the RFC2616 Host header's port specifier. Only one of exactMatch, prefixMatch, suffixMatch, regexMatch, presentMatch or rangeMatch must be set. Regular expressions can only be used when the loadBalancingScheme is set to INTERNAL_SELF_MANAGED.
  optional string regex_match = 107387853;

  // The value of the header must end with the contents of suffixMatch. Only one of exactMatch, prefixMatch, suffixMatch, regexMatch, presentMatch or rangeMatch must be set.
  optional string suffix_match = 426488663;

}

// Specification determining how headers are added to requests or responses.
message HttpHeaderOption {
  // The name of the header.
  optional string header_name = 110223613;

  // The value of the header to add.
  optional string header_value = 203094335;

  // If false, headerValue is appended to any values that already exist for the header. If true, headerValue is set for the header, discarding any values that were set for that header. The default value is false. 
  optional bool replace = 20755124;

}

// HttpRouteRuleMatch criteria for a request's query parameter.
message HttpQueryParameterMatch {
  // The queryParameterMatch matches if the value of the parameter exactly matches the contents of exactMatch. Only one of presentMatch, exactMatch, or regexMatch must be set. 
  optional string exact_match = 457641093;

  // The name of the query parameter to match. The query parameter must exist in the request, in the absence of which the request match fails.
  optional string name = 3373707;

  // Specifies that the queryParameterMatch matches if the request contains the query parameter, irrespective of whether the parameter has a value or not. Only one of presentMatch, exactMatch, or regexMatch must be set. 
  optional bool present_match = 67435841;

  // The queryParameterMatch matches if the value of the parameter matches the regular expression specified by regexMatch. For more information about regular expression syntax, see Syntax. Only one of presentMatch, exactMatch, or regexMatch must be set. Regular expressions can only be used when the loadBalancingScheme is set to INTERNAL_SELF_MANAGED. 
  optional string regex_match = 107387853;

}

// Specifies settings for an HTTP redirect.
message HttpRedirectAction {
  // The HTTP Status code to use for this RedirectAction. Supported values are: - MOVED_PERMANENTLY_DEFAULT, which is the default value and corresponds to 301. - FOUND, which corresponds to 302. - SEE_OTHER which corresponds to 303. - TEMPORARY_REDIRECT, which corresponds to 307. In this case, the request method is retained. - PERMANENT_REDIRECT, which corresponds to 308. In this case, the request method is retained. 
  enum RedirectResponseCode {
    // A value indicating that the enum field is not set.
    UNDEFINED_REDIRECT_RESPONSE_CODE = 0;

    // Http Status Code 302 - Found.
    FOUND = 67084130;

    // Http Status Code 301 - Moved Permanently.
    MOVED_PERMANENTLY_DEFAULT = 386698449;

    // Http Status Code 308 - Permanent Redirect maintaining HTTP method.
    PERMANENT_REDIRECT = 382006381;

    // Http Status Code 303 - See Other.
    SEE_OTHER = 445380580;

    // Http Status Code 307 - Temporary Redirect maintaining HTTP method.
    TEMPORARY_REDIRECT = 489550378;

  }

  // The host that is used in the redirect response instead of the one that was supplied in the request. The value must be from 1 to 255 characters.
  optional string host_redirect = 107417747;

  // If set to true, the URL scheme in the redirected request is set to HTTPS. If set to false, the URL scheme of the redirected request remains the same as that of the request. This must only be set for URL maps used in TargetHttpProxys. Setting this true for TargetHttpsProxy is not permitted. The default is set to false.
  optional bool https_redirect = 170260656;

  // The path that is used in the redirect response instead of the one that was supplied in the request. pathRedirect cannot be supplied together with prefixRedirect. Supply one alone or neither. If neither is supplied, the path of the original request is used for the redirect. The value must be from 1 to 1024 characters.
  optional string path_redirect = 272342710;

  // The prefix that replaces the prefixMatch specified in the HttpRouteRuleMatch, retaining the remaining portion of the URL before redirecting the request. prefixRedirect cannot be supplied together with pathRedirect. Supply one alone or neither. If neither is supplied, the path of the original request is used for the redirect. The value must be from 1 to 1024 characters.
  optional string prefix_redirect = 446184169;

  // The HTTP Status code to use for this RedirectAction. Supported values are: - MOVED_PERMANENTLY_DEFAULT, which is the default value and corresponds to 301. - FOUND, which corresponds to 302. - SEE_OTHER which corresponds to 303. - TEMPORARY_REDIRECT, which corresponds to 307. In this case, the request method is retained. - PERMANENT_REDIRECT, which corresponds to 308. In this case, the request method is retained.
  // Check the RedirectResponseCode enum for the list of possible values.
  optional string redirect_response_code = 436710408;

  // If set to true, any accompanying query portion of the original URL is removed before redirecting the request. If set to false, the query portion of the original URL is retained. The default is set to false. 
  optional bool strip_query = 52284641;

}

// The retry policy associates with HttpRouteRule
message HttpRetryPolicy {
  // Specifies the allowed number retries. This number must be > 0. If not specified, defaults to 1.
  optional uint32 num_retries = 251680141;

  // Specifies a non-zero timeout per retry attempt. If not specified, will use the timeout set in the HttpRouteAction field. If timeout in the HttpRouteAction field is not set, this field uses the largest timeout among all backend services associated with the route. Not supported when the URL map is bound to a target gRPC proxy that has the validateForProxyless field set to true.
  optional Duration per_try_timeout = 280041147;

  // Specifies one or more conditions when this retry policy applies. Valid values are: - 5xx: retry is attempted if the instance or endpoint responds with any 5xx response code, or if the instance or endpoint does not respond at all. For example, disconnects, reset, read timeout, connection failure, and refused streams. - gateway-error: Similar to 5xx, but only applies to response codes 502, 503 or 504. - connect-failure: a retry is attempted on failures connecting to the instance or endpoint. For example, connection timeouts. - retriable-4xx: a retry is attempted if the instance or endpoint responds with a 4xx response code. The only error that you can retry is error code 409. - refused-stream: a retry is attempted if the instance or endpoint resets the stream with a REFUSED_STREAM error code. This reset type indicates that it is safe to retry. - cancelled: a retry is attempted if the gRPC status code in the response header is set to cancelled. - deadline-exceeded: a retry is attempted if the gRPC status code in the response header is set to deadline-exceeded. - internal: a retry is attempted if the gRPC status code in the response header is set to internal. - resource-exhausted: a retry is attempted if the gRPC status code in the response header is set to resource-exhausted. - unavailable: a retry is attempted if the gRPC status code in the response header is set to unavailable. Only the following codes are supported when the URL map is bound to target gRPC proxy that has validateForProxyless field set to true. - cancelled - deadline-exceeded - internal - resource-exhausted - unavailable 
  repeated string retry_conditions = 28815535;

}

//
message HttpRouteAction {
  // The specification for allowing client-side cross-origin requests. For more information about the W3C recommendation for cross-origin resource sharing (CORS), see Fetch API Living Standard. Not supported when the URL map is bound to a target gRPC proxy.
  optional CorsPolicy cors_policy = 398943748;

  // The specification for fault injection introduced into traffic to test the resiliency of clients to backend service failure. As part of fault injection, when clients send requests to a backend service, delays can be introduced by a load balancer on a percentage of requests before sending those requests to the backend service. Similarly requests from clients can be aborted by the load balancer for a percentage of requests. timeout and retry_policy is ignored by clients that are configured with a fault_injection_policy if: 1. The traffic is generated by fault injection AND 2. The fault injection is not a delay fault injection. Fault injection is not supported with the global external HTTP(S) load balancer (classic). To see which load balancers support fault injection, see Load balancing: Routing and traffic management features.
  optional HttpFaultInjection fault_injection_policy = 412781079;

  // Specifies the maximum duration (timeout) for streams on the selected route. Unlike the timeout field where the timeout duration starts from the time the request has been fully processed (known as *end-of-stream*), the duration in this field is computed from the beginning of the stream until the response has been processed, including all retries. A stream that does not complete in this duration is closed. If not specified, this field uses the maximum maxStreamDuration value among all backend services associated with the route. This field is only allowed if the Url map is used with backend services with loadBalancingScheme set to INTERNAL_SELF_MANAGED.
  optional Duration max_stream_duration = 61428376;

  // Specifies the policy on how requests intended for the route's backends are shadowed to a separate mirrored backend service. The load balancer does not wait for responses from the shadow service. Before sending traffic to the shadow service, the host / authority header is suffixed with -shadow. Not supported when the URL map is bound to a target gRPC proxy that has the validateForProxyless field set to true.
  optional RequestMirrorPolicy request_mirror_policy = 220196866;

  // Specifies the retry policy associated with this route.
  optional HttpRetryPolicy retry_policy = 56799913;

  // Specifies the timeout for the selected route. Timeout is computed from the time the request has been fully processed (known as *end-of-stream*) up until the response has been processed. Timeout includes all retries. If not specified, this field uses the largest timeout among all backend services associated with the route. Not supported when the URL map is bound to a target gRPC proxy that has validateForProxyless field set to true.
  optional Duration timeout = 296701281;

  // The spec to modify the URL of the request, before forwarding the request to the matched service. urlRewrite is the only action supported in UrlMaps for external HTTP(S) load balancers. Not supported when the URL map is bound to a target gRPC proxy that has the validateForProxyless field set to true.
  optional UrlRewrite url_rewrite = 273333948;

  // A list of weighted backend services to send traffic to when a route match occurs. The weights determine the fraction of traffic that flows to their corresponding backend service. If all traffic needs to go to a single backend service, there must be one weightedBackendService with weight set to a non-zero number. After a backend service is identified and before forwarding the request to the backend service, advanced routing actions such as URL rewrites and header transformations are applied depending on additional settings specified in this HttpRouteAction.
  repeated WeightedBackendService weighted_backend_services = 337028049;

}

// The HttpRouteRule setting specifies how to match an HTTP request and the corresponding routing action that load balancing proxies perform.
message HttpRouteRule {
  // The short description conveying the intent of this routeRule. The description can have a maximum length of 1024 characters.
  optional string description = 422937596;

  // Specifies changes to request and response headers that need to take effect for the selected backendService. The headerAction value specified here is applied before the matching pathMatchers[].headerAction and after pathMatchers[].routeRules[].routeAction.weightedBackendService.backendServiceWeightAction[].headerAction HeaderAction is not supported for load balancers that have their loadBalancingScheme set to EXTERNAL. Not supported when the URL map is bound to a target gRPC proxy that has validateForProxyless field set to true.
  optional HttpHeaderAction header_action = 328077352;

  // The list of criteria for matching attributes of a request to this routeRule. This list has OR semantics: the request matches this routeRule when any of the matchRules are satisfied. However predicates within a given matchRule have AND semantics. All predicates within a matchRule must match for the request to match the rule.
  repeated HttpRouteRuleMatch match_rules = 376200701;

  // For routeRules within a given pathMatcher, priority determines the order in which a load balancer interprets routeRules. RouteRules are evaluated in order of priority, from the lowest to highest number. The priority of a rule decreases as its number increases (1, 2, 3, N+1). The first rule that matches the request is applied. You cannot configure two or more routeRules with the same priority. Priority for each rule must be set to a number from 0 to 2147483647 inclusive. Priority numbers can have gaps, which enable you to add or remove rules in the future without affecting the rest of the rules. For example, 1, 2, 3, 4, 5, 9, 12, 16 is a valid series of priority numbers to which you could add rules numbered from 6 to 8, 10 to 11, and 13 to 15 in the future without any impact on existing rules.
  optional int32 priority = 445151652;

  // In response to a matching matchRule, the load balancer performs advanced routing actions, such as URL rewrites and header transformations, before forwarding the request to the selected backend. If routeAction specifies any weightedBackendServices, service must not be set. Conversely if service is set, routeAction cannot contain any weightedBackendServices. Only one of urlRedirect, service or routeAction.weightedBackendService must be set. URL maps for Classic external HTTP(S) load balancers only support the urlRewrite action within a route rule's routeAction.
  optional HttpRouteAction route_action = 424563948;

  // The full or partial URL of the backend service resource to which traffic is directed if this rule is matched. If routeAction is also specified, advanced routing actions, such as URL rewrites, take effect before sending the request to the backend. However, if service is specified, routeAction cannot contain any weightedBackendServices. Conversely, if routeAction specifies any weightedBackendServices, service must not be specified. Only one of urlRedirect, service or routeAction.weightedBackendService must be set.
  optional string service = 373540533;

  // When this rule is matched, the request is redirected to a URL specified by urlRedirect. If urlRedirect is specified, service or routeAction must not be set. Not supported when the URL map is bound to a target gRPC proxy.
  optional HttpRedirectAction url_redirect = 405147820;

}

// HttpRouteRuleMatch specifies a set of criteria for matching requests to an HttpRouteRule. All specified criteria must be satisfied for a match to occur.
message HttpRouteRuleMatch {
  // For satisfying the matchRule condition, the path of the request must exactly match the value specified in fullPathMatch after removing any query parameters and anchor that may be part of the original URL. fullPathMatch must be from 1 to 1024 characters. Only one of prefixMatch, fullPathMatch or regexMatch must be specified.
  optional string full_path_match = 214598875;

  // Specifies a list of header match criteria, all of which must match corresponding headers in the request.
  repeated HttpHeaderMatch header_matches = 361903489;

  // Specifies that prefixMatch and fullPathMatch matches are case sensitive. The default value is false. ignoreCase must not be used with regexMatch. Not supported when the URL map is bound to a target gRPC proxy.
  optional bool ignore_case = 464324989;

  // Opaque filter criteria used by the load balancer to restrict routing configuration to a limited set of xDS compliant clients. In their xDS requests to the load balancer, xDS clients present node metadata. When there is a match, the relevant routing configuration is made available to those proxies. For each metadataFilter in this list, if its filterMatchCriteria is set to MATCH_ANY, at least one of the filterLabels must match the corresponding label provided in the metadata. If its filterMatchCriteria is set to MATCH_ALL, then all of its filterLabels must match with corresponding labels provided in the metadata. If multiple metadata filters are specified, all of them need to be satisfied in order to be considered a match. metadataFilters specified here is applied after those specified in ForwardingRule that refers to the UrlMap this HttpRouteRuleMatch belongs to. metadataFilters only applies to load balancers that have loadBalancingScheme set to INTERNAL_SELF_MANAGED. Not supported when the URL map is bound to a target gRPC proxy that has validateForProxyless field set to true.
  repeated MetadataFilter metadata_filters = 464725739;

  // For satisfying the matchRule condition, the request's path must begin with the specified prefixMatch. prefixMatch must begin with a /. The value must be from 1 to 1024 characters. Only one of prefixMatch, fullPathMatch or regexMatch must be specified.
  optional string prefix_match = 257898968;

  // Specifies a list of query parameter match criteria, all of which must match corresponding query parameters in the request. Not supported when the URL map is bound to a target gRPC proxy.
  repeated HttpQueryParameterMatch query_parameter_matches = 286231270;

  // For satisfying the matchRule condition, the path of the request must satisfy the regular expression specified in regexMatch after removing any query parameters and anchor supplied with the original URL. For more information about regular expression syntax, see Syntax. Only one of prefixMatch, fullPathMatch or regexMatch must be specified. Regular expressions can only be used when the loadBalancingScheme is set to INTERNAL_SELF_MANAGED.
  optional string regex_match = 107387853;

}

// Represents an Image resource. You can use images to create boot disks for your VM instances. For more information, read Images.
message Image {
  // The architecture of the image. Valid values are ARM64 or X86_64.
  enum Architecture {
    // A value indicating that the enum field is not set.
    UNDEFINED_ARCHITECTURE = 0;

    // Default value indicating Architecture is not set.
    ARCHITECTURE_UNSPECIFIED = 394750507;

    // Machines with architecture ARM64
    ARM64 = 62547450;

    // Machines with architecture X86_64
    X86_64 = 425300551;

  }

  // The type of the image used to create this disk. The default and only valid value is RAW.
  enum SourceType {
    // A value indicating that the enum field is not set.
    UNDEFINED_SOURCE_TYPE = 0;

    RAW = 80904;

  }

  // [Output Only] The status of the image. An image can be used to create other resources, such as instances, only after the image has been successfully created and the status is set to READY. Possible values are FAILED, PENDING, or READY.
  enum Status {
    // A value indicating that the enum field is not set.
    UNDEFINED_STATUS = 0;

    // Image is deleting.
    DELETING = 528602024;

    // Image creation failed due to an error.
    FAILED = 455706685;

    // Image hasn't been created as yet.
    PENDING = 35394935;

    // Image has been successfully created.
    READY = 77848963;

  }

  // The architecture of the image. Valid values are ARM64 or X86_64.
  // Check the Architecture enum for the list of possible values.
  optional string architecture = 302803283;

  // Size of the image tar.gz archive stored in Google Cloud Storage (in bytes).
  optional int64 archive_size_bytes = 381093450;

  // [Output Only] Creation timestamp in RFC3339 text format.
  optional string creation_timestamp = 30525366;

  // The deprecation status associated with this image.
  optional DeprecationStatus deprecated = 515138995;

  // An optional description of this resource. Provide this property when you create the resource.
  optional string description = 422937596;

  // Size of the image when restored onto a persistent disk (in GB).
  optional int64 disk_size_gb = 316263735;

  // The name of the image family to which this image belongs. The image family name can be from a publicly managed image family provided by Compute Engine, or from a custom image family you create. For example, centos-stream-9 is a publicly available image family. For more information, see Image family best practices. When creating disks, you can specify an image family instead of a specific image name. The image family always returns its latest image that is not deprecated. The name of the image family must comply with RFC1035.
  optional string family = 328751972;

  // A list of features to enable on the guest operating system. Applicable only for bootable images. To see a list of available options, see the guestOSfeatures[].type parameter.
  repeated GuestOsFeature guest_os_features = 79294545;

  // [Output Only] The unique identifier for the resource. This identifier is defined by the server.
  optional uint64 id = 3355;

  // Encrypts the image using a customer-supplied encryption key. After you encrypt an image with a customer-supplied key, you must provide the same key if you use the image later (e.g. to create a disk from the image). Customer-supplied encryption keys do not protect access to metadata of the disk. If you do not provide an encryption key when creating the image, then the disk will be encrypted using an automatically generated key and you do not need to provide a key to use the image later.
  optional CustomerEncryptionKey image_encryption_key = 379512583;

  // [Output Only] Type of the resource. Always compute#image for images.
  optional string kind = 3292052;

  // A fingerprint for the labels being applied to this image, which is essentially a hash of the labels used for optimistic locking. The fingerprint is initially generated by Compute Engine and changes after every request to modify or update labels. You must always provide an up-to-date fingerprint hash in order to update or change labels, otherwise the request will fail with error 412 conditionNotMet. To see the latest fingerprint, make a get() request to retrieve an image.
  optional string label_fingerprint = 178124825;

  // Labels to apply to this image. These can be later modified by the setLabels method.
  map<string, string> labels = 500195327;

  // Integer license codes indicating which licenses are attached to this image.
  repeated int64 license_codes = 45482664;

  // Any applicable license URI.
  repeated string licenses = 337642578;

  // Name of the resource; provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
  optional string name = 3373707;

  // The parameters of the raw disk image.
  optional RawDisk raw_disk = 503113556;

  // [Output Only] Reserved for future use.
  optional bool satisfies_pzs = 480964267;

  // [Output Only] Server-defined URL for the resource.
  optional string self_link = 456214797;

  // Set the secure boot keys of shielded instance.
  optional InitialStateConfig shielded_instance_initial_state = 192356867;

  // URL of the source disk used to create this image. For example, the following are valid values: - https://www.googleapis.com/compute/v1/projects/project/zones/zone /disks/disk - projects/project/zones/zone/disks/disk - zones/zone/disks/disk In order to create an image, you must provide the full or partial URL of one of the following: - The rawDisk.source URL - The sourceDisk URL - The sourceImage URL - The sourceSnapshot URL 
  optional string source_disk = 451753793;

  // The customer-supplied encryption key of the source disk. Required if the source disk is protected by a customer-supplied encryption key.
  optional CustomerEncryptionKey source_disk_encryption_key = 531501153;

  // [Output Only] The ID value of the disk used to create this image. This value may be used to determine whether the image was taken from the current or a previous instance of a given disk name.
  optional string source_disk_id = 454190809;

  // URL of the source image used to create this image. The following are valid formats for the URL: - https://www.googleapis.com/compute/v1/projects/project_id/global/ images/image_name - projects/project_id/global/images/image_name In order to create an image, you must provide the full or partial URL of one of the following: - The rawDisk.source URL - The sourceDisk URL - The sourceImage URL - The sourceSnapshot URL 
  optional string source_image = 50443319;

  // The customer-supplied encryption key of the source image. Required if the source image is protected by a customer-supplied encryption key.
  optional CustomerEncryptionKey source_image_encryption_key = 381503659;

  // [Output Only] The ID value of the image used to create this image. This value may be used to determine whether the image was taken from the current or a previous instance of a given image name.
  optional string source_image_id = 55328291;

  // URL of the source snapshot used to create this image. The following are valid formats for the URL: - https://www.googleapis.com/compute/v1/projects/project_id/global/ snapshots/snapshot_name - projects/project_id/global/snapshots/snapshot_name In order to create an image, you must provide the full or partial URL of one of the following: - The rawDisk.source URL - The sourceDisk URL - The sourceImage URL - The sourceSnapshot URL 
  optional string source_snapshot = 126061928;

  // The customer-supplied encryption key of the source snapshot. Required if the source snapshot is protected by a customer-supplied encryption key.
  optional CustomerEncryptionKey source_snapshot_encryption_key = 303679322;

  // [Output Only] The ID value of the snapshot used to create this image. This value may be used to determine whether the snapshot was taken from the current or a previous instance of a given snapshot name.
  optional string source_snapshot_id = 98962258;

  // The type of the image used to create this disk. The default and only valid value is RAW.
  // Check the SourceType enum for the list of possible values.
  optional string source_type = 452245726;

  // [Output Only] The status of the image. An image can be used to create other resources, such as instances, only after the image has been successfully created and the status is set to READY. Possible values are FAILED, PENDING, or READY.
  // Check the Status enum for the list of possible values.
  optional string status = 181260274;

  // Cloud Storage bucket storage location of the image (regional or multi-regional).
  repeated string storage_locations = 328005274;

}

//
message ImageFamilyView {
  // The latest image that is part of the specified image family in the requested location, and that is not deprecated.
  optional Image image = 100313435;

}

// Contains a list of images.
message ImageList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 3355;

  // A list of Image resources.
  repeated Image items = 100526016;

  // Type of resource.
  optional string kind = 3292052;

  // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
  optional string next_page_token = 79797525;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 456214797;

  // [Output Only] Informational warning message.
  optional Warning warning = 50704284;

}

// Initial State for shielded instance, these are public keys which are safe to store in public
message InitialStateConfig {
  // The Key Database (db).
  repeated FileContentBuffer dbs = 99253;

  // The forbidden key database (dbx).
  repeated FileContentBuffer dbxs = 3077113;

  // The Key Exchange Key (KEK).
  repeated FileContentBuffer keks = 3288130;

  // The Platform Key (PK).
  optional FileContentBuffer pk = 3579;

}

// A request message for Addresses.Insert. See the method description for details.
message InsertAddressRequest {
  // The body resource for this request
  Address address_resource = 483888121 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // Name of the region for this request.
  string region = 138946292 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "region"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

}

// A request message for Autoscalers.Insert. See the method description for details.
message InsertAutoscalerRequest {
  // The body resource for this request
  Autoscaler autoscaler_resource = 207616118 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // Name of the zone for this request.
  string zone = 3744684 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "zone"
  ];

}

// A request message for BackendBuckets.Insert. See the method description for details.
message InsertBackendBucketRequest {
  // The body resource for this request
  BackendBucket backend_bucket_resource = 380757784 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

}

// A request message for BackendServices.Insert. See the method description for details.
message InsertBackendServiceRequest {
  // The body resource for this request
  BackendService backend_service_resource = 347586723 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

}

// A request message for Disks.Insert. See the method description for details.
message InsertDiskRequest {
  // The body resource for this request
  Disk disk_resource = 25880688 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // Source image to restore onto a disk. This field is optional.
  optional string source_image = 50443319;

  // The name of the zone for this request.
  string zone = 3744684 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "zone"
  ];

}

// A request message for ExternalVpnGateways.Insert. See the method description for details.
message InsertExternalVpnGatewayRequest {
  // The body resource for this request
  ExternalVpnGateway external_vpn_gateway_resource = 486813576 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

}

// A request message for FirewallPolicies.Insert. See the method description for details.
message InsertFirewallPolicyRequest {
  // The body resource for this request
  FirewallPolicy firewall_policy_resource = 495049532 [(google.api.field_behavior) = REQUIRED];

  // Parent ID for this request. The ID can be either be "folders/[FOLDER_ID]" if the parent is a folder or "organizations/[ORGANIZATION_ID]" if the parent is an organization.
  string parent_id = 459714768 [
    (google.cloud.operation_request_field) = "parent_id",
    (google.api.field_behavior) = REQUIRED
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

}

// A request message for Firewalls.Insert. See the method description for details.
message InsertFirewallRequest {
  // The body resource for this request
  Firewall firewall_resource = 41425005 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

}

// A request message for ForwardingRules.Insert. See the method description for details.
message InsertForwardingRuleRequest {
  // The body resource for this request
  ForwardingRule forwarding_rule_resource = 301211695 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // Name of the region scoping this request.
  string region = 138946292 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "region"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

}

// A request message for GlobalAddresses.Insert. See the method description for details.
message InsertGlobalAddressRequest {
  // The body resource for this request
  Address address_resource = 483888121 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

}

// A request message for GlobalForwardingRules.Insert. See the method description for details.
message InsertGlobalForwardingRuleRequest {
  // The body resource for this request
  ForwardingRule forwarding_rule_resource = 301211695 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

}

// A request message for GlobalNetworkEndpointGroups.Insert. See the method description for details.
message InsertGlobalNetworkEndpointGroupRequest {
  // The body resource for this request
  NetworkEndpointGroup network_endpoint_group_resource = 525788839 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

}

// A request message for GlobalPublicDelegatedPrefixes.Insert. See the method description for details.
message InsertGlobalPublicDelegatedPrefixeRequest {
  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // The body resource for this request
  PublicDelegatedPrefix public_delegated_prefix_resource = 47594501 [(google.api.field_behavior) = REQUIRED];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

}

// A request message for HealthChecks.Insert. See the method description for details.
message InsertHealthCheckRequest {
  // The body resource for this request
  HealthCheck health_check_resource = 201925032 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

}

// A request message for Images.Insert. See the method description for details.
message InsertImageRequest {
  // Force image creation if true.
  optional bool force_create = 197723344;

  // The body resource for this request
  Image image_resource = 371171954 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

}

// A request message for InstanceGroupManagers.Insert. See the method description for details.
message InsertInstanceGroupManagerRequest {
  // The body resource for this request
  InstanceGroupManager instance_group_manager_resource = 261063946 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // The name of the zone where you want to create the managed instance group.
  string zone = 3744684 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "zone"
  ];

}

// A request message for InstanceGroups.Insert. See the method description for details.
message InsertInstanceGroupRequest {
  // The body resource for this request
  InstanceGroup instance_group_resource = 286612152 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // The name of the zone where you want to create the instance group.
  string zone = 3744684 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "zone"
  ];

}

// A request message for Instances.Insert. See the method description for details.
message InsertInstanceRequest {
  // The body resource for this request
  Instance instance_resource = 215988344 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // Specifies instance template to create the instance. This field is optional. It can be a full or partial URL. For example, the following are all valid URLs to an instance template: - https://www.googleapis.com/compute/v1/projects/project /global/instanceTemplates/instanceTemplate - projects/project/global/instanceTemplates/instanceTemplate - global/instanceTemplates/instanceTemplate 
  optional string source_instance_template = 332423616;

  // Specifies the machine image to use to create the instance. This field is optional. It can be a full or partial URL. For example, the following are all valid URLs to a machine image: - https://www.googleapis.com/compute/v1/projects/project/global/global /machineImages/machineImage - projects/project/global/global/machineImages/machineImage - global/machineImages/machineImage 
  optional string source_machine_image = 21769791;

  // The name of the zone for this request.
  string zone = 3744684 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "zone"
  ];

}

// A request message for InstanceTemplates.Insert. See the method description for details.
message InsertInstanceTemplateRequest {
  // The body resource for this request
  InstanceTemplate instance_template_resource = 10679561 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

}

// A request message for InterconnectAttachments.Insert. See the method description for details.
message InsertInterconnectAttachmentRequest {
  // The body resource for this request
  InterconnectAttachment interconnect_attachment_resource = 212341369 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // Name of the region for this request.
  string region = 138946292 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "region"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // If true, the request will not be committed.
  optional bool validate_only = 242744629;

}

// A request message for Interconnects.Insert. See the method description for details.
message InsertInterconnectRequest {
  // The body resource for this request
  Interconnect interconnect_resource = 397611167 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

}

// A request message for Licenses.Insert. See the method description for details.
message InsertLicenseRequest {
  // The body resource for this request
  License license_resource = 437955148 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

}

// A request message for MachineImages.Insert. See the method description for details.
message InsertMachineImageRequest {
  // The body resource for this request
  MachineImage machine_image_resource = 60740970 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // Required. Source instance that is used to create the machine image from.
  optional string source_instance = 396315705;

}

// A request message for NetworkAttachments.Insert. See the method description for details.
message InsertNetworkAttachmentRequest {
  // The body resource for this request
  NetworkAttachment network_attachment_resource = 210974745 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // Name of the region of this request.
  string region = 138946292 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "region"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000). end_interface: MixerMutationRequestBuilder
  optional string request_id = 37109963;

}

// A request message for NetworkEdgeSecurityServices.Insert. See the method description for details.
message InsertNetworkEdgeSecurityServiceRequest {
  // The body resource for this request
  NetworkEdgeSecurityService network_edge_security_service_resource = 477548966 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // Name of the region scoping this request.
  string region = 138946292 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "region"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // If true, the request will not be committed.
  optional bool validate_only = 242744629;

}

// A request message for NetworkEndpointGroups.Insert. See the method description for details.
message InsertNetworkEndpointGroupRequest {
  // The body resource for this request
  NetworkEndpointGroup network_endpoint_group_resource = 525788839 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // The name of the zone where you want to create the network endpoint group. It should comply with RFC1035.
  string zone = 3744684 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "zone"
  ];

}

// A request message for NetworkFirewallPolicies.Insert. See the method description for details.
message InsertNetworkFirewallPolicyRequest {
  // The body resource for this request
  FirewallPolicy firewall_policy_resource = 495049532 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

}

// A request message for Networks.Insert. See the method description for details.
message InsertNetworkRequest {
  // The body resource for this request
  Network network_resource = 122105599 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

}

// A request message for NodeGroups.Insert. See the method description for details.
message InsertNodeGroupRequest {
  // Initial count of nodes in the node group.
  int32 initial_node_count = 71951469 [(google.api.field_behavior) = REQUIRED];

  // The body resource for this request
  NodeGroup node_group_resource = 505321899 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // The name of the zone for this request.
  string zone = 3744684 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "zone"
  ];

}

// A request message for NodeTemplates.Insert. See the method description for details.
message InsertNodeTemplateRequest {
  // The body resource for this request
  NodeTemplate node_template_resource = 127364406 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // The name of the region for this request.
  string region = 138946292 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "region"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

}

// A request message for PacketMirrorings.Insert. See the method description for details.
message InsertPacketMirroringRequest {
  // The body resource for this request
  PacketMirroring packet_mirroring_resource = 493501985 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // Name of the region for this request.
  string region = 138946292 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "region"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

}

// A request message for PublicAdvertisedPrefixes.Insert. See the method description for details.
message InsertPublicAdvertisedPrefixeRequest {
  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // The body resource for this request
  PublicAdvertisedPrefix public_advertised_prefix_resource = 233614223 [(google.api.field_behavior) = REQUIRED];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

}

// A request message for PublicDelegatedPrefixes.Insert. See the method description for details.
message InsertPublicDelegatedPrefixeRequest {
  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // The body resource for this request
  PublicDelegatedPrefix public_delegated_prefix_resource = 47594501 [(google.api.field_behavior) = REQUIRED];

  // Name of the region of this request.
  string region = 138946292 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "region"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

}

// A request message for RegionAutoscalers.Insert. See the method description for details.
message InsertRegionAutoscalerRequest {
  // The body resource for this request
  Autoscaler autoscaler_resource = 207616118 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // Name of the region scoping this request.
  string region = 138946292 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "region"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

}

// A request message for RegionBackendServices.Insert. See the method description for details.
message InsertRegionBackendServiceRequest {
  // The body resource for this request
  BackendService backend_service_resource = 347586723 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // Name of the region scoping this request.
  string region = 138946292 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "region"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

}

// A request message for RegionCommitments.Insert. See the method description for details.
message InsertRegionCommitmentRequest {
  // The body resource for this request
  Commitment commitment_resource = 244240888 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // Name of the region for this request.
  string region = 138946292 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "region"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

}

// A request message for RegionDisks.Insert. See the method description for details.
message InsertRegionDiskRequest {
  // The body resource for this request
  Disk disk_resource = 25880688 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // Name of the region for this request.
  string region = 138946292 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "region"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // Source image to restore onto a disk. This field is optional.
  optional string source_image = 50443319;

}

// A request message for RegionHealthChecks.Insert. See the method description for details.
message InsertRegionHealthCheckRequest {
  // The body resource for this request
  HealthCheck health_check_resource = 201925032 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // Name of the region scoping this request.
  string region = 138946292 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "region"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

}

// A request message for RegionHealthCheckServices.Insert. See the method description for details.
message InsertRegionHealthCheckServiceRequest {
  // The body resource for this request
  HealthCheckService health_check_service_resource = 477367794 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // Name of the region scoping this request.
  string region = 138946292 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "region"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

}

// A request message for RegionInstanceGroupManagers.Insert. See the method description for details.
message InsertRegionInstanceGroupManagerRequest {
  // The body resource for this request
  InstanceGroupManager instance_group_manager_resource = 261063946 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // Name of the region scoping this request.
  string region = 138946292 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "region"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

}

// A request message for RegionInstanceTemplates.Insert. See the method description for details.
message InsertRegionInstanceTemplateRequest {
  // The body resource for this request
  InstanceTemplate instance_template_resource = 10679561 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // The name of the region for this request.
  string region = 138946292 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "region"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

}

// A request message for RegionNetworkEndpointGroups.Insert. See the method description for details.
message InsertRegionNetworkEndpointGroupRequest {
  // The body resource for this request
  NetworkEndpointGroup network_endpoint_group_resource = 525788839 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // The name of the region where you want to create the network endpoint group. It should comply with RFC1035.
  string region = 138946292 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "region"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

}

// A request message for RegionNetworkFirewallPolicies.Insert. See the method description for details.
message InsertRegionNetworkFirewallPolicyRequest {
  // The body resource for this request
  FirewallPolicy firewall_policy_resource = 495049532 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // Name of the region scoping this request.
  string region = 138946292 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "region"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

}

// A request message for RegionNotificationEndpoints.Insert. See the method description for details.
message InsertRegionNotificationEndpointRequest {
  // The body resource for this request
  NotificationEndpoint notification_endpoint_resource = 338459940 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // Name of the region scoping this request.
  string region = 138946292 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "region"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

}

// A request message for RegionSecurityPolicies.Insert. See the method description for details.
message InsertRegionSecurityPolicyRequest {
  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // Name of the region scoping this request.
  string region = 138946292 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "region"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // The body resource for this request
  SecurityPolicy security_policy_resource = 216159612 [(google.api.field_behavior) = REQUIRED];

  // If true, the request will not be committed.
  optional bool validate_only = 242744629;

}

// A request message for RegionSslCertificates.Insert. See the method description for details.
message InsertRegionSslCertificateRequest {
  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // Name of the region scoping this request.
  string region = 138946292 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "region"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // The body resource for this request
  SslCertificate ssl_certificate_resource = 180709897 [(google.api.field_behavior) = REQUIRED];

}

// A request message for RegionSslPolicies.Insert. See the method description for details.
message InsertRegionSslPolicyRequest {
  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // Name of the region scoping this request.
  string region = 138946292 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "region"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // The body resource for this request
  SslPolicy ssl_policy_resource = 274891848 [(google.api.field_behavior) = REQUIRED];

}

// A request message for RegionTargetHttpProxies.Insert. See the method description for details.
message InsertRegionTargetHttpProxyRequest {
  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // Name of the region scoping this request.
  string region = 138946292 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "region"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // The body resource for this request
  TargetHttpProxy target_http_proxy_resource = 24696744 [(google.api.field_behavior) = REQUIRED];

}

// A request message for RegionTargetHttpsProxies.Insert. See the method description for details.
message InsertRegionTargetHttpsProxyRequest {
  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // Name of the region scoping this request.
  string region = 138946292 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "region"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // The body resource for this request
  TargetHttpsProxy target_https_proxy_resource = 433657473 [(google.api.field_behavior) = REQUIRED];

}

// A request message for RegionTargetTcpProxies.Insert. See the method description for details.
message InsertRegionTargetTcpProxyRequest {
  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // Name of the region scoping this request.
  string region = 138946292 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "region"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // The body resource for this request
  TargetTcpProxy target_tcp_proxy_resource = 145913931 [(google.api.field_behavior) = REQUIRED];

}

// A request message for RegionUrlMaps.Insert. See the method description for details.
message InsertRegionUrlMapRequest {
  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // Name of the region scoping this request.
  string region = 138946292 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "region"
  ];

  // begin_interface: MixerMutationRequestBuilder Request ID to support idempotency.
  optional string request_id = 37109963;

  // The body resource for this request
  UrlMap url_map_resource = 168675425 [(google.api.field_behavior) = REQUIRED];

}

// A request message for Reservations.Insert. See the method description for details.
message InsertReservationRequest {
  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // The body resource for this request
  Reservation reservation_resource = 285030177 [(google.api.field_behavior) = REQUIRED];

  // Name of the zone for this request.
  string zone = 3744684 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "zone"
  ];

}

// A request message for ResourcePolicies.Insert. See the method description for details.
message InsertResourcePolicyRequest {
  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // Name of the region for this request.
  string region = 138946292 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "region"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // The body resource for this request
  ResourcePolicy resource_policy_resource = 76826186 [(google.api.field_behavior) = REQUIRED];

}

// A request message for Routes.Insert. See the method description for details.
message InsertRouteRequest {
  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // The body resource for this request
  Route route_resource = 225428804 [(google.api.field_behavior) = REQUIRED];

}

// A request message for Routers.Insert. See the method description for details.
message InsertRouterRequest {
  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // Name of the region for this request.
  string region = 138946292 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "region"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // The body resource for this request
  Router router_resource = 155222084 [(google.api.field_behavior) = REQUIRED];

}

// A request message for SecurityPolicies.Insert. See the method description for details.
message InsertSecurityPolicyRequest {
  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // The body resource for this request
  SecurityPolicy security_policy_resource = 216159612 [(google.api.field_behavior) = REQUIRED];

  // If true, the request will not be committed.
  optional bool validate_only = 242744629;

}

// A request message for ServiceAttachments.Insert. See the method description for details.
message InsertServiceAttachmentRequest {
  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // Name of the region of this request.
  string region = 138946292 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "region"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // The body resource for this request
  ServiceAttachment service_attachment_resource = 472980256 [(google.api.field_behavior) = REQUIRED];

}

// A request message for Snapshots.Insert. See the method description for details.
message InsertSnapshotRequest {
  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // The body resource for this request
  Snapshot snapshot_resource = 481319977 [(google.api.field_behavior) = REQUIRED];

}

// A request message for SslCertificates.Insert. See the method description for details.
message InsertSslCertificateRequest {
  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // The body resource for this request
  SslCertificate ssl_certificate_resource = 180709897 [(google.api.field_behavior) = REQUIRED];

}

// A request message for SslPolicies.Insert. See the method description for details.
message InsertSslPolicyRequest {
  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // The body resource for this request
  SslPolicy ssl_policy_resource = 274891848 [(google.api.field_behavior) = REQUIRED];

}

// A request message for Subnetworks.Insert. See the method description for details.
message InsertSubnetworkRequest {
  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // Name of the region scoping this request.
  string region = 138946292 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "region"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // The body resource for this request
  Subnetwork subnetwork_resource = 42233151 [(google.api.field_behavior) = REQUIRED];

}

// A request message for TargetGrpcProxies.Insert. See the method description for details.
message InsertTargetGrpcProxyRequest {
  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // The body resource for this request
  TargetGrpcProxy target_grpc_proxy_resource = 328922450 [(google.api.field_behavior) = REQUIRED];

}

// A request message for TargetHttpProxies.Insert. See the method description for details.
message InsertTargetHttpProxyRequest {
  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // The body resource for this request
  TargetHttpProxy target_http_proxy_resource = 24696744 [(google.api.field_behavior) = REQUIRED];

}

// A request message for TargetHttpsProxies.Insert. See the method description for details.
message InsertTargetHttpsProxyRequest {
  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // The body resource for this request
  TargetHttpsProxy target_https_proxy_resource = 433657473 [(google.api.field_behavior) = REQUIRED];

}

// A request message for TargetInstances.Insert. See the method description for details.
message InsertTargetInstanceRequest {
  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // The body resource for this request
  TargetInstance target_instance_resource = 430453066 [(google.api.field_behavior) = REQUIRED];

  // Name of the zone scoping this request.
  string zone = 3744684 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "zone"
  ];

}

// A request message for TargetPools.Insert. See the method description for details.
message InsertTargetPoolRequest {
  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // Name of the region scoping this request.
  string region = 138946292 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "region"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // The body resource for this request
  TargetPool target_pool_resource = 101281443 [(google.api.field_behavior) = REQUIRED];

}

// A request message for TargetSslProxies.Insert. See the method description for details.
message InsertTargetSslProxyRequest {
  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // The body resource for this request
  TargetSslProxy target_ssl_proxy_resource = 142016192 [(google.api.field_behavior) = REQUIRED];

}

// A request message for TargetTcpProxies.Insert. See the method description for details.
message InsertTargetTcpProxyRequest {
  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // The body resource for this request
  TargetTcpProxy target_tcp_proxy_resource = 145913931 [(google.api.field_behavior) = REQUIRED];

}

// A request message for TargetVpnGateways.Insert. See the method description for details.
message InsertTargetVpnGatewayRequest {
  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // Name of the region for this request.
  string region = 138946292 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "region"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // The body resource for this request
  TargetVpnGateway target_vpn_gateway_resource = 498050 [(google.api.field_behavior) = REQUIRED];

}

// A request message for UrlMaps.Insert. See the method description for details.
message InsertUrlMapRequest {
  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // The body resource for this request
  UrlMap url_map_resource = 168675425 [(google.api.field_behavior) = REQUIRED];

}

// A request message for VpnGateways.Insert. See the method description for details.
message InsertVpnGatewayRequest {
  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // Name of the region for this request.
  string region = 138946292 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "region"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // The body resource for this request
  VpnGateway vpn_gateway_resource = 182688660 [(google.api.field_behavior) = REQUIRED];

}

// A request message for VpnTunnels.Insert. See the method description for details.
message InsertVpnTunnelRequest {
  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // Name of the region for this request.
  string region = 138946292 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "region"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // The body resource for this request
  VpnTunnel vpn_tunnel_resource = 86839482 [(google.api.field_behavior) = REQUIRED];

}

// Represents an Instance resource. An instance is a virtual machine that is hosted on Google Cloud Platform. For more information, read Virtual Machine Instances.
message Instance {
  // KeyRevocationActionType of the instance. Supported options are "STOP" and "NONE". The default value is "NONE" if it is not specified.
  enum KeyRevocationActionType {
    // A value indicating that the enum field is not set.
    UNDEFINED_KEY_REVOCATION_ACTION_TYPE = 0;

    // Default value. This value is unused.
    KEY_REVOCATION_ACTION_TYPE_UNSPECIFIED = 467110106;

    // Indicates user chose no operation.
    NONE = 2402104;

    // Indicates user chose to opt for VM shutdown on key revocation.
    STOP = 2555906;

  }

  // The private IPv6 google access type for the VM. If not specified, use INHERIT_FROM_SUBNETWORK as default.
  enum PrivateIpv6GoogleAccess {
    // A value indicating that the enum field is not set.
    UNDEFINED_PRIVATE_IPV6_GOOGLE_ACCESS = 0;

    // Bidirectional private IPv6 access to/from Google services. If specified, the subnetwork who is attached to the instance's default network interface will be assigned an internal IPv6 prefix if it doesn't have before.
    ENABLE_BIDIRECTIONAL_ACCESS_TO_GOOGLE = 427975994;

    // Outbound private IPv6 access from VMs in this subnet to Google services. If specified, the subnetwork who is attached to the instance's default network interface will be assigned an internal IPv6 prefix if it doesn't have before.
    ENABLE_OUTBOUND_VM_ACCESS_TO_GOOGLE = 288210263;

    // Each network interface inherits PrivateIpv6GoogleAccess from its subnetwork.
    INHERIT_FROM_SUBNETWORK = 530256959;

  }

  // [Output Only] The status of the instance. One of the following values: PROVISIONING, STAGING, RUNNING, STOPPING, SUSPENDING, SUSPENDED, REPAIRING, and TERMINATED. For more information about the status of the instance, see Instance life cycle.
  enum Status {
    // A value indicating that the enum field is not set.
    UNDEFINED_STATUS = 0;

    // The Nanny is halted and we are performing tear down tasks like network deprogramming, releasing quota, IP, tearing down disks etc.
    DEPROVISIONING = 428935662;

    // Resources are being allocated for the instance.
    PROVISIONING = 290896621;

    // The instance is in repair.
    REPAIRING = 413483285;

    // The instance is running.
    RUNNING = 121282975;

    // All required resources have been allocated and the instance is being started.
    STAGING = 431072283;

    // The instance has stopped successfully.
    STOPPED = 444276141;

    // The instance is currently stopping (either being deleted or killed).
    STOPPING = 350791796;

    // The instance has suspended.
    SUSPENDED = 51223995;

    // The instance is suspending.
    SUSPENDING = 514206246;

    // The instance has stopped (either by explicit action or underlying failure).
    TERMINATED = 250018339;

  }

  // Controls for advanced machine-related behavior features.
  optional AdvancedMachineFeatures advanced_machine_features = 409646002;

  // Allows this instance to send and receive packets with non-matching destination or source IPs. This is required if you plan to use this instance to forward routes. For more information, see Enabling IP Forwarding .
  optional bool can_ip_forward = 467731324;

  optional ConfidentialInstanceConfig confidential_instance_config = 490637685;

  // [Output Only] The CPU platform used by this instance.
  optional string cpu_platform = 410285354;

  // [Output Only] Creation timestamp in RFC3339 text format.
  optional string creation_timestamp = 30525366;

  // Whether the resource should be protected against deletion.
  optional bool deletion_protection = 458014698;

  // An optional description of this resource. Provide this property when you create the resource.
  optional string description = 422937596;

  // Array of disks associated with this instance. Persistent disks must be created before you can assign them.
  repeated AttachedDisk disks = 95594102;

  // Enables display device for the instance.
  optional DisplayDevice display_device = 258933875;

  // Specifies a fingerprint for this resource, which is essentially a hash of the instance's contents and used for optimistic locking. The fingerprint is initially generated by Compute Engine and changes after every request to modify or update the instance. You must always provide an up-to-date fingerprint hash in order to update the instance. To see the latest fingerprint, make get() request to the instance.
  optional string fingerprint = 234678500;

  // A list of the type and count of accelerator cards attached to the instance.
  repeated AcceleratorConfig guest_accelerators = 463595119;

  // Specifies the hostname of the instance. The specified hostname must be RFC1035 compliant. If hostname is not specified, the default hostname is [INSTANCE_NAME].c.[PROJECT_ID].internal when using the global DNS, and [INSTANCE_NAME].[ZONE].c.[PROJECT_ID].internal when using zonal DNS.
  optional string hostname = 237067315;

  // [Output Only] The unique identifier for the resource. This identifier is defined by the server.
  optional uint64 id = 3355;

  // KeyRevocationActionType of the instance. Supported options are "STOP" and "NONE". The default value is "NONE" if it is not specified.
  // Check the KeyRevocationActionType enum for the list of possible values.
  optional string key_revocation_action_type = 235941474;

  // [Output Only] Type of the resource. Always compute#instance for instances.
  optional string kind = 3292052;

  // A fingerprint for this request, which is essentially a hash of the label's contents and used for optimistic locking. The fingerprint is initially generated by Compute Engine and changes after every request to modify or update labels. You must always provide an up-to-date fingerprint hash in order to update or change labels. To see the latest fingerprint, make get() request to the instance.
  optional string label_fingerprint = 178124825;

  // Labels to apply to this instance. These can be later modified by the setLabels method.
  map<string, string> labels = 500195327;

  // [Output Only] Last start timestamp in RFC3339 text format.
  optional string last_start_timestamp = 443830736;

  // [Output Only] Last stop timestamp in RFC3339 text format.
  optional string last_stop_timestamp = 412823010;

  // [Output Only] Last suspended timestamp in RFC3339 text format.
  optional string last_suspended_timestamp = 356275337;

  // Full or partial URL of the machine type resource to use for this instance, in the format: zones/zone/machineTypes/machine-type. This is provided by the client when the instance is created. For example, the following is a valid partial url to a predefined machine type: zones/us-central1-f/machineTypes/n1-standard-1 To create a custom machine type, provide a URL to a machine type in the following format, where CPUS is 1 or an even number up to 32 (2, 4, 6, ... 24, etc), and MEMORY is the total memory for this instance. Memory must be a multiple of 256 MB and must be supplied in MB (e.g. 5 GB of memory is 5120 MB): zones/zone/machineTypes/custom-CPUS-MEMORY For example: zones/us-central1-f/machineTypes/custom-4-5120 For a full list of restrictions, read the Specifications for custom machine types.
  optional string machine_type = 227711026;

  // The metadata key/value pairs assigned to this instance. This includes custom metadata and predefined keys.
  optional Metadata metadata = 86866735;

  // Specifies a minimum CPU platform for the VM instance. Applicable values are the friendly names of CPU platforms, such as minCpuPlatform: "Intel Haswell" or minCpuPlatform: "Intel Sandy Bridge".
  optional string min_cpu_platform = 242912759;

  // The name of the resource, provided by the client when initially creating the resource. The resource name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
  optional string name = 3373707;

  // An array of network configurations for this instance. These specify how interfaces are configured to interact with other network services, such as connecting to the internet. Multiple interfaces are supported per instance.
  repeated NetworkInterface network_interfaces = 52735243;

  optional NetworkPerformanceConfig network_performance_config = 398330850;

  // Input only. [Input Only] Additional params passed with the request, but not persisted as part of resource payload.
  optional InstanceParams params = 78313862;

  // The private IPv6 google access type for the VM. If not specified, use INHERIT_FROM_SUBNETWORK as default.
  // Check the PrivateIpv6GoogleAccess enum for the list of possible values.
  optional string private_ipv6_google_access = 48277006;

  // Specifies the reservations that this instance can consume from.
  optional ReservationAffinity reservation_affinity = 157850683;

  // Resource policies applied to this instance.
  repeated string resource_policies = 22220385;

  // [Output Only] Specifies values set for instance attributes as compared to the values requested by user in the corresponding input only field.
  optional ResourceStatus resource_status = 249429315;

  // [Output Only] Reserved for future use.
  optional bool satisfies_pzs = 480964267;

  // Sets the scheduling options for this instance.
  optional Scheduling scheduling = 386688404;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 456214797;

  // A list of service accounts, with their specified scopes, authorized for this instance. Only one service account per VM instance is supported. Service accounts generate access tokens that can be accessed through the metadata server and used to authenticate applications on the instance. See Service Accounts for more information.
  repeated ServiceAccount service_accounts = 277537328;

  optional ShieldedInstanceConfig shielded_instance_config = 12862901;

  optional ShieldedInstanceIntegrityPolicy shielded_instance_integrity_policy = 163696919;

  // Source machine image
  optional string source_machine_image = 21769791;

  // Source machine image encryption key when creating an instance from a machine image.
  optional CustomerEncryptionKey source_machine_image_encryption_key = 192839075;

  // [Output Only] Whether a VM has been restricted for start because Compute Engine has detected suspicious activity.
  optional bool start_restricted = 123693144;

  // [Output Only] The status of the instance. One of the following values: PROVISIONING, STAGING, RUNNING, STOPPING, SUSPENDING, SUSPENDED, REPAIRING, and TERMINATED. For more information about the status of the instance, see Instance life cycle.
  // Check the Status enum for the list of possible values.
  optional string status = 181260274;

  // [Output Only] An optional, human-readable explanation of the status.
  optional string status_message = 297428154;

  // Tags to apply to this instance. Tags are used to identify valid sources or targets for network firewalls and are specified by the client during instance creation. The tags can be later modified by the setTags method. Each tag within the list must comply with RFC1035. Multiple tags can be specified via the 'tags.items' field.
  optional Tags tags = 3552281;

  // [Output Only] URL of the zone where the instance resides. You must specify this field as part of the HTTP request URL. It is not settable as a field in the request body.
  optional string zone = 3744684;

}

//
message InstanceAggregatedList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 3355;

  // An object that contains a list of instances scoped by zone.
  map<string, InstancesScopedList> items = 100526016;

  // [Output Only] Type of resource. Always compute#instanceAggregatedList for aggregated lists of Instance resources.
  optional string kind = 3292052;

  // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
  optional string next_page_token = 79797525;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 456214797;

  // [Output Only] Unreachable resources.
  repeated string unreachables = 243372063;

  // [Output Only] Informational warning message.
  optional Warning warning = 50704284;

}

//
message InstanceConsumptionData {
  // Resources consumed by the instance.
  optional InstanceConsumptionInfo consumption_info = 146354898;

  // Server-defined URL for the instance.
  optional string instance = 18257045;

}

//
message InstanceConsumptionInfo {
  // The number of virtual CPUs that are available to the instance.
  optional int32 guest_cpus = 393356754;

  // The amount of local SSD storage available to the instance, defined in GiB.
  optional int32 local_ssd_gb = 329237578;

  // The amount of physical memory available to the instance, defined in MiB.
  optional int32 memory_mb = 116001171;

  // The minimal guaranteed number of virtual CPUs that are reserved.
  optional int32 min_node_cpus = 317231675;

}

// Represents an Instance Group resource. Instance Groups can be used to configure a target for load balancing. Instance groups can either be managed or unmanaged. To create managed instance groups, use the instanceGroupManager or regionInstanceGroupManager resource instead. Use zonal unmanaged instance groups if you need to apply load balancing to groups of heterogeneous instances or if you need to manage the instances yourself. You cannot create regional unmanaged instance groups. For more information, read Instance groups.
message InstanceGroup {
  // [Output Only] The creation timestamp for this instance group in RFC3339 text format.
  optional string creation_timestamp = 30525366;

  // An optional description of this resource. Provide this property when you create the resource.
  optional string description = 422937596;

  // [Output Only] The fingerprint of the named ports. The system uses this fingerprint to detect conflicts when multiple users change the named ports concurrently.
  optional string fingerprint = 234678500;

  // [Output Only] A unique identifier for this instance group, generated by the server.
  optional uint64 id = 3355;

  // [Output Only] The resource type, which is always compute#instanceGroup for instance groups.
  optional string kind = 3292052;

  // The name of the instance group. The name must be 1-63 characters long, and comply with RFC1035.
  optional string name = 3373707;

  //  Assigns a name to a port number. For example: {name: "http", port: 80} This allows the system to reference ports by the assigned name instead of a port number. Named ports can also contain multiple ports. For example: [{name: "app1", port: 8080}, {name: "app1", port: 8081}, {name: "app2", port: 8082}] Named ports apply to all instances in this instance group. 
  repeated NamedPort named_ports = 427598732;

  // [Output Only] The URL of the network to which all instances in the instance group belong. If your instance has multiple network interfaces, then the network and subnetwork fields only refer to the network and subnet used by your primary interface (nic0).
  optional string network = 232872494;

  // [Output Only] The URL of the region where the instance group is located (for regional resources).
  optional string region = 138946292;

  // [Output Only] The URL for this instance group. The server generates this URL.
  optional string self_link = 456214797;

  // [Output Only] The total number of instances in the instance group.
  optional int32 size = 3530753;

  // [Output Only] The URL of the subnetwork to which all instances in the instance group belong. If your instance has multiple network interfaces, then the network and subnetwork fields only refer to the network and subnet used by your primary interface (nic0).
  optional string subnetwork = 307827694;

  // [Output Only] The URL of the zone where the instance group is located (for zonal resources).
  optional string zone = 3744684;

}

//
message InstanceGroupAggregatedList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 3355;

  // A list of InstanceGroupsScopedList resources.
  map<string, InstanceGroupsScopedList> items = 100526016;

  // [Output Only] The resource type, which is always compute#instanceGroupAggregatedList for aggregated lists of instance groups.
  optional string kind = 3292052;

  // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
  optional string next_page_token = 79797525;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 456214797;

  // [Output Only] Unreachable resources.
  repeated string unreachables = 243372063;

  // [Output Only] Informational warning message.
  optional Warning warning = 50704284;

}

// A list of InstanceGroup resources.
message InstanceGroupList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 3355;

  // A list of InstanceGroup resources.
  repeated InstanceGroup items = 100526016;

  // [Output Only] The resource type, which is always compute#instanceGroupList for instance group lists.
  optional string kind = 3292052;

  // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
  optional string next_page_token = 79797525;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 456214797;

  // [Output Only] Informational warning message.
  optional Warning warning = 50704284;

}

// Represents a Managed Instance Group resource. An instance group is a collection of VM instances that you can manage as a single entity. For more information, read Instance groups. For zonal Managed Instance Group, use the instanceGroupManagers resource. For regional Managed Instance Group, use the regionInstanceGroupManagers resource.
message InstanceGroupManager {
  // Pagination behavior of the listManagedInstances API method for this managed instance group.
  enum ListManagedInstancesResults {
    // A value indicating that the enum field is not set.
    UNDEFINED_LIST_MANAGED_INSTANCES_RESULTS = 0;

    // (Default) Pagination is disabled for the group's listManagedInstances API method. maxResults and pageToken query parameters are ignored and all instances are returned in a single response.
    PAGELESS = 32183464;

    // Pagination is enabled for the group's listManagedInstances API method. maxResults and pageToken query parameters are respected.
    PAGINATED = 40190637;

  }

  // The autohealing policy for this managed instance group. You can specify only one value.
  repeated InstanceGroupManagerAutoHealingPolicy auto_healing_policies = 456799109;

  // The base instance name to use for instances in this group. The value must be 1-58 characters long. Instances are named by appending a hyphen and a random four-character string to the base instance name. The base instance name must comply with RFC1035.
  optional string base_instance_name = 389106439;

  // [Output Only] The creation timestamp for this managed instance group in RFC3339 text format.
  optional string creation_timestamp = 30525366;

  // [Output Only] The list of instance actions and the number of instances in this managed instance group that are scheduled for each of those actions.
  optional InstanceGroupManagerActionsSummary current_actions = 164045879;

  // An optional description of this resource.
  optional string description = 422937596;

  // Policy specifying the intended distribution of managed instances across zones in a regional managed instance group.
  optional DistributionPolicy distribution_policy = 534558541;

  // Fingerprint of this resource. This field may be used in optimistic locking. It will be ignored when inserting an InstanceGroupManager. An up-to-date fingerprint must be provided in order to update the InstanceGroupManager, otherwise the request will fail with error 412 conditionNotMet. To see the latest fingerprint, make a get() request to retrieve an InstanceGroupManager.
  optional string fingerprint = 234678500;

  // [Output Only] A unique identifier for this resource type. The server generates this identifier.
  optional uint64 id = 3355;

  // [Output Only] The URL of the Instance Group resource.
  optional string instance_group = 81095253;

  // The URL of the instance template that is specified for this managed instance group. The group uses this template to create all new instances in the managed instance group. The templates for existing instances in the group do not change unless you run recreateInstances, run applyUpdatesToInstances, or set the group's updatePolicy.type to PROACTIVE.
  optional string instance_template = 309248228;

  // [Output Only] The resource type, which is always compute#instanceGroupManager for managed instance groups.
  optional string kind = 3292052;

  // Pagination behavior of the listManagedInstances API method for this managed instance group.
  // Check the ListManagedInstancesResults enum for the list of possible values.
  optional string list_managed_instances_results = 296047156;

  // The name of the managed instance group. The name must be 1-63 characters long, and comply with RFC1035.
  optional string name = 3373707;

  // Named ports configured for the Instance Groups complementary to this Instance Group Manager.
  repeated NamedPort named_ports = 427598732;

  // [Output Only] The URL of the region where the managed instance group resides (for regional resources).
  optional string region = 138946292;

  // [Output Only] The URL for this managed instance group. The server defines this URL.
  optional string self_link = 456214797;

  // Stateful configuration for this Instanced Group Manager
  optional StatefulPolicy stateful_policy = 47538565;

  // [Output Only] The status of this managed instance group.
  optional InstanceGroupManagerStatus status = 181260274;

  // The URLs for all TargetPool resources to which instances in the instanceGroup field are added. The target pools automatically apply to all of the instances in the managed instance group.
  repeated string target_pools = 336072617;

  // The target number of running instances for this managed instance group. You can reduce this number by using the instanceGroupManager deleteInstances or abandonInstances methods. Resizing the group also changes this number.
  optional int32 target_size = 62880239;

  // The update policy for this managed instance group.
  optional InstanceGroupManagerUpdatePolicy update_policy = 175809896;

  // Specifies the instance templates used by this managed instance group to create instances. Each version is defined by an instanceTemplate and a name. Every version can appear at most once per instance group. This field overrides the top-level instanceTemplate field. Read more about the relationships between these fields. Exactly one version must leave the targetSize field unset. That version will be applied to all remaining instances. For more information, read about canary updates.
  repeated InstanceGroupManagerVersion versions = 162430619;

  // [Output Only] The URL of a zone where the managed instance group is located (for zonal resources).
  optional string zone = 3744684;

}

//
message InstanceGroupManagerActionsSummary {
  // [Output Only] The total number of instances in the managed instance group that are scheduled to be abandoned. Abandoning an instance removes it from the managed instance group without deleting it.
  optional int32 abandoning = 440023373;

  // [Output Only] The number of instances in the managed instance group that are scheduled to be created or are currently being created. If the group fails to create any of these instances, it tries again until it creates the instance successfully. If you have disabled creation retries, this field will not be populated; instead, the creatingWithoutRetries field will be populated.
  optional int32 creating = 209809081;

  // [Output Only] The number of instances that the managed instance group will attempt to create. The group attempts to create each instance only once. If the group fails to create any of these instances, it decreases the group's targetSize value accordingly.
  optional int32 creating_without_retries = 369916745;

  // [Output Only] The number of instances in the managed instance group that are scheduled to be deleted or are currently being deleted.
  optional int32 deleting = 282846120;

  // [Output Only] The number of instances in the managed instance group that are running and have no scheduled actions.
  optional int32 none = 3387192;

  // [Output Only] The number of instances in the managed instance group that are scheduled to be recreated or are currently being being recreated. Recreating an instance deletes the existing root persistent disk and creates a new disk from the image that is defined in the instance template.
  optional int32 recreating = 339057132;

  // [Output Only] The number of instances in the managed instance group that are being reconfigured with properties that do not require a restart or a recreate action. For example, setting or removing target pools for the instance.
  optional int32 refreshing = 215044903;

  // [Output Only] The number of instances in the managed instance group that are scheduled to be restarted or are currently being restarted.
  optional int32 restarting = 372312947;

  // [Output Only] The number of instances in the managed instance group that are scheduled to be resumed or are currently being resumed.
  optional int32 resuming = 201100714;

  // [Output Only] The number of instances in the managed instance group that are scheduled to be started or are currently being started.
  optional int32 starting = 243064896;

  // [Output Only] The number of instances in the managed instance group that are scheduled to be stopped or are currently being stopped.
  optional int32 stopping = 105035892;

  // [Output Only] The number of instances in the managed instance group that are scheduled to be suspended or are currently being suspended.
  optional int32 suspending = 29113894;

  // [Output Only] The number of instances in the managed instance group that are being verified. See the managedInstances[].currentAction property in the listManagedInstances method documentation.
  optional int32 verifying = 451612873;

}

//
message InstanceGroupManagerAggregatedList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 3355;

  // A list of InstanceGroupManagersScopedList resources.
  map<string, InstanceGroupManagersScopedList> items = 100526016;

  // [Output Only] The resource type, which is always compute#instanceGroupManagerAggregatedList for an aggregated list of managed instance groups.
  optional string kind = 3292052;

  // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
  optional string next_page_token = 79797525;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 456214797;

  // [Output Only] Unreachable resources.
  repeated string unreachables = 243372063;

  // [Output Only] Informational warning message.
  optional Warning warning = 50704284;

}

//
message InstanceGroupManagerAutoHealingPolicy {
  // The URL for the health check that signals autohealing.
  optional string health_check = 308876645;

  // The number of seconds that the managed instance group waits before it applies autohealing policies to new instances or recently recreated instances. This initial delay allows instances to initialize and run their startup scripts before the instance group determines that they are UNHEALTHY. This prevents the managed instance group from recreating its instances prematurely. This value must be from range [0, 3600].
  optional int32 initial_delay_sec = 263207002;

}

// [Output Only] A list of managed instance groups.
message InstanceGroupManagerList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 3355;

  // A list of InstanceGroupManager resources.
  repeated InstanceGroupManager items = 100526016;

  // [Output Only] The resource type, which is always compute#instanceGroupManagerList for a list of managed instance groups.
  optional string kind = 3292052;

  // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
  optional string next_page_token = 79797525;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 456214797;

  // [Output Only] Informational warning message.
  optional Warning warning = 50704284;

}

//
message InstanceGroupManagerStatus {
  // [Output Only] The URL of the Autoscaler that targets this instance group manager.
  optional string autoscaler = 517258967;

  // [Output Only] A bit indicating whether the managed instance group is in a stable state. A stable state means that: none of the instances in the managed instance group is currently undergoing any type of change (for example, creation, restart, or deletion); no future changes are scheduled for instances in the managed instance group; and the managed instance group itself is not being modified.
  optional bool is_stable = 108410864;

  // [Output Only] Stateful status of the given Instance Group Manager.
  optional InstanceGroupManagerStatusStateful stateful = 244462412;

  // [Output Only] A status of consistency of Instances' versions with their target version specified by version field on Instance Group Manager.
  optional InstanceGroupManagerStatusVersionTarget version_target = 289386200;

}

//
message InstanceGroupManagerStatusStateful {
  // [Output Only] A bit indicating whether the managed instance group has stateful configuration, that is, if you have configured any items in a stateful policy or in per-instance configs. The group might report that it has no stateful configuration even when there is still some preserved state on a managed instance, for example, if you have deleted all PICs but not yet applied those deletions.
  optional bool has_stateful_config = 110474224;

  // [Output Only] Status of per-instance configurations on the instance.
  optional InstanceGroupManagerStatusStatefulPerInstanceConfigs per_instance_configs = 526265001;

}

//
message InstanceGroupManagerStatusStatefulPerInstanceConfigs {
  // A bit indicating if all of the group's per-instance configurations (listed in the output of a listPerInstanceConfigs API call) have status EFFECTIVE or there are no per-instance-configs.
  optional bool all_effective = 516540553;

}

//
message InstanceGroupManagerStatusVersionTarget {
  // [Output Only] A bit indicating whether version target has been reached in this managed instance group, i.e. all instances are in their target version. Instances' target version are specified by version field on Instance Group Manager.
  optional bool is_reached = 433209149;

}

//
message InstanceGroupManagerUpdatePolicy {
  // The instance redistribution policy for regional managed instance groups. Valid values are: - PROACTIVE (default): The group attempts to maintain an even distribution of VM instances across zones in the region. - NONE: For non-autoscaled groups, proactive redistribution is disabled.
  // Additional supported values which may be not listed in the enum directly due to technical reasons:
  // NONE
  // PROACTIVE
  enum InstanceRedistributionType {
    // A value indicating that the enum field is not set.
    UNDEFINED_INSTANCE_REDISTRIBUTION_TYPE = 0;

  }

  // Minimal action to be taken on an instance. Use this option to minimize disruption as much as possible or to apply a more disruptive action than is necessary. - To limit disruption as much as possible, set the minimal action to REFRESH. If your update requires a more disruptive action, Compute Engine performs the necessary action to execute the update. - To apply a more disruptive action than is strictly necessary, set the minimal action to RESTART or REPLACE. For example, Compute Engine does not need to restart a VM to change its metadata. But if your application reads instance metadata only when a VM is restarted, you can set the minimal action to RESTART in order to pick up metadata changes.
  // Additional supported values which may be not listed in the enum directly due to technical reasons:
  // NONE
  // REFRESH
  // REPLACE
  // RESTART
  enum MinimalAction {
    // A value indicating that the enum field is not set.
    UNDEFINED_MINIMAL_ACTION = 0;

  }

  // Most disruptive action that is allowed to be taken on an instance. You can specify either NONE to forbid any actions, REFRESH to allow actions that do not need instance restart, RESTART to allow actions that can be applied without instance replacing or REPLACE to allow all possible actions. If the Updater determines that the minimal update action needed is more disruptive than most disruptive allowed action you specify it will not perform the update at all.
  // Additional supported values which may be not listed in the enum directly due to technical reasons:
  // NONE
  // REFRESH
  // REPLACE
  // RESTART
  enum MostDisruptiveAllowedAction {
    // A value indicating that the enum field is not set.
    UNDEFINED_MOST_DISRUPTIVE_ALLOWED_ACTION = 0;

  }

  // What action should be used to replace instances. See minimal_action.REPLACE
  enum ReplacementMethod {
    // A value indicating that the enum field is not set.
    UNDEFINED_REPLACEMENT_METHOD = 0;

    // Instances will be recreated (with the same name)
    RECREATE = 522644719;

    // Default option: instances will be deleted and created (with a new name)
    SUBSTITUTE = 280924314;

  }

  // The type of update process. You can specify either PROACTIVE so that the instance group manager proactively executes actions in order to bring instances to their target versions or OPPORTUNISTIC so that no action is proactively executed but the update will be performed as part of other actions (for example, resizes or recreateInstances calls).
  // Additional supported values which may be not listed in the enum directly due to technical reasons:
  // PROACTIVE
  enum Type {
    // A value indicating that the enum field is not set.
    UNDEFINED_TYPE = 0;

    // No action is being proactively performed in order to bring this IGM to its target version distribution (regardless of whether this distribution is expressed using instanceTemplate or versions field).
    OPPORTUNISTIC = 429530089;

  }

  // The instance redistribution policy for regional managed instance groups. Valid values are: - PROACTIVE (default): The group attempts to maintain an even distribution of VM instances across zones in the region. - NONE: For non-autoscaled groups, proactive redistribution is disabled.
  // Check the InstanceRedistributionType enum for the list of possible values.
  optional string instance_redistribution_type = 292630424;

  // The maximum number of instances that can be created above the specified targetSize during the update process. This value can be either a fixed number or, if the group has 10 or more instances, a percentage. If you set a percentage, the number of instances is rounded if necessary. The default value for maxSurge is a fixed value equal to the number of zones in which the managed instance group operates. At least one of either maxSurge or maxUnavailable must be greater than 0. Learn more about maxSurge.
  optional FixedOrPercent max_surge = 302572691;

  // The maximum number of instances that can be unavailable during the update process. An instance is considered available if all of the following conditions are satisfied: - The instance's status is RUNNING. - If there is a health check on the instance group, the instance's health check status must be HEALTHY at least once. If there is no health check on the group, then the instance only needs to have a status of RUNNING to be considered available. This value can be either a fixed number or, if the group has 10 or more instances, a percentage. If you set a percentage, the number of instances is rounded if necessary. The default value for maxUnavailable is a fixed value equal to the number of zones in which the managed instance group operates. At least one of either maxSurge or maxUnavailable must be greater than 0. Learn more about maxUnavailable.
  optional FixedOrPercent max_unavailable = 404940277;

  // Minimal action to be taken on an instance. Use this option to minimize disruption as much as possible or to apply a more disruptive action than is necessary. - To limit disruption as much as possible, set the minimal action to REFRESH. If your update requires a more disruptive action, Compute Engine performs the necessary action to execute the update. - To apply a more disruptive action than is strictly necessary, set the minimal action to RESTART or REPLACE. For example, Compute Engine does not need to restart a VM to change its metadata. But if your application reads instance metadata only when a VM is restarted, you can set the minimal action to RESTART in order to pick up metadata changes.
  // Check the MinimalAction enum for the list of possible values.
  optional string minimal_action = 270567060;

  // Most disruptive action that is allowed to be taken on an instance. You can specify either NONE to forbid any actions, REFRESH to allow actions that do not need instance restart, RESTART to allow actions that can be applied without instance replacing or REPLACE to allow all possible actions. If the Updater determines that the minimal update action needed is more disruptive than most disruptive allowed action you specify it will not perform the update at all.
  // Check the MostDisruptiveAllowedAction enum for the list of possible values.
  optional string most_disruptive_allowed_action = 66103053;

  // What action should be used to replace instances. See minimal_action.REPLACE
  // Check the ReplacementMethod enum for the list of possible values.
  optional string replacement_method = 505931694;

  // The type of update process. You can specify either PROACTIVE so that the instance group manager proactively executes actions in order to bring instances to their target versions or OPPORTUNISTIC so that no action is proactively executed but the update will be performed as part of other actions (for example, resizes or recreateInstances calls).
  // Check the Type enum for the list of possible values.
  optional string type = 3575610;

}

//
message InstanceGroupManagerVersion {
  // The URL of the instance template that is specified for this managed instance group. The group uses this template to create new instances in the managed instance group until the `targetSize` for this version is reached. The templates for existing instances in the group do not change unless you run recreateInstances, run applyUpdatesToInstances, or set the group's updatePolicy.type to PROACTIVE; in those cases, existing instances are updated until the `targetSize` for this version is reached.
  optional string instance_template = 309248228;

  // Name of the version. Unique among all versions in the scope of this managed instance group.
  optional string name = 3373707;

  // Specifies the intended number of instances to be created from the instanceTemplate. The final number of instances created from the template will be equal to: - If expressed as a fixed number, the minimum of either targetSize.fixed or instanceGroupManager.targetSize is used. - if expressed as a percent, the targetSize would be (targetSize.percent/100 * InstanceGroupManager.targetSize) If there is a remainder, the number is rounded. If unset, this version will update any remaining instances not updated by another version. Read Starting a canary update for more information.
  optional FixedOrPercent target_size = 62880239;

}

//
message InstanceGroupManagersAbandonInstancesRequest {
  // The URLs of one or more instances to abandon. This can be a full URL or a partial URL, such as zones/[ZONE]/instances/[INSTANCE_NAME].
  repeated string instances = 29097598;

}

// InstanceGroupManagers.applyUpdatesToInstances
message InstanceGroupManagersApplyUpdatesRequest {
  // The minimal action that you want to perform on each instance during the update: - REPLACE: At minimum, delete the instance and create it again. - RESTART: Stop the instance and start it again. - REFRESH: Do not stop the instance. - NONE: Do not disrupt the instance at all. By default, the minimum action is NONE. If your update requires a more disruptive action than you set with this flag, the necessary action is performed to execute the update.
  // Additional supported values which may be not listed in the enum directly due to technical reasons:
  // NONE
  // REFRESH
  // REPLACE
  // RESTART
  enum MinimalAction {
    // A value indicating that the enum field is not set.
    UNDEFINED_MINIMAL_ACTION = 0;

  }

  // The most disruptive action that you want to perform on each instance during the update: - REPLACE: Delete the instance and create it again. - RESTART: Stop the instance and start it again. - REFRESH: Do not stop the instance. - NONE: Do not disrupt the instance at all. By default, the most disruptive allowed action is REPLACE. If your update requires a more disruptive action than you set with this flag, the update request will fail.
  // Additional supported values which may be not listed in the enum directly due to technical reasons:
  // NONE
  // REFRESH
  // REPLACE
  // RESTART
  enum MostDisruptiveAllowedAction {
    // A value indicating that the enum field is not set.
    UNDEFINED_MOST_DISRUPTIVE_ALLOWED_ACTION = 0;

  }

  // Flag to update all instances instead of specified list of “instances”. If the flag is set to true then the instances may not be specified in the request.
  optional bool all_instances = 403676512;

  // The list of URLs of one or more instances for which you want to apply updates. Each URL can be a full URL or a partial URL, such as zones/[ZONE]/instances/[INSTANCE_NAME].
  repeated string instances = 29097598;

  // The minimal action that you want to perform on each instance during the update: - REPLACE: At minimum, delete the instance and create it again. - RESTART: Stop the instance and start it again. - REFRESH: Do not stop the instance. - NONE: Do not disrupt the instance at all. By default, the minimum action is NONE. If your update requires a more disruptive action than you set with this flag, the necessary action is performed to execute the update.
  // Check the MinimalAction enum for the list of possible values.
  optional string minimal_action = 270567060;

  // The most disruptive action that you want to perform on each instance during the update: - REPLACE: Delete the instance and create it again. - RESTART: Stop the instance and start it again. - REFRESH: Do not stop the instance. - NONE: Do not disrupt the instance at all. By default, the most disruptive allowed action is REPLACE. If your update requires a more disruptive action than you set with this flag, the update request will fail.
  // Check the MostDisruptiveAllowedAction enum for the list of possible values.
  optional string most_disruptive_allowed_action = 66103053;

}

// InstanceGroupManagers.createInstances
message InstanceGroupManagersCreateInstancesRequest {
  // [Required] List of specifications of per-instance configs.
  repeated PerInstanceConfig instances = 29097598;

}

//
message InstanceGroupManagersDeleteInstancesRequest {
  // The URLs of one or more instances to delete. This can be a full URL or a partial URL, such as zones/[ZONE]/instances/[INSTANCE_NAME].
  repeated string instances = 29097598;

  // Specifies whether the request should proceed despite the inclusion of instances that are not members of the group or that are already in the process of being deleted or abandoned. If this field is set to `false` and such an instance is specified in the request, the operation fails. The operation always fails if the request contains a malformed instance URL or a reference to an instance that exists in a zone or region other than the group's zone or region.
  optional bool skip_instances_on_validation_error = 40631073;

}

// InstanceGroupManagers.deletePerInstanceConfigs
message InstanceGroupManagersDeletePerInstanceConfigsReq {
  // The list of instance names for which we want to delete per-instance configs on this managed instance group.
  repeated string names = 104585032;

}

//
message InstanceGroupManagersListErrorsResponse {
  // [Output Only] The list of errors of the managed instance group.
  repeated InstanceManagedByIgmError items = 100526016;

  // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
  optional string next_page_token = 79797525;

}

//
message InstanceGroupManagersListManagedInstancesResponse {
  // [Output Only] The list of instances in the managed instance group.
  repeated ManagedInstance managed_instances = 336219614;

  // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
  optional string next_page_token = 79797525;

}

//
message InstanceGroupManagersListPerInstanceConfigsResp {
  // [Output Only] The list of PerInstanceConfig.
  repeated PerInstanceConfig items = 100526016;

  // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
  optional string next_page_token = 79797525;

  // [Output Only] Informational warning message.
  optional Warning warning = 50704284;

}

// InstanceGroupManagers.patchPerInstanceConfigs
message InstanceGroupManagersPatchPerInstanceConfigsReq {
  // The list of per-instance configurations to insert or patch on this managed instance group.
  repeated PerInstanceConfig per_instance_configs = 526265001;

}

//
message InstanceGroupManagersRecreateInstancesRequest {
  // The URLs of one or more instances to recreate. This can be a full URL or a partial URL, such as zones/[ZONE]/instances/[INSTANCE_NAME].
  repeated string instances = 29097598;

}

//
message InstanceGroupManagersScopedList {
  // [Output Only] The list of managed instance groups that are contained in the specified project and zone.
  repeated InstanceGroupManager instance_group_managers = 214072592;

  // [Output Only] The warning that replaces the list of managed instance groups when the list is empty.
  optional Warning warning = 50704284;

}

//
message InstanceGroupManagersSetInstanceTemplateRequest {
  // The URL of the instance template that is specified for this managed instance group. The group uses this template to create all new instances in the managed instance group. The templates for existing instances in the group do not change unless you run recreateInstances, run applyUpdatesToInstances, or set the group's updatePolicy.type to PROACTIVE.
  optional string instance_template = 309248228;

}

//
message InstanceGroupManagersSetTargetPoolsRequest {
  // The fingerprint of the target pools information. Use this optional property to prevent conflicts when multiple users change the target pools settings concurrently. Obtain the fingerprint with the instanceGroupManagers.get method. Then, include the fingerprint in your request to ensure that you do not overwrite changes that were applied from another concurrent request.
  optional string fingerprint = 234678500;

  // The list of target pool URLs that instances in this managed instance group belong to. The managed instance group applies these target pools to all of the instances in the group. Existing instances and new instances in the group all receive these target pool settings.
  repeated string target_pools = 336072617;

}

// InstanceGroupManagers.updatePerInstanceConfigs
message InstanceGroupManagersUpdatePerInstanceConfigsReq {
  // The list of per-instance configurations to insert or patch on this managed instance group.
  repeated PerInstanceConfig per_instance_configs = 526265001;

}

//
message InstanceGroupsAddInstancesRequest {
  // The list of instances to add to the instance group.
  repeated InstanceReference instances = 29097598;

}

//
message InstanceGroupsListInstances {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 3355;

  // A list of InstanceWithNamedPorts resources.
  repeated InstanceWithNamedPorts items = 100526016;

  // [Output Only] The resource type, which is always compute#instanceGroupsListInstances for the list of instances in the specified instance group.
  optional string kind = 3292052;

  // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
  optional string next_page_token = 79797525;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 456214797;

  // [Output Only] Informational warning message.
  optional Warning warning = 50704284;

}

//
message InstanceGroupsListInstancesRequest {
  // A filter for the state of the instances in the instance group. Valid options are ALL or RUNNING. If you do not specify this parameter the list includes all instances regardless of their state.
  enum InstanceState {
    // A value indicating that the enum field is not set.
    UNDEFINED_INSTANCE_STATE = 0;

    // Includes all instances in the generated list regardless of their state.
    ALL = 64897;

    // Includes instances in the generated list only if they have a RUNNING state.
    RUNNING = 121282975;

  }

  // A filter for the state of the instances in the instance group. Valid options are ALL or RUNNING. If you do not specify this parameter the list includes all instances regardless of their state.
  // Check the InstanceState enum for the list of possible values.
  optional string instance_state = 92223591;

}

//
message InstanceGroupsRemoveInstancesRequest {
  // The list of instances to remove from the instance group.
  repeated InstanceReference instances = 29097598;

}

//
message InstanceGroupsScopedList {
  // [Output Only] The list of instance groups that are contained in this scope.
  repeated InstanceGroup instance_groups = 366469310;

  // [Output Only] An informational warning that replaces the list of instance groups when the list is empty.
  optional Warning warning = 50704284;

}

//
message InstanceGroupsSetNamedPortsRequest {
  // The fingerprint of the named ports information for this instance group. Use this optional property to prevent conflicts when multiple users change the named ports settings concurrently. Obtain the fingerprint with the instanceGroups.get method. Then, include the fingerprint in your request to ensure that you do not overwrite changes that were applied from another concurrent request. A request with an incorrect fingerprint will fail with error 412 conditionNotMet.
  optional string fingerprint = 234678500;

  // The list of named ports to set for this instance group.
  repeated NamedPort named_ports = 427598732;

}

// Contains a list of instances.
message InstanceList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 3355;

  // A list of Instance resources.
  repeated Instance items = 100526016;

  // [Output Only] Type of resource. Always compute#instanceList for lists of Instance resources.
  optional string kind = 3292052;

  // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
  optional string next_page_token = 79797525;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 456214797;

  // [Output Only] Informational warning message.
  optional Warning warning = 50704284;

}

// Contains a list of instance referrers.
message InstanceListReferrers {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 3355;

  // A list of Reference resources.
  repeated Reference items = 100526016;

  // [Output Only] Type of resource. Always compute#instanceListReferrers for lists of Instance referrers.
  optional string kind = 3292052;

  // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
  optional string next_page_token = 79797525;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 456214797;

  // [Output Only] Informational warning message.
  optional Warning warning = 50704284;

}

//
message InstanceManagedByIgmError {
  // [Output Only] Contents of the error.
  optional InstanceManagedByIgmErrorManagedInstanceError error = 96784904;

  // [Output Only] Details of the instance action that triggered this error. May be null, if the error was not caused by an action on an instance. This field is optional.
  optional InstanceManagedByIgmErrorInstanceActionDetails instance_action_details = 292224547;

  // [Output Only] The time that this error occurred. This value is in RFC3339 text format.
  optional string timestamp = 55126294;

}

//
message InstanceManagedByIgmErrorInstanceActionDetails {
  // [Output Only] Action that managed instance group was executing on the instance when the error occurred. Possible values:
  enum Action {
    // A value indicating that the enum field is not set.
    UNDEFINED_ACTION = 0;

    // The managed instance group is abandoning this instance. The instance will be removed from the instance group and from any target pools that are associated with this group.
    ABANDONING = 388244813;

    // The managed instance group is creating this instance. If the group fails to create this instance, it will try again until it is successful.
    CREATING = 455564985;

    // The managed instance group is attempting to create this instance only once. If the group fails to create this instance, it does not try again and the group's targetSize value is decreased.
    CREATING_WITHOUT_RETRIES = 428843785;

    // The managed instance group is permanently deleting this instance.
    DELETING = 528602024;

    // The managed instance group has not scheduled any actions for this instance.
    NONE = 2402104;

    // The managed instance group is recreating this instance.
    RECREATING = 287278572;

    // The managed instance group is applying configuration changes to the instance without stopping it. For example, the group can update the target pool list for an instance without stopping that instance.
    REFRESHING = 163266343;

    // The managed instance group is restarting this instance.
    RESTARTING = 320534387;

    // The managed instance group is resuming this instance.
    RESUMING = 446856618;

    // The managed instance group is starting this instance.
    STARTING = 488820800;

    // The managed instance group is stopping this instance.
    STOPPING = 350791796;

    // The managed instance group is suspending this instance.
    SUSPENDING = 514206246;

    // The managed instance group is verifying this already created instance. Verification happens every time the instance is (re)created or restarted and consists of: 1. Waiting until health check specified as part of this managed instance group's autohealing policy reports HEALTHY. Note: Applies only if autohealing policy has a health check specified 2. Waiting for addition verification steps performed as post-instance creation (subject to future extensions).
    VERIFYING = 16982185;

  }

  // [Output Only] Action that managed instance group was executing on the instance when the error occurred. Possible values:
  // Check the Action enum for the list of possible values.
  optional string action = 187661878;

  // [Output Only] The URL of the instance. The URL can be set even if the instance has not yet been created.
  optional string instance = 18257045;

  // [Output Only] Version this instance was created from, or was being created from, but the creation failed. Corresponds to one of the versions that were set on the Instance Group Manager resource at the time this instance was being created.
  optional ManagedInstanceVersion version = 351608024;

}

//
message InstanceManagedByIgmErrorManagedInstanceError {
  // [Output Only] Error code.
  optional string code = 3059181;

  // [Output Only] Error message.
  optional string message = 418054151;

}

//
message InstanceMoveRequest {
  // The URL of the destination zone to move the instance. This can be a full or partial URL. For example, the following are all valid URLs to a zone: - https://www.googleapis.com/compute/v1/projects/project/zones/zone - projects/project/zones/zone - zones/zone 
  optional string destination_zone = 131854653;

  // The URL of the target instance to move. This can be a full or partial URL. For example, the following are all valid URLs to an instance: - https://www.googleapis.com/compute/v1/projects/project/zones/zone /instances/instance - projects/project/zones/zone/instances/instance - zones/zone/instances/instance 
  optional string target_instance = 289769347;

}

// Additional instance params.
message InstanceParams {
  // Resource manager tags to be bound to the instance. Tag keys and values have the same definition as resource manager tags. Keys must be in the format `tagKeys/{tag_key_id}`, and values are in the format `tagValues/456`. The field is ignored (both PUT & PATCH) when empty.
  map<string, string> resource_manager_tags = 377671164;

}

//
message InstanceProperties {
  // KeyRevocationActionType of the instance. Supported options are "STOP" and "NONE". The default value is "NONE" if it is not specified.
  enum KeyRevocationActionType {
    // A value indicating that the enum field is not set.
    UNDEFINED_KEY_REVOCATION_ACTION_TYPE = 0;

    // Default value. This value is unused.
    KEY_REVOCATION_ACTION_TYPE_UNSPECIFIED = 467110106;

    // Indicates user chose no operation.
    NONE = 2402104;

    // Indicates user chose to opt for VM shutdown on key revocation.
    STOP = 2555906;

  }

  // The private IPv6 google access type for VMs. If not specified, use INHERIT_FROM_SUBNETWORK as default. Note that for MachineImage, this is not supported yet.
  enum PrivateIpv6GoogleAccess {
    // A value indicating that the enum field is not set.
    UNDEFINED_PRIVATE_IPV6_GOOGLE_ACCESS = 0;

    // Bidirectional private IPv6 access to/from Google services. If specified, the subnetwork who is attached to the instance's default network interface will be assigned an internal IPv6 prefix if it doesn't have before.
    ENABLE_BIDIRECTIONAL_ACCESS_TO_GOOGLE = 427975994;

    // Outbound private IPv6 access from VMs in this subnet to Google services. If specified, the subnetwork who is attached to the instance's default network interface will be assigned an internal IPv6 prefix if it doesn't have before.
    ENABLE_OUTBOUND_VM_ACCESS_TO_GOOGLE = 288210263;

    // Each network interface inherits PrivateIpv6GoogleAccess from its subnetwork.
    INHERIT_FROM_SUBNETWORK = 530256959;

  }

  // Controls for advanced machine-related behavior features. Note that for MachineImage, this is not supported yet.
  optional AdvancedMachineFeatures advanced_machine_features = 409646002;

  // Enables instances created based on these properties to send packets with source IP addresses other than their own and receive packets with destination IP addresses other than their own. If these instances will be used as an IP gateway or it will be set as the next-hop in a Route resource, specify true. If unsure, leave this set to false. See the Enable IP forwarding documentation for more information.
  optional bool can_ip_forward = 467731324;

  // Specifies the Confidential Instance options. Note that for MachineImage, this is not supported yet.
  optional ConfidentialInstanceConfig confidential_instance_config = 490637685;

  // An optional text description for the instances that are created from these properties.
  optional string description = 422937596;

  // An array of disks that are associated with the instances that are created from these properties.
  repeated AttachedDisk disks = 95594102;

  // A list of guest accelerator cards' type and count to use for instances created from these properties.
  repeated AcceleratorConfig guest_accelerators = 463595119;

  // KeyRevocationActionType of the instance. Supported options are "STOP" and "NONE". The default value is "NONE" if it is not specified.
  // Check the KeyRevocationActionType enum for the list of possible values.
  optional string key_revocation_action_type = 235941474;

  // Labels to apply to instances that are created from these properties.
  map<string, string> labels = 500195327;

  // The machine type to use for instances that are created from these properties.
  optional string machine_type = 227711026;

  // The metadata key/value pairs to assign to instances that are created from these properties. These pairs can consist of custom metadata or predefined keys. See Project and instance metadata for more information.
  optional Metadata metadata = 86866735;

  // Minimum cpu/platform to be used by instances. The instance may be scheduled on the specified or newer cpu/platform. Applicable values are the friendly names of CPU platforms, such as minCpuPlatform: "Intel Haswell" or minCpuPlatform: "Intel Sandy Bridge". For more information, read Specifying a Minimum CPU Platform.
  optional string min_cpu_platform = 242912759;

  // An array of network access configurations for this interface.
  repeated NetworkInterface network_interfaces = 52735243;

  // Note that for MachineImage, this is not supported yet.
  optional NetworkPerformanceConfig network_performance_config = 398330850;

  // The private IPv6 google access type for VMs. If not specified, use INHERIT_FROM_SUBNETWORK as default. Note that for MachineImage, this is not supported yet.
  // Check the PrivateIpv6GoogleAccess enum for the list of possible values.
  optional string private_ipv6_google_access = 48277006;

  // Specifies the reservations that instances can consume from. Note that for MachineImage, this is not supported yet.
  optional ReservationAffinity reservation_affinity = 157850683;

  // Resource manager tags to be bound to the instance. Tag keys and values have the same definition as resource manager tags. Keys must be in the format `tagKeys/{tag_key_id}`, and values are in the format `tagValues/456`. The field is ignored (both PUT & PATCH) when empty.
  map<string, string> resource_manager_tags = 377671164;

  // Resource policies (names, not URLs) applied to instances created from these properties. Note that for MachineImage, this is not supported yet.
  repeated string resource_policies = 22220385;

  // Specifies the scheduling options for the instances that are created from these properties.
  optional Scheduling scheduling = 386688404;

  // A list of service accounts with specified scopes. Access tokens for these service accounts are available to the instances that are created from these properties. Use metadata queries to obtain the access tokens for these instances.
  repeated ServiceAccount service_accounts = 277537328;

  // Note that for MachineImage, this is not supported yet.
  optional ShieldedInstanceConfig shielded_instance_config = 12862901;

  // A list of tags to apply to the instances that are created from these properties. The tags identify valid sources or targets for network firewalls. The setTags method can modify this list of tags. Each tag within the list must comply with RFC1035.
  optional Tags tags = 3552281;

}

//
message InstanceReference {
  // The URL for a specific instance. @required compute.instancegroups.addInstances/removeInstances
  optional string instance = 18257045;

}

// Represents an Instance Template resource. You can use instance templates to create VM instances and managed instance groups. For more information, read Instance Templates.
message InstanceTemplate {
  // [Output Only] The creation timestamp for this instance template in RFC3339 text format.
  optional string creation_timestamp = 30525366;

  // An optional description of this resource. Provide this property when you create the resource.
  optional string description = 422937596;

  // [Output Only] A unique identifier for this instance template. The server defines this identifier.
  optional uint64 id = 3355;

  // [Output Only] The resource type, which is always compute#instanceTemplate for instance templates.
  optional string kind = 3292052;

  // Name of the resource; provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
  optional string name = 3373707;

  // The instance properties for this instance template.
  optional InstanceProperties properties = 147688755;

  // [Output Only] URL of the region where the instance template resides. Only applicable for regional resources.
  optional string region = 138946292;

  // [Output Only] The URL for this instance template. The server defines this URL.
  optional string self_link = 456214797;

  // The source instance used to create the template. You can provide this as a partial or full URL to the resource. For example, the following are valid values: - https://www.googleapis.com/compute/v1/projects/project/zones/zone /instances/instance - projects/project/zones/zone/instances/instance 
  optional string source_instance = 396315705;

  // The source instance params to use to create this instance template.
  optional SourceInstanceParams source_instance_params = 135342156;

}

// Contains a list of InstanceTemplatesScopedList.
message InstanceTemplateAggregatedList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 3355;

  // A list of InstanceTemplatesScopedList resources.
  map<string, InstanceTemplatesScopedList> items = 100526016;

  // Type of resource.
  optional string kind = 3292052;

  // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
  optional string next_page_token = 79797525;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 456214797;

  // [Output Only] Informational warning message.
  optional Warning warning = 50704284;

}

// A list of instance templates.
message InstanceTemplateList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 3355;

  // A list of InstanceTemplate resources.
  repeated InstanceTemplate items = 100526016;

  // [Output Only] The resource type, which is always compute#instanceTemplatesListResponse for instance template lists.
  optional string kind = 3292052;

  // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
  optional string next_page_token = 79797525;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 456214797;

  // [Output Only] Informational warning message.
  optional Warning warning = 50704284;

}

//
message InstanceTemplatesScopedList {
  // [Output Only] A list of instance templates that are contained within the specified project and zone.
  repeated InstanceTemplate instance_templates = 459889679;

  // [Output Only] An informational warning that replaces the list of instance templates when the list is empty.
  optional Warning warning = 50704284;

}

//
message InstanceWithNamedPorts {
  // [Output Only] The status of the instance.
  enum Status {
    // A value indicating that the enum field is not set.
    UNDEFINED_STATUS = 0;

    // The Nanny is halted and we are performing tear down tasks like network deprogramming, releasing quota, IP, tearing down disks etc.
    DEPROVISIONING = 428935662;

    // Resources are being allocated for the instance.
    PROVISIONING = 290896621;

    // The instance is in repair.
    REPAIRING = 413483285;

    // The instance is running.
    RUNNING = 121282975;

    // All required resources have been allocated and the instance is being started.
    STAGING = 431072283;

    // The instance has stopped successfully.
    STOPPED = 444276141;

    // The instance is currently stopping (either being deleted or killed).
    STOPPING = 350791796;

    // The instance has suspended.
    SUSPENDED = 51223995;

    // The instance is suspending.
    SUSPENDING = 514206246;

    // The instance has stopped (either by explicit action or underlying failure).
    TERMINATED = 250018339;

  }

  // [Output Only] The URL of the instance.
  optional string instance = 18257045;

  // [Output Only] The named ports that belong to this instance group.
  repeated NamedPort named_ports = 427598732;

  // [Output Only] The status of the instance.
  // Check the Status enum for the list of possible values.
  optional string status = 181260274;

}

//
message InstancesAddResourcePoliciesRequest {
  // Resource policies to be added to this instance.
  repeated string resource_policies = 22220385;

}

//
message InstancesGetEffectiveFirewallsResponse {
  // Effective firewalls from firewall policies.
  repeated InstancesGetEffectiveFirewallsResponseEffectiveFirewallPolicy firewall_policys = 410985794;

  // Effective firewalls on the instance.
  repeated Firewall firewalls = 272245619;

}

//
message InstancesGetEffectiveFirewallsResponseEffectiveFirewallPolicy {
  // [Output Only] The type of the firewall policy. Can be one of HIERARCHY, NETWORK, NETWORK_REGIONAL.
  enum Type {
    // A value indicating that the enum field is not set.
    UNDEFINED_TYPE = 0;

    HIERARCHY = 69902869;

    NETWORK = 413984270;

    NETWORK_REGIONAL = 190804272;

    UNSPECIFIED = 526786327;

  }

  // [Output Only] Deprecated, please use short name instead. The display name of the firewall policy.
  optional string display_name = 4473832;

  // [Output Only] The name of the firewall policy.
  optional string name = 3373707;

  // The rules that apply to the network.
  repeated FirewallPolicyRule rules = 108873975;

  // [Output Only] The short name of the firewall policy.
  optional string short_name = 492051566;

  // [Output Only] The type of the firewall policy. Can be one of HIERARCHY, NETWORK, NETWORK_REGIONAL.
  // Check the Type enum for the list of possible values.
  optional string type = 3575610;

}

//
message InstancesRemoveResourcePoliciesRequest {
  // Resource policies to be removed from this instance.
  repeated string resource_policies = 22220385;

}

//
message InstancesScopedList {
  // [Output Only] A list of instances contained in this scope.
  repeated Instance instances = 29097598;

  // [Output Only] Informational warning which replaces the list of instances when the list is empty.
  optional Warning warning = 50704284;

}

//
message InstancesSetLabelsRequest {
  // Fingerprint of the previous set of labels for this resource, used to prevent conflicts. Provide the latest fingerprint value when making a request to add or change labels.
  optional string label_fingerprint = 178124825;

  map<string, string> labels = 500195327;

}

//
message InstancesSetMachineResourcesRequest {
  // A list of the type and count of accelerator cards attached to the instance.
  repeated AcceleratorConfig guest_accelerators = 463595119;

}

//
message InstancesSetMachineTypeRequest {
  // Full or partial URL of the machine type resource. See Machine Types for a full list of machine types. For example: zones/us-central1-f/machineTypes/n1-standard-1
  optional string machine_type = 227711026;

}

//
message InstancesSetMinCpuPlatformRequest {
  // Minimum cpu/platform this instance should be started at.
  optional string min_cpu_platform = 242912759;

}

//
message InstancesSetNameRequest {
  // The current name of this resource, used to prevent conflicts. Provide the latest name when making a request to change name.
  optional string current_name = 394983825;

  // The name to be applied to the instance. Needs to be RFC 1035 compliant.
  optional string name = 3373707;

}

//
message InstancesSetServiceAccountRequest {
  // Email address of the service account.
  optional string email = 96619420;

  // The list of scopes to be made available for this service account.
  repeated string scopes = 165973151;

}

//
message InstancesStartWithEncryptionKeyRequest {
  // Array of disks associated with this instance that are protected with a customer-supplied encryption key. In order to start the instance, the disk url and its corresponding key must be provided. If the disk is not protected with a customer-supplied encryption key it should not be specified.
  repeated CustomerEncryptionKeyProtectedDisk disks = 95594102;

}

// HttpRouteRuleMatch criteria for field values that must stay within the specified integer range.
message Int64RangeMatch {
  // The end of the range (exclusive) in signed long integer format.
  optional int64 range_end = 322439897;

  // The start of the range (inclusive) in signed long integer format.
  optional int64 range_start = 103333600;

}

// Represents an Interconnect resource. An Interconnect resource is a dedicated connection between the GCP network and your on-premises network. For more information, read the Dedicated Interconnect Overview.
message Interconnect {
  // Type of interconnect, which can take one of the following values: - PARTNER: A partner-managed interconnection shared between customers though a partner. - DEDICATED: A dedicated physical interconnection with the customer. Note that a value IT_PRIVATE has been deprecated in favor of DEDICATED.
  enum InterconnectType {
    // A value indicating that the enum field is not set.
    UNDEFINED_INTERCONNECT_TYPE = 0;

    // A dedicated physical interconnection with the customer.
    DEDICATED = 258411983;

    // [Deprecated] A private, physical interconnection with the customer.
    IT_PRIVATE = 335677007;

    // A partner-managed interconnection shared between customers via partner.
    PARTNER = 461924520;

  }

  // Type of link requested, which can take one of the following values: - LINK_TYPE_ETHERNET_10G_LR: A 10G Ethernet with LR optics - LINK_TYPE_ETHERNET_100G_LR: A 100G Ethernet with LR optics. Note that this field indicates the speed of each of the links in the bundle, not the speed of the entire bundle.
  enum LinkType {
    // A value indicating that the enum field is not set.
    UNDEFINED_LINK_TYPE = 0;

    // 100G Ethernet, LR Optics.
    LINK_TYPE_ETHERNET_100G_LR = 337672551;

    // 10G Ethernet, LR Optics. [(rate_bps) = 10000000000];
    LINK_TYPE_ETHERNET_10G_LR = 236739749;

  }

  // [Output Only] The current status of this Interconnect's functionality, which can take one of the following values: - OS_ACTIVE: A valid Interconnect, which is turned up and is ready to use. Attachments may be provisioned on this Interconnect. - OS_UNPROVISIONED: An Interconnect that has not completed turnup. No attachments may be provisioned on this Interconnect. - OS_UNDER_MAINTENANCE: An Interconnect that is undergoing internal maintenance. No attachments may be provisioned or updated on this Interconnect. 
  enum OperationalStatus {
    // A value indicating that the enum field is not set.
    UNDEFINED_OPERATIONAL_STATUS = 0;

    // The interconnect is valid, turned up, and ready to use. Attachments may be provisioned on this interconnect.
    OS_ACTIVE = 55721409;

    // The interconnect has not completed turnup. No attachments may be provisioned on this interconnect.
    OS_UNPROVISIONED = 239771840;

  }

  // [Output Only] The current state of Interconnect functionality, which can take one of the following values: - ACTIVE: The Interconnect is valid, turned up and ready to use. Attachments may be provisioned on this Interconnect. - UNPROVISIONED: The Interconnect has not completed turnup. No attachments may be provisioned on this Interconnect. - UNDER_MAINTENANCE: The Interconnect is undergoing internal maintenance. No attachments may be provisioned or updated on this Interconnect. 
  enum State {
    // A value indicating that the enum field is not set.
    UNDEFINED_STATE = 0;

    // The interconnect is valid, turned up, and ready to use. Attachments may be provisioned on this interconnect.
    ACTIVE = 314733318;

    // The interconnect has not completed turnup. No attachments may be provisioned on this interconnect.
    UNPROVISIONED = 517333979;

  }

  // Administrative status of the interconnect. When this is set to true, the Interconnect is functional and can carry traffic. When set to false, no packets can be carried over the interconnect and no BGP routes are exchanged over it. By default, the status is set to true.
  optional bool admin_enabled = 445675089;

  // [Output Only] A list of CircuitInfo objects, that describe the individual circuits in this LAG.
  repeated InterconnectCircuitInfo circuit_infos = 164839855;

  // [Output Only] Creation timestamp in RFC3339 text format.
  optional string creation_timestamp = 30525366;

  // Customer name, to put in the Letter of Authorization as the party authorized to request a crossconnect.
  optional string customer_name = 3665484;

  // An optional description of this resource. Provide this property when you create the resource.
  optional string description = 422937596;

  // [Output Only] A list of outages expected for this Interconnect.
  repeated InterconnectOutageNotification expected_outages = 264484123;

  // [Output Only] IP address configured on the Google side of the Interconnect link. This can be used only for ping tests.
  optional string google_ip_address = 443105954;

  // [Output Only] Google reference ID to be used when raising support tickets with Google or otherwise to debug backend connectivity issues.
  optional string google_reference_id = 534944469;

  // [Output Only] The unique identifier for the resource. This identifier is defined by the server.
  optional uint64 id = 3355;

  // [Output Only] A list of the URLs of all InterconnectAttachments configured to use this Interconnect.
  repeated string interconnect_attachments = 425388415;

  // Type of interconnect, which can take one of the following values: - PARTNER: A partner-managed interconnection shared between customers though a partner. - DEDICATED: A dedicated physical interconnection with the customer. Note that a value IT_PRIVATE has been deprecated in favor of DEDICATED.
  // Check the InterconnectType enum for the list of possible values.
  optional string interconnect_type = 515165259;

  // [Output Only] Type of the resource. Always compute#interconnect for interconnects.
  optional string kind = 3292052;

  // Type of link requested, which can take one of the following values: - LINK_TYPE_ETHERNET_10G_LR: A 10G Ethernet with LR optics - LINK_TYPE_ETHERNET_100G_LR: A 100G Ethernet with LR optics. Note that this field indicates the speed of each of the links in the bundle, not the speed of the entire bundle.
  // Check the LinkType enum for the list of possible values.
  optional string link_type = 523207775;

  // URL of the InterconnectLocation object that represents where this connection is to be provisioned.
  optional string location = 290430901;

  // Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
  optional string name = 3373707;

  // Email address to contact the customer NOC for operations and maintenance notifications regarding this Interconnect. If specified, this will be used for notifications in addition to all other forms described, such as Cloud Monitoring logs alerting and Cloud Notifications. This field is required for users who sign up for Cloud Interconnect using workforce identity federation.
  optional string noc_contact_email = 14072832;

  // [Output Only] The current status of this Interconnect's functionality, which can take one of the following values: - OS_ACTIVE: A valid Interconnect, which is turned up and is ready to use. Attachments may be provisioned on this Interconnect. - OS_UNPROVISIONED: An Interconnect that has not completed turnup. No attachments may be provisioned on this Interconnect. - OS_UNDER_MAINTENANCE: An Interconnect that is undergoing internal maintenance. No attachments may be provisioned or updated on this Interconnect.
  // Check the OperationalStatus enum for the list of possible values.
  optional string operational_status = 201070847;

  // [Output Only] IP address configured on the customer side of the Interconnect link. The customer should configure this IP address during turnup when prompted by Google NOC. This can be used only for ping tests.
  optional string peer_ip_address = 207735769;

  // [Output Only] Number of links actually provisioned in this interconnect.
  optional int32 provisioned_link_count = 410888565;

  // Target number of physical links in the link bundle, as requested by the customer.
  optional int32 requested_link_count = 45051387;

  // [Output Only] Reserved for future use.
  optional bool satisfies_pzs = 480964267;

  // [Output Only] Server-defined URL for the resource.
  optional string self_link = 456214797;

  // [Output Only] The current state of Interconnect functionality, which can take one of the following values: - ACTIVE: The Interconnect is valid, turned up and ready to use. Attachments may be provisioned on this Interconnect. - UNPROVISIONED: The Interconnect has not completed turnup. No attachments may be provisioned on this Interconnect. - UNDER_MAINTENANCE: The Interconnect is undergoing internal maintenance. No attachments may be provisioned or updated on this Interconnect.
  // Check the State enum for the list of possible values.
  optional string state = 109757585;

}

// Represents an Interconnect Attachment (VLAN) resource. You can use Interconnect attachments (VLANS) to connect your Virtual Private Cloud networks to your on-premises networks through an Interconnect. For more information, read Creating VLAN Attachments.
message InterconnectAttachment {
  // Provisioned bandwidth capacity for the interconnect attachment. For attachments of type DEDICATED, the user can set the bandwidth. For attachments of type PARTNER, the Google Partner that is operating the interconnect must set the bandwidth. Output only for PARTNER type, mutable for PARTNER_PROVIDER and DEDICATED, and can take one of the following values: - BPS_50M: 50 Mbit/s - BPS_100M: 100 Mbit/s - BPS_200M: 200 Mbit/s - BPS_300M: 300 Mbit/s - BPS_400M: 400 Mbit/s - BPS_500M: 500 Mbit/s - BPS_1G: 1 Gbit/s - BPS_2G: 2 Gbit/s - BPS_5G: 5 Gbit/s - BPS_10G: 10 Gbit/s - BPS_20G: 20 Gbit/s - BPS_50G: 50 Gbit/s 
  enum Bandwidth {
    // A value indicating that the enum field is not set.
    UNDEFINED_BANDWIDTH = 0;

    // 100 Mbit/s
    BPS_100M = 49547958;

    // 10 Gbit/s
    BPS_10G = 278693006;

    // 1 Gbit/s
    BPS_1G = 355358448;

    // 200 Mbit/s
    BPS_200M = 49577749;

    // 20 Gbit/s
    BPS_20G = 278693967;

    // 2 Gbit/s
    BPS_2G = 355358479;

    // 300 Mbit/s
    BPS_300M = 49607540;

    // 400 Mbit/s
    BPS_400M = 49637331;

    // 500 Mbit/s
    BPS_500M = 49667122;

    // 50 Gbit/s
    BPS_50G = 278696850;

    // 50 Mbit/s
    BPS_50M = 278696856;

    // 5 Gbit/s
    BPS_5G = 355358572;

  }

  // Desired availability domain for the attachment. Only available for type PARTNER, at creation time, and can take one of the following values: - AVAILABILITY_DOMAIN_ANY - AVAILABILITY_DOMAIN_1 - AVAILABILITY_DOMAIN_2 For improved reliability, customers should configure a pair of attachments, one per availability domain. The selected availability domain will be provided to the Partner via the pairing key, so that the provisioned circuit will lie in the specified domain. If not specified, the value will default to AVAILABILITY_DOMAIN_ANY.
  enum EdgeAvailabilityDomain {
    // A value indicating that the enum field is not set.
    UNDEFINED_EDGE_AVAILABILITY_DOMAIN = 0;

    AVAILABILITY_DOMAIN_1 = 349552090;

    AVAILABILITY_DOMAIN_2 = 349552091;

    AVAILABILITY_DOMAIN_ANY = 375256373;

  }

  // Indicates the user-supplied encryption option of this VLAN attachment (interconnectAttachment). Can only be specified at attachment creation for PARTNER or DEDICATED attachments. Possible values are: - NONE - This is the default value, which means that the VLAN attachment carries unencrypted traffic. VMs are able to send traffic to, or receive traffic from, such a VLAN attachment. - IPSEC - The VLAN attachment carries only encrypted traffic that is encrypted by an IPsec device, such as an HA VPN gateway or third-party IPsec VPN. VMs cannot directly send traffic to, or receive traffic from, such a VLAN attachment. To use *HA VPN over Cloud Interconnect*, the VLAN attachment must be created with this option. 
  enum Encryption {
    // A value indicating that the enum field is not set.
    UNDEFINED_ENCRYPTION = 0;

    // The interconnect attachment will carry only encrypted traffic that is encrypted by an IPsec device such as HA VPN gateway; VMs cannot directly send traffic to or receive traffic from such an interconnect attachment. To use HA VPN over Cloud Interconnect, the interconnect attachment must be created with this option.
    IPSEC = 69882282;

    // This is the default value, which means the Interconnect Attachment will carry unencrypted traffic. VMs will be able to send traffic to or receive traffic from such interconnect attachment.
    NONE = 2402104;

  }

  // [Output Only] The current status of whether or not this interconnect attachment is functional, which can take one of the following values: - OS_ACTIVE: The attachment has been turned up and is ready to use. - OS_UNPROVISIONED: The attachment is not ready to use yet, because turnup is not complete. 
  enum OperationalStatus {
    // A value indicating that the enum field is not set.
    UNDEFINED_OPERATIONAL_STATUS = 0;

    // Indicates that attachment has been turned up and is ready to use.
    OS_ACTIVE = 55721409;

    // Indicates that attachment is not ready to use yet, because turnup is not complete.
    OS_UNPROVISIONED = 239771840;

  }

  // The stack type for this interconnect attachment to identify whether the IPv6 feature is enabled or not. If not specified, IPV4_ONLY will be used. This field can be both set at interconnect attachments creation and update interconnect attachment operations.
  enum StackType {
    // A value indicating that the enum field is not set.
    UNDEFINED_STACK_TYPE = 0;

    // The interconnect attachment can have both IPv4 and IPv6 addresses.
    IPV4_IPV6 = 22197249;

    // The interconnect attachment will only be assigned IPv4 addresses.
    IPV4_ONLY = 22373798;

  }

  // [Output Only] The current state of this attachment's functionality. Enum values ACTIVE and UNPROVISIONED are shared by DEDICATED/PRIVATE, PARTNER, and PARTNER_PROVIDER interconnect attachments, while enum values PENDING_PARTNER, PARTNER_REQUEST_RECEIVED, and PENDING_CUSTOMER are used for only PARTNER and PARTNER_PROVIDER interconnect attachments. This state can take one of the following values: - ACTIVE: The attachment has been turned up and is ready to use. - UNPROVISIONED: The attachment is not ready to use yet, because turnup is not complete. - PENDING_PARTNER: A newly-created PARTNER attachment that has not yet been configured on the Partner side. - PARTNER_REQUEST_RECEIVED: A PARTNER attachment is in the process of provisioning after a PARTNER_PROVIDER attachment was created that references it. - PENDING_CUSTOMER: A PARTNER or PARTNER_PROVIDER attachment that is waiting for a customer to activate it. - DEFUNCT: The attachment was deleted externally and is no longer functional. This could be because the associated Interconnect was removed, or because the other side of a Partner attachment was deleted. 
  enum State {
    // A value indicating that the enum field is not set.
    UNDEFINED_STATE = 0;

    // Indicates that attachment has been turned up and is ready to use.
    ACTIVE = 314733318;

    // The attachment was deleted externally and is no longer functional. This could be because the associated Interconnect was wiped out, or because the other side of a Partner attachment was deleted.
    DEFUNCT = 115891759;

    // A PARTNER attachment is in the process of provisioning after a PARTNER_PROVIDER attachment was created that references it.
    PARTNER_REQUEST_RECEIVED = 513587304;

    // PARTNER or PARTNER_PROVIDER attachment that is waiting for the customer to activate.
    PENDING_CUSTOMER = 167494054;

    // A newly created PARTNER attachment that has not yet been configured on the Partner side.
    PENDING_PARTNER = 387890656;

    STATE_UNSPECIFIED = 470755401;

    // Indicates that attachment is not ready to use yet, because turnup is not complete.
    UNPROVISIONED = 517333979;

  }

  // The type of interconnect attachment this is, which can take one of the following values: - DEDICATED: an attachment to a Dedicated Interconnect. - PARTNER: an attachment to a Partner Interconnect, created by the customer. - PARTNER_PROVIDER: an attachment to a Partner Interconnect, created by the partner. 
  enum Type {
    // A value indicating that the enum field is not set.
    UNDEFINED_TYPE = 0;

    // Attachment to a dedicated interconnect.
    DEDICATED = 258411983;

    // Attachment to a partner interconnect, created by the customer.
    PARTNER = 461924520;

    // Attachment to a partner interconnect, created by the partner.
    PARTNER_PROVIDER = 483261352;

  }

  // Determines whether this Attachment will carry packets. Not present for PARTNER_PROVIDER.
  optional bool admin_enabled = 445675089;

  // Provisioned bandwidth capacity for the interconnect attachment. For attachments of type DEDICATED, the user can set the bandwidth. For attachments of type PARTNER, the Google Partner that is operating the interconnect must set the bandwidth. Output only for PARTNER type, mutable for PARTNER_PROVIDER and DEDICATED, and can take one of the following values: - BPS_50M: 50 Mbit/s - BPS_100M: 100 Mbit/s - BPS_200M: 200 Mbit/s - BPS_300M: 300 Mbit/s - BPS_400M: 400 Mbit/s - BPS_500M: 500 Mbit/s - BPS_1G: 1 Gbit/s - BPS_2G: 2 Gbit/s - BPS_5G: 5 Gbit/s - BPS_10G: 10 Gbit/s - BPS_20G: 20 Gbit/s - BPS_50G: 50 Gbit/s
  // Check the Bandwidth enum for the list of possible values.
  optional string bandwidth = 181715121;

  // This field is not available.
  repeated string candidate_ipv6_subnets = 70682522;

  // Up to 16 candidate prefixes that can be used to restrict the allocation of cloudRouterIpAddress and customerRouterIpAddress for this attachment. All prefixes must be within link-local address space (169.254.0.0/16) and must be /29 or shorter (/28, /27, etc). Google will attempt to select an unused /29 from the supplied candidate prefix(es). The request will fail if all possible /29s are in use on Google's edge. If not supplied, Google will randomly select an unused /29 from all of link-local space.
  repeated string candidate_subnets = 237842938;

  // [Output Only] IPv4 address + prefix length to be configured on Cloud Router Interface for this interconnect attachment.
  optional string cloud_router_ip_address = 287392776;

  // [Output Only] IPv6 address + prefix length to be configured on Cloud Router Interface for this interconnect attachment.
  optional string cloud_router_ipv6_address = 451922376;

  // This field is not available.
  optional string cloud_router_ipv6_interface_id = 521282701;

  // [Output Only] Creation timestamp in RFC3339 text format.
  optional string creation_timestamp = 30525366;

  // [Output Only] IPv4 address + prefix length to be configured on the customer router subinterface for this interconnect attachment.
  optional string customer_router_ip_address = 332475761;

  // [Output Only] IPv6 address + prefix length to be configured on the customer router subinterface for this interconnect attachment.
  optional string customer_router_ipv6_address = 290127089;

  // This field is not available.
  optional string customer_router_ipv6_interface_id = 380994308;

  // [Output Only] Dataplane version for this InterconnectAttachment. This field is only present for Dataplane version 2 and higher. Absence of this field in the API output indicates that the Dataplane is version 1.
  optional int32 dataplane_version = 34920075;

  // An optional description of this resource.
  optional string description = 422937596;

  // Desired availability domain for the attachment. Only available for type PARTNER, at creation time, and can take one of the following values: - AVAILABILITY_DOMAIN_ANY - AVAILABILITY_DOMAIN_1 - AVAILABILITY_DOMAIN_2 For improved reliability, customers should configure a pair of attachments, one per availability domain. The selected availability domain will be provided to the Partner via the pairing key, so that the provisioned circuit will lie in the specified domain. If not specified, the value will default to AVAILABILITY_DOMAIN_ANY.
  // Check the EdgeAvailabilityDomain enum for the list of possible values.
  optional string edge_availability_domain = 71289510;

  // Indicates the user-supplied encryption option of this VLAN attachment (interconnectAttachment). Can only be specified at attachment creation for PARTNER or DEDICATED attachments. Possible values are: - NONE - This is the default value, which means that the VLAN attachment carries unencrypted traffic. VMs are able to send traffic to, or receive traffic from, such a VLAN attachment. - IPSEC - The VLAN attachment carries only encrypted traffic that is encrypted by an IPsec device, such as an HA VPN gateway or third-party IPsec VPN. VMs cannot directly send traffic to, or receive traffic from, such a VLAN attachment. To use *HA VPN over Cloud Interconnect*, the VLAN attachment must be created with this option.
  // Check the Encryption enum for the list of possible values.
  optional string encryption = 97980291;

  // [Output Only] Google reference ID, to be used when raising support tickets with Google or otherwise to debug backend connectivity issues. [Deprecated] This field is not used.
  optional string google_reference_id = 534944469;

  // [Output Only] The unique identifier for the resource. This identifier is defined by the server.
  optional uint64 id = 3355;

  // URL of the underlying Interconnect object that this attachment's traffic will traverse through.
  optional string interconnect = 224601230;

  // A list of URLs of addresses that have been reserved for the VLAN attachment. Used only for the VLAN attachment that has the encryption option as IPSEC. The addresses must be regional internal IP address ranges. When creating an HA VPN gateway over the VLAN attachment, if the attachment is configured to use a regional internal IP address, then the VPN gateway's IP address is allocated from the IP address range specified here. For example, if the HA VPN gateway's interface 0 is paired to this VLAN attachment, then a regional internal IP address for the VPN gateway interface 0 will be allocated from the IP address specified for this VLAN attachment. If this field is not specified when creating the VLAN attachment, then later on when creating an HA VPN gateway on this VLAN attachment, the HA VPN gateway's IP address is allocated from the regional external IP address pool. Not currently available publicly. 
  repeated string ipsec_internal_addresses = 407648565;

  // [Output Only] Type of the resource. Always compute#interconnectAttachment for interconnect attachments.
  optional string kind = 3292052;

  // Maximum Transmission Unit (MTU), in bytes, of packets passing through this interconnect attachment. Only 1440 and 1500 are allowed. If not specified, the value will default to 1440.
  optional int32 mtu = 108462;

  // Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
  optional string name = 3373707;

  // [Output Only] The current status of whether or not this interconnect attachment is functional, which can take one of the following values: - OS_ACTIVE: The attachment has been turned up and is ready to use. - OS_UNPROVISIONED: The attachment is not ready to use yet, because turnup is not complete.
  // Check the OperationalStatus enum for the list of possible values.
  optional string operational_status = 201070847;

  // [Output only for type PARTNER. Input only for PARTNER_PROVIDER. Not present for DEDICATED]. The opaque identifier of an PARTNER attachment used to initiate provisioning with a selected partner. Of the form "XXXXX/region/domain"
  optional string pairing_key = 439695464;

  // Optional BGP ASN for the router supplied by a Layer 3 Partner if they configured BGP on behalf of the customer. Output only for PARTNER type, input only for PARTNER_PROVIDER, not available for DEDICATED.
  optional int64 partner_asn = 438166149;

  // Informational metadata about Partner attachments from Partners to display to customers. Output only for for PARTNER type, mutable for PARTNER_PROVIDER, not available for DEDICATED.
  optional InterconnectAttachmentPartnerMetadata partner_metadata = 65908934;

  // [Output Only] Information specific to an InterconnectAttachment. This property is populated if the interconnect that this is attached to is of type DEDICATED.
  optional InterconnectAttachmentPrivateInfo private_interconnect_info = 237270531;

  // [Output Only] URL of the region where the regional interconnect attachment resides. You must specify this field as part of the HTTP request URL. It is not settable as a field in the request body.
  optional string region = 138946292;

  // URL of the Cloud Router to be used for dynamic routing. This router must be in the same region as this InterconnectAttachment. The InterconnectAttachment will automatically connect the Interconnect to the network & region within which the Cloud Router is configured.
  optional string router = 148608841;

  // [Output Only] Reserved for future use.
  optional bool satisfies_pzs = 480964267;

  // [Output Only] Server-defined URL for the resource.
  optional string self_link = 456214797;

  // The stack type for this interconnect attachment to identify whether the IPv6 feature is enabled or not. If not specified, IPV4_ONLY will be used. This field can be both set at interconnect attachments creation and update interconnect attachment operations.
  // Check the StackType enum for the list of possible values.
  optional string stack_type = 425908881;

  // [Output Only] The current state of this attachment's functionality. Enum values ACTIVE and UNPROVISIONED are shared by DEDICATED/PRIVATE, PARTNER, and PARTNER_PROVIDER interconnect attachments, while enum values PENDING_PARTNER, PARTNER_REQUEST_RECEIVED, and PENDING_CUSTOMER are used for only PARTNER and PARTNER_PROVIDER interconnect attachments. This state can take one of the following values: - ACTIVE: The attachment has been turned up and is ready to use. - UNPROVISIONED: The attachment is not ready to use yet, because turnup is not complete. - PENDING_PARTNER: A newly-created PARTNER attachment that has not yet been configured on the Partner side. - PARTNER_REQUEST_RECEIVED: A PARTNER attachment is in the process of provisioning after a PARTNER_PROVIDER attachment was created that references it. - PENDING_CUSTOMER: A PARTNER or PARTNER_PROVIDER attachment that is waiting for a customer to activate it. - DEFUNCT: The attachment was deleted externally and is no longer functional. This could be because the associated Interconnect was removed, or because the other side of a Partner attachment was deleted.
  // Check the State enum for the list of possible values.
  optional string state = 109757585;

  // The type of interconnect attachment this is, which can take one of the following values: - DEDICATED: an attachment to a Dedicated Interconnect. - PARTNER: an attachment to a Partner Interconnect, created by the customer. - PARTNER_PROVIDER: an attachment to a Partner Interconnect, created by the partner.
  // Check the Type enum for the list of possible values.
  optional string type = 3575610;

  // The IEEE 802.1Q VLAN tag for this attachment, in the range 2-4093. Only specified at creation time.
  optional int32 vlan_tag8021q = 119927836;

}

//
message InterconnectAttachmentAggregatedList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 3355;

  // A list of InterconnectAttachmentsScopedList resources.
  map<string, InterconnectAttachmentsScopedList> items = 100526016;

  // [Output Only] Type of resource. Always compute#interconnectAttachmentAggregatedList for aggregated lists of interconnect attachments.
  optional string kind = 3292052;

  // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
  optional string next_page_token = 79797525;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 456214797;

  // [Output Only] Unreachable resources.
  repeated string unreachables = 243372063;

  // [Output Only] Informational warning message.
  optional Warning warning = 50704284;

}

// Response to the list request, and contains a list of interconnect attachments.
message InterconnectAttachmentList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 3355;

  // A list of InterconnectAttachment resources.
  repeated InterconnectAttachment items = 100526016;

  // [Output Only] Type of resource. Always compute#interconnectAttachmentList for lists of interconnect attachments.
  optional string kind = 3292052;

  // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
  optional string next_page_token = 79797525;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 456214797;

  // [Output Only] Informational warning message.
  optional Warning warning = 50704284;

}

// Informational metadata about Partner attachments from Partners to display to customers. These fields are propagated from PARTNER_PROVIDER attachments to their corresponding PARTNER attachments.
message InterconnectAttachmentPartnerMetadata {
  // Plain text name of the Interconnect this attachment is connected to, as displayed in the Partner's portal. For instance "Chicago 1". This value may be validated to match approved Partner values.
  optional string interconnect_name = 514963356;

  // Plain text name of the Partner providing this attachment. This value may be validated to match approved Partner values.
  optional string partner_name = 161747874;

  // URL of the Partner's portal for this Attachment. Partners may customise this to be a deep link to the specific resource on the Partner portal. This value may be validated to match approved Partner values.
  optional string portal_url = 269182748;

}

// Information for an interconnect attachment when this belongs to an interconnect of type DEDICATED.
message InterconnectAttachmentPrivateInfo {
  // [Output Only] 802.1q encapsulation tag to be used for traffic between Google and the customer, going to and from this network and region.
  optional uint32 tag8021q = 271820992;

}

//
message InterconnectAttachmentsScopedList {
  // A list of interconnect attachments contained in this scope.
  repeated InterconnectAttachment interconnect_attachments = 425388415;

  // Informational warning which replaces the list of addresses when the list is empty.
  optional Warning warning = 50704284;

}

// Describes a single physical circuit between the Customer and Google. CircuitInfo objects are created by Google, so all fields are output only.
message InterconnectCircuitInfo {
  // Customer-side demarc ID for this circuit.
  optional string customer_demarc_id = 28771859;

  // Google-assigned unique ID for this circuit. Assigned at circuit turn-up.
  optional string google_circuit_id = 262014711;

  // Google-side demarc ID for this circuit. Assigned at circuit turn-up and provided by Google to the customer in the LOA.
  optional string google_demarc_id = 448196270;

}

// Diagnostics information about interconnect, contains detailed and current technical information about Google's side of the connection.
message InterconnectDiagnostics {
  // The aggregation type of the bundle interface.
  enum BundleAggregationType {
    // A value indicating that the enum field is not set.
    UNDEFINED_BUNDLE_AGGREGATION_TYPE = 0;

    // LACP is enabled.
    BUNDLE_AGGREGATION_TYPE_LACP = 27758925;

    // LACP is disabled.
    BUNDLE_AGGREGATION_TYPE_STATIC = 50678873;

  }

  // The operational status of the bundle interface.
  enum BundleOperationalStatus {
    // A value indicating that the enum field is not set.
    UNDEFINED_BUNDLE_OPERATIONAL_STATUS = 0;

    // If bundleAggregationType is LACP: LACP is not established and/or all links in the bundle have DOWN operational status. If bundleAggregationType is STATIC: one or more links in the bundle has DOWN operational status.
    BUNDLE_OPERATIONAL_STATUS_DOWN = 453842693;

    // If bundleAggregationType is LACP: LACP is established and at least one link in the bundle has UP operational status. If bundleAggregationType is STATIC: all links in the bundle (typically just one) have UP operational status.
    BUNDLE_OPERATIONAL_STATUS_UP = 161366462;

  }

  // A list of InterconnectDiagnostics.ARPEntry objects, describing individual neighbors currently seen by the Google router in the ARP cache for the Interconnect. This will be empty when the Interconnect is not bundled.
  repeated InterconnectDiagnosticsARPEntry arp_caches = 414591761;

  // The aggregation type of the bundle interface.
  // Check the BundleAggregationType enum for the list of possible values.
  optional string bundle_aggregation_type = 434939028;

  // The operational status of the bundle interface.
  // Check the BundleOperationalStatus enum for the list of possible values.
  optional string bundle_operational_status = 106433500;

  // A list of InterconnectDiagnostics.LinkStatus objects, describing the status for each link on the Interconnect.
  repeated InterconnectDiagnosticsLinkStatus links = 102977465;

  // The MAC address of the Interconnect's bundle interface.
  optional string mac_address = 332540164;

}

// Describing the ARP neighbor entries seen on this link
message InterconnectDiagnosticsARPEntry {
  // The IP address of this ARP neighbor.
  optional string ip_address = 406272220;

  // The MAC address of this ARP neighbor.
  optional string mac_address = 332540164;

}

//
message InterconnectDiagnosticsLinkLACPStatus {
  // The state of a LACP link, which can take one of the following values: - ACTIVE: The link is configured and active within the bundle. - DETACHED: The link is not configured within the bundle. This means that the rest of the object should be empty. 
  enum State {
    // A value indicating that the enum field is not set.
    UNDEFINED_STATE = 0;

    // The link is configured and active within the bundle.
    ACTIVE = 314733318;

    // The link is not configured within the bundle, this means the rest of the object should be empty.
    DETACHED = 216562546;

  }

  // System ID of the port on Google's side of the LACP exchange.
  optional string google_system_id = 91210405;

  // System ID of the port on the neighbor's side of the LACP exchange.
  optional string neighbor_system_id = 343821342;

  // The state of a LACP link, which can take one of the following values: - ACTIVE: The link is configured and active within the bundle. - DETACHED: The link is not configured within the bundle. This means that the rest of the object should be empty.
  // Check the State enum for the list of possible values.
  optional string state = 109757585;

}

//
message InterconnectDiagnosticsLinkOpticalPower {
  // The status of the current value when compared to the warning and alarm levels for the receiving or transmitting transceiver. Possible states include: - OK: The value has not crossed a warning threshold. - LOW_WARNING: The value has crossed below the low warning threshold. - HIGH_WARNING: The value has crossed above the high warning threshold. - LOW_ALARM: The value has crossed below the low alarm threshold. - HIGH_ALARM: The value has crossed above the high alarm threshold. 
  enum State {
    // A value indicating that the enum field is not set.
    UNDEFINED_STATE = 0;

    // The value has crossed above the high alarm threshold.
    HIGH_ALARM = 305363284;

    // The value of the current optical power has crossed above the high warning threshold.
    HIGH_WARNING = 220984799;

    // The value of the current optical power has crossed below the low alarm threshold.
    LOW_ALARM = 316659046;

    // The value of the current optical power has crossed below the low warning threshold.
    LOW_WARNING = 338793841;

    // The value of the current optical power has not crossed a warning threshold.
    OK = 2524;

  }

  // The status of the current value when compared to the warning and alarm levels for the receiving or transmitting transceiver. Possible states include: - OK: The value has not crossed a warning threshold. - LOW_WARNING: The value has crossed below the low warning threshold. - HIGH_WARNING: The value has crossed above the high warning threshold. - LOW_ALARM: The value has crossed below the low alarm threshold. - HIGH_ALARM: The value has crossed above the high alarm threshold.
  // Check the State enum for the list of possible values.
  optional string state = 109757585;

  // Value of the current receiving or transmitting optical power, read in dBm. Take a known good optical value, give it a 10% margin and trigger warnings relative to that value. In general, a -7dBm warning and a -11dBm alarm are good optical value estimates for most links.
  optional float value = 111972721;

}

//
message InterconnectDiagnosticsLinkStatus {
  // The operational status of the link.
  enum OperationalStatus {
    // A value indicating that the enum field is not set.
    UNDEFINED_OPERATIONAL_STATUS = 0;

    // The interface is unable to communicate with the remote end.
    LINK_OPERATIONAL_STATUS_DOWN = 281653885;

    // The interface has low level communication with the remote end.
    LINK_OPERATIONAL_STATUS_UP = 305879862;

  }

  // A list of InterconnectDiagnostics.ARPEntry objects, describing the ARP neighbor entries seen on this link. This will be empty if the link is bundled
  repeated InterconnectDiagnosticsARPEntry arp_caches = 414591761;

  // The unique ID for this link assigned during turn up by Google.
  optional string circuit_id = 225180977;

  // The Demarc address assigned by Google and provided in the LoA.
  optional string google_demarc = 51084;

  optional InterconnectDiagnosticsLinkLACPStatus lacp_status = 361210415;

  // The operational status of the link.
  // Check the OperationalStatus enum for the list of possible values.
  optional string operational_status = 201070847;

  // An InterconnectDiagnostics.LinkOpticalPower object, describing the current value and status of the received light level.
  optional InterconnectDiagnosticsLinkOpticalPower receiving_optical_power = 244717279;

  // An InterconnectDiagnostics.LinkOpticalPower object, describing the current value and status of the transmitted light level.
  optional InterconnectDiagnosticsLinkOpticalPower transmitting_optical_power = 459431197;

}

// Response to the list request, and contains a list of interconnects.
message InterconnectList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 3355;

  // A list of Interconnect resources.
  repeated Interconnect items = 100526016;

  // [Output Only] Type of resource. Always compute#interconnectList for lists of interconnects.
  optional string kind = 3292052;

  // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
  optional string next_page_token = 79797525;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 456214797;

  // [Output Only] Informational warning message.
  optional Warning warning = 50704284;

}

// Represents an Interconnect Attachment (VLAN) Location resource. You can use this resource to find location details about an Interconnect attachment (VLAN). For more information about interconnect attachments, read Creating VLAN Attachments.
message InterconnectLocation {
  // [Output Only] Continent for this location, which can take one of the following values: - AFRICA - ASIA_PAC - EUROPE - NORTH_AMERICA - SOUTH_AMERICA 
  enum Continent {
    // A value indicating that the enum field is not set.
    UNDEFINED_CONTINENT = 0;

    AFRICA = 317443706;

    ASIA_PAC = 119782269;

    C_AFRICA = 71993846;

    C_ASIA_PAC = 465668089;

    C_EUROPE = 200369438;

    C_NORTH_AMERICA = 275697048;

    C_SOUTH_AMERICA = 397149792;

    EUROPE = 445819298;

    NORTH_AMERICA = 448015508;

    SOUTH_AMERICA = 32597340;

  }

  // [Output Only] The status of this InterconnectLocation, which can take one of the following values: - CLOSED: The InterconnectLocation is closed and is unavailable for provisioning new Interconnects. - AVAILABLE: The InterconnectLocation is available for provisioning new Interconnects. 
  enum Status {
    // A value indicating that the enum field is not set.
    UNDEFINED_STATUS = 0;

    // The InterconnectLocation is available for provisioning new Interconnects.
    AVAILABLE = 442079913;

    // The InterconnectLocation is closed for provisioning new Interconnects.
    CLOSED = 380163436;

  }

  // [Output Only] The postal address of the Point of Presence, each line in the address is separated by a newline character.
  optional string address = 462920692;

  // [Output Only] Availability zone for this InterconnectLocation. Within a metropolitan area (metro), maintenance will not be simultaneously scheduled in more than one availability zone. Example: "zone1" or "zone2".
  optional string availability_zone = 158459920;

  // [Output Only] Metropolitan area designator that indicates which city an interconnect is located. For example: "Chicago, IL", "Amsterdam, Netherlands".
  optional string city = 3053931;

  // [Output Only] Continent for this location, which can take one of the following values: - AFRICA - ASIA_PAC - EUROPE - NORTH_AMERICA - SOUTH_AMERICA
  // Check the Continent enum for the list of possible values.
  optional string continent = 133442996;

  // [Output Only] Creation timestamp in RFC3339 text format.
  optional string creation_timestamp = 30525366;

  // [Output Only] An optional description of the resource.
  optional string description = 422937596;

  // [Output Only] The name of the provider for this facility (e.g., EQUINIX).
  optional string facility_provider = 533303309;

  // [Output Only] A provider-assigned Identifier for this facility (e.g., Ashburn-DC1).
  optional string facility_provider_facility_id = 87269125;

  // [Output Only] The unique identifier for the resource. This identifier is defined by the server.
  optional uint64 id = 3355;

  // [Output Only] Type of the resource. Always compute#interconnectLocation for interconnect locations.
  optional string kind = 3292052;

  // [Output Only] Name of the resource.
  optional string name = 3373707;

  // [Output Only] The peeringdb identifier for this facility (corresponding with a netfac type in peeringdb).
  optional string peeringdb_facility_id = 536567094;

  // [Output Only] A list of InterconnectLocation.RegionInfo objects, that describe parameters pertaining to the relation between this InterconnectLocation and various Google Cloud regions.
  repeated InterconnectLocationRegionInfo region_infos = 312194170;

  // [Output Only] Server-defined URL for the resource.
  optional string self_link = 456214797;

  // [Output Only] The status of this InterconnectLocation, which can take one of the following values: - CLOSED: The InterconnectLocation is closed and is unavailable for provisioning new Interconnects. - AVAILABLE: The InterconnectLocation is available for provisioning new Interconnects.
  // Check the Status enum for the list of possible values.
  optional string status = 181260274;

  // [Output Only] Reserved for future use.
  optional bool supports_pzs = 83983214;

}

// Response to the list request, and contains a list of interconnect locations.
message InterconnectLocationList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 3355;

  // A list of InterconnectLocation resources.
  repeated InterconnectLocation items = 100526016;

  // [Output Only] Type of resource. Always compute#interconnectLocationList for lists of interconnect locations.
  optional string kind = 3292052;

  // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
  optional string next_page_token = 79797525;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 456214797;

  // [Output Only] Informational warning message.
  optional Warning warning = 50704284;

}

// Information about any potential InterconnectAttachments between an Interconnect at a specific InterconnectLocation, and a specific Cloud Region.
message InterconnectLocationRegionInfo {
  // Identifies the network presence of this location.
  enum LocationPresence {
    // A value indicating that the enum field is not set.
    UNDEFINED_LOCATION_PRESENCE = 0;

    // This region is not in any common network presence with this InterconnectLocation.
    GLOBAL = 494663587;

    // This region shares the same regional network presence as this InterconnectLocation.
    LOCAL_REGION = 403535464;

    // [Deprecated] This region is not in any common network presence with this InterconnectLocation.
    LP_GLOBAL = 429584062;

    // [Deprecated] This region shares the same regional network presence as this InterconnectLocation.
    LP_LOCAL_REGION = 488598851;

  }

  // Expected round-trip time in milliseconds, from this InterconnectLocation to a VM in this region.
  optional int64 expected_rtt_ms = 422543866;

  // Identifies the network presence of this location.
  // Check the LocationPresence enum for the list of possible values.
  optional string location_presence = 101517893;

  // URL for the region of this location.
  optional string region = 138946292;

}

// Description of a planned outage on this Interconnect.
message InterconnectOutageNotification {
  // Form this outage is expected to take, which can take one of the following values: - OUTAGE: The Interconnect may be completely out of service for some or all of the specified window. - PARTIAL_OUTAGE: Some circuits comprising the Interconnect as a whole should remain up, but with reduced bandwidth. Note that the versions of this enum prefixed with "IT_" have been deprecated in favor of the unprefixed values.
  enum IssueType {
    // A value indicating that the enum field is not set.
    UNDEFINED_ISSUE_TYPE = 0;

    // [Deprecated] The Interconnect may be completely out of service for some or all of the specified window.
    IT_OUTAGE = 175779973;

    // [Deprecated] Some circuits comprising the Interconnect will be out of service during the expected window. The interconnect as a whole should remain up, albeit with reduced bandwidth.
    IT_PARTIAL_OUTAGE = 92103971;

    // The Interconnect may be completely out of service for some or all of the specified window.
    OUTAGE = 195285745;

    // Some circuits comprising the Interconnect will be out of service during the expected window. The interconnect as a whole should remain up, albeit with reduced bandwidth.
    PARTIAL_OUTAGE = 147053455;

  }

  // The party that generated this notification, which can take the following value: - GOOGLE: this notification as generated by Google. Note that the value of NSRC_GOOGLE has been deprecated in favor of GOOGLE.
  enum Source {
    // A value indicating that the enum field is not set.
    UNDEFINED_SOURCE = 0;

    // This notification was generated by Google.
    GOOGLE = 497439289;

    // [Deprecated] This notification was generated by Google.
    NSRC_GOOGLE = 510574562;

  }

  // State of this notification, which can take one of the following values: - ACTIVE: This outage notification is active. The event could be in the past, present, or future. See start_time and end_time for scheduling. - CANCELLED: The outage associated with this notification was cancelled before the outage was due to start. - COMPLETED: The outage associated with this notification is complete. Note that the versions of this enum prefixed with "NS_" have been deprecated in favor of the unprefixed values.
  enum State {
    // A value indicating that the enum field is not set.
    UNDEFINED_STATE = 0;

    // This outage notification is active. The event could be in the future, present, or past. See start_time and end_time for scheduling.
    ACTIVE = 314733318;

    // The outage associated with this notification was cancelled before the outage was due to start.
    CANCELLED = 41957681;

    // The outage associated with this notification is complete.
    COMPLETED = 309921323;

    // [Deprecated] This outage notification is active. The event could be in the future, present, or past. See start_time and end_time for scheduling.
    NS_ACTIVE = 252563136;

    // [Deprecated] The outage associated with this notification was canceled before the outage was due to start.
    NS_CANCELED = 506579411;

  }

  // If issue_type is IT_PARTIAL_OUTAGE, a list of the Google-side circuit IDs that will be affected.
  repeated string affected_circuits = 177717013;

  // A description about the purpose of the outage.
  optional string description = 422937596;

  // Scheduled end time for the outage (milliseconds since Unix epoch).
  optional int64 end_time = 114938801;

  // Form this outage is expected to take, which can take one of the following values: - OUTAGE: The Interconnect may be completely out of service for some or all of the specified window. - PARTIAL_OUTAGE: Some circuits comprising the Interconnect as a whole should remain up, but with reduced bandwidth. Note that the versions of this enum prefixed with "IT_" have been deprecated in favor of the unprefixed values.
  // Check the IssueType enum for the list of possible values.
  optional string issue_type = 369639136;

  // Unique identifier for this outage notification.
  optional string name = 3373707;

  // The party that generated this notification, which can take the following value: - GOOGLE: this notification as generated by Google. Note that the value of NSRC_GOOGLE has been deprecated in favor of GOOGLE.
  // Check the Source enum for the list of possible values.
  optional string source = 177235995;

  // Scheduled start time for the outage (milliseconds since Unix epoch).
  optional int64 start_time = 37467274;

  // State of this notification, which can take one of the following values: - ACTIVE: This outage notification is active. The event could be in the past, present, or future. See start_time and end_time for scheduling. - CANCELLED: The outage associated with this notification was cancelled before the outage was due to start. - COMPLETED: The outage associated with this notification is complete. Note that the versions of this enum prefixed with "NS_" have been deprecated in favor of the unprefixed values.
  // Check the State enum for the list of possible values.
  optional string state = 109757585;

}

// Response for the InterconnectsGetDiagnosticsRequest.
message InterconnectsGetDiagnosticsResponse {
  optional InterconnectDiagnostics result = 139315229;

}

// A request message for UrlMaps.InvalidateCache. See the method description for details.
message InvalidateCacheUrlMapRequest {
  // The body resource for this request
  CacheInvalidationRule cache_invalidation_rule_resource = 312795565 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // Name of the UrlMap scoping this request.
  string url_map = 367020684 [(google.api.field_behavior) = REQUIRED];

}

// Metadata
message Items {
  // Key for the metadata entry. Keys must conform to the following regexp: [a-zA-Z0-9-_]+, and be less than 128 bytes in length. This is reflected as part of a URL in the metadata server. Additionally, to avoid ambiguity, keys must not conflict with any other metadata keys for the project.
  optional string key = 106079;

  // Value for the metadata entry. These are free-form strings, and only have meaning as interpreted by the image running in the instance. The only restriction placed on values is that their size must be less than or equal to 262144 bytes (256 KiB).
  optional string value = 111972721;

}

// Represents a License resource. A License represents billing and aggregate usage data for public and marketplace images. *Caution* This resource is intended for use only by third-party partners who are creating Cloud Marketplace images. 
message License {
  // [Output Only] Deprecated. This field no longer reflects whether a license charges a usage fee.
  optional bool charges_use_fee = 372412622;

  // [Output Only] Creation timestamp in RFC3339 text format.
  optional string creation_timestamp = 30525366;

  // An optional textual description of the resource; provided by the client when the resource is created.
  optional string description = 422937596;

  // [Output Only] The unique identifier for the resource. This identifier is defined by the server.
  optional uint64 id = 3355;

  // [Output Only] Type of resource. Always compute#license for licenses.
  optional string kind = 3292052;

  // [Output Only] The unique code used to attach this license to images, snapshots, and disks.
  optional uint64 license_code = 1467179;

  // Name of the resource. The name must be 1-63 characters long and comply with RFC1035.
  optional string name = 3373707;

  optional LicenseResourceRequirements resource_requirements = 214292769;

  // [Output Only] Server-defined URL for the resource.
  optional string self_link = 456214797;

  // If false, licenses will not be copied from the source resource when creating an image from a disk, disk from snapshot, or snapshot from disk.
  optional bool transferable = 4349893;

}

// Represents a License Code resource. A License Code is a unique identifier used to represent a license resource. *Caution* This resource is intended for use only by third-party partners who are creating Cloud Marketplace images. 
message LicenseCode {
  // [Output Only] Current state of this License Code.
  enum State {
    // A value indicating that the enum field is not set.
    UNDEFINED_STATE = 0;

    // Machines are not allowed to attach boot disks with this License Code. Requests to create new resources with this license will be rejected.
    DISABLED = 516696700;

    // Use is allowed for anyone with USE_READ_ONLY access to this License Code.
    ENABLED = 182130465;

    // Use of this license is limited to a project whitelist.
    RESTRICTED = 261551195;

    STATE_UNSPECIFIED = 470755401;

    // Reserved state.
    TERMINATED = 250018339;

  }

  // [Output Only] Creation timestamp in RFC3339 text format.
  optional string creation_timestamp = 30525366;

  // [Output Only] Description of this License Code.
  optional string description = 422937596;

  // [Output Only] The unique identifier for the resource. This identifier is defined by the server.
  optional uint64 id = 3355;

  // [Output Only] Type of resource. Always compute#licenseCode for licenses.
  optional string kind = 3292052;

  // [Output Only] URL and description aliases of Licenses with the same License Code.
  repeated LicenseCodeLicenseAlias license_alias = 43550930;

  // [Output Only] Name of the resource. The name is 1-20 characters long and must be a valid 64 bit integer.
  optional string name = 3373707;

  // [Output Only] Server-defined URL for the resource.
  optional string self_link = 456214797;

  // [Output Only] Current state of this License Code.
  // Check the State enum for the list of possible values.
  optional string state = 109757585;

  // [Output Only] If true, the license will remain attached when creating images or snapshots from disks. Otherwise, the license is not transferred.
  optional bool transferable = 4349893;

}

//
message LicenseCodeLicenseAlias {
  // [Output Only] Description of this License Code.
  optional string description = 422937596;

  // [Output Only] URL of license corresponding to this License Code.
  optional string self_link = 456214797;

}

// Commitment for a particular license resource.
message LicenseResourceCommitment {
  // The number of licenses purchased.
  optional int64 amount = 196759640;

  // Specifies the core range of the instance for which this license applies.
  optional string cores_per_license = 32482324;

  // Any applicable license URI.
  optional string license = 166757441;

}

//
message LicenseResourceRequirements {
  // Minimum number of guest cpus required to use the Instance. Enforced at Instance creation and Instance start.
  optional int32 min_guest_cpu_count = 477964836;

  // Minimum memory required to use the Instance. Enforced at Instance creation and Instance start.
  optional int32 min_memory_mb = 504785894;

}

//
message LicensesListResponse {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 3355;

  // A list of License resources.
  repeated License items = 100526016;

  // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
  optional string next_page_token = 79797525;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 456214797;

  // [Output Only] Informational warning message.
  optional Warning warning = 50704284;

}

// A request message for AcceleratorTypes.List. See the method description for details.
message ListAcceleratorTypesRequest {
  // A filter expression that filters resources listed in the response. Most Compute resources support two types of filter expressions: expressions that support regular expressions and expressions that follow API improvement proposal AIP-160. If you want to use AIP-160, your expression must specify the field name, an operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The operator must be either `=`, `!=`, `>`, `<`, `<=`, `>=` or `:`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. The `:` operator can be used with string fields to match substrings. For non-string fields it is equivalent to the `=` operator. The `:*` comparison can be used to test whether a key has been defined. For example, to find all objects with `owner` label use: ``` labels.owner:* ``` You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ``` If you want to use a regular expression, use the `eq` (equal) or `ne` (not equal) operator against a single un-parenthesized expression with or without quotes or against multiple parenthesized expressions. Examples: `fieldname eq unquoted literal` `fieldname eq 'single quoted literal'` `fieldname eq "double quoted literal"` `(fieldname1 eq literal) (fieldname2 ne "literal")` The literal value is interpreted as a regular expression using Google RE2 library syntax. The literal value must match the entire field. For example, to filter for instances that do not end with name "instance", you would use `name ne .*instance`.
  optional string filter = 336120696;

  // The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)
  optional uint32 max_results = 54715419;

  // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported.
  optional string order_by = 160562920;

  // Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results.
  optional string page_token = 19994697;

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Opt-in for partial success behavior which provides partial results in case of failure. The default value is false.
  optional bool return_partial_success = 517198390;

  // The name of the zone for this request.
  string zone = 3744684 [(google.api.field_behavior) = REQUIRED];

}

// A request message for Addresses.List. See the method description for details.
message ListAddressesRequest {
  // A filter expression that filters resources listed in the response. Most Compute resources support two types of filter expressions: expressions that support regular expressions and expressions that follow API improvement proposal AIP-160. If you want to use AIP-160, your expression must specify the field name, an operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The operator must be either `=`, `!=`, `>`, `<`, `<=`, `>=` or `:`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. The `:` operator can be used with string fields to match substrings. For non-string fields it is equivalent to the `=` operator. The `:*` comparison can be used to test whether a key has been defined. For example, to find all objects with `owner` label use: ``` labels.owner:* ``` You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ``` If you want to use a regular expression, use the `eq` (equal) or `ne` (not equal) operator against a single un-parenthesized expression with or without quotes or against multiple parenthesized expressions. Examples: `fieldname eq unquoted literal` `fieldname eq 'single quoted literal'` `fieldname eq "double quoted literal"` `(fieldname1 eq literal) (fieldname2 ne "literal")` The literal value is interpreted as a regular expression using Google RE2 library syntax. The literal value must match the entire field. For example, to filter for instances that do not end with name "instance", you would use `name ne .*instance`.
  optional string filter = 336120696;

  // The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)
  optional uint32 max_results = 54715419;

  // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported.
  optional string order_by = 160562920;

  // Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results.
  optional string page_token = 19994697;

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Name of the region for this request.
  string region = 138946292 [(google.api.field_behavior) = REQUIRED];

  // Opt-in for partial success behavior which provides partial results in case of failure. The default value is false.
  optional bool return_partial_success = 517198390;

}

// A request message for FirewallPolicies.ListAssociations. See the method description for details.
message ListAssociationsFirewallPolicyRequest {
  // The target resource to list associations. It is an organization, or a folder.
  optional string target_resource = 467318524;

}

// A request message for Autoscalers.List. See the method description for details.
message ListAutoscalersRequest {
  // A filter expression that filters resources listed in the response. Most Compute resources support two types of filter expressions: expressions that support regular expressions and expressions that follow API improvement proposal AIP-160. If you want to use AIP-160, your expression must specify the field name, an operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The operator must be either `=`, `!=`, `>`, `<`, `<=`, `>=` or `:`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. The `:` operator can be used with string fields to match substrings. For non-string fields it is equivalent to the `=` operator. The `:*` comparison can be used to test whether a key has been defined. For example, to find all objects with `owner` label use: ``` labels.owner:* ``` You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ``` If you want to use a regular expression, use the `eq` (equal) or `ne` (not equal) operator against a single un-parenthesized expression with or without quotes or against multiple parenthesized expressions. Examples: `fieldname eq unquoted literal` `fieldname eq 'single quoted literal'` `fieldname eq "double quoted literal"` `(fieldname1 eq literal) (fieldname2 ne "literal")` The literal value is interpreted as a regular expression using Google RE2 library syntax. The literal value must match the entire field. For example, to filter for instances that do not end with name "instance", you would use `name ne .*instance`.
  optional string filter = 336120696;

  // The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)
  optional uint32 max_results = 54715419;

  // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported.
  optional string order_by = 160562920;

  // Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results.
  optional string page_token = 19994697;

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Opt-in for partial success behavior which provides partial results in case of failure. The default value is false.
  optional bool return_partial_success = 517198390;

  // Name of the zone for this request.
  string zone = 3744684 [(google.api.field_behavior) = REQUIRED];

}

// A request message for RegionSslPolicies.ListAvailableFeatures. See the method description for details.
message ListAvailableFeaturesRegionSslPoliciesRequest {
  // A filter expression that filters resources listed in the response. Most Compute resources support two types of filter expressions: expressions that support regular expressions and expressions that follow API improvement proposal AIP-160. If you want to use AIP-160, your expression must specify the field name, an operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The operator must be either `=`, `!=`, `>`, `<`, `<=`, `>=` or `:`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. The `:` operator can be used with string fields to match substrings. For non-string fields it is equivalent to the `=` operator. The `:*` comparison can be used to test whether a key has been defined. For example, to find all objects with `owner` label use: ``` labels.owner:* ``` You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ``` If you want to use a regular expression, use the `eq` (equal) or `ne` (not equal) operator against a single un-parenthesized expression with or without quotes or against multiple parenthesized expressions. Examples: `fieldname eq unquoted literal` `fieldname eq 'single quoted literal'` `fieldname eq "double quoted literal"` `(fieldname1 eq literal) (fieldname2 ne "literal")` The literal value is interpreted as a regular expression using Google RE2 library syntax. The literal value must match the entire field. For example, to filter for instances that do not end with name "instance", you would use `name ne .*instance`.
  optional string filter = 336120696;

  // The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)
  optional uint32 max_results = 54715419;

  // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported.
  optional string order_by = 160562920;

  // Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results.
  optional string page_token = 19994697;

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Name of the region scoping this request.
  string region = 138946292 [(google.api.field_behavior) = REQUIRED];

  // Opt-in for partial success behavior which provides partial results in case of failure. The default value is false.
  optional bool return_partial_success = 517198390;

}

// A request message for SslPolicies.ListAvailableFeatures. See the method description for details.
message ListAvailableFeaturesSslPoliciesRequest {
  // A filter expression that filters resources listed in the response. Most Compute resources support two types of filter expressions: expressions that support regular expressions and expressions that follow API improvement proposal AIP-160. If you want to use AIP-160, your expression must specify the field name, an operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The operator must be either `=`, `!=`, `>`, `<`, `<=`, `>=` or `:`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. The `:` operator can be used with string fields to match substrings. For non-string fields it is equivalent to the `=` operator. The `:*` comparison can be used to test whether a key has been defined. For example, to find all objects with `owner` label use: ``` labels.owner:* ``` You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ``` If you want to use a regular expression, use the `eq` (equal) or `ne` (not equal) operator against a single un-parenthesized expression with or without quotes or against multiple parenthesized expressions. Examples: `fieldname eq unquoted literal` `fieldname eq 'single quoted literal'` `fieldname eq "double quoted literal"` `(fieldname1 eq literal) (fieldname2 ne "literal")` The literal value is interpreted as a regular expression using Google RE2 library syntax. The literal value must match the entire field. For example, to filter for instances that do not end with name "instance", you would use `name ne .*instance`.
  optional string filter = 336120696;

  // The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)
  optional uint32 max_results = 54715419;

  // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported.
  optional string order_by = 160562920;

  // Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results.
  optional string page_token = 19994697;

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Opt-in for partial success behavior which provides partial results in case of failure. The default value is false.
  optional bool return_partial_success = 517198390;

}

// A request message for BackendBuckets.List. See the method description for details.
message ListBackendBucketsRequest {
  // A filter expression that filters resources listed in the response. Most Compute resources support two types of filter expressions: expressions that support regular expressions and expressions that follow API improvement proposal AIP-160. If you want to use AIP-160, your expression must specify the field name, an operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The operator must be either `=`, `!=`, `>`, `<`, `<=`, `>=` or `:`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. The `:` operator can be used with string fields to match substrings. For non-string fields it is equivalent to the `=` operator. The `:*` comparison can be used to test whether a key has been defined. For example, to find all objects with `owner` label use: ``` labels.owner:* ``` You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ``` If you want to use a regular expression, use the `eq` (equal) or `ne` (not equal) operator against a single un-parenthesized expression with or without quotes or against multiple parenthesized expressions. Examples: `fieldname eq unquoted literal` `fieldname eq 'single quoted literal'` `fieldname eq "double quoted literal"` `(fieldname1 eq literal) (fieldname2 ne "literal")` The literal value is interpreted as a regular expression using Google RE2 library syntax. The literal value must match the entire field. For example, to filter for instances that do not end with name "instance", you would use `name ne .*instance`.
  optional string filter = 336120696;

  // The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)
  optional uint32 max_results = 54715419;

  // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported.
  optional string order_by = 160562920;

  // Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results.
  optional string page_token = 19994697;

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Opt-in for partial success behavior which provides partial results in case of failure. The default value is false.
  optional bool return_partial_success = 517198390;

}

// A request message for BackendServices.List. See the method description for details.
message ListBackendServicesRequest {
  // A filter expression that filters resources listed in the response. Most Compute resources support two types of filter expressions: expressions that support regular expressions and expressions that follow API improvement proposal AIP-160. If you want to use AIP-160, your expression must specify the field name, an operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The operator must be either `=`, `!=`, `>`, `<`, `<=`, `>=` or `:`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. The `:` operator can be used with string fields to match substrings. For non-string fields it is equivalent to the `=` operator. The `:*` comparison can be used to test whether a key has been defined. For example, to find all objects with `owner` label use: ``` labels.owner:* ``` You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ``` If you want to use a regular expression, use the `eq` (equal) or `ne` (not equal) operator against a single un-parenthesized expression with or without quotes or against multiple parenthesized expressions. Examples: `fieldname eq unquoted literal` `fieldname eq 'single quoted literal'` `fieldname eq "double quoted literal"` `(fieldname1 eq literal) (fieldname2 ne "literal")` The literal value is interpreted as a regular expression using Google RE2 library syntax. The literal value must match the entire field. For example, to filter for instances that do not end with name "instance", you would use `name ne .*instance`.
  optional string filter = 336120696;

  // The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)
  optional uint32 max_results = 54715419;

  // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported.
  optional string order_by = 160562920;

  // Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results.
  optional string page_token = 19994697;

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Opt-in for partial success behavior which provides partial results in case of failure. The default value is false.
  optional bool return_partial_success = 517198390;

}

// A request message for DiskTypes.List. See the method description for details.
message ListDiskTypesRequest {
  // A filter expression that filters resources listed in the response. Most Compute resources support two types of filter expressions: expressions that support regular expressions and expressions that follow API improvement proposal AIP-160. If you want to use AIP-160, your expression must specify the field name, an operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The operator must be either `=`, `!=`, `>`, `<`, `<=`, `>=` or `:`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. The `:` operator can be used with string fields to match substrings. For non-string fields it is equivalent to the `=` operator. The `:*` comparison can be used to test whether a key has been defined. For example, to find all objects with `owner` label use: ``` labels.owner:* ``` You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ``` If you want to use a regular expression, use the `eq` (equal) or `ne` (not equal) operator against a single un-parenthesized expression with or without quotes or against multiple parenthesized expressions. Examples: `fieldname eq unquoted literal` `fieldname eq 'single quoted literal'` `fieldname eq "double quoted literal"` `(fieldname1 eq literal) (fieldname2 ne "literal")` The literal value is interpreted as a regular expression using Google RE2 library syntax. The literal value must match the entire field. For example, to filter for instances that do not end with name "instance", you would use `name ne .*instance`.
  optional string filter = 336120696;

  // The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)
  optional uint32 max_results = 54715419;

  // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported.
  optional string order_by = 160562920;

  // Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results.
  optional string page_token = 19994697;

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Opt-in for partial success behavior which provides partial results in case of failure. The default value is false.
  optional bool return_partial_success = 517198390;

  // The name of the zone for this request.
  string zone = 3744684 [(google.api.field_behavior) = REQUIRED];

}

// A request message for Disks.List. See the method description for details.
message ListDisksRequest {
  // A filter expression that filters resources listed in the response. Most Compute resources support two types of filter expressions: expressions that support regular expressions and expressions that follow API improvement proposal AIP-160. If you want to use AIP-160, your expression must specify the field name, an operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The operator must be either `=`, `!=`, `>`, `<`, `<=`, `>=` or `:`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. The `:` operator can be used with string fields to match substrings. For non-string fields it is equivalent to the `=` operator. The `:*` comparison can be used to test whether a key has been defined. For example, to find all objects with `owner` label use: ``` labels.owner:* ``` You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ``` If you want to use a regular expression, use the `eq` (equal) or `ne` (not equal) operator against a single un-parenthesized expression with or without quotes or against multiple parenthesized expressions. Examples: `fieldname eq unquoted literal` `fieldname eq 'single quoted literal'` `fieldname eq "double quoted literal"` `(fieldname1 eq literal) (fieldname2 ne "literal")` The literal value is interpreted as a regular expression using Google RE2 library syntax. The literal value must match the entire field. For example, to filter for instances that do not end with name "instance", you would use `name ne .*instance`.
  optional string filter = 336120696;

  // The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)
  optional uint32 max_results = 54715419;

  // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported.
  optional string order_by = 160562920;

  // Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results.
  optional string page_token = 19994697;

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Opt-in for partial success behavior which provides partial results in case of failure. The default value is false.
  optional bool return_partial_success = 517198390;

  // The name of the zone for this request.
  string zone = 3744684 [(google.api.field_behavior) = REQUIRED];

}

// A request message for InstanceGroupManagers.ListErrors. See the method description for details.
message ListErrorsInstanceGroupManagersRequest {
  // A filter expression that filters resources listed in the response. Most Compute resources support two types of filter expressions: expressions that support regular expressions and expressions that follow API improvement proposal AIP-160. If you want to use AIP-160, your expression must specify the field name, an operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The operator must be either `=`, `!=`, `>`, `<`, `<=`, `>=` or `:`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. The `:` operator can be used with string fields to match substrings. For non-string fields it is equivalent to the `=` operator. The `:*` comparison can be used to test whether a key has been defined. For example, to find all objects with `owner` label use: ``` labels.owner:* ``` You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ``` If you want to use a regular expression, use the `eq` (equal) or `ne` (not equal) operator against a single un-parenthesized expression with or without quotes or against multiple parenthesized expressions. Examples: `fieldname eq unquoted literal` `fieldname eq 'single quoted literal'` `fieldname eq "double quoted literal"` `(fieldname1 eq literal) (fieldname2 ne "literal")` The literal value is interpreted as a regular expression using Google RE2 library syntax. The literal value must match the entire field. For example, to filter for instances that do not end with name "instance", you would use `name ne .*instance`.
  optional string filter = 336120696;

  // The name of the managed instance group. It must be a string that meets the requirements in RFC1035, or an unsigned long integer: must match regexp pattern: (?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?)|1-9{0,19}.
  string instance_group_manager = 249363395 [(google.api.field_behavior) = REQUIRED];

  // The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)
  optional uint32 max_results = 54715419;

  // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported.
  optional string order_by = 160562920;

  // Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results.
  optional string page_token = 19994697;

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Opt-in for partial success behavior which provides partial results in case of failure. The default value is false.
  optional bool return_partial_success = 517198390;

  // The name of the zone where the managed instance group is located. It should conform to RFC1035.
  string zone = 3744684 [(google.api.field_behavior) = REQUIRED];

}

// A request message for RegionInstanceGroupManagers.ListErrors. See the method description for details.
message ListErrorsRegionInstanceGroupManagersRequest {
  // A filter expression that filters resources listed in the response. Most Compute resources support two types of filter expressions: expressions that support regular expressions and expressions that follow API improvement proposal AIP-160. If you want to use AIP-160, your expression must specify the field name, an operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The operator must be either `=`, `!=`, `>`, `<`, `<=`, `>=` or `:`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. The `:` operator can be used with string fields to match substrings. For non-string fields it is equivalent to the `=` operator. The `:*` comparison can be used to test whether a key has been defined. For example, to find all objects with `owner` label use: ``` labels.owner:* ``` You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ``` If you want to use a regular expression, use the `eq` (equal) or `ne` (not equal) operator against a single un-parenthesized expression with or without quotes or against multiple parenthesized expressions. Examples: `fieldname eq unquoted literal` `fieldname eq 'single quoted literal'` `fieldname eq "double quoted literal"` `(fieldname1 eq literal) (fieldname2 ne "literal")` The literal value is interpreted as a regular expression using Google RE2 library syntax. The literal value must match the entire field. For example, to filter for instances that do not end with name "instance", you would use `name ne .*instance`.
  optional string filter = 336120696;

  // The name of the managed instance group. It must be a string that meets the requirements in RFC1035, or an unsigned long integer: must match regexp pattern: (?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?)|1-9{0,19}.
  string instance_group_manager = 249363395 [(google.api.field_behavior) = REQUIRED];

  // The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)
  optional uint32 max_results = 54715419;

  // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported.
  optional string order_by = 160562920;

  // Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results.
  optional string page_token = 19994697;

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Name of the region scoping this request. This should conform to RFC1035.
  string region = 138946292 [(google.api.field_behavior) = REQUIRED];

  // Opt-in for partial success behavior which provides partial results in case of failure. The default value is false.
  optional bool return_partial_success = 517198390;

}

// A request message for ExternalVpnGateways.List. See the method description for details.
message ListExternalVpnGatewaysRequest {
  // A filter expression that filters resources listed in the response. Most Compute resources support two types of filter expressions: expressions that support regular expressions and expressions that follow API improvement proposal AIP-160. If you want to use AIP-160, your expression must specify the field name, an operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The operator must be either `=`, `!=`, `>`, `<`, `<=`, `>=` or `:`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. The `:` operator can be used with string fields to match substrings. For non-string fields it is equivalent to the `=` operator. The `:*` comparison can be used to test whether a key has been defined. For example, to find all objects with `owner` label use: ``` labels.owner:* ``` You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ``` If you want to use a regular expression, use the `eq` (equal) or `ne` (not equal) operator against a single un-parenthesized expression with or without quotes or against multiple parenthesized expressions. Examples: `fieldname eq unquoted literal` `fieldname eq 'single quoted literal'` `fieldname eq "double quoted literal"` `(fieldname1 eq literal) (fieldname2 ne "literal")` The literal value is interpreted as a regular expression using Google RE2 library syntax. The literal value must match the entire field. For example, to filter for instances that do not end with name "instance", you would use `name ne .*instance`.
  optional string filter = 336120696;

  // The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)
  optional uint32 max_results = 54715419;

  // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported.
  optional string order_by = 160562920;

  // Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results.
  optional string page_token = 19994697;

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Opt-in for partial success behavior which provides partial results in case of failure. The default value is false.
  optional bool return_partial_success = 517198390;

}

// A request message for FirewallPolicies.List. See the method description for details.
message ListFirewallPoliciesRequest {
  // A filter expression that filters resources listed in the response. Most Compute resources support two types of filter expressions: expressions that support regular expressions and expressions that follow API improvement proposal AIP-160. If you want to use AIP-160, your expression must specify the field name, an operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The operator must be either `=`, `!=`, `>`, `<`, `<=`, `>=` or `:`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. The `:` operator can be used with string fields to match substrings. For non-string fields it is equivalent to the `=` operator. The `:*` comparison can be used to test whether a key has been defined. For example, to find all objects with `owner` label use: ``` labels.owner:* ``` You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ``` If you want to use a regular expression, use the `eq` (equal) or `ne` (not equal) operator against a single un-parenthesized expression with or without quotes or against multiple parenthesized expressions. Examples: `fieldname eq unquoted literal` `fieldname eq 'single quoted literal'` `fieldname eq "double quoted literal"` `(fieldname1 eq literal) (fieldname2 ne "literal")` The literal value is interpreted as a regular expression using Google RE2 library syntax. The literal value must match the entire field. For example, to filter for instances that do not end with name "instance", you would use `name ne .*instance`.
  optional string filter = 336120696;

  // The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)
  optional uint32 max_results = 54715419;

  // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported.
  optional string order_by = 160562920;

  // Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results.
  optional string page_token = 19994697;

  // Parent ID for this request. The ID can be either be "folders/[FOLDER_ID]" if the parent is a folder or "organizations/[ORGANIZATION_ID]" if the parent is an organization.
  optional string parent_id = 459714768;

  // Opt-in for partial success behavior which provides partial results in case of failure. The default value is false.
  optional bool return_partial_success = 517198390;

}

// A request message for Firewalls.List. See the method description for details.
message ListFirewallsRequest {
  // A filter expression that filters resources listed in the response. Most Compute resources support two types of filter expressions: expressions that support regular expressions and expressions that follow API improvement proposal AIP-160. If you want to use AIP-160, your expression must specify the field name, an operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The operator must be either `=`, `!=`, `>`, `<`, `<=`, `>=` or `:`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. The `:` operator can be used with string fields to match substrings. For non-string fields it is equivalent to the `=` operator. The `:*` comparison can be used to test whether a key has been defined. For example, to find all objects with `owner` label use: ``` labels.owner:* ``` You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ``` If you want to use a regular expression, use the `eq` (equal) or `ne` (not equal) operator against a single un-parenthesized expression with or without quotes or against multiple parenthesized expressions. Examples: `fieldname eq unquoted literal` `fieldname eq 'single quoted literal'` `fieldname eq "double quoted literal"` `(fieldname1 eq literal) (fieldname2 ne "literal")` The literal value is interpreted as a regular expression using Google RE2 library syntax. The literal value must match the entire field. For example, to filter for instances that do not end with name "instance", you would use `name ne .*instance`.
  optional string filter = 336120696;

  // The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)
  optional uint32 max_results = 54715419;

  // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported.
  optional string order_by = 160562920;

  // Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results.
  optional string page_token = 19994697;

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Opt-in for partial success behavior which provides partial results in case of failure. The default value is false.
  optional bool return_partial_success = 517198390;

}

// A request message for ForwardingRules.List. See the method description for details.
message ListForwardingRulesRequest {
  // A filter expression that filters resources listed in the response. Most Compute resources support two types of filter expressions: expressions that support regular expressions and expressions that follow API improvement proposal AIP-160. If you want to use AIP-160, your expression must specify the field name, an operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The operator must be either `=`, `!=`, `>`, `<`, `<=`, `>=` or `:`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. The `:` operator can be used with string fields to match substrings. For non-string fields it is equivalent to the `=` operator. The `:*` comparison can be used to test whether a key has been defined. For example, to find all objects with `owner` label use: ``` labels.owner:* ``` You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ``` If you want to use a regular expression, use the `eq` (equal) or `ne` (not equal) operator against a single un-parenthesized expression with or without quotes or against multiple parenthesized expressions. Examples: `fieldname eq unquoted literal` `fieldname eq 'single quoted literal'` `fieldname eq "double quoted literal"` `(fieldname1 eq literal) (fieldname2 ne "literal")` The literal value is interpreted as a regular expression using Google RE2 library syntax. The literal value must match the entire field. For example, to filter for instances that do not end with name "instance", you would use `name ne .*instance`.
  optional string filter = 336120696;

  // The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)
  optional uint32 max_results = 54715419;

  // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported.
  optional string order_by = 160562920;

  // Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results.
  optional string page_token = 19994697;

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Name of the region scoping this request.
  string region = 138946292 [(google.api.field_behavior) = REQUIRED];

  // Opt-in for partial success behavior which provides partial results in case of failure. The default value is false.
  optional bool return_partial_success = 517198390;

}

// A request message for GlobalAddresses.List. See the method description for details.
message ListGlobalAddressesRequest {
  // A filter expression that filters resources listed in the response. Most Compute resources support two types of filter expressions: expressions that support regular expressions and expressions that follow API improvement proposal AIP-160. If you want to use AIP-160, your expression must specify the field name, an operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The operator must be either `=`, `!=`, `>`, `<`, `<=`, `>=` or `:`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. The `:` operator can be used with string fields to match substrings. For non-string fields it is equivalent to the `=` operator. The `:*` comparison can be used to test whether a key has been defined. For example, to find all objects with `owner` label use: ``` labels.owner:* ``` You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ``` If you want to use a regular expression, use the `eq` (equal) or `ne` (not equal) operator against a single un-parenthesized expression with or without quotes or against multiple parenthesized expressions. Examples: `fieldname eq unquoted literal` `fieldname eq 'single quoted literal'` `fieldname eq "double quoted literal"` `(fieldname1 eq literal) (fieldname2 ne "literal")` The literal value is interpreted as a regular expression using Google RE2 library syntax. The literal value must match the entire field. For example, to filter for instances that do not end with name "instance", you would use `name ne .*instance`.
  optional string filter = 336120696;

  // The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)
  optional uint32 max_results = 54715419;

  // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported.
  optional string order_by = 160562920;

  // Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results.
  optional string page_token = 19994697;

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Opt-in for partial success behavior which provides partial results in case of failure. The default value is false.
  optional bool return_partial_success = 517198390;

}

// A request message for GlobalForwardingRules.List. See the method description for details.
message ListGlobalForwardingRulesRequest {
  // A filter expression that filters resources listed in the response. Most Compute resources support two types of filter expressions: expressions that support regular expressions and expressions that follow API improvement proposal AIP-160. If you want to use AIP-160, your expression must specify the field name, an operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The operator must be either `=`, `!=`, `>`, `<`, `<=`, `>=` or `:`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. The `:` operator can be used with string fields to match substrings. For non-string fields it is equivalent to the `=` operator. The `:*` comparison can be used to test whether a key has been defined. For example, to find all objects with `owner` label use: ``` labels.owner:* ``` You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ``` If you want to use a regular expression, use the `eq` (equal) or `ne` (not equal) operator against a single un-parenthesized expression with or without quotes or against multiple parenthesized expressions. Examples: `fieldname eq unquoted literal` `fieldname eq 'single quoted literal'` `fieldname eq "double quoted literal"` `(fieldname1 eq literal) (fieldname2 ne "literal")` The literal value is interpreted as a regular expression using Google RE2 library syntax. The literal value must match the entire field. For example, to filter for instances that do not end with name "instance", you would use `name ne .*instance`.
  optional string filter = 336120696;

  // The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)
  optional uint32 max_results = 54715419;

  // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported.
  optional string order_by = 160562920;

  // Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results.
  optional string page_token = 19994697;

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Opt-in for partial success behavior which provides partial results in case of failure. The default value is false.
  optional bool return_partial_success = 517198390;

}

// A request message for GlobalNetworkEndpointGroups.List. See the method description for details.
message ListGlobalNetworkEndpointGroupsRequest {
  // A filter expression that filters resources listed in the response. Most Compute resources support two types of filter expressions: expressions that support regular expressions and expressions that follow API improvement proposal AIP-160. If you want to use AIP-160, your expression must specify the field name, an operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The operator must be either `=`, `!=`, `>`, `<`, `<=`, `>=` or `:`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. The `:` operator can be used with string fields to match substrings. For non-string fields it is equivalent to the `=` operator. The `:*` comparison can be used to test whether a key has been defined. For example, to find all objects with `owner` label use: ``` labels.owner:* ``` You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ``` If you want to use a regular expression, use the `eq` (equal) or `ne` (not equal) operator against a single un-parenthesized expression with or without quotes or against multiple parenthesized expressions. Examples: `fieldname eq unquoted literal` `fieldname eq 'single quoted literal'` `fieldname eq "double quoted literal"` `(fieldname1 eq literal) (fieldname2 ne "literal")` The literal value is interpreted as a regular expression using Google RE2 library syntax. The literal value must match the entire field. For example, to filter for instances that do not end with name "instance", you would use `name ne .*instance`.
  optional string filter = 336120696;

  // The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)
  optional uint32 max_results = 54715419;

  // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported.
  optional string order_by = 160562920;

  // Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results.
  optional string page_token = 19994697;

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Opt-in for partial success behavior which provides partial results in case of failure. The default value is false.
  optional bool return_partial_success = 517198390;

}

// A request message for GlobalOperations.List. See the method description for details.
message ListGlobalOperationsRequest {
  // A filter expression that filters resources listed in the response. Most Compute resources support two types of filter expressions: expressions that support regular expressions and expressions that follow API improvement proposal AIP-160. If you want to use AIP-160, your expression must specify the field name, an operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The operator must be either `=`, `!=`, `>`, `<`, `<=`, `>=` or `:`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. The `:` operator can be used with string fields to match substrings. For non-string fields it is equivalent to the `=` operator. The `:*` comparison can be used to test whether a key has been defined. For example, to find all objects with `owner` label use: ``` labels.owner:* ``` You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ``` If you want to use a regular expression, use the `eq` (equal) or `ne` (not equal) operator against a single un-parenthesized expression with or without quotes or against multiple parenthesized expressions. Examples: `fieldname eq unquoted literal` `fieldname eq 'single quoted literal'` `fieldname eq "double quoted literal"` `(fieldname1 eq literal) (fieldname2 ne "literal")` The literal value is interpreted as a regular expression using Google RE2 library syntax. The literal value must match the entire field. For example, to filter for instances that do not end with name "instance", you would use `name ne .*instance`.
  optional string filter = 336120696;

  // The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)
  optional uint32 max_results = 54715419;

  // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported.
  optional string order_by = 160562920;

  // Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results.
  optional string page_token = 19994697;

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Opt-in for partial success behavior which provides partial results in case of failure. The default value is false.
  optional bool return_partial_success = 517198390;

}

// A request message for GlobalOrganizationOperations.List. See the method description for details.
message ListGlobalOrganizationOperationsRequest {
  // A filter expression that filters resources listed in the response. Most Compute resources support two types of filter expressions: expressions that support regular expressions and expressions that follow API improvement proposal AIP-160. If you want to use AIP-160, your expression must specify the field name, an operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The operator must be either `=`, `!=`, `>`, `<`, `<=`, `>=` or `:`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. The `:` operator can be used with string fields to match substrings. For non-string fields it is equivalent to the `=` operator. The `:*` comparison can be used to test whether a key has been defined. For example, to find all objects with `owner` label use: ``` labels.owner:* ``` You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ``` If you want to use a regular expression, use the `eq` (equal) or `ne` (not equal) operator against a single un-parenthesized expression with or without quotes or against multiple parenthesized expressions. Examples: `fieldname eq unquoted literal` `fieldname eq 'single quoted literal'` `fieldname eq "double quoted literal"` `(fieldname1 eq literal) (fieldname2 ne "literal")` The literal value is interpreted as a regular expression using Google RE2 library syntax. The literal value must match the entire field. For example, to filter for instances that do not end with name "instance", you would use `name ne .*instance`.
  optional string filter = 336120696;

  // The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)
  optional uint32 max_results = 54715419;

  // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported.
  optional string order_by = 160562920;

  // Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results.
  optional string page_token = 19994697;

  // Parent ID for this request.
  optional string parent_id = 459714768;

  // Opt-in for partial success behavior which provides partial results in case of failure. The default value is false.
  optional bool return_partial_success = 517198390;

}

// A request message for GlobalPublicDelegatedPrefixes.List. See the method description for details.
message ListGlobalPublicDelegatedPrefixesRequest {
  // A filter expression that filters resources listed in the response. Most Compute resources support two types of filter expressions: expressions that support regular expressions and expressions that follow API improvement proposal AIP-160. If you want to use AIP-160, your expression must specify the field name, an operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The operator must be either `=`, `!=`, `>`, `<`, `<=`, `>=` or `:`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. The `:` operator can be used with string fields to match substrings. For non-string fields it is equivalent to the `=` operator. The `:*` comparison can be used to test whether a key has been defined. For example, to find all objects with `owner` label use: ``` labels.owner:* ``` You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ``` If you want to use a regular expression, use the `eq` (equal) or `ne` (not equal) operator against a single un-parenthesized expression with or without quotes or against multiple parenthesized expressions. Examples: `fieldname eq unquoted literal` `fieldname eq 'single quoted literal'` `fieldname eq "double quoted literal"` `(fieldname1 eq literal) (fieldname2 ne "literal")` The literal value is interpreted as a regular expression using Google RE2 library syntax. The literal value must match the entire field. For example, to filter for instances that do not end with name "instance", you would use `name ne .*instance`.
  optional string filter = 336120696;

  // The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)
  optional uint32 max_results = 54715419;

  // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported.
  optional string order_by = 160562920;

  // Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results.
  optional string page_token = 19994697;

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Opt-in for partial success behavior which provides partial results in case of failure. The default value is false.
  optional bool return_partial_success = 517198390;

}

// A request message for HealthChecks.List. See the method description for details.
message ListHealthChecksRequest {
  // A filter expression that filters resources listed in the response. Most Compute resources support two types of filter expressions: expressions that support regular expressions and expressions that follow API improvement proposal AIP-160. If you want to use AIP-160, your expression must specify the field name, an operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The operator must be either `=`, `!=`, `>`, `<`, `<=`, `>=` or `:`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. The `:` operator can be used with string fields to match substrings. For non-string fields it is equivalent to the `=` operator. The `:*` comparison can be used to test whether a key has been defined. For example, to find all objects with `owner` label use: ``` labels.owner:* ``` You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ``` If you want to use a regular expression, use the `eq` (equal) or `ne` (not equal) operator against a single un-parenthesized expression with or without quotes or against multiple parenthesized expressions. Examples: `fieldname eq unquoted literal` `fieldname eq 'single quoted literal'` `fieldname eq "double quoted literal"` `(fieldname1 eq literal) (fieldname2 ne "literal")` The literal value is interpreted as a regular expression using Google RE2 library syntax. The literal value must match the entire field. For example, to filter for instances that do not end with name "instance", you would use `name ne .*instance`.
  optional string filter = 336120696;

  // The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)
  optional uint32 max_results = 54715419;

  // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported.
  optional string order_by = 160562920;

  // Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results.
  optional string page_token = 19994697;

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Opt-in for partial success behavior which provides partial results in case of failure. The default value is false.
  optional bool return_partial_success = 517198390;

}

// A request message for Images.List. See the method description for details.
message ListImagesRequest {
  // A filter expression that filters resources listed in the response. Most Compute resources support two types of filter expressions: expressions that support regular expressions and expressions that follow API improvement proposal AIP-160. If you want to use AIP-160, your expression must specify the field name, an operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The operator must be either `=`, `!=`, `>`, `<`, `<=`, `>=` or `:`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. The `:` operator can be used with string fields to match substrings. For non-string fields it is equivalent to the `=` operator. The `:*` comparison can be used to test whether a key has been defined. For example, to find all objects with `owner` label use: ``` labels.owner:* ``` You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ``` If you want to use a regular expression, use the `eq` (equal) or `ne` (not equal) operator against a single un-parenthesized expression with or without quotes or against multiple parenthesized expressions. Examples: `fieldname eq unquoted literal` `fieldname eq 'single quoted literal'` `fieldname eq "double quoted literal"` `(fieldname1 eq literal) (fieldname2 ne "literal")` The literal value is interpreted as a regular expression using Google RE2 library syntax. The literal value must match the entire field. For example, to filter for instances that do not end with name "instance", you would use `name ne .*instance`.
  optional string filter = 336120696;

  // The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)
  optional uint32 max_results = 54715419;

  // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported.
  optional string order_by = 160562920;

  // Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results.
  optional string page_token = 19994697;

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Opt-in for partial success behavior which provides partial results in case of failure. The default value is false.
  optional bool return_partial_success = 517198390;

}

// A request message for InstanceGroupManagers.List. See the method description for details.
message ListInstanceGroupManagersRequest {
  // A filter expression that filters resources listed in the response. Most Compute resources support two types of filter expressions: expressions that support regular expressions and expressions that follow API improvement proposal AIP-160. If you want to use AIP-160, your expression must specify the field name, an operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The operator must be either `=`, `!=`, `>`, `<`, `<=`, `>=` or `:`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. The `:` operator can be used with string fields to match substrings. For non-string fields it is equivalent to the `=` operator. The `:*` comparison can be used to test whether a key has been defined. For example, to find all objects with `owner` label use: ``` labels.owner:* ``` You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ``` If you want to use a regular expression, use the `eq` (equal) or `ne` (not equal) operator against a single un-parenthesized expression with or without quotes or against multiple parenthesized expressions. Examples: `fieldname eq unquoted literal` `fieldname eq 'single quoted literal'` `fieldname eq "double quoted literal"` `(fieldname1 eq literal) (fieldname2 ne "literal")` The literal value is interpreted as a regular expression using Google RE2 library syntax. The literal value must match the entire field. For example, to filter for instances that do not end with name "instance", you would use `name ne .*instance`.
  optional string filter = 336120696;

  // The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)
  optional uint32 max_results = 54715419;

  // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported.
  optional string order_by = 160562920;

  // Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results.
  optional string page_token = 19994697;

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Opt-in for partial success behavior which provides partial results in case of failure. The default value is false.
  optional bool return_partial_success = 517198390;

  // The name of the zone where the managed instance group is located.
  string zone = 3744684 [(google.api.field_behavior) = REQUIRED];

}

// A request message for InstanceGroups.List. See the method description for details.
message ListInstanceGroupsRequest {
  // A filter expression that filters resources listed in the response. Most Compute resources support two types of filter expressions: expressions that support regular expressions and expressions that follow API improvement proposal AIP-160. If you want to use AIP-160, your expression must specify the field name, an operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The operator must be either `=`, `!=`, `>`, `<`, `<=`, `>=` or `:`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. The `:` operator can be used with string fields to match substrings. For non-string fields it is equivalent to the `=` operator. The `:*` comparison can be used to test whether a key has been defined. For example, to find all objects with `owner` label use: ``` labels.owner:* ``` You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ``` If you want to use a regular expression, use the `eq` (equal) or `ne` (not equal) operator against a single un-parenthesized expression with or without quotes or against multiple parenthesized expressions. Examples: `fieldname eq unquoted literal` `fieldname eq 'single quoted literal'` `fieldname eq "double quoted literal"` `(fieldname1 eq literal) (fieldname2 ne "literal")` The literal value is interpreted as a regular expression using Google RE2 library syntax. The literal value must match the entire field. For example, to filter for instances that do not end with name "instance", you would use `name ne .*instance`.
  optional string filter = 336120696;

  // The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)
  optional uint32 max_results = 54715419;

  // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported.
  optional string order_by = 160562920;

  // Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results.
  optional string page_token = 19994697;

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Opt-in for partial success behavior which provides partial results in case of failure. The default value is false.
  optional bool return_partial_success = 517198390;

  // The name of the zone where the instance group is located.
  string zone = 3744684 [(google.api.field_behavior) = REQUIRED];

}

// A request message for InstanceTemplates.List. See the method description for details.
message ListInstanceTemplatesRequest {
  // A filter expression that filters resources listed in the response. Most Compute resources support two types of filter expressions: expressions that support regular expressions and expressions that follow API improvement proposal AIP-160. If you want to use AIP-160, your expression must specify the field name, an operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The operator must be either `=`, `!=`, `>`, `<`, `<=`, `>=` or `:`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. The `:` operator can be used with string fields to match substrings. For non-string fields it is equivalent to the `=` operator. The `:*` comparison can be used to test whether a key has been defined. For example, to find all objects with `owner` label use: ``` labels.owner:* ``` You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ``` If you want to use a regular expression, use the `eq` (equal) or `ne` (not equal) operator against a single un-parenthesized expression with or without quotes or against multiple parenthesized expressions. Examples: `fieldname eq unquoted literal` `fieldname eq 'single quoted literal'` `fieldname eq "double quoted literal"` `(fieldname1 eq literal) (fieldname2 ne "literal")` The literal value is interpreted as a regular expression using Google RE2 library syntax. The literal value must match the entire field. For example, to filter for instances that do not end with name "instance", you would use `name ne .*instance`.
  optional string filter = 336120696;

  // The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)
  optional uint32 max_results = 54715419;

  // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported.
  optional string order_by = 160562920;

  // Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results.
  optional string page_token = 19994697;

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Opt-in for partial success behavior which provides partial results in case of failure. The default value is false.
  optional bool return_partial_success = 517198390;

}

// A request message for InstanceGroups.ListInstances. See the method description for details.
message ListInstancesInstanceGroupsRequest {
  // A filter expression that filters resources listed in the response. Most Compute resources support two types of filter expressions: expressions that support regular expressions and expressions that follow API improvement proposal AIP-160. If you want to use AIP-160, your expression must specify the field name, an operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The operator must be either `=`, `!=`, `>`, `<`, `<=`, `>=` or `:`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. The `:` operator can be used with string fields to match substrings. For non-string fields it is equivalent to the `=` operator. The `:*` comparison can be used to test whether a key has been defined. For example, to find all objects with `owner` label use: ``` labels.owner:* ``` You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ``` If you want to use a regular expression, use the `eq` (equal) or `ne` (not equal) operator against a single un-parenthesized expression with or without quotes or against multiple parenthesized expressions. Examples: `fieldname eq unquoted literal` `fieldname eq 'single quoted literal'` `fieldname eq "double quoted literal"` `(fieldname1 eq literal) (fieldname2 ne "literal")` The literal value is interpreted as a regular expression using Google RE2 library syntax. The literal value must match the entire field. For example, to filter for instances that do not end with name "instance", you would use `name ne .*instance`.
  optional string filter = 336120696;

  // The name of the instance group from which you want to generate a list of included instances.
  string instance_group = 81095253 [(google.api.field_behavior) = REQUIRED];

  // The body resource for this request
  InstanceGroupsListInstancesRequest instance_groups_list_instances_request_resource = 476255263 [(google.api.field_behavior) = REQUIRED];

  // The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)
  optional uint32 max_results = 54715419;

  // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported.
  optional string order_by = 160562920;

  // Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results.
  optional string page_token = 19994697;

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Opt-in for partial success behavior which provides partial results in case of failure. The default value is false.
  optional bool return_partial_success = 517198390;

  // The name of the zone where the instance group is located.
  string zone = 3744684 [(google.api.field_behavior) = REQUIRED];

}

// A request message for RegionInstanceGroups.ListInstances. See the method description for details.
message ListInstancesRegionInstanceGroupsRequest {
  // A filter expression that filters resources listed in the response. Most Compute resources support two types of filter expressions: expressions that support regular expressions and expressions that follow API improvement proposal AIP-160. If you want to use AIP-160, your expression must specify the field name, an operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The operator must be either `=`, `!=`, `>`, `<`, `<=`, `>=` or `:`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. The `:` operator can be used with string fields to match substrings. For non-string fields it is equivalent to the `=` operator. The `:*` comparison can be used to test whether a key has been defined. For example, to find all objects with `owner` label use: ``` labels.owner:* ``` You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ``` If you want to use a regular expression, use the `eq` (equal) or `ne` (not equal) operator against a single un-parenthesized expression with or without quotes or against multiple parenthesized expressions. Examples: `fieldname eq unquoted literal` `fieldname eq 'single quoted literal'` `fieldname eq "double quoted literal"` `(fieldname1 eq literal) (fieldname2 ne "literal")` The literal value is interpreted as a regular expression using Google RE2 library syntax. The literal value must match the entire field. For example, to filter for instances that do not end with name "instance", you would use `name ne .*instance`.
  optional string filter = 336120696;

  // Name of the regional instance group for which we want to list the instances.
  string instance_group = 81095253 [(google.api.field_behavior) = REQUIRED];

  // The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)
  optional uint32 max_results = 54715419;

  // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported.
  optional string order_by = 160562920;

  // Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results.
  optional string page_token = 19994697;

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Name of the region scoping this request.
  string region = 138946292 [(google.api.field_behavior) = REQUIRED];

  // The body resource for this request
  RegionInstanceGroupsListInstancesRequest region_instance_groups_list_instances_request_resource = 48239828 [(google.api.field_behavior) = REQUIRED];

  // Opt-in for partial success behavior which provides partial results in case of failure. The default value is false.
  optional bool return_partial_success = 517198390;

}

// A request message for Instances.List. See the method description for details.
message ListInstancesRequest {
  // A filter expression that filters resources listed in the response. Most Compute resources support two types of filter expressions: expressions that support regular expressions and expressions that follow API improvement proposal AIP-160. If you want to use AIP-160, your expression must specify the field name, an operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The operator must be either `=`, `!=`, `>`, `<`, `<=`, `>=` or `:`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. The `:` operator can be used with string fields to match substrings. For non-string fields it is equivalent to the `=` operator. The `:*` comparison can be used to test whether a key has been defined. For example, to find all objects with `owner` label use: ``` labels.owner:* ``` You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ``` If you want to use a regular expression, use the `eq` (equal) or `ne` (not equal) operator against a single un-parenthesized expression with or without quotes or against multiple parenthesized expressions. Examples: `fieldname eq unquoted literal` `fieldname eq 'single quoted literal'` `fieldname eq "double quoted literal"` `(fieldname1 eq literal) (fieldname2 ne "literal")` The literal value is interpreted as a regular expression using Google RE2 library syntax. The literal value must match the entire field. For example, to filter for instances that do not end with name "instance", you would use `name ne .*instance`.
  optional string filter = 336120696;

  // The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)
  optional uint32 max_results = 54715419;

  // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported.
  optional string order_by = 160562920;

  // Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results.
  optional string page_token = 19994697;

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Opt-in for partial success behavior which provides partial results in case of failure. The default value is false.
  optional bool return_partial_success = 517198390;

  // The name of the zone for this request.
  string zone = 3744684 [(google.api.field_behavior) = REQUIRED];

}

// A request message for InterconnectAttachments.List. See the method description for details.
message ListInterconnectAttachmentsRequest {
  // A filter expression that filters resources listed in the response. Most Compute resources support two types of filter expressions: expressions that support regular expressions and expressions that follow API improvement proposal AIP-160. If you want to use AIP-160, your expression must specify the field name, an operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The operator must be either `=`, `!=`, `>`, `<`, `<=`, `>=` or `:`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. The `:` operator can be used with string fields to match substrings. For non-string fields it is equivalent to the `=` operator. The `:*` comparison can be used to test whether a key has been defined. For example, to find all objects with `owner` label use: ``` labels.owner:* ``` You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ``` If you want to use a regular expression, use the `eq` (equal) or `ne` (not equal) operator against a single un-parenthesized expression with or without quotes or against multiple parenthesized expressions. Examples: `fieldname eq unquoted literal` `fieldname eq 'single quoted literal'` `fieldname eq "double quoted literal"` `(fieldname1 eq literal) (fieldname2 ne "literal")` The literal value is interpreted as a regular expression using Google RE2 library syntax. The literal value must match the entire field. For example, to filter for instances that do not end with name "instance", you would use `name ne .*instance`.
  optional string filter = 336120696;

  // The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)
  optional uint32 max_results = 54715419;

  // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported.
  optional string order_by = 160562920;

  // Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results.
  optional string page_token = 19994697;

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Name of the region for this request.
  string region = 138946292 [(google.api.field_behavior) = REQUIRED];

  // Opt-in for partial success behavior which provides partial results in case of failure. The default value is false.
  optional bool return_partial_success = 517198390;

}

// A request message for InterconnectLocations.List. See the method description for details.
message ListInterconnectLocationsRequest {
  // A filter expression that filters resources listed in the response. Most Compute resources support two types of filter expressions: expressions that support regular expressions and expressions that follow API improvement proposal AIP-160. If you want to use AIP-160, your expression must specify the field name, an operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The operator must be either `=`, `!=`, `>`, `<`, `<=`, `>=` or `:`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. The `:` operator can be used with string fields to match substrings. For non-string fields it is equivalent to the `=` operator. The `:*` comparison can be used to test whether a key has been defined. For example, to find all objects with `owner` label use: ``` labels.owner:* ``` You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ``` If you want to use a regular expression, use the `eq` (equal) or `ne` (not equal) operator against a single un-parenthesized expression with or without quotes or against multiple parenthesized expressions. Examples: `fieldname eq unquoted literal` `fieldname eq 'single quoted literal'` `fieldname eq "double quoted literal"` `(fieldname1 eq literal) (fieldname2 ne "literal")` The literal value is interpreted as a regular expression using Google RE2 library syntax. The literal value must match the entire field. For example, to filter for instances that do not end with name "instance", you would use `name ne .*instance`.
  optional string filter = 336120696;

  // The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)
  optional uint32 max_results = 54715419;

  // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported.
  optional string order_by = 160562920;

  // Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results.
  optional string page_token = 19994697;

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Opt-in for partial success behavior which provides partial results in case of failure. The default value is false.
  optional bool return_partial_success = 517198390;

}

// A request message for Interconnects.List. See the method description for details.
message ListInterconnectsRequest {
  // A filter expression that filters resources listed in the response. Most Compute resources support two types of filter expressions: expressions that support regular expressions and expressions that follow API improvement proposal AIP-160. If you want to use AIP-160, your expression must specify the field name, an operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The operator must be either `=`, `!=`, `>`, `<`, `<=`, `>=` or `:`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. The `:` operator can be used with string fields to match substrings. For non-string fields it is equivalent to the `=` operator. The `:*` comparison can be used to test whether a key has been defined. For example, to find all objects with `owner` label use: ``` labels.owner:* ``` You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ``` If you want to use a regular expression, use the `eq` (equal) or `ne` (not equal) operator against a single un-parenthesized expression with or without quotes or against multiple parenthesized expressions. Examples: `fieldname eq unquoted literal` `fieldname eq 'single quoted literal'` `fieldname eq "double quoted literal"` `(fieldname1 eq literal) (fieldname2 ne "literal")` The literal value is interpreted as a regular expression using Google RE2 library syntax. The literal value must match the entire field. For example, to filter for instances that do not end with name "instance", you would use `name ne .*instance`.
  optional string filter = 336120696;

  // The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)
  optional uint32 max_results = 54715419;

  // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported.
  optional string order_by = 160562920;

  // Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results.
  optional string page_token = 19994697;

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Opt-in for partial success behavior which provides partial results in case of failure. The default value is false.
  optional bool return_partial_success = 517198390;

}

// A request message for Licenses.List. See the method description for details.
message ListLicensesRequest {
  // A filter expression that filters resources listed in the response. Most Compute resources support two types of filter expressions: expressions that support regular expressions and expressions that follow API improvement proposal AIP-160. If you want to use AIP-160, your expression must specify the field name, an operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The operator must be either `=`, `!=`, `>`, `<`, `<=`, `>=` or `:`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. The `:` operator can be used with string fields to match substrings. For non-string fields it is equivalent to the `=` operator. The `:*` comparison can be used to test whether a key has been defined. For example, to find all objects with `owner` label use: ``` labels.owner:* ``` You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ``` If you want to use a regular expression, use the `eq` (equal) or `ne` (not equal) operator against a single un-parenthesized expression with or without quotes or against multiple parenthesized expressions. Examples: `fieldname eq unquoted literal` `fieldname eq 'single quoted literal'` `fieldname eq "double quoted literal"` `(fieldname1 eq literal) (fieldname2 ne "literal")` The literal value is interpreted as a regular expression using Google RE2 library syntax. The literal value must match the entire field. For example, to filter for instances that do not end with name "instance", you would use `name ne .*instance`.
  optional string filter = 336120696;

  // The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)
  optional uint32 max_results = 54715419;

  // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported.
  optional string order_by = 160562920;

  // Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results.
  optional string page_token = 19994697;

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Opt-in for partial success behavior which provides partial results in case of failure. The default value is false.
  optional bool return_partial_success = 517198390;

}

// A request message for MachineImages.List. See the method description for details.
message ListMachineImagesRequest {
  // A filter expression that filters resources listed in the response. Most Compute resources support two types of filter expressions: expressions that support regular expressions and expressions that follow API improvement proposal AIP-160. If you want to use AIP-160, your expression must specify the field name, an operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The operator must be either `=`, `!=`, `>`, `<`, `<=`, `>=` or `:`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. The `:` operator can be used with string fields to match substrings. For non-string fields it is equivalent to the `=` operator. The `:*` comparison can be used to test whether a key has been defined. For example, to find all objects with `owner` label use: ``` labels.owner:* ``` You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ``` If you want to use a regular expression, use the `eq` (equal) or `ne` (not equal) operator against a single un-parenthesized expression with or without quotes or against multiple parenthesized expressions. Examples: `fieldname eq unquoted literal` `fieldname eq 'single quoted literal'` `fieldname eq "double quoted literal"` `(fieldname1 eq literal) (fieldname2 ne "literal")` The literal value is interpreted as a regular expression using Google RE2 library syntax. The literal value must match the entire field. For example, to filter for instances that do not end with name "instance", you would use `name ne .*instance`.
  optional string filter = 336120696;

  // The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)
  optional uint32 max_results = 54715419;

  // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported.
  optional string order_by = 160562920;

  // Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results.
  optional string page_token = 19994697;

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Opt-in for partial success behavior which provides partial results in case of failure. The default value is false.
  optional bool return_partial_success = 517198390;

}

// A request message for MachineTypes.List. See the method description for details.
message ListMachineTypesRequest {
  // A filter expression that filters resources listed in the response. Most Compute resources support two types of filter expressions: expressions that support regular expressions and expressions that follow API improvement proposal AIP-160. If you want to use AIP-160, your expression must specify the field name, an operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The operator must be either `=`, `!=`, `>`, `<`, `<=`, `>=` or `:`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. The `:` operator can be used with string fields to match substrings. For non-string fields it is equivalent to the `=` operator. The `:*` comparison can be used to test whether a key has been defined. For example, to find all objects with `owner` label use: ``` labels.owner:* ``` You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ``` If you want to use a regular expression, use the `eq` (equal) or `ne` (not equal) operator against a single un-parenthesized expression with or without quotes or against multiple parenthesized expressions. Examples: `fieldname eq unquoted literal` `fieldname eq 'single quoted literal'` `fieldname eq "double quoted literal"` `(fieldname1 eq literal) (fieldname2 ne "literal")` The literal value is interpreted as a regular expression using Google RE2 library syntax. The literal value must match the entire field. For example, to filter for instances that do not end with name "instance", you would use `name ne .*instance`.
  optional string filter = 336120696;

  // The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)
  optional uint32 max_results = 54715419;

  // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported.
  optional string order_by = 160562920;

  // Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results.
  optional string page_token = 19994697;

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Opt-in for partial success behavior which provides partial results in case of failure. The default value is false.
  optional bool return_partial_success = 517198390;

  // The name of the zone for this request.
  string zone = 3744684 [(google.api.field_behavior) = REQUIRED];

}

// A request message for InstanceGroupManagers.ListManagedInstances. See the method description for details.
message ListManagedInstancesInstanceGroupManagersRequest {
  // A filter expression that filters resources listed in the response. Most Compute resources support two types of filter expressions: expressions that support regular expressions and expressions that follow API improvement proposal AIP-160. If you want to use AIP-160, your expression must specify the field name, an operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The operator must be either `=`, `!=`, `>`, `<`, `<=`, `>=` or `:`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. The `:` operator can be used with string fields to match substrings. For non-string fields it is equivalent to the `=` operator. The `:*` comparison can be used to test whether a key has been defined. For example, to find all objects with `owner` label use: ``` labels.owner:* ``` You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ``` If you want to use a regular expression, use the `eq` (equal) or `ne` (not equal) operator against a single un-parenthesized expression with or without quotes or against multiple parenthesized expressions. Examples: `fieldname eq unquoted literal` `fieldname eq 'single quoted literal'` `fieldname eq "double quoted literal"` `(fieldname1 eq literal) (fieldname2 ne "literal")` The literal value is interpreted as a regular expression using Google RE2 library syntax. The literal value must match the entire field. For example, to filter for instances that do not end with name "instance", you would use `name ne .*instance`.
  optional string filter = 336120696;

  // The name of the managed instance group.
  string instance_group_manager = 249363395 [(google.api.field_behavior) = REQUIRED];

  // The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)
  optional uint32 max_results = 54715419;

  // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported.
  optional string order_by = 160562920;

  // Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results.
  optional string page_token = 19994697;

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Opt-in for partial success behavior which provides partial results in case of failure. The default value is false.
  optional bool return_partial_success = 517198390;

  // The name of the zone where the managed instance group is located.
  string zone = 3744684 [(google.api.field_behavior) = REQUIRED];

}

// A request message for RegionInstanceGroupManagers.ListManagedInstances. See the method description for details.
message ListManagedInstancesRegionInstanceGroupManagersRequest {
  // A filter expression that filters resources listed in the response. Most Compute resources support two types of filter expressions: expressions that support regular expressions and expressions that follow API improvement proposal AIP-160. If you want to use AIP-160, your expression must specify the field name, an operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The operator must be either `=`, `!=`, `>`, `<`, `<=`, `>=` or `:`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. The `:` operator can be used with string fields to match substrings. For non-string fields it is equivalent to the `=` operator. The `:*` comparison can be used to test whether a key has been defined. For example, to find all objects with `owner` label use: ``` labels.owner:* ``` You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ``` If you want to use a regular expression, use the `eq` (equal) or `ne` (not equal) operator against a single un-parenthesized expression with or without quotes or against multiple parenthesized expressions. Examples: `fieldname eq unquoted literal` `fieldname eq 'single quoted literal'` `fieldname eq "double quoted literal"` `(fieldname1 eq literal) (fieldname2 ne "literal")` The literal value is interpreted as a regular expression using Google RE2 library syntax. The literal value must match the entire field. For example, to filter for instances that do not end with name "instance", you would use `name ne .*instance`.
  optional string filter = 336120696;

  // The name of the managed instance group.
  string instance_group_manager = 249363395 [(google.api.field_behavior) = REQUIRED];

  // The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)
  optional uint32 max_results = 54715419;

  // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported.
  optional string order_by = 160562920;

  // Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results.
  optional string page_token = 19994697;

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Name of the region scoping this request.
  string region = 138946292 [(google.api.field_behavior) = REQUIRED];

  // Opt-in for partial success behavior which provides partial results in case of failure. The default value is false.
  optional bool return_partial_success = 517198390;

}

// A request message for NetworkAttachments.List. See the method description for details.
message ListNetworkAttachmentsRequest {
  // A filter expression that filters resources listed in the response. Most Compute resources support two types of filter expressions: expressions that support regular expressions and expressions that follow API improvement proposal AIP-160. If you want to use AIP-160, your expression must specify the field name, an operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The operator must be either `=`, `!=`, `>`, `<`, `<=`, `>=` or `:`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. The `:` operator can be used with string fields to match substrings. For non-string fields it is equivalent to the `=` operator. The `:*` comparison can be used to test whether a key has been defined. For example, to find all objects with `owner` label use: ``` labels.owner:* ``` You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ``` If you want to use a regular expression, use the `eq` (equal) or `ne` (not equal) operator against a single un-parenthesized expression with or without quotes or against multiple parenthesized expressions. Examples: `fieldname eq unquoted literal` `fieldname eq 'single quoted literal'` `fieldname eq "double quoted literal"` `(fieldname1 eq literal) (fieldname2 ne "literal")` The literal value is interpreted as a regular expression using Google RE2 library syntax. The literal value must match the entire field. For example, to filter for instances that do not end with name "instance", you would use `name ne .*instance`.
  optional string filter = 336120696;

  // The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)
  optional uint32 max_results = 54715419;

  // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported.
  optional string order_by = 160562920;

  // Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results.
  optional string page_token = 19994697;

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Name of the region of this request.
  string region = 138946292 [(google.api.field_behavior) = REQUIRED];

  // Opt-in for partial success behavior which provides partial results in case of failure. The default value is false.
  optional bool return_partial_success = 517198390;

}

// A request message for NetworkEndpointGroups.List. See the method description for details.
message ListNetworkEndpointGroupsRequest {
  // A filter expression that filters resources listed in the response. Most Compute resources support two types of filter expressions: expressions that support regular expressions and expressions that follow API improvement proposal AIP-160. If you want to use AIP-160, your expression must specify the field name, an operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The operator must be either `=`, `!=`, `>`, `<`, `<=`, `>=` or `:`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. The `:` operator can be used with string fields to match substrings. For non-string fields it is equivalent to the `=` operator. The `:*` comparison can be used to test whether a key has been defined. For example, to find all objects with `owner` label use: ``` labels.owner:* ``` You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ``` If you want to use a regular expression, use the `eq` (equal) or `ne` (not equal) operator against a single un-parenthesized expression with or without quotes or against multiple parenthesized expressions. Examples: `fieldname eq unquoted literal` `fieldname eq 'single quoted literal'` `fieldname eq "double quoted literal"` `(fieldname1 eq literal) (fieldname2 ne "literal")` The literal value is interpreted as a regular expression using Google RE2 library syntax. The literal value must match the entire field. For example, to filter for instances that do not end with name "instance", you would use `name ne .*instance`.
  optional string filter = 336120696;

  // The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)
  optional uint32 max_results = 54715419;

  // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported.
  optional string order_by = 160562920;

  // Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results.
  optional string page_token = 19994697;

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Opt-in for partial success behavior which provides partial results in case of failure. The default value is false.
  optional bool return_partial_success = 517198390;

  // The name of the zone where the network endpoint group is located. It should comply with RFC1035.
  string zone = 3744684 [(google.api.field_behavior) = REQUIRED];

}

// A request message for GlobalNetworkEndpointGroups.ListNetworkEndpoints. See the method description for details.
message ListNetworkEndpointsGlobalNetworkEndpointGroupsRequest {
  // A filter expression that filters resources listed in the response. Most Compute resources support two types of filter expressions: expressions that support regular expressions and expressions that follow API improvement proposal AIP-160. If you want to use AIP-160, your expression must specify the field name, an operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The operator must be either `=`, `!=`, `>`, `<`, `<=`, `>=` or `:`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. The `:` operator can be used with string fields to match substrings. For non-string fields it is equivalent to the `=` operator. The `:*` comparison can be used to test whether a key has been defined. For example, to find all objects with `owner` label use: ``` labels.owner:* ``` You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ``` If you want to use a regular expression, use the `eq` (equal) or `ne` (not equal) operator against a single un-parenthesized expression with or without quotes or against multiple parenthesized expressions. Examples: `fieldname eq unquoted literal` `fieldname eq 'single quoted literal'` `fieldname eq "double quoted literal"` `(fieldname1 eq literal) (fieldname2 ne "literal")` The literal value is interpreted as a regular expression using Google RE2 library syntax. The literal value must match the entire field. For example, to filter for instances that do not end with name "instance", you would use `name ne .*instance`.
  optional string filter = 336120696;

  // The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)
  optional uint32 max_results = 54715419;

  // The name of the network endpoint group from which you want to generate a list of included network endpoints. It should comply with RFC1035.
  string network_endpoint_group = 433907078 [(google.api.field_behavior) = REQUIRED];

  // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported.
  optional string order_by = 160562920;

  // Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results.
  optional string page_token = 19994697;

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Opt-in for partial success behavior which provides partial results in case of failure. The default value is false.
  optional bool return_partial_success = 517198390;

}

// A request message for NetworkEndpointGroups.ListNetworkEndpoints. See the method description for details.
message ListNetworkEndpointsNetworkEndpointGroupsRequest {
  // A filter expression that filters resources listed in the response. Most Compute resources support two types of filter expressions: expressions that support regular expressions and expressions that follow API improvement proposal AIP-160. If you want to use AIP-160, your expression must specify the field name, an operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The operator must be either `=`, `!=`, `>`, `<`, `<=`, `>=` or `:`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. The `:` operator can be used with string fields to match substrings. For non-string fields it is equivalent to the `=` operator. The `:*` comparison can be used to test whether a key has been defined. For example, to find all objects with `owner` label use: ``` labels.owner:* ``` You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ``` If you want to use a regular expression, use the `eq` (equal) or `ne` (not equal) operator against a single un-parenthesized expression with or without quotes or against multiple parenthesized expressions. Examples: `fieldname eq unquoted literal` `fieldname eq 'single quoted literal'` `fieldname eq "double quoted literal"` `(fieldname1 eq literal) (fieldname2 ne "literal")` The literal value is interpreted as a regular expression using Google RE2 library syntax. The literal value must match the entire field. For example, to filter for instances that do not end with name "instance", you would use `name ne .*instance`.
  optional string filter = 336120696;

  // The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)
  optional uint32 max_results = 54715419;

  // The name of the network endpoint group from which you want to generate a list of included network endpoints. It should comply with RFC1035.
  string network_endpoint_group = 433907078 [(google.api.field_behavior) = REQUIRED];

  // The body resource for this request
  NetworkEndpointGroupsListEndpointsRequest network_endpoint_groups_list_endpoints_request_resource = 59493390 [(google.api.field_behavior) = REQUIRED];

  // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported.
  optional string order_by = 160562920;

  // Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results.
  optional string page_token = 19994697;

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Opt-in for partial success behavior which provides partial results in case of failure. The default value is false.
  optional bool return_partial_success = 517198390;

  // The name of the zone where the network endpoint group is located. It should comply with RFC1035.
  string zone = 3744684 [(google.api.field_behavior) = REQUIRED];

}

// A request message for NetworkFirewallPolicies.List. See the method description for details.
message ListNetworkFirewallPoliciesRequest {
  // A filter expression that filters resources listed in the response. Most Compute resources support two types of filter expressions: expressions that support regular expressions and expressions that follow API improvement proposal AIP-160. If you want to use AIP-160, your expression must specify the field name, an operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The operator must be either `=`, `!=`, `>`, `<`, `<=`, `>=` or `:`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. The `:` operator can be used with string fields to match substrings. For non-string fields it is equivalent to the `=` operator. The `:*` comparison can be used to test whether a key has been defined. For example, to find all objects with `owner` label use: ``` labels.owner:* ``` You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ``` If you want to use a regular expression, use the `eq` (equal) or `ne` (not equal) operator against a single un-parenthesized expression with or without quotes or against multiple parenthesized expressions. Examples: `fieldname eq unquoted literal` `fieldname eq 'single quoted literal'` `fieldname eq "double quoted literal"` `(fieldname1 eq literal) (fieldname2 ne "literal")` The literal value is interpreted as a regular expression using Google RE2 library syntax. The literal value must match the entire field. For example, to filter for instances that do not end with name "instance", you would use `name ne .*instance`.
  optional string filter = 336120696;

  // The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)
  optional uint32 max_results = 54715419;

  // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported.
  optional string order_by = 160562920;

  // Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results.
  optional string page_token = 19994697;

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Opt-in for partial success behavior which provides partial results in case of failure. The default value is false.
  optional bool return_partial_success = 517198390;

}

// A request message for Networks.List. See the method description for details.
message ListNetworksRequest {
  // A filter expression that filters resources listed in the response. Most Compute resources support two types of filter expressions: expressions that support regular expressions and expressions that follow API improvement proposal AIP-160. If you want to use AIP-160, your expression must specify the field name, an operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The operator must be either `=`, `!=`, `>`, `<`, `<=`, `>=` or `:`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. The `:` operator can be used with string fields to match substrings. For non-string fields it is equivalent to the `=` operator. The `:*` comparison can be used to test whether a key has been defined. For example, to find all objects with `owner` label use: ``` labels.owner:* ``` You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ``` If you want to use a regular expression, use the `eq` (equal) or `ne` (not equal) operator against a single un-parenthesized expression with or without quotes or against multiple parenthesized expressions. Examples: `fieldname eq unquoted literal` `fieldname eq 'single quoted literal'` `fieldname eq "double quoted literal"` `(fieldname1 eq literal) (fieldname2 ne "literal")` The literal value is interpreted as a regular expression using Google RE2 library syntax. The literal value must match the entire field. For example, to filter for instances that do not end with name "instance", you would use `name ne .*instance`.
  optional string filter = 336120696;

  // The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)
  optional uint32 max_results = 54715419;

  // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported.
  optional string order_by = 160562920;

  // Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results.
  optional string page_token = 19994697;

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Opt-in for partial success behavior which provides partial results in case of failure. The default value is false.
  optional bool return_partial_success = 517198390;

}

// A request message for NodeGroups.List. See the method description for details.
message ListNodeGroupsRequest {
  // A filter expression that filters resources listed in the response. Most Compute resources support two types of filter expressions: expressions that support regular expressions and expressions that follow API improvement proposal AIP-160. If you want to use AIP-160, your expression must specify the field name, an operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The operator must be either `=`, `!=`, `>`, `<`, `<=`, `>=` or `:`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. The `:` operator can be used with string fields to match substrings. For non-string fields it is equivalent to the `=` operator. The `:*` comparison can be used to test whether a key has been defined. For example, to find all objects with `owner` label use: ``` labels.owner:* ``` You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ``` If you want to use a regular expression, use the `eq` (equal) or `ne` (not equal) operator against a single un-parenthesized expression with or without quotes or against multiple parenthesized expressions. Examples: `fieldname eq unquoted literal` `fieldname eq 'single quoted literal'` `fieldname eq "double quoted literal"` `(fieldname1 eq literal) (fieldname2 ne "literal")` The literal value is interpreted as a regular expression using Google RE2 library syntax. The literal value must match the entire field. For example, to filter for instances that do not end with name "instance", you would use `name ne .*instance`.
  optional string filter = 336120696;

  // The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)
  optional uint32 max_results = 54715419;

  // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported.
  optional string order_by = 160562920;

  // Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results.
  optional string page_token = 19994697;

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Opt-in for partial success behavior which provides partial results in case of failure. The default value is false.
  optional bool return_partial_success = 517198390;

  // The name of the zone for this request.
  string zone = 3744684 [(google.api.field_behavior) = REQUIRED];

}

// A request message for NodeTemplates.List. See the method description for details.
message ListNodeTemplatesRequest {
  // A filter expression that filters resources listed in the response. Most Compute resources support two types of filter expressions: expressions that support regular expressions and expressions that follow API improvement proposal AIP-160. If you want to use AIP-160, your expression must specify the field name, an operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The operator must be either `=`, `!=`, `>`, `<`, `<=`, `>=` or `:`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. The `:` operator can be used with string fields to match substrings. For non-string fields it is equivalent to the `=` operator. The `:*` comparison can be used to test whether a key has been defined. For example, to find all objects with `owner` label use: ``` labels.owner:* ``` You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ``` If you want to use a regular expression, use the `eq` (equal) or `ne` (not equal) operator against a single un-parenthesized expression with or without quotes or against multiple parenthesized expressions. Examples: `fieldname eq unquoted literal` `fieldname eq 'single quoted literal'` `fieldname eq "double quoted literal"` `(fieldname1 eq literal) (fieldname2 ne "literal")` The literal value is interpreted as a regular expression using Google RE2 library syntax. The literal value must match the entire field. For example, to filter for instances that do not end with name "instance", you would use `name ne .*instance`.
  optional string filter = 336120696;

  // The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)
  optional uint32 max_results = 54715419;

  // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported.
  optional string order_by = 160562920;

  // Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results.
  optional string page_token = 19994697;

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // The name of the region for this request.
  string region = 138946292 [(google.api.field_behavior) = REQUIRED];

  // Opt-in for partial success behavior which provides partial results in case of failure. The default value is false.
  optional bool return_partial_success = 517198390;

}

// A request message for NodeTypes.List. See the method description for details.
message ListNodeTypesRequest {
  // A filter expression that filters resources listed in the response. Most Compute resources support two types of filter expressions: expressions that support regular expressions and expressions that follow API improvement proposal AIP-160. If you want to use AIP-160, your expression must specify the field name, an operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The operator must be either `=`, `!=`, `>`, `<`, `<=`, `>=` or `:`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. The `:` operator can be used with string fields to match substrings. For non-string fields it is equivalent to the `=` operator. The `:*` comparison can be used to test whether a key has been defined. For example, to find all objects with `owner` label use: ``` labels.owner:* ``` You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ``` If you want to use a regular expression, use the `eq` (equal) or `ne` (not equal) operator against a single un-parenthesized expression with or without quotes or against multiple parenthesized expressions. Examples: `fieldname eq unquoted literal` `fieldname eq 'single quoted literal'` `fieldname eq "double quoted literal"` `(fieldname1 eq literal) (fieldname2 ne "literal")` The literal value is interpreted as a regular expression using Google RE2 library syntax. The literal value must match the entire field. For example, to filter for instances that do not end with name "instance", you would use `name ne .*instance`.
  optional string filter = 336120696;

  // The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)
  optional uint32 max_results = 54715419;

  // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported.
  optional string order_by = 160562920;

  // Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results.
  optional string page_token = 19994697;

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Opt-in for partial success behavior which provides partial results in case of failure. The default value is false.
  optional bool return_partial_success = 517198390;

  // The name of the zone for this request.
  string zone = 3744684 [(google.api.field_behavior) = REQUIRED];

}

// A request message for NodeGroups.ListNodes. See the method description for details.
message ListNodesNodeGroupsRequest {
  // A filter expression that filters resources listed in the response. Most Compute resources support two types of filter expressions: expressions that support regular expressions and expressions that follow API improvement proposal AIP-160. If you want to use AIP-160, your expression must specify the field name, an operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The operator must be either `=`, `!=`, `>`, `<`, `<=`, `>=` or `:`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. The `:` operator can be used with string fields to match substrings. For non-string fields it is equivalent to the `=` operator. The `:*` comparison can be used to test whether a key has been defined. For example, to find all objects with `owner` label use: ``` labels.owner:* ``` You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ``` If you want to use a regular expression, use the `eq` (equal) or `ne` (not equal) operator against a single un-parenthesized expression with or without quotes or against multiple parenthesized expressions. Examples: `fieldname eq unquoted literal` `fieldname eq 'single quoted literal'` `fieldname eq "double quoted literal"` `(fieldname1 eq literal) (fieldname2 ne "literal")` The literal value is interpreted as a regular expression using Google RE2 library syntax. The literal value must match the entire field. For example, to filter for instances that do not end with name "instance", you would use `name ne .*instance`.
  optional string filter = 336120696;

  // The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)
  optional uint32 max_results = 54715419;

  // Name of the NodeGroup resource whose nodes you want to list.
  string node_group = 469958146 [(google.api.field_behavior) = REQUIRED];

  // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported.
  optional string order_by = 160562920;

  // Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results.
  optional string page_token = 19994697;

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Opt-in for partial success behavior which provides partial results in case of failure. The default value is false.
  optional bool return_partial_success = 517198390;

  // The name of the zone for this request.
  string zone = 3744684 [(google.api.field_behavior) = REQUIRED];

}

// A request message for PacketMirrorings.List. See the method description for details.
message ListPacketMirroringsRequest {
  // A filter expression that filters resources listed in the response. Most Compute resources support two types of filter expressions: expressions that support regular expressions and expressions that follow API improvement proposal AIP-160. If you want to use AIP-160, your expression must specify the field name, an operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The operator must be either `=`, `!=`, `>`, `<`, `<=`, `>=` or `:`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. The `:` operator can be used with string fields to match substrings. For non-string fields it is equivalent to the `=` operator. The `:*` comparison can be used to test whether a key has been defined. For example, to find all objects with `owner` label use: ``` labels.owner:* ``` You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ``` If you want to use a regular expression, use the `eq` (equal) or `ne` (not equal) operator against a single un-parenthesized expression with or without quotes or against multiple parenthesized expressions. Examples: `fieldname eq unquoted literal` `fieldname eq 'single quoted literal'` `fieldname eq "double quoted literal"` `(fieldname1 eq literal) (fieldname2 ne "literal")` The literal value is interpreted as a regular expression using Google RE2 library syntax. The literal value must match the entire field. For example, to filter for instances that do not end with name "instance", you would use `name ne .*instance`.
  optional string filter = 336120696;

  // The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)
  optional uint32 max_results = 54715419;

  // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported.
  optional string order_by = 160562920;

  // Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results.
  optional string page_token = 19994697;

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Name of the region for this request.
  string region = 138946292 [(google.api.field_behavior) = REQUIRED];

  // Opt-in for partial success behavior which provides partial results in case of failure. The default value is false.
  optional bool return_partial_success = 517198390;

}

// A request message for Networks.ListPeeringRoutes. See the method description for details.
message ListPeeringRoutesNetworksRequest {
  // The direction of the exchanged routes.
  enum Direction {
    // A value indicating that the enum field is not set.
    UNDEFINED_DIRECTION = 0;

    // For routes exported from peer network.
    INCOMING = 338552870;

    // For routes exported from local network.
    OUTGOING = 307438444;

  }

  // The direction of the exchanged routes.
  // Check the Direction enum for the list of possible values.
  optional string direction = 111150975;

  // A filter expression that filters resources listed in the response. Most Compute resources support two types of filter expressions: expressions that support regular expressions and expressions that follow API improvement proposal AIP-160. If you want to use AIP-160, your expression must specify the field name, an operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The operator must be either `=`, `!=`, `>`, `<`, `<=`, `>=` or `:`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. The `:` operator can be used with string fields to match substrings. For non-string fields it is equivalent to the `=` operator. The `:*` comparison can be used to test whether a key has been defined. For example, to find all objects with `owner` label use: ``` labels.owner:* ``` You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ``` If you want to use a regular expression, use the `eq` (equal) or `ne` (not equal) operator against a single un-parenthesized expression with or without quotes or against multiple parenthesized expressions. Examples: `fieldname eq unquoted literal` `fieldname eq 'single quoted literal'` `fieldname eq "double quoted literal"` `(fieldname1 eq literal) (fieldname2 ne "literal")` The literal value is interpreted as a regular expression using Google RE2 library syntax. The literal value must match the entire field. For example, to filter for instances that do not end with name "instance", you would use `name ne .*instance`.
  optional string filter = 336120696;

  // The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)
  optional uint32 max_results = 54715419;

  // Name of the network for this request.
  string network = 232872494 [(google.api.field_behavior) = REQUIRED];

  // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported.
  optional string order_by = 160562920;

  // Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results.
  optional string page_token = 19994697;

  // The response will show routes exchanged over the given peering connection.
  optional string peering_name = 249571370;

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // The region of the request. The response will include all subnet routes, static routes and dynamic routes in the region.
  optional string region = 138946292;

  // Opt-in for partial success behavior which provides partial results in case of failure. The default value is false.
  optional bool return_partial_success = 517198390;

}

// A request message for InstanceGroupManagers.ListPerInstanceConfigs. See the method description for details.
message ListPerInstanceConfigsInstanceGroupManagersRequest {
  // A filter expression that filters resources listed in the response. Most Compute resources support two types of filter expressions: expressions that support regular expressions and expressions that follow API improvement proposal AIP-160. If you want to use AIP-160, your expression must specify the field name, an operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The operator must be either `=`, `!=`, `>`, `<`, `<=`, `>=` or `:`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. The `:` operator can be used with string fields to match substrings. For non-string fields it is equivalent to the `=` operator. The `:*` comparison can be used to test whether a key has been defined. For example, to find all objects with `owner` label use: ``` labels.owner:* ``` You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ``` If you want to use a regular expression, use the `eq` (equal) or `ne` (not equal) operator against a single un-parenthesized expression with or without quotes or against multiple parenthesized expressions. Examples: `fieldname eq unquoted literal` `fieldname eq 'single quoted literal'` `fieldname eq "double quoted literal"` `(fieldname1 eq literal) (fieldname2 ne "literal")` The literal value is interpreted as a regular expression using Google RE2 library syntax. The literal value must match the entire field. For example, to filter for instances that do not end with name "instance", you would use `name ne .*instance`.
  optional string filter = 336120696;

  // The name of the managed instance group. It should conform to RFC1035.
  string instance_group_manager = 249363395 [(google.api.field_behavior) = REQUIRED];

  // The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)
  optional uint32 max_results = 54715419;

  // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported.
  optional string order_by = 160562920;

  // Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results.
  optional string page_token = 19994697;

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Opt-in for partial success behavior which provides partial results in case of failure. The default value is false.
  optional bool return_partial_success = 517198390;

  // The name of the zone where the managed instance group is located. It should conform to RFC1035.
  string zone = 3744684 [(google.api.field_behavior) = REQUIRED];

}

// A request message for RegionInstanceGroupManagers.ListPerInstanceConfigs. See the method description for details.
message ListPerInstanceConfigsRegionInstanceGroupManagersRequest {
  // A filter expression that filters resources listed in the response. Most Compute resources support two types of filter expressions: expressions that support regular expressions and expressions that follow API improvement proposal AIP-160. If you want to use AIP-160, your expression must specify the field name, an operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The operator must be either `=`, `!=`, `>`, `<`, `<=`, `>=` or `:`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. The `:` operator can be used with string fields to match substrings. For non-string fields it is equivalent to the `=` operator. The `:*` comparison can be used to test whether a key has been defined. For example, to find all objects with `owner` label use: ``` labels.owner:* ``` You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ``` If you want to use a regular expression, use the `eq` (equal) or `ne` (not equal) operator against a single un-parenthesized expression with or without quotes or against multiple parenthesized expressions. Examples: `fieldname eq unquoted literal` `fieldname eq 'single quoted literal'` `fieldname eq "double quoted literal"` `(fieldname1 eq literal) (fieldname2 ne "literal")` The literal value is interpreted as a regular expression using Google RE2 library syntax. The literal value must match the entire field. For example, to filter for instances that do not end with name "instance", you would use `name ne .*instance`.
  optional string filter = 336120696;

  // The name of the managed instance group. It should conform to RFC1035.
  string instance_group_manager = 249363395 [(google.api.field_behavior) = REQUIRED];

  // The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)
  optional uint32 max_results = 54715419;

  // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported.
  optional string order_by = 160562920;

  // Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results.
  optional string page_token = 19994697;

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Name of the region scoping this request, should conform to RFC1035.
  string region = 138946292 [(google.api.field_behavior) = REQUIRED];

  // Opt-in for partial success behavior which provides partial results in case of failure. The default value is false.
  optional bool return_partial_success = 517198390;

}

// A request message for SecurityPolicies.ListPreconfiguredExpressionSets. See the method description for details.
message ListPreconfiguredExpressionSetsSecurityPoliciesRequest {
  // A filter expression that filters resources listed in the response. Most Compute resources support two types of filter expressions: expressions that support regular expressions and expressions that follow API improvement proposal AIP-160. If you want to use AIP-160, your expression must specify the field name, an operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The operator must be either `=`, `!=`, `>`, `<`, `<=`, `>=` or `:`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. The `:` operator can be used with string fields to match substrings. For non-string fields it is equivalent to the `=` operator. The `:*` comparison can be used to test whether a key has been defined. For example, to find all objects with `owner` label use: ``` labels.owner:* ``` You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ``` If you want to use a regular expression, use the `eq` (equal) or `ne` (not equal) operator against a single un-parenthesized expression with or without quotes or against multiple parenthesized expressions. Examples: `fieldname eq unquoted literal` `fieldname eq 'single quoted literal'` `fieldname eq "double quoted literal"` `(fieldname1 eq literal) (fieldname2 ne "literal")` The literal value is interpreted as a regular expression using Google RE2 library syntax. The literal value must match the entire field. For example, to filter for instances that do not end with name "instance", you would use `name ne .*instance`.
  optional string filter = 336120696;

  // The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)
  optional uint32 max_results = 54715419;

  // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported.
  optional string order_by = 160562920;

  // Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results.
  optional string page_token = 19994697;

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Opt-in for partial success behavior which provides partial results in case of failure. The default value is false.
  optional bool return_partial_success = 517198390;

}

// A request message for PublicAdvertisedPrefixes.List. See the method description for details.
message ListPublicAdvertisedPrefixesRequest {
  // A filter expression that filters resources listed in the response. Most Compute resources support two types of filter expressions: expressions that support regular expressions and expressions that follow API improvement proposal AIP-160. If you want to use AIP-160, your expression must specify the field name, an operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The operator must be either `=`, `!=`, `>`, `<`, `<=`, `>=` or `:`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. The `:` operator can be used with string fields to match substrings. For non-string fields it is equivalent to the `=` operator. The `:*` comparison can be used to test whether a key has been defined. For example, to find all objects with `owner` label use: ``` labels.owner:* ``` You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ``` If you want to use a regular expression, use the `eq` (equal) or `ne` (not equal) operator against a single un-parenthesized expression with or without quotes or against multiple parenthesized expressions. Examples: `fieldname eq unquoted literal` `fieldname eq 'single quoted literal'` `fieldname eq "double quoted literal"` `(fieldname1 eq literal) (fieldname2 ne "literal")` The literal value is interpreted as a regular expression using Google RE2 library syntax. The literal value must match the entire field. For example, to filter for instances that do not end with name "instance", you would use `name ne .*instance`.
  optional string filter = 336120696;

  // The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)
  optional uint32 max_results = 54715419;

  // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported.
  optional string order_by = 160562920;

  // Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results.
  optional string page_token = 19994697;

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Opt-in for partial success behavior which provides partial results in case of failure. The default value is false.
  optional bool return_partial_success = 517198390;

}

// A request message for PublicDelegatedPrefixes.List. See the method description for details.
message ListPublicDelegatedPrefixesRequest {
  // A filter expression that filters resources listed in the response. Most Compute resources support two types of filter expressions: expressions that support regular expressions and expressions that follow API improvement proposal AIP-160. If you want to use AIP-160, your expression must specify the field name, an operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The operator must be either `=`, `!=`, `>`, `<`, `<=`, `>=` or `:`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. The `:` operator can be used with string fields to match substrings. For non-string fields it is equivalent to the `=` operator. The `:*` comparison can be used to test whether a key has been defined. For example, to find all objects with `owner` label use: ``` labels.owner:* ``` You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ``` If you want to use a regular expression, use the `eq` (equal) or `ne` (not equal) operator against a single un-parenthesized expression with or without quotes or against multiple parenthesized expressions. Examples: `fieldname eq unquoted literal` `fieldname eq 'single quoted literal'` `fieldname eq "double quoted literal"` `(fieldname1 eq literal) (fieldname2 ne "literal")` The literal value is interpreted as a regular expression using Google RE2 library syntax. The literal value must match the entire field. For example, to filter for instances that do not end with name "instance", you would use `name ne .*instance`.
  optional string filter = 336120696;

  // The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)
  optional uint32 max_results = 54715419;

  // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported.
  optional string order_by = 160562920;

  // Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results.
  optional string page_token = 19994697;

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Name of the region of this request.
  string region = 138946292 [(google.api.field_behavior) = REQUIRED];

  // Opt-in for partial success behavior which provides partial results in case of failure. The default value is false.
  optional bool return_partial_success = 517198390;

}

// A request message for Instances.ListReferrers. See the method description for details.
message ListReferrersInstancesRequest {
  // A filter expression that filters resources listed in the response. Most Compute resources support two types of filter expressions: expressions that support regular expressions and expressions that follow API improvement proposal AIP-160. If you want to use AIP-160, your expression must specify the field name, an operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The operator must be either `=`, `!=`, `>`, `<`, `<=`, `>=` or `:`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. The `:` operator can be used with string fields to match substrings. For non-string fields it is equivalent to the `=` operator. The `:*` comparison can be used to test whether a key has been defined. For example, to find all objects with `owner` label use: ``` labels.owner:* ``` You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ``` If you want to use a regular expression, use the `eq` (equal) or `ne` (not equal) operator against a single un-parenthesized expression with or without quotes or against multiple parenthesized expressions. Examples: `fieldname eq unquoted literal` `fieldname eq 'single quoted literal'` `fieldname eq "double quoted literal"` `(fieldname1 eq literal) (fieldname2 ne "literal")` The literal value is interpreted as a regular expression using Google RE2 library syntax. The literal value must match the entire field. For example, to filter for instances that do not end with name "instance", you would use `name ne .*instance`.
  optional string filter = 336120696;

  // Name of the target instance scoping this request, or '-' if the request should span over all instances in the container.
  string instance = 18257045 [(google.api.field_behavior) = REQUIRED];

  // The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)
  optional uint32 max_results = 54715419;

  // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported.
  optional string order_by = 160562920;

  // Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results.
  optional string page_token = 19994697;

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Opt-in for partial success behavior which provides partial results in case of failure. The default value is false.
  optional bool return_partial_success = 517198390;

  // The name of the zone for this request.
  string zone = 3744684 [(google.api.field_behavior) = REQUIRED];

}

// A request message for RegionAutoscalers.List. See the method description for details.
message ListRegionAutoscalersRequest {
  // A filter expression that filters resources listed in the response. Most Compute resources support two types of filter expressions: expressions that support regular expressions and expressions that follow API improvement proposal AIP-160. If you want to use AIP-160, your expression must specify the field name, an operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The operator must be either `=`, `!=`, `>`, `<`, `<=`, `>=` or `:`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. The `:` operator can be used with string fields to match substrings. For non-string fields it is equivalent to the `=` operator. The `:*` comparison can be used to test whether a key has been defined. For example, to find all objects with `owner` label use: ``` labels.owner:* ``` You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ``` If you want to use a regular expression, use the `eq` (equal) or `ne` (not equal) operator against a single un-parenthesized expression with or without quotes or against multiple parenthesized expressions. Examples: `fieldname eq unquoted literal` `fieldname eq 'single quoted literal'` `fieldname eq "double quoted literal"` `(fieldname1 eq literal) (fieldname2 ne "literal")` The literal value is interpreted as a regular expression using Google RE2 library syntax. The literal value must match the entire field. For example, to filter for instances that do not end with name "instance", you would use `name ne .*instance`.
  optional string filter = 336120696;

  // The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)
  optional uint32 max_results = 54715419;

  // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported.
  optional string order_by = 160562920;

  // Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results.
  optional string page_token = 19994697;

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Name of the region scoping this request.
  string region = 138946292 [(google.api.field_behavior) = REQUIRED];

  // Opt-in for partial success behavior which provides partial results in case of failure. The default value is false.
  optional bool return_partial_success = 517198390;

}

// A request message for RegionBackendServices.List. See the method description for details.
message ListRegionBackendServicesRequest {
  // A filter expression that filters resources listed in the response. Most Compute resources support two types of filter expressions: expressions that support regular expressions and expressions that follow API improvement proposal AIP-160. If you want to use AIP-160, your expression must specify the field name, an operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The operator must be either `=`, `!=`, `>`, `<`, `<=`, `>=` or `:`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. The `:` operator can be used with string fields to match substrings. For non-string fields it is equivalent to the `=` operator. The `:*` comparison can be used to test whether a key has been defined. For example, to find all objects with `owner` label use: ``` labels.owner:* ``` You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ``` If you want to use a regular expression, use the `eq` (equal) or `ne` (not equal) operator against a single un-parenthesized expression with or without quotes or against multiple parenthesized expressions. Examples: `fieldname eq unquoted literal` `fieldname eq 'single quoted literal'` `fieldname eq "double quoted literal"` `(fieldname1 eq literal) (fieldname2 ne "literal")` The literal value is interpreted as a regular expression using Google RE2 library syntax. The literal value must match the entire field. For example, to filter for instances that do not end with name "instance", you would use `name ne .*instance`.
  optional string filter = 336120696;

  // The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)
  optional uint32 max_results = 54715419;

  // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported.
  optional string order_by = 160562920;

  // Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results.
  optional string page_token = 19994697;

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Name of the region scoping this request.
  string region = 138946292 [(google.api.field_behavior) = REQUIRED];

  // Opt-in for partial success behavior which provides partial results in case of failure. The default value is false.
  optional bool return_partial_success = 517198390;

}

// A request message for RegionCommitments.List. See the method description for details.
message ListRegionCommitmentsRequest {
  // A filter expression that filters resources listed in the response. Most Compute resources support two types of filter expressions: expressions that support regular expressions and expressions that follow API improvement proposal AIP-160. If you want to use AIP-160, your expression must specify the field name, an operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The operator must be either `=`, `!=`, `>`, `<`, `<=`, `>=` or `:`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. The `:` operator can be used with string fields to match substrings. For non-string fields it is equivalent to the `=` operator. The `:*` comparison can be used to test whether a key has been defined. For example, to find all objects with `owner` label use: ``` labels.owner:* ``` You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ``` If you want to use a regular expression, use the `eq` (equal) or `ne` (not equal) operator against a single un-parenthesized expression with or without quotes or against multiple parenthesized expressions. Examples: `fieldname eq unquoted literal` `fieldname eq 'single quoted literal'` `fieldname eq "double quoted literal"` `(fieldname1 eq literal) (fieldname2 ne "literal")` The literal value is interpreted as a regular expression using Google RE2 library syntax. The literal value must match the entire field. For example, to filter for instances that do not end with name "instance", you would use `name ne .*instance`.
  optional string filter = 336120696;

  // The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)
  optional uint32 max_results = 54715419;

  // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported.
  optional string order_by = 160562920;

  // Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results.
  optional string page_token = 19994697;

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Name of the region for this request.
  string region = 138946292 [(google.api.field_behavior) = REQUIRED];

  // Opt-in for partial success behavior which provides partial results in case of failure. The default value is false.
  optional bool return_partial_success = 517198390;

}

// A request message for RegionDiskTypes.List. See the method description for details.
message ListRegionDiskTypesRequest {
  // A filter expression that filters resources listed in the response. Most Compute resources support two types of filter expressions: expressions that support regular expressions and expressions that follow API improvement proposal AIP-160. If you want to use AIP-160, your expression must specify the field name, an operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The operator must be either `=`, `!=`, `>`, `<`, `<=`, `>=` or `:`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. The `:` operator can be used with string fields to match substrings. For non-string fields it is equivalent to the `=` operator. The `:*` comparison can be used to test whether a key has been defined. For example, to find all objects with `owner` label use: ``` labels.owner:* ``` You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ``` If you want to use a regular expression, use the `eq` (equal) or `ne` (not equal) operator against a single un-parenthesized expression with or without quotes or against multiple parenthesized expressions. Examples: `fieldname eq unquoted literal` `fieldname eq 'single quoted literal'` `fieldname eq "double quoted literal"` `(fieldname1 eq literal) (fieldname2 ne "literal")` The literal value is interpreted as a regular expression using Google RE2 library syntax. The literal value must match the entire field. For example, to filter for instances that do not end with name "instance", you would use `name ne .*instance`.
  optional string filter = 336120696;

  // The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)
  optional uint32 max_results = 54715419;

  // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported.
  optional string order_by = 160562920;

  // Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results.
  optional string page_token = 19994697;

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // The name of the region for this request.
  string region = 138946292 [(google.api.field_behavior) = REQUIRED];

  // Opt-in for partial success behavior which provides partial results in case of failure. The default value is false.
  optional bool return_partial_success = 517198390;

}

// A request message for RegionDisks.List. See the method description for details.
message ListRegionDisksRequest {
  // A filter expression that filters resources listed in the response. Most Compute resources support two types of filter expressions: expressions that support regular expressions and expressions that follow API improvement proposal AIP-160. If you want to use AIP-160, your expression must specify the field name, an operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The operator must be either `=`, `!=`, `>`, `<`, `<=`, `>=` or `:`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. The `:` operator can be used with string fields to match substrings. For non-string fields it is equivalent to the `=` operator. The `:*` comparison can be used to test whether a key has been defined. For example, to find all objects with `owner` label use: ``` labels.owner:* ``` You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ``` If you want to use a regular expression, use the `eq` (equal) or `ne` (not equal) operator against a single un-parenthesized expression with or without quotes or against multiple parenthesized expressions. Examples: `fieldname eq unquoted literal` `fieldname eq 'single quoted literal'` `fieldname eq "double quoted literal"` `(fieldname1 eq literal) (fieldname2 ne "literal")` The literal value is interpreted as a regular expression using Google RE2 library syntax. The literal value must match the entire field. For example, to filter for instances that do not end with name "instance", you would use `name ne .*instance`.
  optional string filter = 336120696;

  // The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)
  optional uint32 max_results = 54715419;

  // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported.
  optional string order_by = 160562920;

  // Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results.
  optional string page_token = 19994697;

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Name of the region for this request.
  string region = 138946292 [(google.api.field_behavior) = REQUIRED];

  // Opt-in for partial success behavior which provides partial results in case of failure. The default value is false.
  optional bool return_partial_success = 517198390;

}

// A request message for RegionHealthCheckServices.List. See the method description for details.
message ListRegionHealthCheckServicesRequest {
  // A filter expression that filters resources listed in the response. Most Compute resources support two types of filter expressions: expressions that support regular expressions and expressions that follow API improvement proposal AIP-160. If you want to use AIP-160, your expression must specify the field name, an operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The operator must be either `=`, `!=`, `>`, `<`, `<=`, `>=` or `:`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. The `:` operator can be used with string fields to match substrings. For non-string fields it is equivalent to the `=` operator. The `:*` comparison can be used to test whether a key has been defined. For example, to find all objects with `owner` label use: ``` labels.owner:* ``` You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ``` If you want to use a regular expression, use the `eq` (equal) or `ne` (not equal) operator against a single un-parenthesized expression with or without quotes or against multiple parenthesized expressions. Examples: `fieldname eq unquoted literal` `fieldname eq 'single quoted literal'` `fieldname eq "double quoted literal"` `(fieldname1 eq literal) (fieldname2 ne "literal")` The literal value is interpreted as a regular expression using Google RE2 library syntax. The literal value must match the entire field. For example, to filter for instances that do not end with name "instance", you would use `name ne .*instance`.
  optional string filter = 336120696;

  // The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)
  optional uint32 max_results = 54715419;

  // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported.
  optional string order_by = 160562920;

  // Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results.
  optional string page_token = 19994697;

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Name of the region scoping this request.
  string region = 138946292 [(google.api.field_behavior) = REQUIRED];

  // Opt-in for partial success behavior which provides partial results in case of failure. The default value is false.
  optional bool return_partial_success = 517198390;

}

// A request message for RegionHealthChecks.List. See the method description for details.
message ListRegionHealthChecksRequest {
  // A filter expression that filters resources listed in the response. Most Compute resources support two types of filter expressions: expressions that support regular expressions and expressions that follow API improvement proposal AIP-160. If you want to use AIP-160, your expression must specify the field name, an operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The operator must be either `=`, `!=`, `>`, `<`, `<=`, `>=` or `:`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. The `:` operator can be used with string fields to match substrings. For non-string fields it is equivalent to the `=` operator. The `:*` comparison can be used to test whether a key has been defined. For example, to find all objects with `owner` label use: ``` labels.owner:* ``` You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ``` If you want to use a regular expression, use the `eq` (equal) or `ne` (not equal) operator against a single un-parenthesized expression with or without quotes or against multiple parenthesized expressions. Examples: `fieldname eq unquoted literal` `fieldname eq 'single quoted literal'` `fieldname eq "double quoted literal"` `(fieldname1 eq literal) (fieldname2 ne "literal")` The literal value is interpreted as a regular expression using Google RE2 library syntax. The literal value must match the entire field. For example, to filter for instances that do not end with name "instance", you would use `name ne .*instance`.
  optional string filter = 336120696;

  // The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)
  optional uint32 max_results = 54715419;

  // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported.
  optional string order_by = 160562920;

  // Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results.
  optional string page_token = 19994697;

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Name of the region scoping this request.
  string region = 138946292 [(google.api.field_behavior) = REQUIRED];

  // Opt-in for partial success behavior which provides partial results in case of failure. The default value is false.
  optional bool return_partial_success = 517198390;

}

// A request message for RegionInstanceGroupManagers.List. See the method description for details.
message ListRegionInstanceGroupManagersRequest {
  // A filter expression that filters resources listed in the response. Most Compute resources support two types of filter expressions: expressions that support regular expressions and expressions that follow API improvement proposal AIP-160. If you want to use AIP-160, your expression must specify the field name, an operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The operator must be either `=`, `!=`, `>`, `<`, `<=`, `>=` or `:`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. The `:` operator can be used with string fields to match substrings. For non-string fields it is equivalent to the `=` operator. The `:*` comparison can be used to test whether a key has been defined. For example, to find all objects with `owner` label use: ``` labels.owner:* ``` You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ``` If you want to use a regular expression, use the `eq` (equal) or `ne` (not equal) operator against a single un-parenthesized expression with or without quotes or against multiple parenthesized expressions. Examples: `fieldname eq unquoted literal` `fieldname eq 'single quoted literal'` `fieldname eq "double quoted literal"` `(fieldname1 eq literal) (fieldname2 ne "literal")` The literal value is interpreted as a regular expression using Google RE2 library syntax. The literal value must match the entire field. For example, to filter for instances that do not end with name "instance", you would use `name ne .*instance`.
  optional string filter = 336120696;

  // The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)
  optional uint32 max_results = 54715419;

  // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported.
  optional string order_by = 160562920;

  // Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results.
  optional string page_token = 19994697;

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Name of the region scoping this request.
  string region = 138946292 [(google.api.field_behavior) = REQUIRED];

  // Opt-in for partial success behavior which provides partial results in case of failure. The default value is false.
  optional bool return_partial_success = 517198390;

}

// A request message for RegionInstanceGroups.List. See the method description for details.
message ListRegionInstanceGroupsRequest {
  // A filter expression that filters resources listed in the response. Most Compute resources support two types of filter expressions: expressions that support regular expressions and expressions that follow API improvement proposal AIP-160. If you want to use AIP-160, your expression must specify the field name, an operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The operator must be either `=`, `!=`, `>`, `<`, `<=`, `>=` or `:`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. The `:` operator can be used with string fields to match substrings. For non-string fields it is equivalent to the `=` operator. The `:*` comparison can be used to test whether a key has been defined. For example, to find all objects with `owner` label use: ``` labels.owner:* ``` You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ``` If you want to use a regular expression, use the `eq` (equal) or `ne` (not equal) operator against a single un-parenthesized expression with or without quotes or against multiple parenthesized expressions. Examples: `fieldname eq unquoted literal` `fieldname eq 'single quoted literal'` `fieldname eq "double quoted literal"` `(fieldname1 eq literal) (fieldname2 ne "literal")` The literal value is interpreted as a regular expression using Google RE2 library syntax. The literal value must match the entire field. For example, to filter for instances that do not end with name "instance", you would use `name ne .*instance`.
  optional string filter = 336120696;

  // The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)
  optional uint32 max_results = 54715419;

  // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported.
  optional string order_by = 160562920;

  // Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results.
  optional string page_token = 19994697;

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Name of the region scoping this request.
  string region = 138946292 [(google.api.field_behavior) = REQUIRED];

  // Opt-in for partial success behavior which provides partial results in case of failure. The default value is false.
  optional bool return_partial_success = 517198390;

}

// A request message for RegionInstanceTemplates.List. See the method description for details.
message ListRegionInstanceTemplatesRequest {
  // A filter expression that filters resources listed in the response. Most Compute resources support two types of filter expressions: expressions that support regular expressions and expressions that follow API improvement proposal AIP-160. If you want to use AIP-160, your expression must specify the field name, an operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The operator must be either `=`, `!=`, `>`, `<`, `<=`, `>=` or `:`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. The `:` operator can be used with string fields to match substrings. For non-string fields it is equivalent to the `=` operator. The `:*` comparison can be used to test whether a key has been defined. For example, to find all objects with `owner` label use: ``` labels.owner:* ``` You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ``` If you want to use a regular expression, use the `eq` (equal) or `ne` (not equal) operator against a single un-parenthesized expression with or without quotes or against multiple parenthesized expressions. Examples: `fieldname eq unquoted literal` `fieldname eq 'single quoted literal'` `fieldname eq "double quoted literal"` `(fieldname1 eq literal) (fieldname2 ne "literal")` The literal value is interpreted as a regular expression using Google RE2 library syntax. The literal value must match the entire field. For example, to filter for instances that do not end with name "instance", you would use `name ne .*instance`.
  optional string filter = 336120696;

  // The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)
  optional uint32 max_results = 54715419;

  // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported.
  optional string order_by = 160562920;

  // Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results.
  optional string page_token = 19994697;

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // The name of the regions for this request.
  string region = 138946292 [(google.api.field_behavior) = REQUIRED];

  // Opt-in for partial success behavior which provides partial results in case of failure. The default value is false.
  optional bool return_partial_success = 517198390;

}

// A request message for RegionNetworkEndpointGroups.List. See the method description for details.
message ListRegionNetworkEndpointGroupsRequest {
  // A filter expression that filters resources listed in the response. Most Compute resources support two types of filter expressions: expressions that support regular expressions and expressions that follow API improvement proposal AIP-160. If you want to use AIP-160, your expression must specify the field name, an operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The operator must be either `=`, `!=`, `>`, `<`, `<=`, `>=` or `:`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. The `:` operator can be used with string fields to match substrings. For non-string fields it is equivalent to the `=` operator. The `:*` comparison can be used to test whether a key has been defined. For example, to find all objects with `owner` label use: ``` labels.owner:* ``` You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ``` If you want to use a regular expression, use the `eq` (equal) or `ne` (not equal) operator against a single un-parenthesized expression with or without quotes or against multiple parenthesized expressions. Examples: `fieldname eq unquoted literal` `fieldname eq 'single quoted literal'` `fieldname eq "double quoted literal"` `(fieldname1 eq literal) (fieldname2 ne "literal")` The literal value is interpreted as a regular expression using Google RE2 library syntax. The literal value must match the entire field. For example, to filter for instances that do not end with name "instance", you would use `name ne .*instance`.
  optional string filter = 336120696;

  // The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)
  optional uint32 max_results = 54715419;

  // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported.
  optional string order_by = 160562920;

  // Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results.
  optional string page_token = 19994697;

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // The name of the region where the network endpoint group is located. It should comply with RFC1035.
  string region = 138946292 [(google.api.field_behavior) = REQUIRED];

  // Opt-in for partial success behavior which provides partial results in case of failure. The default value is false.
  optional bool return_partial_success = 517198390;

}

// A request message for RegionNetworkFirewallPolicies.List. See the method description for details.
message ListRegionNetworkFirewallPoliciesRequest {
  // A filter expression that filters resources listed in the response. Most Compute resources support two types of filter expressions: expressions that support regular expressions and expressions that follow API improvement proposal AIP-160. If you want to use AIP-160, your expression must specify the field name, an operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The operator must be either `=`, `!=`, `>`, `<`, `<=`, `>=` or `:`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. The `:` operator can be used with string fields to match substrings. For non-string fields it is equivalent to the `=` operator. The `:*` comparison can be used to test whether a key has been defined. For example, to find all objects with `owner` label use: ``` labels.owner:* ``` You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ``` If you want to use a regular expression, use the `eq` (equal) or `ne` (not equal) operator against a single un-parenthesized expression with or without quotes or against multiple parenthesized expressions. Examples: `fieldname eq unquoted literal` `fieldname eq 'single quoted literal'` `fieldname eq "double quoted literal"` `(fieldname1 eq literal) (fieldname2 ne "literal")` The literal value is interpreted as a regular expression using Google RE2 library syntax. The literal value must match the entire field. For example, to filter for instances that do not end with name "instance", you would use `name ne .*instance`.
  optional string filter = 336120696;

  // The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)
  optional uint32 max_results = 54715419;

  // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported.
  optional string order_by = 160562920;

  // Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results.
  optional string page_token = 19994697;

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Name of the region scoping this request.
  string region = 138946292 [(google.api.field_behavior) = REQUIRED];

  // Opt-in for partial success behavior which provides partial results in case of failure. The default value is false.
  optional bool return_partial_success = 517198390;

}

// A request message for RegionNotificationEndpoints.List. See the method description for details.
message ListRegionNotificationEndpointsRequest {
  // A filter expression that filters resources listed in the response. Most Compute resources support two types of filter expressions: expressions that support regular expressions and expressions that follow API improvement proposal AIP-160. If you want to use AIP-160, your expression must specify the field name, an operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The operator must be either `=`, `!=`, `>`, `<`, `<=`, `>=` or `:`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. The `:` operator can be used with string fields to match substrings. For non-string fields it is equivalent to the `=` operator. The `:*` comparison can be used to test whether a key has been defined. For example, to find all objects with `owner` label use: ``` labels.owner:* ``` You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ``` If you want to use a regular expression, use the `eq` (equal) or `ne` (not equal) operator against a single un-parenthesized expression with or without quotes or against multiple parenthesized expressions. Examples: `fieldname eq unquoted literal` `fieldname eq 'single quoted literal'` `fieldname eq "double quoted literal"` `(fieldname1 eq literal) (fieldname2 ne "literal")` The literal value is interpreted as a regular expression using Google RE2 library syntax. The literal value must match the entire field. For example, to filter for instances that do not end with name "instance", you would use `name ne .*instance`.
  optional string filter = 336120696;

  // The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)
  optional uint32 max_results = 54715419;

  // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported.
  optional string order_by = 160562920;

  // Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results.
  optional string page_token = 19994697;

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Name of the region scoping this request.
  string region = 138946292 [(google.api.field_behavior) = REQUIRED];

  // Opt-in for partial success behavior which provides partial results in case of failure. The default value is false.
  optional bool return_partial_success = 517198390;

}

// A request message for RegionOperations.List. See the method description for details.
message ListRegionOperationsRequest {
  // A filter expression that filters resources listed in the response. Most Compute resources support two types of filter expressions: expressions that support regular expressions and expressions that follow API improvement proposal AIP-160. If you want to use AIP-160, your expression must specify the field name, an operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The operator must be either `=`, `!=`, `>`, `<`, `<=`, `>=` or `:`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. The `:` operator can be used with string fields to match substrings. For non-string fields it is equivalent to the `=` operator. The `:*` comparison can be used to test whether a key has been defined. For example, to find all objects with `owner` label use: ``` labels.owner:* ``` You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ``` If you want to use a regular expression, use the `eq` (equal) or `ne` (not equal) operator against a single un-parenthesized expression with or without quotes or against multiple parenthesized expressions. Examples: `fieldname eq unquoted literal` `fieldname eq 'single quoted literal'` `fieldname eq "double quoted literal"` `(fieldname1 eq literal) (fieldname2 ne "literal")` The literal value is interpreted as a regular expression using Google RE2 library syntax. The literal value must match the entire field. For example, to filter for instances that do not end with name "instance", you would use `name ne .*instance`.
  optional string filter = 336120696;

  // The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)
  optional uint32 max_results = 54715419;

  // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported.
  optional string order_by = 160562920;

  // Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results.
  optional string page_token = 19994697;

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Name of the region for this request.
  string region = 138946292 [(google.api.field_behavior) = REQUIRED];

  // Opt-in for partial success behavior which provides partial results in case of failure. The default value is false.
  optional bool return_partial_success = 517198390;

}

// A request message for RegionSecurityPolicies.List. See the method description for details.
message ListRegionSecurityPoliciesRequest {
  // A filter expression that filters resources listed in the response. Most Compute resources support two types of filter expressions: expressions that support regular expressions and expressions that follow API improvement proposal AIP-160. If you want to use AIP-160, your expression must specify the field name, an operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The operator must be either `=`, `!=`, `>`, `<`, `<=`, `>=` or `:`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. The `:` operator can be used with string fields to match substrings. For non-string fields it is equivalent to the `=` operator. The `:*` comparison can be used to test whether a key has been defined. For example, to find all objects with `owner` label use: ``` labels.owner:* ``` You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ``` If you want to use a regular expression, use the `eq` (equal) or `ne` (not equal) operator against a single un-parenthesized expression with or without quotes or against multiple parenthesized expressions. Examples: `fieldname eq unquoted literal` `fieldname eq 'single quoted literal'` `fieldname eq "double quoted literal"` `(fieldname1 eq literal) (fieldname2 ne "literal")` The literal value is interpreted as a regular expression using Google RE2 library syntax. The literal value must match the entire field. For example, to filter for instances that do not end with name "instance", you would use `name ne .*instance`.
  optional string filter = 336120696;

  // The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)
  optional uint32 max_results = 54715419;

  // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported.
  optional string order_by = 160562920;

  // Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results.
  optional string page_token = 19994697;

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Name of the region scoping this request.
  string region = 138946292 [(google.api.field_behavior) = REQUIRED];

  // Opt-in for partial success behavior which provides partial results in case of failure. The default value is false.
  optional bool return_partial_success = 517198390;

}

// A request message for RegionSslCertificates.List. See the method description for details.
message ListRegionSslCertificatesRequest {
  // A filter expression that filters resources listed in the response. Most Compute resources support two types of filter expressions: expressions that support regular expressions and expressions that follow API improvement proposal AIP-160. If you want to use AIP-160, your expression must specify the field name, an operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The operator must be either `=`, `!=`, `>`, `<`, `<=`, `>=` or `:`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. The `:` operator can be used with string fields to match substrings. For non-string fields it is equivalent to the `=` operator. The `:*` comparison can be used to test whether a key has been defined. For example, to find all objects with `owner` label use: ``` labels.owner:* ``` You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ``` If you want to use a regular expression, use the `eq` (equal) or `ne` (not equal) operator against a single un-parenthesized expression with or without quotes or against multiple parenthesized expressions. Examples: `fieldname eq unquoted literal` `fieldname eq 'single quoted literal'` `fieldname eq "double quoted literal"` `(fieldname1 eq literal) (fieldname2 ne "literal")` The literal value is interpreted as a regular expression using Google RE2 library syntax. The literal value must match the entire field. For example, to filter for instances that do not end with name "instance", you would use `name ne .*instance`.
  optional string filter = 336120696;

  // The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)
  optional uint32 max_results = 54715419;

  // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported.
  optional string order_by = 160562920;

  // Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results.
  optional string page_token = 19994697;

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Name of the region scoping this request.
  string region = 138946292 [(google.api.field_behavior) = REQUIRED];

  // Opt-in for partial success behavior which provides partial results in case of failure. The default value is false.
  optional bool return_partial_success = 517198390;

}

// A request message for RegionSslPolicies.List. See the method description for details.
message ListRegionSslPoliciesRequest {
  // A filter expression that filters resources listed in the response. Most Compute resources support two types of filter expressions: expressions that support regular expressions and expressions that follow API improvement proposal AIP-160. If you want to use AIP-160, your expression must specify the field name, an operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The operator must be either `=`, `!=`, `>`, `<`, `<=`, `>=` or `:`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. The `:` operator can be used with string fields to match substrings. For non-string fields it is equivalent to the `=` operator. The `:*` comparison can be used to test whether a key has been defined. For example, to find all objects with `owner` label use: ``` labels.owner:* ``` You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ``` If you want to use a regular expression, use the `eq` (equal) or `ne` (not equal) operator against a single un-parenthesized expression with or without quotes or against multiple parenthesized expressions. Examples: `fieldname eq unquoted literal` `fieldname eq 'single quoted literal'` `fieldname eq "double quoted literal"` `(fieldname1 eq literal) (fieldname2 ne "literal")` The literal value is interpreted as a regular expression using Google RE2 library syntax. The literal value must match the entire field. For example, to filter for instances that do not end with name "instance", you would use `name ne .*instance`.
  optional string filter = 336120696;

  // The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)
  optional uint32 max_results = 54715419;

  // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported.
  optional string order_by = 160562920;

  // Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results.
  optional string page_token = 19994697;

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Name of the region scoping this request.
  string region = 138946292 [(google.api.field_behavior) = REQUIRED];

  // Opt-in for partial success behavior which provides partial results in case of failure. The default value is false.
  optional bool return_partial_success = 517198390;

}

// A request message for RegionTargetHttpProxies.List. See the method description for details.
message ListRegionTargetHttpProxiesRequest {
  // A filter expression that filters resources listed in the response. Most Compute resources support two types of filter expressions: expressions that support regular expressions and expressions that follow API improvement proposal AIP-160. If you want to use AIP-160, your expression must specify the field name, an operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The operator must be either `=`, `!=`, `>`, `<`, `<=`, `>=` or `:`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. The `:` operator can be used with string fields to match substrings. For non-string fields it is equivalent to the `=` operator. The `:*` comparison can be used to test whether a key has been defined. For example, to find all objects with `owner` label use: ``` labels.owner:* ``` You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ``` If you want to use a regular expression, use the `eq` (equal) or `ne` (not equal) operator against a single un-parenthesized expression with or without quotes or against multiple parenthesized expressions. Examples: `fieldname eq unquoted literal` `fieldname eq 'single quoted literal'` `fieldname eq "double quoted literal"` `(fieldname1 eq literal) (fieldname2 ne "literal")` The literal value is interpreted as a regular expression using Google RE2 library syntax. The literal value must match the entire field. For example, to filter for instances that do not end with name "instance", you would use `name ne .*instance`.
  optional string filter = 336120696;

  // The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)
  optional uint32 max_results = 54715419;

  // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported.
  optional string order_by = 160562920;

  // Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results.
  optional string page_token = 19994697;

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Name of the region scoping this request.
  string region = 138946292 [(google.api.field_behavior) = REQUIRED];

  // Opt-in for partial success behavior which provides partial results in case of failure. The default value is false.
  optional bool return_partial_success = 517198390;

}

// A request message for RegionTargetHttpsProxies.List. See the method description for details.
message ListRegionTargetHttpsProxiesRequest {
  // A filter expression that filters resources listed in the response. Most Compute resources support two types of filter expressions: expressions that support regular expressions and expressions that follow API improvement proposal AIP-160. If you want to use AIP-160, your expression must specify the field name, an operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The operator must be either `=`, `!=`, `>`, `<`, `<=`, `>=` or `:`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. The `:` operator can be used with string fields to match substrings. For non-string fields it is equivalent to the `=` operator. The `:*` comparison can be used to test whether a key has been defined. For example, to find all objects with `owner` label use: ``` labels.owner:* ``` You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ``` If you want to use a regular expression, use the `eq` (equal) or `ne` (not equal) operator against a single un-parenthesized expression with or without quotes or against multiple parenthesized expressions. Examples: `fieldname eq unquoted literal` `fieldname eq 'single quoted literal'` `fieldname eq "double quoted literal"` `(fieldname1 eq literal) (fieldname2 ne "literal")` The literal value is interpreted as a regular expression using Google RE2 library syntax. The literal value must match the entire field. For example, to filter for instances that do not end with name "instance", you would use `name ne .*instance`.
  optional string filter = 336120696;

  // The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)
  optional uint32 max_results = 54715419;

  // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported.
  optional string order_by = 160562920;

  // Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results.
  optional string page_token = 19994697;

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Name of the region scoping this request.
  string region = 138946292 [(google.api.field_behavior) = REQUIRED];

  // Opt-in for partial success behavior which provides partial results in case of failure. The default value is false.
  optional bool return_partial_success = 517198390;

}

// A request message for RegionTargetTcpProxies.List. See the method description for details.
message ListRegionTargetTcpProxiesRequest {
  // A filter expression that filters resources listed in the response. Most Compute resources support two types of filter expressions: expressions that support regular expressions and expressions that follow API improvement proposal AIP-160. If you want to use AIP-160, your expression must specify the field name, an operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The operator must be either `=`, `!=`, `>`, `<`, `<=`, `>=` or `:`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. The `:` operator can be used with string fields to match substrings. For non-string fields it is equivalent to the `=` operator. The `:*` comparison can be used to test whether a key has been defined. For example, to find all objects with `owner` label use: ``` labels.owner:* ``` You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ``` If you want to use a regular expression, use the `eq` (equal) or `ne` (not equal) operator against a single un-parenthesized expression with or without quotes or against multiple parenthesized expressions. Examples: `fieldname eq unquoted literal` `fieldname eq 'single quoted literal'` `fieldname eq "double quoted literal"` `(fieldname1 eq literal) (fieldname2 ne "literal")` The literal value is interpreted as a regular expression using Google RE2 library syntax. The literal value must match the entire field. For example, to filter for instances that do not end with name "instance", you would use `name ne .*instance`.
  optional string filter = 336120696;

  // The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)
  optional uint32 max_results = 54715419;

  // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported.
  optional string order_by = 160562920;

  // Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results.
  optional string page_token = 19994697;

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Name of the region scoping this request.
  string region = 138946292 [(google.api.field_behavior) = REQUIRED];

  // Opt-in for partial success behavior which provides partial results in case of failure. The default value is false.
  optional bool return_partial_success = 517198390;

}

// A request message for RegionUrlMaps.List. See the method description for details.
message ListRegionUrlMapsRequest {
  // A filter expression that filters resources listed in the response. Most Compute resources support two types of filter expressions: expressions that support regular expressions and expressions that follow API improvement proposal AIP-160. If you want to use AIP-160, your expression must specify the field name, an operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The operator must be either `=`, `!=`, `>`, `<`, `<=`, `>=` or `:`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. The `:` operator can be used with string fields to match substrings. For non-string fields it is equivalent to the `=` operator. The `:*` comparison can be used to test whether a key has been defined. For example, to find all objects with `owner` label use: ``` labels.owner:* ``` You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ``` If you want to use a regular expression, use the `eq` (equal) or `ne` (not equal) operator against a single un-parenthesized expression with or without quotes or against multiple parenthesized expressions. Examples: `fieldname eq unquoted literal` `fieldname eq 'single quoted literal'` `fieldname eq "double quoted literal"` `(fieldname1 eq literal) (fieldname2 ne "literal")` The literal value is interpreted as a regular expression using Google RE2 library syntax. The literal value must match the entire field. For example, to filter for instances that do not end with name "instance", you would use `name ne .*instance`.
  optional string filter = 336120696;

  // The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)
  optional uint32 max_results = 54715419;

  // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported.
  optional string order_by = 160562920;

  // Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results.
  optional string page_token = 19994697;

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Name of the region scoping this request.
  string region = 138946292 [(google.api.field_behavior) = REQUIRED];

  // Opt-in for partial success behavior which provides partial results in case of failure. The default value is false.
  optional bool return_partial_success = 517198390;

}

// A request message for Regions.List. See the method description for details.
message ListRegionsRequest {
  // A filter expression that filters resources listed in the response. Most Compute resources support two types of filter expressions: expressions that support regular expressions and expressions that follow API improvement proposal AIP-160. If you want to use AIP-160, your expression must specify the field name, an operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The operator must be either `=`, `!=`, `>`, `<`, `<=`, `>=` or `:`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. The `:` operator can be used with string fields to match substrings. For non-string fields it is equivalent to the `=` operator. The `:*` comparison can be used to test whether a key has been defined. For example, to find all objects with `owner` label use: ``` labels.owner:* ``` You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ``` If you want to use a regular expression, use the `eq` (equal) or `ne` (not equal) operator against a single un-parenthesized expression with or without quotes or against multiple parenthesized expressions. Examples: `fieldname eq unquoted literal` `fieldname eq 'single quoted literal'` `fieldname eq "double quoted literal"` `(fieldname1 eq literal) (fieldname2 ne "literal")` The literal value is interpreted as a regular expression using Google RE2 library syntax. The literal value must match the entire field. For example, to filter for instances that do not end with name "instance", you would use `name ne .*instance`.
  optional string filter = 336120696;

  // The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)
  optional uint32 max_results = 54715419;

  // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported.
  optional string order_by = 160562920;

  // Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results.
  optional string page_token = 19994697;

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Opt-in for partial success behavior which provides partial results in case of failure. The default value is false.
  optional bool return_partial_success = 517198390;

}

// A request message for Reservations.List. See the method description for details.
message ListReservationsRequest {
  // A filter expression that filters resources listed in the response. Most Compute resources support two types of filter expressions: expressions that support regular expressions and expressions that follow API improvement proposal AIP-160. If you want to use AIP-160, your expression must specify the field name, an operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The operator must be either `=`, `!=`, `>`, `<`, `<=`, `>=` or `:`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. The `:` operator can be used with string fields to match substrings. For non-string fields it is equivalent to the `=` operator. The `:*` comparison can be used to test whether a key has been defined. For example, to find all objects with `owner` label use: ``` labels.owner:* ``` You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ``` If you want to use a regular expression, use the `eq` (equal) or `ne` (not equal) operator against a single un-parenthesized expression with or without quotes or against multiple parenthesized expressions. Examples: `fieldname eq unquoted literal` `fieldname eq 'single quoted literal'` `fieldname eq "double quoted literal"` `(fieldname1 eq literal) (fieldname2 ne "literal")` The literal value is interpreted as a regular expression using Google RE2 library syntax. The literal value must match the entire field. For example, to filter for instances that do not end with name "instance", you would use `name ne .*instance`.
  optional string filter = 336120696;

  // The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)
  optional uint32 max_results = 54715419;

  // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported.
  optional string order_by = 160562920;

  // Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results.
  optional string page_token = 19994697;

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Opt-in for partial success behavior which provides partial results in case of failure. The default value is false.
  optional bool return_partial_success = 517198390;

  // Name of the zone for this request.
  string zone = 3744684 [(google.api.field_behavior) = REQUIRED];

}

// A request message for ResourcePolicies.List. See the method description for details.
message ListResourcePoliciesRequest {
  // A filter expression that filters resources listed in the response. Most Compute resources support two types of filter expressions: expressions that support regular expressions and expressions that follow API improvement proposal AIP-160. If you want to use AIP-160, your expression must specify the field name, an operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The operator must be either `=`, `!=`, `>`, `<`, `<=`, `>=` or `:`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. The `:` operator can be used with string fields to match substrings. For non-string fields it is equivalent to the `=` operator. The `:*` comparison can be used to test whether a key has been defined. For example, to find all objects with `owner` label use: ``` labels.owner:* ``` You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ``` If you want to use a regular expression, use the `eq` (equal) or `ne` (not equal) operator against a single un-parenthesized expression with or without quotes or against multiple parenthesized expressions. Examples: `fieldname eq unquoted literal` `fieldname eq 'single quoted literal'` `fieldname eq "double quoted literal"` `(fieldname1 eq literal) (fieldname2 ne "literal")` The literal value is interpreted as a regular expression using Google RE2 library syntax. The literal value must match the entire field. For example, to filter for instances that do not end with name "instance", you would use `name ne .*instance`.
  optional string filter = 336120696;

  // The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)
  optional uint32 max_results = 54715419;

  // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported.
  optional string order_by = 160562920;

  // Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results.
  optional string page_token = 19994697;

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Name of the region for this request.
  string region = 138946292 [(google.api.field_behavior) = REQUIRED];

  // Opt-in for partial success behavior which provides partial results in case of failure. The default value is false.
  optional bool return_partial_success = 517198390;

}

// A request message for Routers.List. See the method description for details.
message ListRoutersRequest {
  // A filter expression that filters resources listed in the response. Most Compute resources support two types of filter expressions: expressions that support regular expressions and expressions that follow API improvement proposal AIP-160. If you want to use AIP-160, your expression must specify the field name, an operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The operator must be either `=`, `!=`, `>`, `<`, `<=`, `>=` or `:`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. The `:` operator can be used with string fields to match substrings. For non-string fields it is equivalent to the `=` operator. The `:*` comparison can be used to test whether a key has been defined. For example, to find all objects with `owner` label use: ``` labels.owner:* ``` You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ``` If you want to use a regular expression, use the `eq` (equal) or `ne` (not equal) operator against a single un-parenthesized expression with or without quotes or against multiple parenthesized expressions. Examples: `fieldname eq unquoted literal` `fieldname eq 'single quoted literal'` `fieldname eq "double quoted literal"` `(fieldname1 eq literal) (fieldname2 ne "literal")` The literal value is interpreted as a regular expression using Google RE2 library syntax. The literal value must match the entire field. For example, to filter for instances that do not end with name "instance", you would use `name ne .*instance`.
  optional string filter = 336120696;

  // The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)
  optional uint32 max_results = 54715419;

  // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported.
  optional string order_by = 160562920;

  // Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results.
  optional string page_token = 19994697;

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Name of the region for this request.
  string region = 138946292 [(google.api.field_behavior) = REQUIRED];

  // Opt-in for partial success behavior which provides partial results in case of failure. The default value is false.
  optional bool return_partial_success = 517198390;

}

// A request message for Routes.List. See the method description for details.
message ListRoutesRequest {
  // A filter expression that filters resources listed in the response. Most Compute resources support two types of filter expressions: expressions that support regular expressions and expressions that follow API improvement proposal AIP-160. If you want to use AIP-160, your expression must specify the field name, an operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The operator must be either `=`, `!=`, `>`, `<`, `<=`, `>=` or `:`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. The `:` operator can be used with string fields to match substrings. For non-string fields it is equivalent to the `=` operator. The `:*` comparison can be used to test whether a key has been defined. For example, to find all objects with `owner` label use: ``` labels.owner:* ``` You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ``` If you want to use a regular expression, use the `eq` (equal) or `ne` (not equal) operator against a single un-parenthesized expression with or without quotes or against multiple parenthesized expressions. Examples: `fieldname eq unquoted literal` `fieldname eq 'single quoted literal'` `fieldname eq "double quoted literal"` `(fieldname1 eq literal) (fieldname2 ne "literal")` The literal value is interpreted as a regular expression using Google RE2 library syntax. The literal value must match the entire field. For example, to filter for instances that do not end with name "instance", you would use `name ne .*instance`.
  optional string filter = 336120696;

  // The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)
  optional uint32 max_results = 54715419;

  // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported.
  optional string order_by = 160562920;

  // Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results.
  optional string page_token = 19994697;

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Opt-in for partial success behavior which provides partial results in case of failure. The default value is false.
  optional bool return_partial_success = 517198390;

}

// A request message for SecurityPolicies.List. See the method description for details.
message ListSecurityPoliciesRequest {
  // A filter expression that filters resources listed in the response. Most Compute resources support two types of filter expressions: expressions that support regular expressions and expressions that follow API improvement proposal AIP-160. If you want to use AIP-160, your expression must specify the field name, an operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The operator must be either `=`, `!=`, `>`, `<`, `<=`, `>=` or `:`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. The `:` operator can be used with string fields to match substrings. For non-string fields it is equivalent to the `=` operator. The `:*` comparison can be used to test whether a key has been defined. For example, to find all objects with `owner` label use: ``` labels.owner:* ``` You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ``` If you want to use a regular expression, use the `eq` (equal) or `ne` (not equal) operator against a single un-parenthesized expression with or without quotes or against multiple parenthesized expressions. Examples: `fieldname eq unquoted literal` `fieldname eq 'single quoted literal'` `fieldname eq "double quoted literal"` `(fieldname1 eq literal) (fieldname2 ne "literal")` The literal value is interpreted as a regular expression using Google RE2 library syntax. The literal value must match the entire field. For example, to filter for instances that do not end with name "instance", you would use `name ne .*instance`.
  optional string filter = 336120696;

  // The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)
  optional uint32 max_results = 54715419;

  // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported.
  optional string order_by = 160562920;

  // Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results.
  optional string page_token = 19994697;

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Opt-in for partial success behavior which provides partial results in case of failure. The default value is false.
  optional bool return_partial_success = 517198390;

}

// A request message for ServiceAttachments.List. See the method description for details.
message ListServiceAttachmentsRequest {
  // A filter expression that filters resources listed in the response. Most Compute resources support two types of filter expressions: expressions that support regular expressions and expressions that follow API improvement proposal AIP-160. If you want to use AIP-160, your expression must specify the field name, an operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The operator must be either `=`, `!=`, `>`, `<`, `<=`, `>=` or `:`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. The `:` operator can be used with string fields to match substrings. For non-string fields it is equivalent to the `=` operator. The `:*` comparison can be used to test whether a key has been defined. For example, to find all objects with `owner` label use: ``` labels.owner:* ``` You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ``` If you want to use a regular expression, use the `eq` (equal) or `ne` (not equal) operator against a single un-parenthesized expression with or without quotes or against multiple parenthesized expressions. Examples: `fieldname eq unquoted literal` `fieldname eq 'single quoted literal'` `fieldname eq "double quoted literal"` `(fieldname1 eq literal) (fieldname2 ne "literal")` The literal value is interpreted as a regular expression using Google RE2 library syntax. The literal value must match the entire field. For example, to filter for instances that do not end with name "instance", you would use `name ne .*instance`.
  optional string filter = 336120696;

  // The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)
  optional uint32 max_results = 54715419;

  // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported.
  optional string order_by = 160562920;

  // Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results.
  optional string page_token = 19994697;

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Name of the region of this request.
  string region = 138946292 [(google.api.field_behavior) = REQUIRED];

  // Opt-in for partial success behavior which provides partial results in case of failure. The default value is false.
  optional bool return_partial_success = 517198390;

}

// A request message for Snapshots.List. See the method description for details.
message ListSnapshotsRequest {
  // A filter expression that filters resources listed in the response. Most Compute resources support two types of filter expressions: expressions that support regular expressions and expressions that follow API improvement proposal AIP-160. If you want to use AIP-160, your expression must specify the field name, an operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The operator must be either `=`, `!=`, `>`, `<`, `<=`, `>=` or `:`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. The `:` operator can be used with string fields to match substrings. For non-string fields it is equivalent to the `=` operator. The `:*` comparison can be used to test whether a key has been defined. For example, to find all objects with `owner` label use: ``` labels.owner:* ``` You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ``` If you want to use a regular expression, use the `eq` (equal) or `ne` (not equal) operator against a single un-parenthesized expression with or without quotes or against multiple parenthesized expressions. Examples: `fieldname eq unquoted literal` `fieldname eq 'single quoted literal'` `fieldname eq "double quoted literal"` `(fieldname1 eq literal) (fieldname2 ne "literal")` The literal value is interpreted as a regular expression using Google RE2 library syntax. The literal value must match the entire field. For example, to filter for instances that do not end with name "instance", you would use `name ne .*instance`.
  optional string filter = 336120696;

  // The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)
  optional uint32 max_results = 54715419;

  // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported.
  optional string order_by = 160562920;

  // Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results.
  optional string page_token = 19994697;

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Opt-in for partial success behavior which provides partial results in case of failure. The default value is false.
  optional bool return_partial_success = 517198390;

}

// A request message for SslCertificates.List. See the method description for details.
message ListSslCertificatesRequest {
  // A filter expression that filters resources listed in the response. Most Compute resources support two types of filter expressions: expressions that support regular expressions and expressions that follow API improvement proposal AIP-160. If you want to use AIP-160, your expression must specify the field name, an operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The operator must be either `=`, `!=`, `>`, `<`, `<=`, `>=` or `:`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. The `:` operator can be used with string fields to match substrings. For non-string fields it is equivalent to the `=` operator. The `:*` comparison can be used to test whether a key has been defined. For example, to find all objects with `owner` label use: ``` labels.owner:* ``` You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ``` If you want to use a regular expression, use the `eq` (equal) or `ne` (not equal) operator against a single un-parenthesized expression with or without quotes or against multiple parenthesized expressions. Examples: `fieldname eq unquoted literal` `fieldname eq 'single quoted literal'` `fieldname eq "double quoted literal"` `(fieldname1 eq literal) (fieldname2 ne "literal")` The literal value is interpreted as a regular expression using Google RE2 library syntax. The literal value must match the entire field. For example, to filter for instances that do not end with name "instance", you would use `name ne .*instance`.
  optional string filter = 336120696;

  // The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)
  optional uint32 max_results = 54715419;

  // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported.
  optional string order_by = 160562920;

  // Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results.
  optional string page_token = 19994697;

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Opt-in for partial success behavior which provides partial results in case of failure. The default value is false.
  optional bool return_partial_success = 517198390;

}

// A request message for SslPolicies.List. See the method description for details.
message ListSslPoliciesRequest {
  // A filter expression that filters resources listed in the response. Most Compute resources support two types of filter expressions: expressions that support regular expressions and expressions that follow API improvement proposal AIP-160. If you want to use AIP-160, your expression must specify the field name, an operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The operator must be either `=`, `!=`, `>`, `<`, `<=`, `>=` or `:`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. The `:` operator can be used with string fields to match substrings. For non-string fields it is equivalent to the `=` operator. The `:*` comparison can be used to test whether a key has been defined. For example, to find all objects with `owner` label use: ``` labels.owner:* ``` You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ``` If you want to use a regular expression, use the `eq` (equal) or `ne` (not equal) operator against a single un-parenthesized expression with or without quotes or against multiple parenthesized expressions. Examples: `fieldname eq unquoted literal` `fieldname eq 'single quoted literal'` `fieldname eq "double quoted literal"` `(fieldname1 eq literal) (fieldname2 ne "literal")` The literal value is interpreted as a regular expression using Google RE2 library syntax. The literal value must match the entire field. For example, to filter for instances that do not end with name "instance", you would use `name ne .*instance`.
  optional string filter = 336120696;

  // The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)
  optional uint32 max_results = 54715419;

  // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported.
  optional string order_by = 160562920;

  // Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results.
  optional string page_token = 19994697;

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Opt-in for partial success behavior which provides partial results in case of failure. The default value is false.
  optional bool return_partial_success = 517198390;

}

// A request message for Subnetworks.List. See the method description for details.
message ListSubnetworksRequest {
  // A filter expression that filters resources listed in the response. Most Compute resources support two types of filter expressions: expressions that support regular expressions and expressions that follow API improvement proposal AIP-160. If you want to use AIP-160, your expression must specify the field name, an operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The operator must be either `=`, `!=`, `>`, `<`, `<=`, `>=` or `:`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. The `:` operator can be used with string fields to match substrings. For non-string fields it is equivalent to the `=` operator. The `:*` comparison can be used to test whether a key has been defined. For example, to find all objects with `owner` label use: ``` labels.owner:* ``` You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ``` If you want to use a regular expression, use the `eq` (equal) or `ne` (not equal) operator against a single un-parenthesized expression with or without quotes or against multiple parenthesized expressions. Examples: `fieldname eq unquoted literal` `fieldname eq 'single quoted literal'` `fieldname eq "double quoted literal"` `(fieldname1 eq literal) (fieldname2 ne "literal")` The literal value is interpreted as a regular expression using Google RE2 library syntax. The literal value must match the entire field. For example, to filter for instances that do not end with name "instance", you would use `name ne .*instance`.
  optional string filter = 336120696;

  // The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)
  optional uint32 max_results = 54715419;

  // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported.
  optional string order_by = 160562920;

  // Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results.
  optional string page_token = 19994697;

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Name of the region scoping this request.
  string region = 138946292 [(google.api.field_behavior) = REQUIRED];

  // Opt-in for partial success behavior which provides partial results in case of failure. The default value is false.
  optional bool return_partial_success = 517198390;

}

// A request message for TargetGrpcProxies.List. See the method description for details.
message ListTargetGrpcProxiesRequest {
  // A filter expression that filters resources listed in the response. Most Compute resources support two types of filter expressions: expressions that support regular expressions and expressions that follow API improvement proposal AIP-160. If you want to use AIP-160, your expression must specify the field name, an operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The operator must be either `=`, `!=`, `>`, `<`, `<=`, `>=` or `:`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. The `:` operator can be used with string fields to match substrings. For non-string fields it is equivalent to the `=` operator. The `:*` comparison can be used to test whether a key has been defined. For example, to find all objects with `owner` label use: ``` labels.owner:* ``` You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ``` If you want to use a regular expression, use the `eq` (equal) or `ne` (not equal) operator against a single un-parenthesized expression with or without quotes or against multiple parenthesized expressions. Examples: `fieldname eq unquoted literal` `fieldname eq 'single quoted literal'` `fieldname eq "double quoted literal"` `(fieldname1 eq literal) (fieldname2 ne "literal")` The literal value is interpreted as a regular expression using Google RE2 library syntax. The literal value must match the entire field. For example, to filter for instances that do not end with name "instance", you would use `name ne .*instance`.
  optional string filter = 336120696;

  // The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)
  optional uint32 max_results = 54715419;

  // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported.
  optional string order_by = 160562920;

  // Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results.
  optional string page_token = 19994697;

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Opt-in for partial success behavior which provides partial results in case of failure. The default value is false.
  optional bool return_partial_success = 517198390;

}

// A request message for TargetHttpProxies.List. See the method description for details.
message ListTargetHttpProxiesRequest {
  // A filter expression that filters resources listed in the response. Most Compute resources support two types of filter expressions: expressions that support regular expressions and expressions that follow API improvement proposal AIP-160. If you want to use AIP-160, your expression must specify the field name, an operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The operator must be either `=`, `!=`, `>`, `<`, `<=`, `>=` or `:`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. The `:` operator can be used with string fields to match substrings. For non-string fields it is equivalent to the `=` operator. The `:*` comparison can be used to test whether a key has been defined. For example, to find all objects with `owner` label use: ``` labels.owner:* ``` You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ``` If you want to use a regular expression, use the `eq` (equal) or `ne` (not equal) operator against a single un-parenthesized expression with or without quotes or against multiple parenthesized expressions. Examples: `fieldname eq unquoted literal` `fieldname eq 'single quoted literal'` `fieldname eq "double quoted literal"` `(fieldname1 eq literal) (fieldname2 ne "literal")` The literal value is interpreted as a regular expression using Google RE2 library syntax. The literal value must match the entire field. For example, to filter for instances that do not end with name "instance", you would use `name ne .*instance`.
  optional string filter = 336120696;

  // The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)
  optional uint32 max_results = 54715419;

  // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported.
  optional string order_by = 160562920;

  // Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results.
  optional string page_token = 19994697;

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Opt-in for partial success behavior which provides partial results in case of failure. The default value is false.
  optional bool return_partial_success = 517198390;

}

// A request message for TargetHttpsProxies.List. See the method description for details.
message ListTargetHttpsProxiesRequest {
  // A filter expression that filters resources listed in the response. Most Compute resources support two types of filter expressions: expressions that support regular expressions and expressions that follow API improvement proposal AIP-160. If you want to use AIP-160, your expression must specify the field name, an operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The operator must be either `=`, `!=`, `>`, `<`, `<=`, `>=` or `:`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. The `:` operator can be used with string fields to match substrings. For non-string fields it is equivalent to the `=` operator. The `:*` comparison can be used to test whether a key has been defined. For example, to find all objects with `owner` label use: ``` labels.owner:* ``` You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ``` If you want to use a regular expression, use the `eq` (equal) or `ne` (not equal) operator against a single un-parenthesized expression with or without quotes or against multiple parenthesized expressions. Examples: `fieldname eq unquoted literal` `fieldname eq 'single quoted literal'` `fieldname eq "double quoted literal"` `(fieldname1 eq literal) (fieldname2 ne "literal")` The literal value is interpreted as a regular expression using Google RE2 library syntax. The literal value must match the entire field. For example, to filter for instances that do not end with name "instance", you would use `name ne .*instance`.
  optional string filter = 336120696;

  // The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)
  optional uint32 max_results = 54715419;

  // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported.
  optional string order_by = 160562920;

  // Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results.
  optional string page_token = 19994697;

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Opt-in for partial success behavior which provides partial results in case of failure. The default value is false.
  optional bool return_partial_success = 517198390;

}

// A request message for TargetInstances.List. See the method description for details.
message ListTargetInstancesRequest {
  // A filter expression that filters resources listed in the response. Most Compute resources support two types of filter expressions: expressions that support regular expressions and expressions that follow API improvement proposal AIP-160. If you want to use AIP-160, your expression must specify the field name, an operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The operator must be either `=`, `!=`, `>`, `<`, `<=`, `>=` or `:`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. The `:` operator can be used with string fields to match substrings. For non-string fields it is equivalent to the `=` operator. The `:*` comparison can be used to test whether a key has been defined. For example, to find all objects with `owner` label use: ``` labels.owner:* ``` You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ``` If you want to use a regular expression, use the `eq` (equal) or `ne` (not equal) operator against a single un-parenthesized expression with or without quotes or against multiple parenthesized expressions. Examples: `fieldname eq unquoted literal` `fieldname eq 'single quoted literal'` `fieldname eq "double quoted literal"` `(fieldname1 eq literal) (fieldname2 ne "literal")` The literal value is interpreted as a regular expression using Google RE2 library syntax. The literal value must match the entire field. For example, to filter for instances that do not end with name "instance", you would use `name ne .*instance`.
  optional string filter = 336120696;

  // The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)
  optional uint32 max_results = 54715419;

  // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported.
  optional string order_by = 160562920;

  // Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results.
  optional string page_token = 19994697;

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Opt-in for partial success behavior which provides partial results in case of failure. The default value is false.
  optional bool return_partial_success = 517198390;

  // Name of the zone scoping this request.
  string zone = 3744684 [(google.api.field_behavior) = REQUIRED];

}

// A request message for TargetPools.List. See the method description for details.
message ListTargetPoolsRequest {
  // A filter expression that filters resources listed in the response. Most Compute resources support two types of filter expressions: expressions that support regular expressions and expressions that follow API improvement proposal AIP-160. If you want to use AIP-160, your expression must specify the field name, an operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The operator must be either `=`, `!=`, `>`, `<`, `<=`, `>=` or `:`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. The `:` operator can be used with string fields to match substrings. For non-string fields it is equivalent to the `=` operator. The `:*` comparison can be used to test whether a key has been defined. For example, to find all objects with `owner` label use: ``` labels.owner:* ``` You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ``` If you want to use a regular expression, use the `eq` (equal) or `ne` (not equal) operator against a single un-parenthesized expression with or without quotes or against multiple parenthesized expressions. Examples: `fieldname eq unquoted literal` `fieldname eq 'single quoted literal'` `fieldname eq "double quoted literal"` `(fieldname1 eq literal) (fieldname2 ne "literal")` The literal value is interpreted as a regular expression using Google RE2 library syntax. The literal value must match the entire field. For example, to filter for instances that do not end with name "instance", you would use `name ne .*instance`.
  optional string filter = 336120696;

  // The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)
  optional uint32 max_results = 54715419;

  // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported.
  optional string order_by = 160562920;

  // Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results.
  optional string page_token = 19994697;

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Name of the region scoping this request.
  string region = 138946292 [(google.api.field_behavior) = REQUIRED];

  // Opt-in for partial success behavior which provides partial results in case of failure. The default value is false.
  optional bool return_partial_success = 517198390;

}

// A request message for TargetSslProxies.List. See the method description for details.
message ListTargetSslProxiesRequest {
  // A filter expression that filters resources listed in the response. Most Compute resources support two types of filter expressions: expressions that support regular expressions and expressions that follow API improvement proposal AIP-160. If you want to use AIP-160, your expression must specify the field name, an operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The operator must be either `=`, `!=`, `>`, `<`, `<=`, `>=` or `:`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. The `:` operator can be used with string fields to match substrings. For non-string fields it is equivalent to the `=` operator. The `:*` comparison can be used to test whether a key has been defined. For example, to find all objects with `owner` label use: ``` labels.owner:* ``` You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ``` If you want to use a regular expression, use the `eq` (equal) or `ne` (not equal) operator against a single un-parenthesized expression with or without quotes or against multiple parenthesized expressions. Examples: `fieldname eq unquoted literal` `fieldname eq 'single quoted literal'` `fieldname eq "double quoted literal"` `(fieldname1 eq literal) (fieldname2 ne "literal")` The literal value is interpreted as a regular expression using Google RE2 library syntax. The literal value must match the entire field. For example, to filter for instances that do not end with name "instance", you would use `name ne .*instance`.
  optional string filter = 336120696;

  // The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)
  optional uint32 max_results = 54715419;

  // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported.
  optional string order_by = 160562920;

  // Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results.
  optional string page_token = 19994697;

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Opt-in for partial success behavior which provides partial results in case of failure. The default value is false.
  optional bool return_partial_success = 517198390;

}

// A request message for TargetTcpProxies.List. See the method description for details.
message ListTargetTcpProxiesRequest {
  // A filter expression that filters resources listed in the response. Most Compute resources support two types of filter expressions: expressions that support regular expressions and expressions that follow API improvement proposal AIP-160. If you want to use AIP-160, your expression must specify the field name, an operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The operator must be either `=`, `!=`, `>`, `<`, `<=`, `>=` or `:`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. The `:` operator can be used with string fields to match substrings. For non-string fields it is equivalent to the `=` operator. The `:*` comparison can be used to test whether a key has been defined. For example, to find all objects with `owner` label use: ``` labels.owner:* ``` You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ``` If you want to use a regular expression, use the `eq` (equal) or `ne` (not equal) operator against a single un-parenthesized expression with or without quotes or against multiple parenthesized expressions. Examples: `fieldname eq unquoted literal` `fieldname eq 'single quoted literal'` `fieldname eq "double quoted literal"` `(fieldname1 eq literal) (fieldname2 ne "literal")` The literal value is interpreted as a regular expression using Google RE2 library syntax. The literal value must match the entire field. For example, to filter for instances that do not end with name "instance", you would use `name ne .*instance`.
  optional string filter = 336120696;

  // The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)
  optional uint32 max_results = 54715419;

  // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported.
  optional string order_by = 160562920;

  // Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results.
  optional string page_token = 19994697;

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Opt-in for partial success behavior which provides partial results in case of failure. The default value is false.
  optional bool return_partial_success = 517198390;

}

// A request message for TargetVpnGateways.List. See the method description for details.
message ListTargetVpnGatewaysRequest {
  // A filter expression that filters resources listed in the response. Most Compute resources support two types of filter expressions: expressions that support regular expressions and expressions that follow API improvement proposal AIP-160. If you want to use AIP-160, your expression must specify the field name, an operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The operator must be either `=`, `!=`, `>`, `<`, `<=`, `>=` or `:`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. The `:` operator can be used with string fields to match substrings. For non-string fields it is equivalent to the `=` operator. The `:*` comparison can be used to test whether a key has been defined. For example, to find all objects with `owner` label use: ``` labels.owner:* ``` You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ``` If you want to use a regular expression, use the `eq` (equal) or `ne` (not equal) operator against a single un-parenthesized expression with or without quotes or against multiple parenthesized expressions. Examples: `fieldname eq unquoted literal` `fieldname eq 'single quoted literal'` `fieldname eq "double quoted literal"` `(fieldname1 eq literal) (fieldname2 ne "literal")` The literal value is interpreted as a regular expression using Google RE2 library syntax. The literal value must match the entire field. For example, to filter for instances that do not end with name "instance", you would use `name ne .*instance`.
  optional string filter = 336120696;

  // The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)
  optional uint32 max_results = 54715419;

  // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported.
  optional string order_by = 160562920;

  // Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results.
  optional string page_token = 19994697;

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Name of the region for this request.
  string region = 138946292 [(google.api.field_behavior) = REQUIRED];

  // Opt-in for partial success behavior which provides partial results in case of failure. The default value is false.
  optional bool return_partial_success = 517198390;

}

// A request message for UrlMaps.List. See the method description for details.
message ListUrlMapsRequest {
  // A filter expression that filters resources listed in the response. Most Compute resources support two types of filter expressions: expressions that support regular expressions and expressions that follow API improvement proposal AIP-160. If you want to use AIP-160, your expression must specify the field name, an operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The operator must be either `=`, `!=`, `>`, `<`, `<=`, `>=` or `:`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. The `:` operator can be used with string fields to match substrings. For non-string fields it is equivalent to the `=` operator. The `:*` comparison can be used to test whether a key has been defined. For example, to find all objects with `owner` label use: ``` labels.owner:* ``` You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ``` If you want to use a regular expression, use the `eq` (equal) or `ne` (not equal) operator against a single un-parenthesized expression with or without quotes or against multiple parenthesized expressions. Examples: `fieldname eq unquoted literal` `fieldname eq 'single quoted literal'` `fieldname eq "double quoted literal"` `(fieldname1 eq literal) (fieldname2 ne "literal")` The literal value is interpreted as a regular expression using Google RE2 library syntax. The literal value must match the entire field. For example, to filter for instances that do not end with name "instance", you would use `name ne .*instance`.
  optional string filter = 336120696;

  // The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)
  optional uint32 max_results = 54715419;

  // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported.
  optional string order_by = 160562920;

  // Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results.
  optional string page_token = 19994697;

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Opt-in for partial success behavior which provides partial results in case of failure. The default value is false.
  optional bool return_partial_success = 517198390;

}

// A request message for Subnetworks.ListUsable. See the method description for details.
message ListUsableSubnetworksRequest {
  // A filter expression that filters resources listed in the response. Most Compute resources support two types of filter expressions: expressions that support regular expressions and expressions that follow API improvement proposal AIP-160. If you want to use AIP-160, your expression must specify the field name, an operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The operator must be either `=`, `!=`, `>`, `<`, `<=`, `>=` or `:`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. The `:` operator can be used with string fields to match substrings. For non-string fields it is equivalent to the `=` operator. The `:*` comparison can be used to test whether a key has been defined. For example, to find all objects with `owner` label use: ``` labels.owner:* ``` You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ``` If you want to use a regular expression, use the `eq` (equal) or `ne` (not equal) operator against a single un-parenthesized expression with or without quotes or against multiple parenthesized expressions. Examples: `fieldname eq unquoted literal` `fieldname eq 'single quoted literal'` `fieldname eq "double quoted literal"` `(fieldname1 eq literal) (fieldname2 ne "literal")` The literal value is interpreted as a regular expression using Google RE2 library syntax. The literal value must match the entire field. For example, to filter for instances that do not end with name "instance", you would use `name ne .*instance`.
  optional string filter = 336120696;

  // The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)
  optional uint32 max_results = 54715419;

  // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported.
  optional string order_by = 160562920;

  // Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results.
  optional string page_token = 19994697;

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Opt-in for partial success behavior which provides partial results in case of failure. The default value is false.
  optional bool return_partial_success = 517198390;

}

// A request message for VpnGateways.List. See the method description for details.
message ListVpnGatewaysRequest {
  // A filter expression that filters resources listed in the response. Most Compute resources support two types of filter expressions: expressions that support regular expressions and expressions that follow API improvement proposal AIP-160. If you want to use AIP-160, your expression must specify the field name, an operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The operator must be either `=`, `!=`, `>`, `<`, `<=`, `>=` or `:`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. The `:` operator can be used with string fields to match substrings. For non-string fields it is equivalent to the `=` operator. The `:*` comparison can be used to test whether a key has been defined. For example, to find all objects with `owner` label use: ``` labels.owner:* ``` You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ``` If you want to use a regular expression, use the `eq` (equal) or `ne` (not equal) operator against a single un-parenthesized expression with or without quotes or against multiple parenthesized expressions. Examples: `fieldname eq unquoted literal` `fieldname eq 'single quoted literal'` `fieldname eq "double quoted literal"` `(fieldname1 eq literal) (fieldname2 ne "literal")` The literal value is interpreted as a regular expression using Google RE2 library syntax. The literal value must match the entire field. For example, to filter for instances that do not end with name "instance", you would use `name ne .*instance`.
  optional string filter = 336120696;

  // The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)
  optional uint32 max_results = 54715419;

  // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported.
  optional string order_by = 160562920;

  // Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results.
  optional string page_token = 19994697;

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Name of the region for this request.
  string region = 138946292 [(google.api.field_behavior) = REQUIRED];

  // Opt-in for partial success behavior which provides partial results in case of failure. The default value is false.
  optional bool return_partial_success = 517198390;

}

// A request message for VpnTunnels.List. See the method description for details.
message ListVpnTunnelsRequest {
  // A filter expression that filters resources listed in the response. Most Compute resources support two types of filter expressions: expressions that support regular expressions and expressions that follow API improvement proposal AIP-160. If you want to use AIP-160, your expression must specify the field name, an operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The operator must be either `=`, `!=`, `>`, `<`, `<=`, `>=` or `:`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. The `:` operator can be used with string fields to match substrings. For non-string fields it is equivalent to the `=` operator. The `:*` comparison can be used to test whether a key has been defined. For example, to find all objects with `owner` label use: ``` labels.owner:* ``` You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ``` If you want to use a regular expression, use the `eq` (equal) or `ne` (not equal) operator against a single un-parenthesized expression with or without quotes or against multiple parenthesized expressions. Examples: `fieldname eq unquoted literal` `fieldname eq 'single quoted literal'` `fieldname eq "double quoted literal"` `(fieldname1 eq literal) (fieldname2 ne "literal")` The literal value is interpreted as a regular expression using Google RE2 library syntax. The literal value must match the entire field. For example, to filter for instances that do not end with name "instance", you would use `name ne .*instance`.
  optional string filter = 336120696;

  // The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)
  optional uint32 max_results = 54715419;

  // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported.
  optional string order_by = 160562920;

  // Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results.
  optional string page_token = 19994697;

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Name of the region for this request.
  string region = 138946292 [(google.api.field_behavior) = REQUIRED];

  // Opt-in for partial success behavior which provides partial results in case of failure. The default value is false.
  optional bool return_partial_success = 517198390;

}

// A request message for Projects.ListXpnHosts. See the method description for details.
message ListXpnHostsProjectsRequest {
  // A filter expression that filters resources listed in the response. Most Compute resources support two types of filter expressions: expressions that support regular expressions and expressions that follow API improvement proposal AIP-160. If you want to use AIP-160, your expression must specify the field name, an operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The operator must be either `=`, `!=`, `>`, `<`, `<=`, `>=` or `:`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. The `:` operator can be used with string fields to match substrings. For non-string fields it is equivalent to the `=` operator. The `:*` comparison can be used to test whether a key has been defined. For example, to find all objects with `owner` label use: ``` labels.owner:* ``` You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ``` If you want to use a regular expression, use the `eq` (equal) or `ne` (not equal) operator against a single un-parenthesized expression with or without quotes or against multiple parenthesized expressions. Examples: `fieldname eq unquoted literal` `fieldname eq 'single quoted literal'` `fieldname eq "double quoted literal"` `(fieldname1 eq literal) (fieldname2 ne "literal")` The literal value is interpreted as a regular expression using Google RE2 library syntax. The literal value must match the entire field. For example, to filter for instances that do not end with name "instance", you would use `name ne .*instance`.
  optional string filter = 336120696;

  // The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)
  optional uint32 max_results = 54715419;

  // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported.
  optional string order_by = 160562920;

  // Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results.
  optional string page_token = 19994697;

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // The body resource for this request
  ProjectsListXpnHostsRequest projects_list_xpn_hosts_request_resource = 238266391 [(google.api.field_behavior) = REQUIRED];

  // Opt-in for partial success behavior which provides partial results in case of failure. The default value is false.
  optional bool return_partial_success = 517198390;

}

// A request message for ZoneOperations.List. See the method description for details.
message ListZoneOperationsRequest {
  // A filter expression that filters resources listed in the response. Most Compute resources support two types of filter expressions: expressions that support regular expressions and expressions that follow API improvement proposal AIP-160. If you want to use AIP-160, your expression must specify the field name, an operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The operator must be either `=`, `!=`, `>`, `<`, `<=`, `>=` or `:`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. The `:` operator can be used with string fields to match substrings. For non-string fields it is equivalent to the `=` operator. The `:*` comparison can be used to test whether a key has been defined. For example, to find all objects with `owner` label use: ``` labels.owner:* ``` You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ``` If you want to use a regular expression, use the `eq` (equal) or `ne` (not equal) operator against a single un-parenthesized expression with or without quotes or against multiple parenthesized expressions. Examples: `fieldname eq unquoted literal` `fieldname eq 'single quoted literal'` `fieldname eq "double quoted literal"` `(fieldname1 eq literal) (fieldname2 ne "literal")` The literal value is interpreted as a regular expression using Google RE2 library syntax. The literal value must match the entire field. For example, to filter for instances that do not end with name "instance", you would use `name ne .*instance`.
  optional string filter = 336120696;

  // The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)
  optional uint32 max_results = 54715419;

  // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported.
  optional string order_by = 160562920;

  // Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results.
  optional string page_token = 19994697;

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Opt-in for partial success behavior which provides partial results in case of failure. The default value is false.
  optional bool return_partial_success = 517198390;

  // Name of the zone for request.
  string zone = 3744684 [(google.api.field_behavior) = REQUIRED];

}

// A request message for Zones.List. See the method description for details.
message ListZonesRequest {
  // A filter expression that filters resources listed in the response. Most Compute resources support two types of filter expressions: expressions that support regular expressions and expressions that follow API improvement proposal AIP-160. If you want to use AIP-160, your expression must specify the field name, an operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The operator must be either `=`, `!=`, `>`, `<`, `<=`, `>=` or `:`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. The `:` operator can be used with string fields to match substrings. For non-string fields it is equivalent to the `=` operator. The `:*` comparison can be used to test whether a key has been defined. For example, to find all objects with `owner` label use: ``` labels.owner:* ``` You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ``` If you want to use a regular expression, use the `eq` (equal) or `ne` (not equal) operator against a single un-parenthesized expression with or without quotes or against multiple parenthesized expressions. Examples: `fieldname eq unquoted literal` `fieldname eq 'single quoted literal'` `fieldname eq "double quoted literal"` `(fieldname1 eq literal) (fieldname2 ne "literal")` The literal value is interpreted as a regular expression using Google RE2 library syntax. The literal value must match the entire field. For example, to filter for instances that do not end with name "instance", you would use `name ne .*instance`.
  optional string filter = 336120696;

  // The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)
  optional uint32 max_results = 54715419;

  // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported.
  optional string order_by = 160562920;

  // Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results.
  optional string page_token = 19994697;

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Opt-in for partial success behavior which provides partial results in case of failure. The default value is false.
  optional bool return_partial_success = 517198390;

}

//
message LocalDisk {
  // Specifies the number of such disks.
  optional int32 disk_count = 182933485;

  // Specifies the size of the disk in base-2 GB.
  optional int32 disk_size_gb = 316263735;

  // Specifies the desired disk type on the node. This disk type must be a local storage type (e.g.: local-ssd). Note that for nodeTemplates, this should be the name of the disk type and not its URL.
  optional string disk_type = 93009052;

}

// Provides a localized error message that is safe to return to the user which can be attached to an RPC error.
message LocalizedMessage {
  // The locale used following the specification defined at https://www.rfc-editor.org/rfc/bcp/bcp47.txt. Examples are: "en-US", "fr-CH", "es-MX"
  optional string locale = 513150554;

  // The localized error message in the above locale.
  optional string message = 418054151;

}

// Configuration for location policy among multiple possible locations (e.g. preferences for zone selection among zones in a single region).
message LocationPolicy {
  // Strategy for distributing VMs across zones in a region.
  enum TargetShape {
    // A value indicating that the enum field is not set.
    UNDEFINED_TARGET_SHAPE = 0;

    // GCE picks zones for creating VM instances to fulfill the requested number of VMs within present resource constraints and to maximize utilization of unused zonal reservations. Recommended for batch workloads that do not require high availability.
    ANY = 64972;

    // GCE always selects a single zone for all the VMs, optimizing for resource quotas, available reservations and general capacity. Recommended for batch workloads that cannot tollerate distribution over multiple zones. This the default shape in Bulk Insert and Capacity Advisor APIs.
    ANY_SINGLE_ZONE = 61100880;

    // GCE prioritizes acquisition of resources, scheduling VMs in zones where resources are available while distributing VMs as evenly as possible across allowed zones to minimize the impact of zonal failure. Recommended for highly available serving workloads.
    BALANCED = 468409608;

  }

  // Location configurations mapped by location name. Currently only zone names are supported and must be represented as valid internal URLs, such as zones/us-central1-a.
  map<string, LocationPolicyLocation> locations = 413423454;

  // Strategy for distributing VMs across zones in a region.
  // Check the TargetShape enum for the list of possible values.
  optional string target_shape = 338621299;

}

//
message LocationPolicyLocation {
  // Preference for a given location. Set to either ALLOW or DENY.
  enum Preference {
    // A value indicating that the enum field is not set.
    UNDEFINED_PREFERENCE = 0;

    // Location is allowed for use.
    ALLOW = 62368553;

    // Location is prohibited.
    DENY = 2094604;

    // Default value, unused.
    PREFERENCE_UNSPECIFIED = 496219571;

  }

  // Constraints that the caller requires on the result distribution in this zone.
  optional LocationPolicyLocationConstraints constraints = 3909174;

  // Preference for a given location. Set to either ALLOW or DENY.
  // Check the Preference enum for the list of possible values.
  optional string preference = 150781147;

}

// Per-zone constraints on location policy for this zone.
message LocationPolicyLocationConstraints {
  // Maximum number of items that are allowed to be placed in this zone. The value must be non-negative.
  optional int32 max_count = 287620724;

}

// This is deprecated and has no effect. Do not use.
message LogConfig {
  // This is deprecated and has no effect. Do not use.
  optional LogConfigCloudAuditOptions cloud_audit = 412852561;

  // This is deprecated and has no effect. Do not use.
  optional LogConfigCounterOptions counter = 420959740;

  // This is deprecated and has no effect. Do not use.
  optional LogConfigDataAccessOptions data_access = 286633881;

}

// This is deprecated and has no effect. Do not use.
message LogConfigCloudAuditOptions {
  // This is deprecated and has no effect. Do not use.
  enum LogName {
    // A value indicating that the enum field is not set.
    UNDEFINED_LOG_NAME = 0;

    // This is deprecated and has no effect. Do not use.
    ADMIN_ACTIVITY = 427503135;

    // This is deprecated and has no effect. Do not use.
    DATA_ACCESS = 238070681;

    // This is deprecated and has no effect. Do not use.
    UNSPECIFIED_LOG_NAME = 410515182;

  }

  // This is deprecated and has no effect. Do not use.
  optional AuthorizationLoggingOptions authorization_logging_options = 217861624;

  // This is deprecated and has no effect. Do not use.
  // Check the LogName enum for the list of possible values.
  optional string log_name = 402913958;

}

// This is deprecated and has no effect. Do not use.
message LogConfigCounterOptions {
  // This is deprecated and has no effect. Do not use.
  repeated LogConfigCounterOptionsCustomField custom_fields = 249651015;

  // This is deprecated and has no effect. Do not use.
  optional string field = 97427706;

  // This is deprecated and has no effect. Do not use.
  optional string metric = 533067184;

}

// This is deprecated and has no effect. Do not use.
message LogConfigCounterOptionsCustomField {
  // This is deprecated and has no effect. Do not use.
  optional string name = 3373707;

  // This is deprecated and has no effect. Do not use.
  optional string value = 111972721;

}

// This is deprecated and has no effect. Do not use.
message LogConfigDataAccessOptions {
  // This is deprecated and has no effect. Do not use.
  enum LogMode {
    // A value indicating that the enum field is not set.
    UNDEFINED_LOG_MODE = 0;

    // This is deprecated and has no effect. Do not use.
    LOG_FAIL_CLOSED = 360469778;

    // This is deprecated and has no effect. Do not use.
    LOG_MODE_UNSPECIFIED = 88160822;

  }

  // This is deprecated and has no effect. Do not use.
  // Check the LogMode enum for the list of possible values.
  optional string log_mode = 402897342;

}

// Represents a machine image resource. A machine image is a Compute Engine resource that stores all the configuration, metadata, permissions, and data from one or more disks required to create a Virtual machine (VM) instance. For more information, see Machine images.
message MachineImage {
  // [Output Only] The status of the machine image. One of the following values: INVALID, CREATING, READY, DELETING, and UPLOADING.
  enum Status {
    // A value indicating that the enum field is not set.
    UNDEFINED_STATUS = 0;

    CREATING = 455564985;

    DELETING = 528602024;

    INVALID = 530283991;

    READY = 77848963;

    UPLOADING = 267603489;

  }

  // [Output Only] The creation timestamp for this machine image in RFC3339 text format.
  optional string creation_timestamp = 30525366;

  // An optional description of this resource. Provide this property when you create the resource.
  optional string description = 422937596;

  // [Input Only] Whether to attempt an application consistent machine image by informing the OS to prepare for the snapshot process.
  optional bool guest_flush = 385550813;

  // [Output Only] A unique identifier for this machine image. The server defines this identifier.
  optional uint64 id = 3355;

  // [Output Only] Properties of source instance
  optional InstanceProperties instance_properties = 215355165;

  // [Output Only] The resource type, which is always compute#machineImage for machine image.
  optional string kind = 3292052;

  // Encrypts the machine image using a customer-supplied encryption key. After you encrypt a machine image using a customer-supplied key, you must provide the same key if you use the machine image later. For example, you must provide the encryption key when you create an instance from the encrypted machine image in a future request. Customer-supplied encryption keys do not protect access to metadata of the machine image. If you do not provide an encryption key when creating the machine image, then the machine image will be encrypted using an automatically generated key and you do not need to provide a key to use the machine image later.
  optional CustomerEncryptionKey machine_image_encryption_key = 528089087;

  // Name of the resource; provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
  optional string name = 3373707;

  // [Output Only] Reserved for future use.
  optional bool satisfies_pzs = 480964267;

  // An array of Machine Image specific properties for disks attached to the source instance
  repeated SavedDisk saved_disks = 397424318;

  // [Output Only] The URL for this machine image. The server defines this URL.
  optional string self_link = 456214797;

  // [Input Only] The customer-supplied encryption key of the disks attached to the source instance. Required if the source disk is protected by a customer-supplied encryption key.
  repeated SourceDiskEncryptionKey source_disk_encryption_keys = 370408498;

  // The source instance used to create the machine image. You can provide this as a partial or full URL to the resource. For example, the following are valid values: - https://www.googleapis.com/compute/v1/projects/project/zones/zone /instances/instance - projects/project/zones/zone/instances/instance 
  optional string source_instance = 396315705;

  // [Output Only] DEPRECATED: Please use instance_properties instead for source instance related properties. New properties will not be added to this field.
  optional SourceInstanceProperties source_instance_properties = 475195641;

  // [Output Only] The status of the machine image. One of the following values: INVALID, CREATING, READY, DELETING, and UPLOADING.
  // Check the Status enum for the list of possible values.
  optional string status = 181260274;

  // The regional or multi-regional Cloud Storage bucket location where the machine image is stored.
  repeated string storage_locations = 328005274;

  // [Output Only] Total size of the storage used by the machine image.
  optional int64 total_storage_bytes = 81855468;

}

// A list of machine images.
message MachineImageList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 3355;

  // A list of MachineImage resources.
  repeated MachineImage items = 100526016;

  // [Output Only] The resource type, which is always compute#machineImagesListResponse for machine image lists.
  optional string kind = 3292052;

  // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
  optional string next_page_token = 79797525;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 456214797;

  // [Output Only] Informational warning message.
  optional Warning warning = 50704284;

}

// Represents a Machine Type resource. You can use specific machine types for your VM instances based on performance and pricing requirements. For more information, read Machine Types.
message MachineType {
  // [Output Only] A list of accelerator configurations assigned to this machine type.
  repeated Accelerators accelerators = 269577064;

  // [Output Only] Creation timestamp in RFC3339 text format.
  optional string creation_timestamp = 30525366;

  // [Output Only] The deprecation status associated with this machine type. Only applicable if the machine type is unavailable.
  optional DeprecationStatus deprecated = 515138995;

  // [Output Only] An optional textual description of the resource.
  optional string description = 422937596;

  // [Output Only] The number of virtual CPUs that are available to the instance.
  optional int32 guest_cpus = 393356754;

  // [Output Only] The unique identifier for the resource. This identifier is defined by the server.
  optional uint64 id = 3355;

  // [Deprecated] This property is deprecated and will never be populated with any relevant values.
  optional int32 image_space_gb = 75331864;

  // [Output Only] Whether this machine type has a shared CPU. See Shared-core machine types for more information.
  optional bool is_shared_cpu = 521399555;

  // [Output Only] The type of the resource. Always compute#machineType for machine types.
  optional string kind = 3292052;

  // [Output Only] Maximum persistent disks allowed.
  optional int32 maximum_persistent_disks = 496220941;

  // [Output Only] Maximum total persistent disks size (GB) allowed.
  optional int64 maximum_persistent_disks_size_gb = 154274471;

  // [Output Only] The amount of physical memory available to the instance, defined in MB.
  optional int32 memory_mb = 116001171;

  // [Output Only] Name of the resource.
  optional string name = 3373707;

  // [Output Only] A list of extended scratch disks assigned to the instance.
  repeated ScratchDisks scratch_disks = 480778481;

  // [Output Only] Server-defined URL for the resource.
  optional string self_link = 456214797;

  // [Output Only] The name of the zone where the machine type resides, such as us-central1-a.
  optional string zone = 3744684;

}

//
message MachineTypeAggregatedList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 3355;

  // A list of MachineTypesScopedList resources.
  map<string, MachineTypesScopedList> items = 100526016;

  // [Output Only] Type of resource. Always compute#machineTypeAggregatedList for aggregated lists of machine types.
  optional string kind = 3292052;

  // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
  optional string next_page_token = 79797525;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 456214797;

  // [Output Only] Unreachable resources.
  repeated string unreachables = 243372063;

  // [Output Only] Informational warning message.
  optional Warning warning = 50704284;

}

// Contains a list of machine types.
message MachineTypeList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 3355;

  // A list of MachineType resources.
  repeated MachineType items = 100526016;

  // [Output Only] Type of resource. Always compute#machineTypeList for lists of machine types.
  optional string kind = 3292052;

  // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
  optional string next_page_token = 79797525;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 456214797;

  // [Output Only] Informational warning message.
  optional Warning warning = 50704284;

}

//
message MachineTypesScopedList {
  // [Output Only] A list of machine types contained in this scope.
  repeated MachineType machine_types = 79720065;

  // [Output Only] An informational warning that appears when the machine types list is empty.
  optional Warning warning = 50704284;

}

// A Managed Instance resource.
message ManagedInstance {
  // [Output Only] The current action that the managed instance group has scheduled for the instance. Possible values: - NONE The instance is running, and the managed instance group does not have any scheduled actions for this instance. - CREATING The managed instance group is creating this instance. If the group fails to create this instance, it will try again until it is successful. - CREATING_WITHOUT_RETRIES The managed instance group is attempting to create this instance only once. If the group fails to create this instance, it does not try again and the group's targetSize value is decreased instead. - RECREATING The managed instance group is recreating this instance. - DELETING The managed instance group is permanently deleting this instance. - ABANDONING The managed instance group is abandoning this instance. The instance will be removed from the instance group and from any target pools that are associated with this group. - RESTARTING The managed instance group is restarting the instance. - REFRESHING The managed instance group is applying configuration changes to the instance without stopping it. For example, the group can update the target pool list for an instance without stopping that instance. - VERIFYING The managed instance group has created the instance and it is in the process of being verified.
  // Additional supported values which may be not listed in the enum directly due to technical reasons:
  // STOPPING
  // SUSPENDING
  enum CurrentAction {
    // A value indicating that the enum field is not set.
    UNDEFINED_CURRENT_ACTION = 0;

    // The managed instance group is abandoning this instance. The instance will be removed from the instance group and from any target pools that are associated with this group.
    ABANDONING = 388244813;

    // The managed instance group is creating this instance. If the group fails to create this instance, it will try again until it is successful.
    CREATING = 455564985;

    // The managed instance group is attempting to create this instance only once. If the group fails to create this instance, it does not try again and the group's targetSize value is decreased.
    CREATING_WITHOUT_RETRIES = 428843785;

    // The managed instance group is permanently deleting this instance.
    DELETING = 528602024;

    // The managed instance group has not scheduled any actions for this instance.
    NONE = 2402104;

    // The managed instance group is recreating this instance.
    RECREATING = 287278572;

    // The managed instance group is applying configuration changes to the instance without stopping it. For example, the group can update the target pool list for an instance without stopping that instance.
    REFRESHING = 163266343;

    // The managed instance group is restarting this instance.
    RESTARTING = 320534387;

    // The managed instance group is resuming this instance.
    RESUMING = 446856618;

    // The managed instance group is starting this instance.
    STARTING = 488820800;

    // The managed instance group is verifying this already created instance. Verification happens every time the instance is (re)created or restarted and consists of: 1. Waiting until health check specified as part of this managed instance group's autohealing policy reports HEALTHY. Note: Applies only if autohealing policy has a health check specified 2. Waiting for addition verification steps performed as post-instance creation (subject to future extensions).
    VERIFYING = 16982185;

  }

  // [Output Only] The status of the instance. This field is empty when the instance does not exist.
  // Additional supported values which may be not listed in the enum directly due to technical reasons:
  // STOPPING
  // SUSPENDING
  enum InstanceStatus {
    // A value indicating that the enum field is not set.
    UNDEFINED_INSTANCE_STATUS = 0;

    // The Nanny is halted and we are performing tear down tasks like network deprogramming, releasing quota, IP, tearing down disks etc.
    DEPROVISIONING = 428935662;

    // Resources are being allocated for the instance.
    PROVISIONING = 290896621;

    // The instance is in repair.
    REPAIRING = 413483285;

    // The instance is running.
    RUNNING = 121282975;

    // All required resources have been allocated and the instance is being started.
    STAGING = 431072283;

    // The instance has stopped successfully.
    STOPPED = 444276141;

    STOPPING = 350791796;

    // The instance has suspended.
    SUSPENDED = 51223995;

    SUSPENDING = 514206246;

    // The instance has stopped (either by explicit action or underlying failure).
    TERMINATED = 250018339;

  }

  // [Output Only] The current action that the managed instance group has scheduled for the instance. Possible values: - NONE The instance is running, and the managed instance group does not have any scheduled actions for this instance. - CREATING The managed instance group is creating this instance. If the group fails to create this instance, it will try again until it is successful. - CREATING_WITHOUT_RETRIES The managed instance group is attempting to create this instance only once. If the group fails to create this instance, it does not try again and the group's targetSize value is decreased instead. - RECREATING The managed instance group is recreating this instance. - DELETING The managed instance group is permanently deleting this instance. - ABANDONING The managed instance group is abandoning this instance. The instance will be removed from the instance group and from any target pools that are associated with this group. - RESTARTING The managed instance group is restarting the instance. - REFRESHING The managed instance group is applying configuration changes to the instance without stopping it. For example, the group can update the target pool list for an instance without stopping that instance. - VERIFYING The managed instance group has created the instance and it is in the process of being verified.
  // Check the CurrentAction enum for the list of possible values.
  optional string current_action = 178475964;

  // [Output only] The unique identifier for this resource. This field is empty when instance does not exist.
  optional uint64 id = 3355;

  // [Output Only] The URL of the instance. The URL can exist even if the instance has not yet been created.
  optional string instance = 18257045;

  // [Output Only] Health state of the instance per health-check.
  repeated ManagedInstanceInstanceHealth instance_health = 382667078;

  // [Output Only] The status of the instance. This field is empty when the instance does not exist.
  // Check the InstanceStatus enum for the list of possible values.
  optional string instance_status = 174577372;

  // [Output Only] Information about the last attempt to create or delete the instance.
  optional ManagedInstanceLastAttempt last_attempt = 434771492;

  // [Output Only] Preserved state applied from per-instance config for this instance.
  optional PreservedState preserved_state_from_config = 98661858;

  // [Output Only] Preserved state generated based on stateful policy for this instance.
  optional PreservedState preserved_state_from_policy = 470783954;

  // [Output Only] Intended version of this instance.
  optional ManagedInstanceVersion version = 351608024;

}

//
message ManagedInstanceInstanceHealth {
  // [Output Only] The current detailed instance health state.
  enum DetailedHealthState {
    // A value indicating that the enum field is not set.
    UNDEFINED_DETAILED_HEALTH_STATE = 0;

    // The instance is being drained. The existing connections to the instance have time to complete, but the new ones are being refused.
    DRAINING = 480455402;

    // The instance is reachable i.e. a connection to the application health checking endpoint can be established, and conforms to the requirements defined by the health check.
    HEALTHY = 439801213;

    // The instance is unreachable i.e. a connection to the application health checking endpoint cannot be established, or the server does not respond within the specified timeout.
    TIMEOUT = 477813057;

    // The instance is reachable, but does not conform to the requirements defined by the health check.
    UNHEALTHY = 462118084;

    // The health checking system is aware of the instance but its health is not known at the moment.
    UNKNOWN = 433141802;

  }

  // [Output Only] The current detailed instance health state.
  // Check the DetailedHealthState enum for the list of possible values.
  optional string detailed_health_state = 510470173;

  // [Output Only] The URL for the health check that verifies whether the instance is healthy.
  optional string health_check = 308876645;

}

//
message ManagedInstanceLastAttempt {
  // [Output Only] Encountered errors during the last attempt to create or delete the instance.
  optional Errors errors = 315977579;

}

//
message ManagedInstanceVersion {
  // [Output Only] The intended template of the instance. This field is empty when current_action is one of { DELETING, ABANDONING }.
  optional string instance_template = 309248228;

  // [Output Only] Name of the version.
  optional string name = 3373707;

}

// A metadata key/value entry.
message Metadata {
  // Specifies a fingerprint for this request, which is essentially a hash of the metadata's contents and used for optimistic locking. The fingerprint is initially generated by Compute Engine and changes after every request to modify or update metadata. You must always provide an up-to-date fingerprint hash in order to update or change metadata, otherwise the request will fail with error 412 conditionNotMet. To see the latest fingerprint, make a get() request to retrieve the resource.
  optional string fingerprint = 234678500;

  // Array of key/value pairs. The total size of all keys and values must be less than 512 KB.
  repeated Items items = 100526016;

  // [Output Only] Type of the resource. Always compute#metadata for metadata.
  optional string kind = 3292052;

}

// Opaque filter criteria used by load balancers to restrict routing configuration to a limited set of load balancing proxies. Proxies and sidecars involved in load balancing would typically present metadata to the load balancers that need to match criteria specified here. If a match takes place, the relevant configuration is made available to those proxies. For each metadataFilter in this list, if its filterMatchCriteria is set to MATCH_ANY, at least one of the filterLabels must match the corresponding label provided in the metadata. If its filterMatchCriteria is set to MATCH_ALL, then all of its filterLabels must match with corresponding labels provided in the metadata. An example for using metadataFilters would be: if load balancing involves Envoys, they receive routing configuration when values in metadataFilters match values supplied in of their XDS requests to loadbalancers.
message MetadataFilter {
  // Specifies how individual filter label matches within the list of filterLabels and contributes toward the overall metadataFilter match. Supported values are: - MATCH_ANY: at least one of the filterLabels must have a matching label in the provided metadata. - MATCH_ALL: all filterLabels must have matching labels in the provided metadata. 
  enum FilterMatchCriteria {
    // A value indicating that the enum field is not set.
    UNDEFINED_FILTER_MATCH_CRITERIA = 0;

    // Specifies that all filterLabels must match for the metadataFilter to be considered a match.
    MATCH_ALL = 180663271;

    // Specifies that any filterLabel must match for the metadataFilter to be considered a match.
    MATCH_ANY = 180663346;

    // Indicates that the match criteria was not set. A metadataFilter must never be created with this value.
    NOT_SET = 163646646;

  }

  // The list of label value pairs that must match labels in the provided metadata based on filterMatchCriteria This list must not be empty and can have at the most 64 entries.
  repeated MetadataFilterLabelMatch filter_labels = 307903142;

  // Specifies how individual filter label matches within the list of filterLabels and contributes toward the overall metadataFilter match. Supported values are: - MATCH_ANY: at least one of the filterLabels must have a matching label in the provided metadata. - MATCH_ALL: all filterLabels must have matching labels in the provided metadata.
  // Check the FilterMatchCriteria enum for the list of possible values.
  optional string filter_match_criteria = 239970368;

}

// MetadataFilter label name value pairs that are expected to match corresponding labels presented as metadata to the load balancer.
message MetadataFilterLabelMatch {
  // Name of metadata label. The name can have a maximum length of 1024 characters and must be at least 1 character long.
  optional string name = 3373707;

  // The value of the label must match the specified value. value can have a maximum length of 1024 characters.
  optional string value = 111972721;

}

// A request message for Projects.MoveDisk. See the method description for details.
message MoveDiskProjectRequest {
  // The body resource for this request
  DiskMoveRequest disk_move_request_resource = 313008458 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

}

// A request message for FirewallPolicies.Move. See the method description for details.
message MoveFirewallPolicyRequest {
  // Name of the firewall policy to update.
  string firewall_policy = 498173265 [(google.api.field_behavior) = REQUIRED];

  // The new parent of the firewall policy. The ID can be either be "folders/[FOLDER_ID]" if the parent is a folder or "organizations/[ORGANIZATION_ID]" if the parent is an organization.
  string parent_id = 459714768 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "parent_id"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

}

// A request message for Projects.MoveInstance. See the method description for details.
message MoveInstanceProjectRequest {
  // The body resource for this request
  InstanceMoveRequest instance_move_request_resource = 311664194 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

}

// The named port. For example: <"http", 80>.
message NamedPort {
  // The name for this named port. The name must be 1-63 characters long, and comply with RFC1035.
  optional string name = 3373707;

  // The port number, which can be a value between 1 and 65535.
  optional int32 port = 3446913;

}

// Represents a VPC Network resource. Networks connect resources to each other and to the internet. For more information, read Virtual Private Cloud (VPC) Network.
message Network {
  // The network firewall policy enforcement order. Can be either AFTER_CLASSIC_FIREWALL or BEFORE_CLASSIC_FIREWALL. Defaults to AFTER_CLASSIC_FIREWALL if the field is not specified.
  enum NetworkFirewallPolicyEnforcementOrder {
    // A value indicating that the enum field is not set.
    UNDEFINED_NETWORK_FIREWALL_POLICY_ENFORCEMENT_ORDER = 0;

    AFTER_CLASSIC_FIREWALL = 154582608;

    BEFORE_CLASSIC_FIREWALL = 338458349;

  }

  // Deprecated in favor of subnet mode networks. The range of internal addresses that are legal on this network. This range is a CIDR specification, for example: 192.168.0.0/16. Provided by the client when the network is created.
  optional string I_pv4_range = 59234358;

  // Must be set to create a VPC network. If not set, a legacy network is created. When set to true, the VPC network is created in auto mode. When set to false, the VPC network is created in custom mode. An auto mode VPC network starts with one subnet per region. Each subnet has a predetermined range as described in Auto mode VPC network IP ranges. For custom mode VPC networks, you can add subnets using the subnetworks insert method.
  optional bool auto_create_subnetworks = 256156690;

  // [Output Only] Creation timestamp in RFC3339 text format.
  optional string creation_timestamp = 30525366;

  // An optional description of this resource. Provide this field when you create the resource.
  optional string description = 422937596;

  // Enable ULA internal ipv6 on this network. Enabling this feature will assign a /48 from google defined ULA prefix fd20::/20. .
  optional bool enable_ula_internal_ipv6 = 423757720;

  // [Output Only] URL of the firewall policy the network is associated with.
  optional string firewall_policy = 498173265;

  // [Output Only] The gateway address for default routing out of the network, selected by GCP.
  optional string gateway_i_pv4 = 178678877;

  // [Output Only] The unique identifier for the resource. This identifier is defined by the server.
  optional uint64 id = 3355;

  // When enabling ula internal ipv6, caller optionally can specify the /48 range they want from the google defined ULA prefix fd20::/20. The input must be a valid /48 ULA IPv6 address and must be within the fd20::/20. Operation will fail if the speficied /48 is already in used by another resource. If the field is not speficied, then a /48 range will be randomly allocated from fd20::/20 and returned via this field. .
  optional string internal_ipv6_range = 277456807;

  // [Output Only] Type of the resource. Always compute#network for networks.
  optional string kind = 3292052;

  // Maximum Transmission Unit in bytes. The minimum value for this field is 1300 and the maximum value is 8896. The suggested value is 1500, which is the default MTU used on the Internet, or 8896 if you want to use Jumbo frames. If unspecified, the value defaults to 1460.
  optional int32 mtu = 108462;

  // Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?`. The first character must be a lowercase letter, and all following characters (except for the last character) must be a dash, lowercase letter, or digit. The last character must be a lowercase letter or digit.
  optional string name = 3373707;

  // The network firewall policy enforcement order. Can be either AFTER_CLASSIC_FIREWALL or BEFORE_CLASSIC_FIREWALL. Defaults to AFTER_CLASSIC_FIREWALL if the field is not specified.
  // Check the NetworkFirewallPolicyEnforcementOrder enum for the list of possible values.
  optional string network_firewall_policy_enforcement_order = 6504784;

  // [Output Only] A list of network peerings for the resource.
  repeated NetworkPeering peerings = 69883187;

  // The network-level routing configuration for this network. Used by Cloud Router to determine what type of network-wide routing behavior to enforce.
  optional NetworkRoutingConfig routing_config = 523556059;

  // [Output Only] Server-defined URL for the resource.
  optional string self_link = 456214797;

  // [Output Only] Server-defined URL for this resource with the resource id.
  optional string self_link_with_id = 44520962;

  // [Output Only] Server-defined fully-qualified URLs for all subnetworks in this VPC network.
  repeated string subnetworks = 415853125;

}

// NetworkAttachments A network attachment resource ...
message NetworkAttachment {
  //
  enum ConnectionPreference {
    // A value indicating that the enum field is not set.
    UNDEFINED_CONNECTION_PREFERENCE = 0;

    ACCEPT_AUTOMATIC = 75250580;

    ACCEPT_MANUAL = 373061341;

    INVALID = 530283991;

  }

  // [Output Only] An array of connections for all the producers connected to this network attachment.
  repeated NetworkAttachmentConnectedEndpoint connection_endpoints = 326078813;

  // 
  // Check the ConnectionPreference enum for the list of possible values.
  optional string connection_preference = 285818076;

  // [Output Only] Creation timestamp in RFC3339 text format.
  optional string creation_timestamp = 30525366;

  // An optional description of this resource. Provide this property when you create the resource.
  optional string description = 422937596;

  // [Output Only] Fingerprint of this resource. A hash of the contents stored in this object. This field is used in optimistic locking. An up-to-date fingerprint must be provided in order to patch.
  optional string fingerprint = 234678500;

  // [Output Only] The unique identifier for the resource type. The server generates this identifier.
  optional uint64 id = 3355;

  // [Output Only] Type of the resource.
  optional string kind = 3292052;

  // Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
  optional string name = 3373707;

  // [Output Only] The URL of the network which the Network Attachment belongs to.
  optional string network = 232872494;

  // Projects that are allowed to connect to this network attachment. The project can be specified using its id or number.
  repeated string producer_accept_lists = 202804523;

  // Projects that are not allowed to connect to this network attachment. The project can be specified using its id or number.
  repeated string producer_reject_lists = 4112002;

  // [Output Only] URL of the region where the network attachment resides. This field applies only to the region resource. You must specify this field as part of the HTTP request URL. It is not settable as a field in the request body.
  optional string region = 138946292;

  // [Output Only] Server-defined URL for the resource.
  optional string self_link = 456214797;

  // [Output Only] Server-defined URL for this resource's resource id.
  optional string self_link_with_id = 44520962;

  // An array of URLs where each entry is the URL of a subnet provided by the service consumer to use for endpoints in the producers that connect to this network attachment.
  repeated string subnetworks = 415853125;

}

// Contains a list of NetworkAttachmentsScopedList.
message NetworkAttachmentAggregatedList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 3355;

  // A list of NetworkAttachmentsScopedList resources.
  map<string, NetworkAttachmentsScopedList> items = 100526016;

  optional string kind = 3292052;

  // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
  optional string next_page_token = 79797525;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 456214797;

  // [Output Only] Informational warning message.
  optional Warning warning = 50704284;

}

// [Output Only] A connection connected to this network attachment.
message NetworkAttachmentConnectedEndpoint {
  // The status of a connected endpoint to this network attachment.
  enum Status {
    // A value indicating that the enum field is not set.
    UNDEFINED_STATUS = 0;

    // The consumer allows traffic from the producer to reach its VPC.
    ACCEPTED = 246714279;

    // The consumer network attachment no longer exists.
    CLOSED = 380163436;

    // The consumer needs to take further action before traffic can be served.
    NEEDS_ATTENTION = 344491452;

    // The consumer neither allows nor prohibits traffic from the producer to reach its VPC.
    PENDING = 35394935;

    // The consumer prohibits traffic from the producer to reach its VPC.
    REJECTED = 174130302;

    STATUS_UNSPECIFIED = 42133066;

  }

  // The IP address assigned to the producer instance network interface. This value will be a range in case of Serverless.
  optional string ip_address = 406272220;

  // The project id or number of the interface to which the IP was assigned.
  optional string project_id_or_num = 349783336;

  // Alias IP ranges from the same subnetwork
  repeated string secondary_ip_cidr_ranges = 117184788;

  // The status of a connected endpoint to this network attachment.
  // Check the Status enum for the list of possible values.
  optional string status = 181260274;

  // The subnetwork used to assign the IP to the producer instance network interface.
  optional string subnetwork = 307827694;

}

//
message NetworkAttachmentList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 3355;

  // A list of NetworkAttachment resources.
  repeated NetworkAttachment items = 100526016;

  optional string kind = 3292052;

  // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
  optional string next_page_token = 79797525;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 456214797;

  // [Output Only] Informational warning message.
  optional Warning warning = 50704284;

}

//
message NetworkAttachmentsScopedList {
  // A list of NetworkAttachments contained in this scope.
  repeated NetworkAttachment network_attachments = 521514783;

  // Informational warning which replaces the list of network attachments when the list is empty.
  optional Warning warning = 50704284;

}

// Represents a Google Cloud Armor network edge security service resource.
message NetworkEdgeSecurityService {
  // [Output Only] Creation timestamp in RFC3339 text format.
  optional string creation_timestamp = 30525366;

  // An optional description of this resource. Provide this property when you create the resource.
  optional string description = 422937596;

  // Fingerprint of this resource. A hash of the contents stored in this object. This field is used in optimistic locking. This field will be ignored when inserting a NetworkEdgeSecurityService. An up-to-date fingerprint must be provided in order to update the NetworkEdgeSecurityService, otherwise the request will fail with error 412 conditionNotMet. To see the latest fingerprint, make a get() request to retrieve a NetworkEdgeSecurityService.
  optional string fingerprint = 234678500;

  // [Output Only] The unique identifier for the resource. This identifier is defined by the server.
  optional uint64 id = 3355;

  // [Output only] Type of the resource. Always compute#networkEdgeSecurityService for NetworkEdgeSecurityServices
  optional string kind = 3292052;

  // Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
  optional string name = 3373707;

  // [Output Only] URL of the region where the resource resides. You must specify this field as part of the HTTP request URL. It is not settable as a field in the request body.
  optional string region = 138946292;

  // The resource URL for the network edge security service associated with this network edge security service.
  optional string security_policy = 171082513;

  // [Output Only] Server-defined URL for the resource.
  optional string self_link = 456214797;

  // [Output Only] Server-defined URL for this resource with the resource id.
  optional string self_link_with_id = 44520962;

}

//
message NetworkEdgeSecurityServiceAggregatedList {
  optional string etag = 3123477;

  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 3355;

  // A list of NetworkEdgeSecurityServicesScopedList resources.
  map<string, NetworkEdgeSecurityServicesScopedList> items = 100526016;

  // [Output Only] Type of resource. Always compute#networkEdgeSecurityServiceAggregatedList for lists of Network Edge Security Services.
  optional string kind = 3292052;

  // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
  optional string next_page_token = 79797525;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 456214797;

  // [Output Only] Unreachable resources.
  repeated string unreachables = 243372063;

  // [Output Only] Informational warning message.
  optional Warning warning = 50704284;

}

//
message NetworkEdgeSecurityServicesScopedList {
  // A list of NetworkEdgeSecurityServices contained in this scope.
  repeated NetworkEdgeSecurityService network_edge_security_services = 35530156;

  // Informational warning which replaces the list of security policies when the list is empty.
  optional Warning warning = 50704284;

}

// The network endpoint.
message NetworkEndpoint {
  // Metadata defined as annotations on the network endpoint.
  map<string, string> annotations = 112032548;

  // Optional fully qualified domain name of network endpoint. This can only be specified when NetworkEndpointGroup.network_endpoint_type is NON_GCP_FQDN_PORT.
  optional string fqdn = 3150485;

  // The name for a specific VM instance that the IP address belongs to. This is required for network endpoints of type GCE_VM_IP_PORT. The instance must be in the same zone of network endpoint group. The name must be 1-63 characters long, and comply with RFC1035.
  optional string instance = 18257045;

  // Optional IPv4 address of network endpoint. The IP address must belong to a VM in Compute Engine (either the primary IP or as part of an aliased IP range). If the IP address is not specified, then the primary IP address for the VM instance in the network that the network endpoint group belongs to will be used.
  optional string ip_address = 406272220;

  // Optional port number of network endpoint. If not specified, the defaultPort for the network endpoint group will be used.
  optional int32 port = 3446913;

}

// Represents a collection of network endpoints. A network endpoint group (NEG) defines how a set of endpoints should be reached, whether they are reachable, and where they are located. For more information about using NEGs, see Setting up external HTTP(S) Load Balancing with internet NEGs, Setting up zonal NEGs, or Setting up external HTTP(S) Load Balancing with serverless NEGs.
message NetworkEndpointGroup {
  // Type of network endpoints in this network endpoint group. Can be one of GCE_VM_IP, GCE_VM_IP_PORT, NON_GCP_PRIVATE_IP_PORT, INTERNET_FQDN_PORT, INTERNET_IP_PORT, SERVERLESS, PRIVATE_SERVICE_CONNECT.
  enum NetworkEndpointType {
    // A value indicating that the enum field is not set.
    UNDEFINED_NETWORK_ENDPOINT_TYPE = 0;

    // The network endpoint is represented by an IP address.
    GCE_VM_IP = 401880793;

    // The network endpoint is represented by IP address and port pair.
    GCE_VM_IP_PORT = 501838375;

    // The network endpoint is represented by fully qualified domain name and port.
    INTERNET_FQDN_PORT = 404154477;

    // The network endpoint is represented by an internet IP address and port.
    INTERNET_IP_PORT = 477719963;

    // The network endpoint is represented by an IP address and port. The endpoint belongs to a VM or pod running in a customer's on-premises.
    NON_GCP_PRIVATE_IP_PORT = 336447968;

    // The network endpoint is either public Google APIs or services exposed by other GCP Project with a Service Attachment. The connection is set up by private service connect
    PRIVATE_SERVICE_CONNECT = 48134724;

    // The network endpoint is handled by specified serverless infrastructure.
    SERVERLESS = 270492508;

  }

  // Metadata defined as annotations on the network endpoint group.
  map<string, string> annotations = 112032548;

  // Only valid when networkEndpointType is "SERVERLESS". Only one of cloudRun, appEngine or cloudFunction may be set.
  optional NetworkEndpointGroupAppEngine app_engine = 340788768;

  // Only valid when networkEndpointType is "SERVERLESS". Only one of cloudRun, appEngine or cloudFunction may be set.
  optional NetworkEndpointGroupCloudFunction cloud_function = 519893666;

  // Only valid when networkEndpointType is "SERVERLESS". Only one of cloudRun, appEngine or cloudFunction may be set.
  optional NetworkEndpointGroupCloudRun cloud_run = 111060353;

  // [Output Only] Creation timestamp in RFC3339 text format.
  optional string creation_timestamp = 30525366;

  // The default port used if the port number is not specified in the network endpoint.
  optional int32 default_port = 423377855;

  // An optional description of this resource. Provide this property when you create the resource.
  optional string description = 422937596;

  // [Output Only] The unique identifier for the resource. This identifier is defined by the server.
  optional uint64 id = 3355;

  // [Output Only] Type of the resource. Always compute#networkEndpointGroup for network endpoint group.
  optional string kind = 3292052;

  // Name of the resource; provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
  optional string name = 3373707;

  // The URL of the network to which all network endpoints in the NEG belong. Uses "default" project network if unspecified.
  optional string network = 232872494;

  // Type of network endpoints in this network endpoint group. Can be one of GCE_VM_IP, GCE_VM_IP_PORT, NON_GCP_PRIVATE_IP_PORT, INTERNET_FQDN_PORT, INTERNET_IP_PORT, SERVERLESS, PRIVATE_SERVICE_CONNECT.
  // Check the NetworkEndpointType enum for the list of possible values.
  optional string network_endpoint_type = 118301523;

  optional NetworkEndpointGroupPscData psc_data = 71937481;

  // The target service url used to set up private service connection to a Google API or a PSC Producer Service Attachment. An example value is: "asia-northeast3-cloudkms.googleapis.com"
  optional string psc_target_service = 269132134;

  // [Output Only] The URL of the region where the network endpoint group is located.
  optional string region = 138946292;

  // [Output Only] Server-defined URL for the resource.
  optional string self_link = 456214797;

  // [Output only] Number of network endpoints in the network endpoint group.
  optional int32 size = 3530753;

  // Optional URL of the subnetwork to which all network endpoints in the NEG belong.
  optional string subnetwork = 307827694;

  // [Output Only] The URL of the zone where the network endpoint group is located.
  optional string zone = 3744684;

}

//
message NetworkEndpointGroupAggregatedList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 3355;

  // A list of NetworkEndpointGroupsScopedList resources.
  map<string, NetworkEndpointGroupsScopedList> items = 100526016;

  // [Output Only] The resource type, which is always compute#networkEndpointGroupAggregatedList for aggregated lists of network endpoint groups.
  optional string kind = 3292052;

  // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
  optional string next_page_token = 79797525;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 456214797;

  // [Output Only] Unreachable resources.
  repeated string unreachables = 243372063;

  // [Output Only] Informational warning message.
  optional Warning warning = 50704284;

}

// Configuration for an App Engine network endpoint group (NEG). The service is optional, may be provided explicitly or in the URL mask. The version is optional and can only be provided explicitly or in the URL mask when service is present. Note: App Engine service must be in the same project and located in the same region as the Serverless NEG.
message NetworkEndpointGroupAppEngine {
  // Optional serving service. The service name is case-sensitive and must be 1-63 characters long. Example value: "default", "my-service".
  optional string service = 373540533;

  // A template to parse service and version fields from a request URL. URL mask allows for routing to multiple App Engine services without having to create multiple Network Endpoint Groups and backend services. For example, the request URLs "foo1-dot-appname.appspot.com/v1" and "foo1-dot-appname.appspot.com/v2" can be backed by the same Serverless NEG with URL mask "<service>-dot-appname.appspot.com/<version>". The URL mask will parse them to { service = "foo1", version = "v1" } and { service = "foo1", version = "v2" } respectively.
  optional string url_mask = 103352252;

  // Optional serving version. The version name is case-sensitive and must be 1-100 characters long. Example value: "v1", "v2".
  optional string version = 351608024;

}

// Configuration for a Cloud Function network endpoint group (NEG). The function must be provided explicitly or in the URL mask. Note: Cloud Function must be in the same project and located in the same region as the Serverless NEG.
message NetworkEndpointGroupCloudFunction {
  // A user-defined name of the Cloud Function. The function name is case-sensitive and must be 1-63 characters long. Example value: "func1".
  optional string function = 307196888;

  // A template to parse function field from a request URL. URL mask allows for routing to multiple Cloud Functions without having to create multiple Network Endpoint Groups and backend services. For example, request URLs " mydomain.com/function1" and "mydomain.com/function2" can be backed by the same Serverless NEG with URL mask "/<function>". The URL mask will parse them to { function = "function1" } and { function = "function2" } respectively.
  optional string url_mask = 103352252;

}

// Configuration for a Cloud Run network endpoint group (NEG). The service must be provided explicitly or in the URL mask. The tag is optional, may be provided explicitly or in the URL mask. Note: Cloud Run service must be in the same project and located in the same region as the Serverless NEG.
message NetworkEndpointGroupCloudRun {
  // Cloud Run service is the main resource of Cloud Run. The service must be 1-63 characters long, and comply with RFC1035. Example value: "run-service".
  optional string service = 373540533;

  // Optional Cloud Run tag represents the "named-revision" to provide additional fine-grained traffic routing information. The tag must be 1-63 characters long, and comply with RFC1035. Example value: "revision-0010".
  optional string tag = 114586;

  // A template to parse <service> and <tag> fields from a request URL. URL mask allows for routing to multiple Run services without having to create multiple network endpoint groups and backend services. For example, request URLs "foo1.domain.com/bar1" and "foo1.domain.com/bar2" can be backed by the same Serverless Network Endpoint Group (NEG) with URL mask "<tag>.domain.com/<service>". The URL mask will parse them to { service="bar1", tag="foo1" } and { service="bar2", tag="foo2" } respectively.
  optional string url_mask = 103352252;

}

//
message NetworkEndpointGroupList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 3355;

  // A list of NetworkEndpointGroup resources.
  repeated NetworkEndpointGroup items = 100526016;

  // [Output Only] The resource type, which is always compute#networkEndpointGroupList for network endpoint group lists.
  optional string kind = 3292052;

  // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
  optional string next_page_token = 79797525;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 456214797;

  // [Output Only] Informational warning message.
  optional Warning warning = 50704284;

}

// All data that is specifically relevant to only network endpoint groups of type PRIVATE_SERVICE_CONNECT.
message NetworkEndpointGroupPscData {
  // [Output Only] The connection status of the PSC Forwarding Rule.
  enum PscConnectionStatus {
    // A value indicating that the enum field is not set.
    UNDEFINED_PSC_CONNECTION_STATUS = 0;

    // The connection has been accepted by the producer.
    ACCEPTED = 246714279;

    // The connection has been closed by the producer and will not serve traffic going forward.
    CLOSED = 380163436;

    // The connection has been accepted by the producer, but the producer needs to take further action before the forwarding rule can serve traffic.
    NEEDS_ATTENTION = 344491452;

    // The connection is pending acceptance by the producer.
    PENDING = 35394935;

    // The connection has been rejected by the producer.
    REJECTED = 174130302;

    STATUS_UNSPECIFIED = 42133066;

  }

  // [Output Only] Address allocated from given subnetwork for PSC. This IP address acts as a VIP for a PSC NEG, allowing it to act as an endpoint in L7 PSC-XLB.
  optional string consumer_psc_address = 452646572;

  // [Output Only] The PSC connection id of the PSC Network Endpoint Group Consumer.
  optional uint64 psc_connection_id = 292082397;

  // [Output Only] The connection status of the PSC Forwarding Rule.
  // Check the PscConnectionStatus enum for the list of possible values.
  optional string psc_connection_status = 184149172;

}

//
message NetworkEndpointGroupsAttachEndpointsRequest {
  // The list of network endpoints to be attached.
  repeated NetworkEndpoint network_endpoints = 149850285;

}

//
message NetworkEndpointGroupsDetachEndpointsRequest {
  // The list of network endpoints to be detached.
  repeated NetworkEndpoint network_endpoints = 149850285;

}

//
message NetworkEndpointGroupsListEndpointsRequest {
  // Optional query parameter for showing the health status of each network endpoint. Valid options are SKIP or SHOW. If you don't specify this parameter, the health status of network endpoints will not be provided.
  enum HealthStatus {
    // A value indicating that the enum field is not set.
    UNDEFINED_HEALTH_STATUS = 0;

    // Show the health status for each network endpoint. Impacts latency of the call.
    SHOW = 2544381;

    // Health status for network endpoints will not be provided.
    SKIP = 2547071;

  }

  // Optional query parameter for showing the health status of each network endpoint. Valid options are SKIP or SHOW. If you don't specify this parameter, the health status of network endpoints will not be provided.
  // Check the HealthStatus enum for the list of possible values.
  optional string health_status = 380545845;

}

//
message NetworkEndpointGroupsListNetworkEndpoints {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 3355;

  // A list of NetworkEndpointWithHealthStatus resources.
  repeated NetworkEndpointWithHealthStatus items = 100526016;

  // [Output Only] The resource type, which is always compute#networkEndpointGroupsListNetworkEndpoints for the list of network endpoints in the specified network endpoint group.
  optional string kind = 3292052;

  // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
  optional string next_page_token = 79797525;

  // [Output Only] Informational warning message.
  optional Warning warning = 50704284;

}

//
message NetworkEndpointGroupsScopedList {
  // [Output Only] The list of network endpoint groups that are contained in this scope.
  repeated NetworkEndpointGroup network_endpoint_groups = 29346733;

  // [Output Only] An informational warning that replaces the list of network endpoint groups when the list is empty.
  optional Warning warning = 50704284;

}

//
message NetworkEndpointWithHealthStatus {
  // [Output only] The health status of network endpoint;
  repeated HealthStatusForNetworkEndpoint healths = 258689431;

  // [Output only] The network endpoint;
  optional NetworkEndpoint network_endpoint = 56789126;

}

// A network interface resource attached to an instance.
message NetworkInterface {
  // [Output Only] One of EXTERNAL, INTERNAL to indicate whether the IP can be accessed from the Internet. This field is always inherited from its subnetwork. Valid only if stackType is IPV4_IPV6.
  enum Ipv6AccessType {
    // A value indicating that the enum field is not set.
    UNDEFINED_IPV6_ACCESS_TYPE = 0;

    // This network interface can have external IPv6.
    EXTERNAL = 35607499;

    // This network interface can have internal IPv6.
    INTERNAL = 279295677;

    UNSPECIFIED_IPV6_ACCESS_TYPE = 313080613;

  }

  // The type of vNIC to be used on this interface. This may be gVNIC or VirtioNet.
  enum NicType {
    // A value indicating that the enum field is not set.
    UNDEFINED_NIC_TYPE = 0;

    // GVNIC
    GVNIC = 68209305;

    // No type specified.
    UNSPECIFIED_NIC_TYPE = 67411801;

    // VIRTIO
    VIRTIO_NET = 452123481;

  }

  // The stack type for this network interface to identify whether the IPv6 feature is enabled or not. If not specified, IPV4_ONLY will be used. This field can be both set at instance creation and update network interface operations.
  enum StackType {
    // A value indicating that the enum field is not set.
    UNDEFINED_STACK_TYPE = 0;

    // The network interface can have both IPv4 and IPv6 addresses.
    IPV4_IPV6 = 22197249;

    // The network interface will be assigned IPv4 address.
    IPV4_ONLY = 22373798;

    UNSPECIFIED_STACK_TYPE = 298084569;

  }

  // An array of configurations for this interface. Currently, only one access config, ONE_TO_ONE_NAT, is supported. If there are no accessConfigs specified, then this instance will have no external internet access.
  repeated AccessConfig access_configs = 111058326;

  // An array of alias IP ranges for this network interface. You can only specify this field for network interfaces in VPC networks.
  repeated AliasIpRange alias_ip_ranges = 165085631;

  // Fingerprint hash of contents stored in this network interface. This field will be ignored when inserting an Instance or adding a NetworkInterface. An up-to-date fingerprint must be provided in order to update the NetworkInterface. The request will fail with error 400 Bad Request if the fingerprint is not provided, or 412 Precondition Failed if the fingerprint is out of date.
  optional string fingerprint = 234678500;

  // The prefix length of the primary internal IPv6 range.
  optional int32 internal_ipv6_prefix_length = 203833757;

  // An array of IPv6 access configurations for this interface. Currently, only one IPv6 access config, DIRECT_IPV6, is supported. If there is no ipv6AccessConfig specified, then this instance will have no external IPv6 Internet access.
  repeated AccessConfig ipv6_access_configs = 483472110;

  // [Output Only] One of EXTERNAL, INTERNAL to indicate whether the IP can be accessed from the Internet. This field is always inherited from its subnetwork. Valid only if stackType is IPV4_IPV6.
  // Check the Ipv6AccessType enum for the list of possible values.
  optional string ipv6_access_type = 504658653;

  // An IPv6 internal network address for this network interface. To use a static internal IP address, it must be unused and in the same region as the instance's zone. If not specified, Google Cloud will automatically assign an internal IPv6 address from the instance's subnetwork.
  optional string ipv6_address = 341563804;

  // [Output Only] Type of the resource. Always compute#networkInterface for network interfaces.
  optional string kind = 3292052;

  // [Output Only] The name of the network interface, which is generated by the server. For a VM, the network interface uses the nicN naming format. Where N is a value between 0 and 7. The default interface value is nic0.
  optional string name = 3373707;

  // URL of the VPC network resource for this instance. When creating an instance, if neither the network nor the subnetwork is specified, the default network global/networks/default is used. If the selected project doesn't have the default network, you must specify a network or subnet. If the network is not specified but the subnetwork is specified, the network is inferred. If you specify this property, you can specify the network as a full or partial URL. For example, the following are all valid URLs: - https://www.googleapis.com/compute/v1/projects/project/global/networks/ network - projects/project/global/networks/network - global/networks/default 
  optional string network = 232872494;

  // The URL of the network attachment that this interface should connect to in the following format: projects/{project_number}/regions/{region_name}/networkAttachments/{network_attachment_name}.
  optional string network_attachment = 224644052;

  // An IPv4 internal IP address to assign to the instance for this network interface. If not specified by the user, an unused internal IP is assigned by the system.
  optional string network_i_p = 207181961;

  // The type of vNIC to be used on this interface. This may be gVNIC or VirtioNet.
  // Check the NicType enum for the list of possible values.
  optional string nic_type = 59810577;

  // The networking queue count that's specified by users for the network interface. Both Rx and Tx queues will be set to this number. It'll be empty if not specified by the users.
  optional int32 queue_count = 503708769;

  // The stack type for this network interface to identify whether the IPv6 feature is enabled or not. If not specified, IPV4_ONLY will be used. This field can be both set at instance creation and update network interface operations.
  // Check the StackType enum for the list of possible values.
  optional string stack_type = 425908881;

  // The URL of the Subnetwork resource for this instance. If the network resource is in legacy mode, do not specify this field. If the network is in auto subnet mode, specifying the subnetwork is optional. If the network is in custom subnet mode, specifying the subnetwork is required. If you specify this field, you can specify the subnetwork as a full or partial URL. For example, the following are all valid URLs: - https://www.googleapis.com/compute/v1/projects/project/regions/region /subnetworks/subnetwork - regions/region/subnetworks/subnetwork 
  optional string subnetwork = 307827694;

}

// Contains a list of networks.
message NetworkList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 3355;

  // A list of Network resources.
  repeated Network items = 100526016;

  // [Output Only] Type of resource. Always compute#networkList for lists of networks.
  optional string kind = 3292052;

  // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
  optional string next_page_token = 79797525;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 456214797;

  // [Output Only] Informational warning message.
  optional Warning warning = 50704284;

}

// A network peering attached to a network resource. The message includes the peering name, peer network, peering state, and a flag indicating whether Google Compute Engine should automatically create routes for the peering.
message NetworkPeering {
  // Which IP version(s) of traffic and routes are allowed to be imported or exported between peer networks. The default value is IPV4_ONLY.
  enum StackType {
    // A value indicating that the enum field is not set.
    UNDEFINED_STACK_TYPE = 0;

    // This Peering will allow IPv4 traffic and routes to be exchanged. Additionally if the matching peering is IPV4_IPV6, IPv6 traffic and routes will be exchanged as well.
    IPV4_IPV6 = 22197249;

    // This Peering will only allow IPv4 traffic and routes to be exchanged, even if the matching peering is IPV4_IPV6.
    IPV4_ONLY = 22373798;

  }

  // [Output Only] State for the peering, either `ACTIVE` or `INACTIVE`. The peering is `ACTIVE` when there's a matching configuration in the peer network.
  enum State {
    // A value indicating that the enum field is not set.
    UNDEFINED_STATE = 0;

    // Matching configuration exists on the peer.
    ACTIVE = 314733318;

    // There is no matching configuration on the peer, including the case when peer does not exist.
    INACTIVE = 270421099;

  }

  // This field will be deprecated soon. Use the exchange_subnet_routes field instead. Indicates whether full mesh connectivity is created and managed automatically between peered networks. Currently this field should always be true since Google Compute Engine will automatically create and manage subnetwork routes between two networks when peering state is ACTIVE.
  optional bool auto_create_routes = 57454941;

  // Indicates whether full mesh connectivity is created and managed automatically between peered networks. Currently this field should always be true since Google Compute Engine will automatically create and manage subnetwork routes between two networks when peering state is ACTIVE.
  optional bool exchange_subnet_routes = 26322256;

  // Whether to export the custom routes to peer network. The default value is false.
  optional bool export_custom_routes = 60281485;

  // Whether subnet routes with public IP range are exported. The default value is true, all subnet routes are exported. IPv4 special-use ranges are always exported to peers and are not controlled by this field.
  optional bool export_subnet_routes_with_public_ip = 97940834;

  // Whether to import the custom routes from peer network. The default value is false.
  optional bool import_custom_routes = 197982398;

  // Whether subnet routes with public IP range are imported. The default value is false. IPv4 special-use ranges are always imported from peers and are not controlled by this field.
  optional bool import_subnet_routes_with_public_ip = 14419729;

  // Name of this peering. Provided by the client when the peering is created. The name must comply with RFC1035. Specifically, the name must be 1-63 characters long and match regular expression `[a-z]([-a-z0-9]*[a-z0-9])?`. The first character must be a lowercase letter, and all the following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
  optional string name = 3373707;

  // The URL of the peer network. It can be either full URL or partial URL. The peer network may belong to a different project. If the partial URL does not contain project, it is assumed that the peer network is in the same project as the current network.
  optional string network = 232872494;

  // Maximum Transmission Unit in bytes.
  optional int32 peer_mtu = 69584721;

  // Which IP version(s) of traffic and routes are allowed to be imported or exported between peer networks. The default value is IPV4_ONLY.
  // Check the StackType enum for the list of possible values.
  optional string stack_type = 425908881;

  // [Output Only] State for the peering, either `ACTIVE` or `INACTIVE`. The peering is `ACTIVE` when there's a matching configuration in the peer network.
  // Check the State enum for the list of possible values.
  optional string state = 109757585;

  // [Output Only] Details about the current state of the peering.
  optional string state_details = 95566996;

}

//
message NetworkPerformanceConfig {
  //
  enum TotalEgressBandwidthTier {
    // A value indicating that the enum field is not set.
    UNDEFINED_TOTAL_EGRESS_BANDWIDTH_TIER = 0;

    DEFAULT = 115302945;

    TIER_1 = 326919444;

  }

  // 
  // Check the TotalEgressBandwidthTier enum for the list of possible values.
  optional string total_egress_bandwidth_tier = 130109439;

}

// A routing configuration attached to a network resource. The message includes the list of routers associated with the network, and a flag indicating the type of routing behavior to enforce network-wide.
message NetworkRoutingConfig {
  // The network-wide routing mode to use. If set to REGIONAL, this network's Cloud Routers will only advertise routes with subnets of this network in the same region as the router. If set to GLOBAL, this network's Cloud Routers will advertise routes with all subnets of this network, across regions.
  enum RoutingMode {
    // A value indicating that the enum field is not set.
    UNDEFINED_ROUTING_MODE = 0;

    GLOBAL = 494663587;

    REGIONAL = 92288543;

  }

  // The network-wide routing mode to use. If set to REGIONAL, this network's Cloud Routers will only advertise routes with subnets of this network in the same region as the router. If set to GLOBAL, this network's Cloud Routers will advertise routes with all subnets of this network, across regions.
  // Check the RoutingMode enum for the list of possible values.
  optional string routing_mode = 475143548;

}

//
message NetworksAddPeeringRequest {
  // This field will be deprecated soon. Use exchange_subnet_routes in network_peering instead. Indicates whether full mesh connectivity is created and managed automatically between peered networks. Currently this field should always be true since Google Compute Engine will automatically create and manage subnetwork routes between two networks when peering state is ACTIVE.
  optional bool auto_create_routes = 57454941;

  // Name of the peering, which should conform to RFC1035.
  optional string name = 3373707;

  // Network peering parameters. In order to specify route policies for peering using import and export custom routes, you must specify all peering related parameters (name, peer network, exchange_subnet_routes) in the network_peering field. The corresponding fields in NetworksAddPeeringRequest will be deprecated soon.
  optional NetworkPeering network_peering = 328926767;

  // URL of the peer network. It can be either full URL or partial URL. The peer network may belong to a different project. If the partial URL does not contain project, it is assumed that the peer network is in the same project as the current network.
  optional string peer_network = 500625489;

}

//
message NetworksGetEffectiveFirewallsResponse {
  // Effective firewalls from firewall policy.
  repeated NetworksGetEffectiveFirewallsResponseEffectiveFirewallPolicy firewall_policys = 410985794;

  // Effective firewalls on the network.
  repeated Firewall firewalls = 272245619;

}

//
message NetworksGetEffectiveFirewallsResponseEffectiveFirewallPolicy {
  // [Output Only] The type of the firewall policy.
  enum Type {
    // A value indicating that the enum field is not set.
    UNDEFINED_TYPE = 0;

    HIERARCHY = 69902869;

    NETWORK = 413984270;

    UNSPECIFIED = 526786327;

  }

  // [Output Only] Deprecated, please use short name instead. The display name of the firewall policy.
  optional string display_name = 4473832;

  // [Output Only] The name of the firewall policy.
  optional string name = 3373707;

  // The rules that apply to the network.
  repeated FirewallPolicyRule rules = 108873975;

  // [Output Only] The short name of the firewall policy.
  optional string short_name = 492051566;

  // [Output Only] The type of the firewall policy.
  // Check the Type enum for the list of possible values.
  optional string type = 3575610;

}

//
message NetworksRemovePeeringRequest {
  // Name of the peering, which should conform to RFC1035.
  optional string name = 3373707;

}

//
message NetworksUpdatePeeringRequest {
  optional NetworkPeering network_peering = 328926767;

}

// Represents a sole-tenant Node Group resource. A sole-tenant node is a physical server that is dedicated to hosting VM instances only for your specific project. Use sole-tenant nodes to keep your instances physically separated from instances in other projects, or to group your instances together on the same host hardware. For more information, read Sole-tenant nodes.
message NodeGroup {
  // Specifies how to handle instances when a node in the group undergoes maintenance. Set to one of: DEFAULT, RESTART_IN_PLACE, or MIGRATE_WITHIN_NODE_GROUP. The default value is DEFAULT. For more information, see Maintenance policies.
  enum MaintenancePolicy {
    // A value indicating that the enum field is not set.
    UNDEFINED_MAINTENANCE_POLICY = 0;

    // Allow the node and corresponding instances to retain default maintenance behavior.
    DEFAULT = 115302945;

    MAINTENANCE_POLICY_UNSPECIFIED = 72964182;

    // When maintenance must be done on a node, the instances on that node will be moved to other nodes in the group. Instances with onHostMaintenance = MIGRATE will live migrate to their destinations while instances with onHostMaintenance = TERMINATE will terminate and then restart on their destination nodes if automaticRestart = true.
    MIGRATE_WITHIN_NODE_GROUP = 153483394;

    // Instances in this group will restart on the same node when maintenance has completed. Instances must have onHostMaintenance = TERMINATE, and they will only restart if automaticRestart = true.
    RESTART_IN_PLACE = 228647325;

  }

  //
  enum Status {
    // A value indicating that the enum field is not set.
    UNDEFINED_STATUS = 0;

    CREATING = 455564985;

    DELETING = 528602024;

    INVALID = 530283991;

    READY = 77848963;

  }

  // Specifies how autoscaling should behave.
  optional NodeGroupAutoscalingPolicy autoscaling_policy = 221950041;

  // [Output Only] Creation timestamp in RFC3339 text format.
  optional string creation_timestamp = 30525366;

  // An optional description of this resource. Provide this property when you create the resource.
  optional string description = 422937596;

  optional string fingerprint = 234678500;

  // [Output Only] The unique identifier for the resource. This identifier is defined by the server.
  optional uint64 id = 3355;

  // [Output Only] The type of the resource. Always compute#nodeGroup for node group.
  optional string kind = 3292052;

  // An opaque location hint used to place the Node close to other resources. This field is for use by internal tools that use the public API. The location hint here on the NodeGroup overrides any location_hint present in the NodeTemplate.
  optional string location_hint = 350519505;

  // Specifies how to handle instances when a node in the group undergoes maintenance. Set to one of: DEFAULT, RESTART_IN_PLACE, or MIGRATE_WITHIN_NODE_GROUP. The default value is DEFAULT. For more information, see Maintenance policies.
  // Check the MaintenancePolicy enum for the list of possible values.
  optional string maintenance_policy = 528327646;

  optional NodeGroupMaintenanceWindow maintenance_window = 186374812;

  // The name of the resource, provided by the client when initially creating the resource. The resource name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
  optional string name = 3373707;

  // URL of the node template to create the node group from.
  optional string node_template = 323154455;

  // [Output Only] Server-defined URL for the resource.
  optional string self_link = 456214797;

  // Share-settings for the node group
  optional ShareSettings share_settings = 266668163;

  // [Output Only] The total number of nodes in the node group.
  optional int32 size = 3530753;

  // 
  // Check the Status enum for the list of possible values.
  optional string status = 181260274;

  // [Output Only] The name of the zone where the node group resides, such as us-central1-a.
  optional string zone = 3744684;

}

//
message NodeGroupAggregatedList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 3355;

  // A list of NodeGroupsScopedList resources.
  map<string, NodeGroupsScopedList> items = 100526016;

  // [Output Only] Type of resource.Always compute#nodeGroupAggregatedList for aggregated lists of node groups.
  optional string kind = 3292052;

  // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
  optional string next_page_token = 79797525;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 456214797;

  // [Output Only] Unreachable resources.
  repeated string unreachables = 243372063;

  // [Output Only] Informational warning message.
  optional Warning warning = 50704284;

}

//
message NodeGroupAutoscalingPolicy {
  // The autoscaling mode. Set to one of: ON, OFF, or ONLY_SCALE_OUT. For more information, see Autoscaler modes.
  enum Mode {
    // A value indicating that the enum field is not set.
    UNDEFINED_MODE = 0;

    MODE_UNSPECIFIED = 371348091;

    // Autoscaling is disabled.
    OFF = 78159;

    // Autocaling is fully enabled.
    ON = 2527;

    // Autoscaling will only scale out and will not remove nodes.
    ONLY_SCALE_OUT = 152713670;

  }

  // The maximum number of nodes that the group should have. Must be set if autoscaling is enabled. Maximum value allowed is 100.
  optional int32 max_nodes = 297762838;

  // The minimum number of nodes that the group should have.
  optional int32 min_nodes = 533370500;

  // The autoscaling mode. Set to one of: ON, OFF, or ONLY_SCALE_OUT. For more information, see Autoscaler modes.
  // Check the Mode enum for the list of possible values.
  optional string mode = 3357091;

}

// Contains a list of nodeGroups.
message NodeGroupList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 3355;

  // A list of NodeGroup resources.
  repeated NodeGroup items = 100526016;

  // [Output Only] Type of resource.Always compute#nodeGroupList for lists of node groups.
  optional string kind = 3292052;

  // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
  optional string next_page_token = 79797525;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 456214797;

  // [Output Only] Informational warning message.
  optional Warning warning = 50704284;

}

// Time window specified for daily maintenance operations. GCE's internal maintenance will be performed within this window.
message NodeGroupMaintenanceWindow {
  // [Output only] A predetermined duration for the window, automatically chosen to be the smallest possible in the given scenario.
  optional Duration maintenance_duration = 525291840;

  // Start time of the window. This must be in UTC format that resolves to one of 00:00, 04:00, 08:00, 12:00, 16:00, or 20:00. For example, both 13:00-5 and 08:00 are valid.
  optional string start_time = 37467274;

}

//
message NodeGroupNode {
  // CPU overcommit.
  enum CpuOvercommitType {
    // A value indicating that the enum field is not set.
    UNDEFINED_CPU_OVERCOMMIT_TYPE = 0;

    CPU_OVERCOMMIT_TYPE_UNSPECIFIED = 520665615;

    ENABLED = 182130465;

    NONE = 2402104;

  }

  //
  enum Status {
    // A value indicating that the enum field is not set.
    UNDEFINED_STATUS = 0;

    CREATING = 455564985;

    DELETING = 528602024;

    INVALID = 530283991;

    READY = 77848963;

    REPAIRING = 413483285;

  }

  // Accelerators for this node.
  repeated AcceleratorConfig accelerators = 269577064;

  // Node resources that are reserved by all instances.
  optional InstanceConsumptionInfo consumed_resources = 334527118;

  // CPU overcommit.
  // Check the CpuOvercommitType enum for the list of possible values.
  optional string cpu_overcommit_type = 247727959;

  // Local disk configurations.
  repeated LocalDisk disks = 95594102;

  // Instance data that shows consumed resources on the node.
  repeated InstanceConsumptionData instance_consumption_data = 84715576;

  // Instances scheduled on this node.
  repeated string instances = 29097598;

  // The name of the node.
  optional string name = 3373707;

  // The type of this node.
  optional string node_type = 465832791;

  // [Output Only] Reserved for future use.
  optional bool satisfies_pzs = 480964267;

  // Binding properties for the physical server.
  optional ServerBinding server_binding = 208179593;

  // Server ID associated with this node.
  optional string server_id = 339433367;

  // 
  // Check the Status enum for the list of possible values.
  optional string status = 181260274;

  // Total amount of available resources on the node.
  optional InstanceConsumptionInfo total_resources = 97406698;

}

//
message NodeGroupsAddNodesRequest {
  // Count of additional nodes to be added to the node group.
  optional int32 additional_node_count = 134997930;

}

//
message NodeGroupsDeleteNodesRequest {
  // Names of the nodes to delete.
  repeated string nodes = 104993457;

}

//
message NodeGroupsListNodes {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 3355;

  // A list of Node resources.
  repeated NodeGroupNode items = 100526016;

  // [Output Only] The resource type, which is always compute.nodeGroupsListNodes for the list of nodes in the specified node group.
  optional string kind = 3292052;

  // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
  optional string next_page_token = 79797525;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 456214797;

  // [Output Only] Informational warning message.
  optional Warning warning = 50704284;

}

//
message NodeGroupsScopedList {
  // [Output Only] A list of node groups contained in this scope.
  repeated NodeGroup node_groups = 73188017;

  // [Output Only] An informational warning that appears when the nodeGroup list is empty.
  optional Warning warning = 50704284;

}

//
message NodeGroupsSetNodeTemplateRequest {
  // Full or partial URL of the node template resource to be updated for this node group.
  optional string node_template = 323154455;

}

//
message NodeGroupsSimulateMaintenanceEventRequest {
  // Names of the nodes to go under maintenance simulation.
  repeated string nodes = 104993457;

}

// Represent a sole-tenant Node Template resource. You can use a template to define properties for nodes in a node group. For more information, read Creating node groups and instances.
message NodeTemplate {
  // CPU overcommit.
  enum CpuOvercommitType {
    // A value indicating that the enum field is not set.
    UNDEFINED_CPU_OVERCOMMIT_TYPE = 0;

    CPU_OVERCOMMIT_TYPE_UNSPECIFIED = 520665615;

    ENABLED = 182130465;

    NONE = 2402104;

  }

  // [Output Only] The status of the node template. One of the following values: CREATING, READY, and DELETING.
  enum Status {
    // A value indicating that the enum field is not set.
    UNDEFINED_STATUS = 0;

    // Resources are being allocated.
    CREATING = 455564985;

    // The node template is currently being deleted.
    DELETING = 528602024;

    // Invalid status.
    INVALID = 530283991;

    // The node template is ready.
    READY = 77848963;

  }

  repeated AcceleratorConfig accelerators = 269577064;

  // CPU overcommit.
  // Check the CpuOvercommitType enum for the list of possible values.
  optional string cpu_overcommit_type = 247727959;

  // [Output Only] Creation timestamp in RFC3339 text format.
  optional string creation_timestamp = 30525366;

  // An optional description of this resource. Provide this property when you create the resource.
  optional string description = 422937596;

  repeated LocalDisk disks = 95594102;

  // [Output Only] The unique identifier for the resource. This identifier is defined by the server.
  optional uint64 id = 3355;

  // [Output Only] The type of the resource. Always compute#nodeTemplate for node templates.
  optional string kind = 3292052;

  // The name of the resource, provided by the client when initially creating the resource. The resource name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
  optional string name = 3373707;

  // Labels to use for node affinity, which will be used in instance scheduling.
  map<string, string> node_affinity_labels = 339007161;

  // The node type to use for nodes group that are created from this template.
  optional string node_type = 465832791;

  // Do not use. Instead, use the node_type property.
  optional NodeTemplateNodeTypeFlexibility node_type_flexibility = 315257905;

  // [Output Only] The name of the region where the node template resides, such as us-central1.
  optional string region = 138946292;

  // [Output Only] Server-defined URL for the resource.
  optional string self_link = 456214797;

  // Sets the binding properties for the physical server. Valid values include: - *[Default]* RESTART_NODE_ON_ANY_SERVER: Restarts VMs on any available physical server - RESTART_NODE_ON_MINIMAL_SERVER: Restarts VMs on the same physical server whenever possible See Sole-tenant node options for more information.
  optional ServerBinding server_binding = 208179593;

  // [Output Only] The status of the node template. One of the following values: CREATING, READY, and DELETING.
  // Check the Status enum for the list of possible values.
  optional string status = 181260274;

  // [Output Only] An optional, human-readable explanation of the status.
  optional string status_message = 297428154;

}

//
message NodeTemplateAggregatedList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 3355;

  // A list of NodeTemplatesScopedList resources.
  map<string, NodeTemplatesScopedList> items = 100526016;

  // [Output Only] Type of resource.Always compute#nodeTemplateAggregatedList for aggregated lists of node templates.
  optional string kind = 3292052;

  // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
  optional string next_page_token = 79797525;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 456214797;

  // [Output Only] Unreachable resources.
  repeated string unreachables = 243372063;

  // [Output Only] Informational warning message.
  optional Warning warning = 50704284;

}

// Contains a list of node templates.
message NodeTemplateList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 3355;

  // A list of NodeTemplate resources.
  repeated NodeTemplate items = 100526016;

  // [Output Only] Type of resource.Always compute#nodeTemplateList for lists of node templates.
  optional string kind = 3292052;

  // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
  optional string next_page_token = 79797525;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 456214797;

  // [Output Only] Informational warning message.
  optional Warning warning = 50704284;

}

//
message NodeTemplateNodeTypeFlexibility {
  optional string cpus = 3060683;

  optional string local_ssd = 405741360;

  optional string memory = 532856065;

}

//
message NodeTemplatesScopedList {
  // [Output Only] A list of node templates contained in this scope.
  repeated NodeTemplate node_templates = 354111804;

  // [Output Only] An informational warning that appears when the node templates list is empty.
  optional Warning warning = 50704284;

}

// Represent a sole-tenant Node Type resource. Each node within a node group must have a node type. A node type specifies the total amount of cores and memory for that node. Currently, the only available node type is n1-node-96-624 node type that has 96 vCPUs and 624 GB of memory, available in multiple zones. For more information read Node types.
message NodeType {
  // [Output Only] The CPU platform used by this node type.
  optional string cpu_platform = 410285354;

  // [Output Only] Creation timestamp in RFC3339 text format.
  optional string creation_timestamp = 30525366;

  // [Output Only] The deprecation status associated with this node type.
  optional DeprecationStatus deprecated = 515138995;

  // [Output Only] An optional textual description of the resource.
  optional string description = 422937596;

  // [Output Only] The number of virtual CPUs that are available to the node type.
  optional int32 guest_cpus = 393356754;

  // [Output Only] The unique identifier for the resource. This identifier is defined by the server.
  optional uint64 id = 3355;

  // [Output Only] The type of the resource. Always compute#nodeType for node types.
  optional string kind = 3292052;

  // [Output Only] Local SSD available to the node type, defined in GB.
  optional int32 local_ssd_gb = 329237578;

  // [Output Only] The amount of physical memory available to the node type, defined in MB.
  optional int32 memory_mb = 116001171;

  // [Output Only] Name of the resource.
  optional string name = 3373707;

  // [Output Only] Server-defined URL for the resource.
  optional string self_link = 456214797;

  // [Output Only] The name of the zone where the node type resides, such as us-central1-a.
  optional string zone = 3744684;

}

//
message NodeTypeAggregatedList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 3355;

  // A list of NodeTypesScopedList resources.
  map<string, NodeTypesScopedList> items = 100526016;

  // [Output Only] Type of resource.Always compute#nodeTypeAggregatedList for aggregated lists of node types.
  optional string kind = 3292052;

  // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
  optional string next_page_token = 79797525;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 456214797;

  // [Output Only] Unreachable resources.
  repeated string unreachables = 243372063;

  // [Output Only] Informational warning message.
  optional Warning warning = 50704284;

}

// Contains a list of node types.
message NodeTypeList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 3355;

  // A list of NodeType resources.
  repeated NodeType items = 100526016;

  // [Output Only] Type of resource.Always compute#nodeTypeList for lists of node types.
  optional string kind = 3292052;

  // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
  optional string next_page_token = 79797525;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 456214797;

  // [Output Only] Informational warning message.
  optional Warning warning = 50704284;

}

//
message NodeTypesScopedList {
  // [Output Only] A list of node types contained in this scope.
  repeated NodeType node_types = 482172924;

  // [Output Only] An informational warning that appears when the node types list is empty.
  optional Warning warning = 50704284;

}

// Represents a notification endpoint. A notification endpoint resource defines an endpoint to receive notifications when there are status changes detected by the associated health check service. For more information, see Health checks overview.
message NotificationEndpoint {
  // [Output Only] Creation timestamp in RFC3339 text format.
  optional string creation_timestamp = 30525366;

  // An optional description of this resource. Provide this property when you create the resource.
  optional string description = 422937596;

  // Settings of the gRPC notification endpoint including the endpoint URL and the retry duration.
  optional NotificationEndpointGrpcSettings grpc_settings = 456139556;

  // [Output Only] A unique identifier for this resource type. The server generates this identifier.
  optional uint64 id = 3355;

  // [Output Only] Type of the resource. Always compute#notificationEndpoint for notification endpoints.
  optional string kind = 3292052;

  // Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
  optional string name = 3373707;

  // [Output Only] URL of the region where the notification endpoint resides. This field applies only to the regional resource. You must specify this field as part of the HTTP request URL. It is not settable as a field in the request body.
  optional string region = 138946292;

  // [Output Only] Server-defined URL for the resource.
  optional string self_link = 456214797;

}

// Represents a gRPC setting that describes one gRPC notification endpoint and the retry duration attempting to send notification to this endpoint.
message NotificationEndpointGrpcSettings {
  // Optional. If specified, this field is used to set the authority header by the sender of notifications. See https://tools.ietf.org/html/rfc7540#section-8.1.2.3
  optional string authority = 401868611;

  // Endpoint to which gRPC notifications are sent. This must be a valid gRPCLB DNS name.
  optional string endpoint = 130489749;

  // Optional. If specified, this field is used to populate the "name" field in gRPC requests.
  optional string payload_name = 300358300;

  // Optional. This field is used to configure how often to send a full update of all non-healthy backends. If unspecified, full updates are not sent. If specified, must be in the range between 600 seconds to 3600 seconds. Nanos are disallowed. Can only be set for regional notification endpoints.
  optional Duration resend_interval = 478288969;

  // How much time (in seconds) is spent attempting notification retries until a successful response is received. Default is 30s. Limit is 20m (1200s). Must be a positive number.
  optional uint32 retry_duration_sec = 115681117;

}

//
message NotificationEndpointList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 3355;

  // A list of NotificationEndpoint resources.
  repeated NotificationEndpoint items = 100526016;

  // [Output Only] Type of the resource. Always compute#notificationEndpoint for notification endpoints.
  optional string kind = 3292052;

  // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
  optional string next_page_token = 79797525;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 456214797;

  // [Output Only] Informational warning message.
  optional Warning warning = 50704284;

}

// Represents an Operation resource. Google Compute Engine has three Operation resources: * [Global](/compute/docs/reference/rest/v1/globalOperations) * [Regional](/compute/docs/reference/rest/v1/regionOperations) * [Zonal](/compute/docs/reference/rest/v1/zoneOperations) You can use an operation resource to manage asynchronous API requests. For more information, read Handling API responses. Operations can be global, regional or zonal. - For global operations, use the `globalOperations` resource. - For regional operations, use the `regionOperations` resource. - For zonal operations, use the `zonalOperations` resource. For more information, read Global, Regional, and Zonal Resources.
message Operation {
  // [Output Only] The status of the operation, which can be one of the following: `PENDING`, `RUNNING`, or `DONE`.
  enum Status {
    // A value indicating that the enum field is not set.
    UNDEFINED_STATUS = 0;

    DONE = 2104194;

    PENDING = 35394935;

    RUNNING = 121282975;

  }

  // [Output Only] The value of `requestId` if you provided it in the request. Not present otherwise.
  optional string client_operation_id = 297240295;

  // [Deprecated] This field is deprecated.
  optional string creation_timestamp = 30525366;

  // [Output Only] A textual description of the operation, which is set when the operation is created.
  optional string description = 422937596;

  // [Output Only] The time that this operation was completed. This value is in RFC3339 text format.
  optional string end_time = 114938801;

  // [Output Only] If errors are generated during processing of the operation, this field will be populated.
  optional Error error = 96784904;

  // [Output Only] If the operation fails, this field contains the HTTP error message that was returned, such as `NOT FOUND`.
  optional string http_error_message = 202521945 [(google.cloud.operation_field) = ERROR_MESSAGE];

  // [Output Only] If the operation fails, this field contains the HTTP error status code that was returned. For example, a `404` means the resource was not found.
  optional int32 http_error_status_code = 312345196 [(google.cloud.operation_field) = ERROR_CODE];

  // [Output Only] The unique identifier for the operation. This identifier is defined by the server.
  optional uint64 id = 3355;

  // [Output Only] The time that this operation was requested. This value is in RFC3339 text format.
  optional string insert_time = 433722515;

  // [Output Only] Type of the resource. Always `compute#operation` for Operation resources.
  optional string kind = 3292052;

  // [Output Only] Name of the operation.
  optional string name = 3373707 [(google.cloud.operation_field) = NAME];

  // [Output Only] An ID that represents a group of operations, such as when a group of operations results from a `bulkInsert` API request.
  optional string operation_group_id = 40171187;

  // [Output Only] The type of operation, such as `insert`, `update`, or `delete`, and so on.
  optional string operation_type = 177650450;

  // [Output Only] An optional progress indicator that ranges from 0 to 100. There is no requirement that this be linear or support any granularity of operations. This should not be used to guess when the operation will be complete. This number should monotonically increase as the operation progresses.
  optional int32 progress = 72663597;

  // [Output Only] The URL of the region where the operation resides. Only applicable when performing regional operations.
  optional string region = 138946292;

  // [Output Only] Server-defined URL for the resource.
  optional string self_link = 456214797;

  // [Output Only] The time that this operation was started by the server. This value is in RFC3339 text format.
  optional string start_time = 37467274;

  // [Output Only] The status of the operation, which can be one of the following: `PENDING`, `RUNNING`, or `DONE`.
  optional Status status = 181260274 [(google.cloud.operation_field) = STATUS];

  // [Output Only] An optional textual description of the current status of the operation.
  optional string status_message = 297428154;

  // [Output Only] The unique target ID, which identifies a specific incarnation of the target resource.
  optional uint64 target_id = 258165385;

  // [Output Only] The URL of the resource that the operation modifies. For operations related to creating a snapshot, this points to the persistent disk that the snapshot was created from.
  optional string target_link = 62671336;

  // [Output Only] User who requested the operation, for example: `user@example.com`.
  optional string user = 3599307;

  // [Output Only] If warning messages are generated during processing of the operation, this field will be populated.
  repeated Warnings warnings = 498091095;

  // [Output Only] The URL of the zone where the operation resides. Only applicable when performing per-zone operations.
  optional string zone = 3744684;

}

//
message OperationAggregatedList {
  // [Output Only] The unique identifier for the resource. This identifier is defined by the server.
  optional string id = 3355;

  // [Output Only] A map of scoped operation lists.
  map<string, OperationsScopedList> items = 100526016;

  // [Output Only] Type of resource. Always `compute#operationAggregatedList` for aggregated lists of operations.
  optional string kind = 3292052;

  // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than `maxResults`, use the `nextPageToken` as a value for the query parameter `pageToken` in the next list request. Subsequent list requests will have their own `nextPageToken` to continue paging through the results.
  optional string next_page_token = 79797525;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 456214797;

  // [Output Only] Unreachable resources.
  repeated string unreachables = 243372063;

  // [Output Only] Informational warning message.
  optional Warning warning = 50704284;

}

// Contains a list of Operation resources.
message OperationList {
  // [Output Only] The unique identifier for the resource. This identifier is defined by the server.
  optional string id = 3355;

  // [Output Only] A list of Operation resources.
  repeated Operation items = 100526016;

  // [Output Only] Type of resource. Always `compute#operations` for Operations resource.
  optional string kind = 3292052;

  // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than `maxResults`, use the `nextPageToken` as a value for the query parameter `pageToken` in the next list request. Subsequent list requests will have their own `nextPageToken` to continue paging through the results.
  optional string next_page_token = 79797525;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 456214797;

  // [Output Only] Informational warning message.
  optional Warning warning = 50704284;

}

//
message OperationsScopedList {
  // [Output Only] A list of operations contained in this scope.
  repeated Operation operations = 4184044;

  // [Output Only] Informational warning which replaces the list of operations when the list is empty.
  optional Warning warning = 50704284;

}

// Settings controlling the eviction of unhealthy hosts from the load balancing pool for the backend service.
message OutlierDetection {
  // The base time that a host is ejected for. The real ejection time is equal to the base ejection time multiplied by the number of times the host has been ejected. Defaults to 30000ms or 30s.
  optional Duration base_ejection_time = 80997255;

  // Number of errors before a host is ejected from the connection pool. When the backend host is accessed over HTTP, a 5xx return code qualifies as an error. Defaults to 5. Not supported when the backend service is referenced by a URL map that is bound to target gRPC proxy that has validateForProxyless field set to true.
  optional int32 consecutive_errors = 387193248;

  // The number of consecutive gateway failures (502, 503, 504 status or connection errors that are mapped to one of those status codes) before a consecutive gateway failure ejection occurs. Defaults to 3. Not supported when the backend service is referenced by a URL map that is bound to target gRPC proxy that has validateForProxyless field set to true.
  optional int32 consecutive_gateway_failure = 417504250;

  // The percentage chance that a host will be actually ejected when an outlier status is detected through consecutive 5xx. This setting can be used to disable ejection or to ramp it up slowly. Defaults to 0. Not supported when the backend service is referenced by a URL map that is bound to target gRPC proxy that has validateForProxyless field set to true.
  optional int32 enforcing_consecutive_errors = 213133760;

  // The percentage chance that a host will be actually ejected when an outlier status is detected through consecutive gateway failures. This setting can be used to disable ejection or to ramp it up slowly. Defaults to 100. Not supported when the backend service is referenced by a URL map that is bound to target gRPC proxy that has validateForProxyless field set to true.
  optional int32 enforcing_consecutive_gateway_failure = 394440666;

  // The percentage chance that a host will be actually ejected when an outlier status is detected through success rate statistics. This setting can be used to disable ejection or to ramp it up slowly. Defaults to 100.
  optional int32 enforcing_success_rate = 194508732;

  // Time interval between ejection analysis sweeps. This can result in both new ejections as well as hosts being returned to service. Defaults to 1 second.
  optional Duration interval = 33547461;

  // Maximum percentage of hosts in the load balancing pool for the backend service that can be ejected. Defaults to 50%.
  optional int32 max_ejection_percent = 18436888;

  // The number of hosts in a cluster that must have enough request volume to detect success rate outliers. If the number of hosts is less than this setting, outlier detection via success rate statistics is not performed for any host in the cluster. Defaults to 5.
  optional int32 success_rate_minimum_hosts = 525766903;

  // The minimum number of total requests that must be collected in one interval (as defined by the interval duration above) to include this host in success rate based outlier detection. If the volume is lower than this setting, outlier detection via success rate statistics is not performed for that host. Defaults to 100.
  optional int32 success_rate_request_volume = 281425357;

  // This factor is used to determine the ejection threshold for success rate outlier ejection. The ejection threshold is the difference between the mean success rate, and the product of this factor and the standard deviation of the mean success rate: mean - (stdev * success_rate_stdev_factor). This factor is divided by a thousand to get a double. That is, if the desired factor is 1.9, the runtime value should be 1900. Defaults to 1900.
  optional int32 success_rate_stdev_factor = 174735773;

}

// Next free: 7
message PacketIntervals {
  // From how long ago in the past these intervals were observed.
  enum Duration {
    // A value indicating that the enum field is not set.
    UNDEFINED_DURATION = 0;

    DURATION_UNSPECIFIED = 529071340;

    HOUR = 2223588;

    // From BfdSession object creation time.
    MAX = 76100;

    MINUTE = 126786068;

  }

  // The type of packets for which inter-packet intervals were computed.
  enum Type {
    // A value indicating that the enum field is not set.
    UNDEFINED_TYPE = 0;

    // Only applies to Echo packets. This shows the intervals between sending and receiving the same packet.
    LOOPBACK = 356174219;

    // Intervals between received packets.
    RECEIVE = 189660867;

    // Intervals between transmitted packets.
    TRANSMIT = 452903600;

    TYPE_UNSPECIFIED = 437714322;

  }

  // Average observed inter-packet interval in milliseconds.
  optional int64 avg_ms = 204811827;

  // From how long ago in the past these intervals were observed.
  // Check the Duration enum for the list of possible values.
  optional string duration = 155471252;

  // Maximum observed inter-packet interval in milliseconds.
  optional int64 max_ms = 529474145;

  // Minimum observed inter-packet interval in milliseconds.
  optional int64 min_ms = 536564403;

  // Number of inter-packet intervals from which these statistics were derived.
  optional int64 num_intervals = 186329813;

  // The type of packets for which inter-packet intervals were computed.
  // Check the Type enum for the list of possible values.
  optional string type = 3575610;

}

// Represents a Packet Mirroring resource. Packet Mirroring clones the traffic of specified instances in your Virtual Private Cloud (VPC) network and forwards it to a collector destination, such as an instance group of an internal TCP/UDP load balancer, for analysis or examination. For more information about setting up Packet Mirroring, see Using Packet Mirroring.
message PacketMirroring {
  // Indicates whether or not this packet mirroring takes effect. If set to FALSE, this packet mirroring policy will not be enforced on the network. The default is TRUE.
  enum Enable {
    // A value indicating that the enum field is not set.
    UNDEFINED_ENABLE = 0;

    FALSE = 66658563;

    TRUE = 2583950;

  }

  // The Forwarding Rule resource of type loadBalancingScheme=INTERNAL that will be used as collector for mirrored traffic. The specified forwarding rule must have isMirroringCollector set to true.
  optional PacketMirroringForwardingRuleInfo collector_ilb = 426607853;

  // [Output Only] Creation timestamp in RFC3339 text format.
  optional string creation_timestamp = 30525366;

  // An optional description of this resource. Provide this property when you create the resource.
  optional string description = 422937596;

  // Indicates whether or not this packet mirroring takes effect. If set to FALSE, this packet mirroring policy will not be enforced on the network. The default is TRUE.
  // Check the Enable enum for the list of possible values.
  optional string enable = 311764355;

  // Filter for mirrored traffic. If unspecified, all traffic is mirrored.
  optional PacketMirroringFilter filter = 336120696;

  // [Output Only] The unique identifier for the resource. This identifier is defined by the server.
  optional uint64 id = 3355;

  // [Output Only] Type of the resource. Always compute#packetMirroring for packet mirrorings.
  optional string kind = 3292052;

  // PacketMirroring mirroredResourceInfos. MirroredResourceInfo specifies a set of mirrored VM instances, subnetworks and/or tags for which traffic from/to all VM instances will be mirrored.
  optional PacketMirroringMirroredResourceInfo mirrored_resources = 124817348;

  // Name of the resource; provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
  optional string name = 3373707;

  // Specifies the mirrored VPC network. Only packets in this network will be mirrored. All mirrored VMs should have a NIC in the given network. All mirrored subnetworks should belong to the given network.
  optional PacketMirroringNetworkInfo network = 232872494;

  // The priority of applying this configuration. Priority is used to break ties in cases where there is more than one matching rule. In the case of two rules that apply for a given Instance, the one with the lowest-numbered priority value wins. Default value is 1000. Valid range is 0 through 65535.
  optional uint32 priority = 445151652;

  // [Output Only] URI of the region where the packetMirroring resides.
  optional string region = 138946292;

  // [Output Only] Server-defined URL for the resource.
  optional string self_link = 456214797;

}

// Contains a list of packetMirrorings.
message PacketMirroringAggregatedList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 3355;

  // A list of PacketMirroring resources.
  map<string, PacketMirroringsScopedList> items = 100526016;

  // Type of resource.
  optional string kind = 3292052;

  // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
  optional string next_page_token = 79797525;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 456214797;

  // [Output Only] Unreachable resources.
  repeated string unreachables = 243372063;

  // [Output Only] Informational warning message.
  optional Warning warning = 50704284;

}

//
message PacketMirroringFilter {
  // Direction of traffic to mirror, either INGRESS, EGRESS, or BOTH. The default is BOTH.
  enum Direction {
    // A value indicating that the enum field is not set.
    UNDEFINED_DIRECTION = 0;

    // Default, both directions are mirrored.
    BOTH = 2044801;

    // Only egress traffic is mirrored.
    EGRESS = 432880501;

    // Only ingress traffic is mirrored.
    INGRESS = 516931221;

  }

  // Protocols that apply as filter on mirrored traffic. If no protocols are specified, all traffic that matches the specified CIDR ranges is mirrored. If neither cidrRanges nor IPProtocols is specified, all traffic is mirrored.
  repeated string I_p_protocols = 98544854;

  // IP CIDR ranges that apply as filter on the source (ingress) or destination (egress) IP in the IP header. Only IPv4 is supported. If no ranges are specified, all traffic that matches the specified IPProtocols is mirrored. If neither cidrRanges nor IPProtocols is specified, all traffic is mirrored.
  repeated string cidr_ranges = 487901697;

  // Direction of traffic to mirror, either INGRESS, EGRESS, or BOTH. The default is BOTH.
  // Check the Direction enum for the list of possible values.
  optional string direction = 111150975;

}

//
message PacketMirroringForwardingRuleInfo {
  // [Output Only] Unique identifier for the forwarding rule; defined by the server.
  optional string canonical_url = 512294820;

  // Resource URL to the forwarding rule representing the ILB configured as destination of the mirrored traffic.
  optional string url = 116079;

}

// Contains a list of PacketMirroring resources.
message PacketMirroringList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 3355;

  // A list of PacketMirroring resources.
  repeated PacketMirroring items = 100526016;

  // [Output Only] Type of resource. Always compute#packetMirroring for packetMirrorings.
  optional string kind = 3292052;

  // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
  optional string next_page_token = 79797525;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 456214797;

  // [Output Only] Informational warning message.
  optional Warning warning = 50704284;

}

//
message PacketMirroringMirroredResourceInfo {
  // A set of virtual machine instances that are being mirrored. They must live in zones contained in the same region as this packetMirroring. Note that this config will apply only to those network interfaces of the Instances that belong to the network specified in this packetMirroring. You may specify a maximum of 50 Instances.
  repeated PacketMirroringMirroredResourceInfoInstanceInfo instances = 29097598;

  // A set of subnetworks for which traffic from/to all VM instances will be mirrored. They must live in the same region as this packetMirroring. You may specify a maximum of 5 subnetworks.
  repeated PacketMirroringMirroredResourceInfoSubnetInfo subnetworks = 415853125;

  // A set of mirrored tags. Traffic from/to all VM instances that have one or more of these tags will be mirrored.
  repeated string tags = 3552281;

}

//
message PacketMirroringMirroredResourceInfoInstanceInfo {
  // [Output Only] Unique identifier for the instance; defined by the server.
  optional string canonical_url = 512294820;

  // Resource URL to the virtual machine instance which is being mirrored.
  optional string url = 116079;

}

//
message PacketMirroringMirroredResourceInfoSubnetInfo {
  // [Output Only] Unique identifier for the subnetwork; defined by the server.
  optional string canonical_url = 512294820;

  // Resource URL to the subnetwork for which traffic from/to all VM instances will be mirrored.
  optional string url = 116079;

}

//
message PacketMirroringNetworkInfo {
  // [Output Only] Unique identifier for the network; defined by the server.
  optional string canonical_url = 512294820;

  // URL of the network resource.
  optional string url = 116079;

}

//
message PacketMirroringsScopedList {
  // A list of packetMirrorings contained in this scope.
  repeated PacketMirroring packet_mirrorings = 154615079;

  // Informational warning which replaces the list of packetMirrorings when the list is empty.
  optional Warning warning = 50704284;

}

// A request message for Autoscalers.Patch. See the method description for details.
message PatchAutoscalerRequest {
  // Name of the autoscaler to patch.
  optional string autoscaler = 517258967;

  // The body resource for this request
  Autoscaler autoscaler_resource = 207616118 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // Name of the zone for this request.
  string zone = 3744684 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "zone"
  ];

}

// A request message for BackendBuckets.Patch. See the method description for details.
message PatchBackendBucketRequest {
  // Name of the BackendBucket resource to patch.
  string backend_bucket = 91714037 [(google.api.field_behavior) = REQUIRED];

  // The body resource for this request
  BackendBucket backend_bucket_resource = 380757784 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

}

// A request message for BackendServices.Patch. See the method description for details.
message PatchBackendServiceRequest {
  // Name of the BackendService resource to patch.
  string backend_service = 306946058 [(google.api.field_behavior) = REQUIRED];

  // The body resource for this request
  BackendService backend_service_resource = 347586723 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

}

// A request message for FirewallPolicies.Patch. See the method description for details.
message PatchFirewallPolicyRequest {
  // Name of the firewall policy to update.
  string firewall_policy = 498173265 [(google.api.field_behavior) = REQUIRED];

  // The body resource for this request
  FirewallPolicy firewall_policy_resource = 495049532 [(google.api.field_behavior) = REQUIRED];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

}

// A request message for Firewalls.Patch. See the method description for details.
message PatchFirewallRequest {
  // Name of the firewall rule to patch.
  string firewall = 511016192 [(google.api.field_behavior) = REQUIRED];

  // The body resource for this request
  Firewall firewall_resource = 41425005 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

}

// A request message for ForwardingRules.Patch. See the method description for details.
message PatchForwardingRuleRequest {
  // Name of the ForwardingRule resource to patch.
  string forwarding_rule = 269964030 [(google.api.field_behavior) = REQUIRED];

  // The body resource for this request
  ForwardingRule forwarding_rule_resource = 301211695 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // Name of the region scoping this request.
  string region = 138946292 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "region"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

}

// A request message for GlobalForwardingRules.Patch. See the method description for details.
message PatchGlobalForwardingRuleRequest {
  // Name of the ForwardingRule resource to patch.
  string forwarding_rule = 269964030 [(google.api.field_behavior) = REQUIRED];

  // The body resource for this request
  ForwardingRule forwarding_rule_resource = 301211695 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

}

// A request message for GlobalPublicDelegatedPrefixes.Patch. See the method description for details.
message PatchGlobalPublicDelegatedPrefixeRequest {
  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // Name of the PublicDelegatedPrefix resource to patch.
  string public_delegated_prefix = 204238440 [(google.api.field_behavior) = REQUIRED];

  // The body resource for this request
  PublicDelegatedPrefix public_delegated_prefix_resource = 47594501 [(google.api.field_behavior) = REQUIRED];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

}

// A request message for HealthChecks.Patch. See the method description for details.
message PatchHealthCheckRequest {
  // Name of the HealthCheck resource to patch.
  string health_check = 308876645 [(google.api.field_behavior) = REQUIRED];

  // The body resource for this request
  HealthCheck health_check_resource = 201925032 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

}

// A request message for Images.Patch. See the method description for details.
message PatchImageRequest {
  // Name of the image resource to patch.
  string image = 100313435 [(google.api.field_behavior) = REQUIRED];

  // The body resource for this request
  Image image_resource = 371171954 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

}

// A request message for InstanceGroupManagers.Patch. See the method description for details.
message PatchInstanceGroupManagerRequest {
  // The name of the instance group manager.
  string instance_group_manager = 249363395 [(google.api.field_behavior) = REQUIRED];

  // The body resource for this request
  InstanceGroupManager instance_group_manager_resource = 261063946 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // The name of the zone where you want to create the managed instance group.
  string zone = 3744684 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "zone"
  ];

}

// A request message for InterconnectAttachments.Patch. See the method description for details.
message PatchInterconnectAttachmentRequest {
  // Name of the interconnect attachment to patch.
  string interconnect_attachment = 308135284 [(google.api.field_behavior) = REQUIRED];

  // The body resource for this request
  InterconnectAttachment interconnect_attachment_resource = 212341369 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // Name of the region scoping this request.
  string region = 138946292 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "region"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

}

// A request message for Interconnects.Patch. See the method description for details.
message PatchInterconnectRequest {
  // Name of the interconnect to update.
  string interconnect = 224601230 [(google.api.field_behavior) = REQUIRED];

  // The body resource for this request
  Interconnect interconnect_resource = 397611167 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

}

// A request message for NetworkEdgeSecurityServices.Patch. See the method description for details.
message PatchNetworkEdgeSecurityServiceRequest {
  // Name of the network edge security service to update.
  string network_edge_security_service = 157011879 [(google.api.field_behavior) = REQUIRED];

  // The body resource for this request
  NetworkEdgeSecurityService network_edge_security_service_resource = 477548966 [(google.api.field_behavior) = REQUIRED];

  optional string paths = 106438894;

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // Name of the region scoping this request.
  string region = 138946292 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "region"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // Indicates fields to be updated as part of this request.
  optional string update_mask = 500079778;

}

// A request message for NetworkFirewallPolicies.Patch. See the method description for details.
message PatchNetworkFirewallPolicyRequest {
  // Name of the firewall policy to update.
  string firewall_policy = 498173265 [(google.api.field_behavior) = REQUIRED];

  // The body resource for this request
  FirewallPolicy firewall_policy_resource = 495049532 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

}

// A request message for Networks.Patch. See the method description for details.
message PatchNetworkRequest {
  // Name of the network to update.
  string network = 232872494 [(google.api.field_behavior) = REQUIRED];

  // The body resource for this request
  Network network_resource = 122105599 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

}

// A request message for NodeGroups.Patch. See the method description for details.
message PatchNodeGroupRequest {
  // Name of the NodeGroup resource to update.
  string node_group = 469958146 [(google.api.field_behavior) = REQUIRED];

  // The body resource for this request
  NodeGroup node_group_resource = 505321899 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // The name of the zone for this request.
  string zone = 3744684 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "zone"
  ];

}

// A request message for PacketMirrorings.Patch. See the method description for details.
message PatchPacketMirroringRequest {
  // Name of the PacketMirroring resource to patch.
  string packet_mirroring = 22305996 [(google.api.field_behavior) = REQUIRED];

  // The body resource for this request
  PacketMirroring packet_mirroring_resource = 493501985 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // Name of the region for this request.
  string region = 138946292 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "region"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

}

// A request message for InstanceGroupManagers.PatchPerInstanceConfigs. See the method description for details.
message PatchPerInstanceConfigsInstanceGroupManagerRequest {
  // The name of the managed instance group. It should conform to RFC1035.
  string instance_group_manager = 249363395 [(google.api.field_behavior) = REQUIRED];

  // The body resource for this request
  InstanceGroupManagersPatchPerInstanceConfigsReq instance_group_managers_patch_per_instance_configs_req_resource = 356650495 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // The name of the zone where the managed instance group is located. It should conform to RFC1035.
  string zone = 3744684 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "zone"
  ];

}

// A request message for RegionInstanceGroupManagers.PatchPerInstanceConfigs. See the method description for details.
message PatchPerInstanceConfigsRegionInstanceGroupManagerRequest {
  // The name of the managed instance group. It should conform to RFC1035.
  string instance_group_manager = 249363395 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // Name of the region scoping this request, should conform to RFC1035.
  string region = 138946292 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "region"
  ];

  // The body resource for this request
  RegionInstanceGroupManagerPatchInstanceConfigReq region_instance_group_manager_patch_instance_config_req_resource = 197682890 [(google.api.field_behavior) = REQUIRED];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

}

// A request message for PublicAdvertisedPrefixes.Patch. See the method description for details.
message PatchPublicAdvertisedPrefixeRequest {
  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // Name of the PublicAdvertisedPrefix resource to patch.
  string public_advertised_prefix = 101874590 [(google.api.field_behavior) = REQUIRED];

  // The body resource for this request
  PublicAdvertisedPrefix public_advertised_prefix_resource = 233614223 [(google.api.field_behavior) = REQUIRED];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

}

// A request message for PublicDelegatedPrefixes.Patch. See the method description for details.
message PatchPublicDelegatedPrefixeRequest {
  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // Name of the PublicDelegatedPrefix resource to patch.
  string public_delegated_prefix = 204238440 [(google.api.field_behavior) = REQUIRED];

  // The body resource for this request
  PublicDelegatedPrefix public_delegated_prefix_resource = 47594501 [(google.api.field_behavior) = REQUIRED];

  // Name of the region for this request.
  string region = 138946292 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "region"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

}

// A request message for RegionAutoscalers.Patch. See the method description for details.
message PatchRegionAutoscalerRequest {
  // Name of the autoscaler to patch.
  optional string autoscaler = 517258967;

  // The body resource for this request
  Autoscaler autoscaler_resource = 207616118 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // Name of the region scoping this request.
  string region = 138946292 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "region"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

}

// A request message for RegionBackendServices.Patch. See the method description for details.
message PatchRegionBackendServiceRequest {
  // Name of the BackendService resource to patch.
  string backend_service = 306946058 [(google.api.field_behavior) = REQUIRED];

  // The body resource for this request
  BackendService backend_service_resource = 347586723 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // Name of the region scoping this request.
  string region = 138946292 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "region"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

}

// A request message for RegionHealthChecks.Patch. See the method description for details.
message PatchRegionHealthCheckRequest {
  // Name of the HealthCheck resource to patch.
  string health_check = 308876645 [(google.api.field_behavior) = REQUIRED];

  // The body resource for this request
  HealthCheck health_check_resource = 201925032 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // Name of the region scoping this request.
  string region = 138946292 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "region"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

}

// A request message for RegionHealthCheckServices.Patch. See the method description for details.
message PatchRegionHealthCheckServiceRequest {
  // Name of the HealthCheckService to update. The name must be 1-63 characters long, and comply with RFC1035.
  string health_check_service = 408374747 [(google.api.field_behavior) = REQUIRED];

  // The body resource for this request
  HealthCheckService health_check_service_resource = 477367794 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // Name of the region scoping this request.
  string region = 138946292 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "region"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

}

// A request message for RegionInstanceGroupManagers.Patch. See the method description for details.
message PatchRegionInstanceGroupManagerRequest {
  // The name of the instance group manager.
  string instance_group_manager = 249363395 [(google.api.field_behavior) = REQUIRED];

  // The body resource for this request
  InstanceGroupManager instance_group_manager_resource = 261063946 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // Name of the region scoping this request.
  string region = 138946292 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "region"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

}

// A request message for RegionNetworkFirewallPolicies.Patch. See the method description for details.
message PatchRegionNetworkFirewallPolicyRequest {
  // Name of the firewall policy to update.
  string firewall_policy = 498173265 [(google.api.field_behavior) = REQUIRED];

  // The body resource for this request
  FirewallPolicy firewall_policy_resource = 495049532 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // Name of the region scoping this request.
  string region = 138946292 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "region"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

}

// A request message for RegionSecurityPolicies.Patch. See the method description for details.
message PatchRegionSecurityPolicyRequest {
  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // Name of the region scoping this request.
  string region = 138946292 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "region"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // Name of the security policy to update.
  string security_policy = 171082513 [(google.api.field_behavior) = REQUIRED];

  // The body resource for this request
  SecurityPolicy security_policy_resource = 216159612 [(google.api.field_behavior) = REQUIRED];

}

// A request message for RegionSslPolicies.Patch. See the method description for details.
message PatchRegionSslPolicyRequest {
  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // Name of the region scoping this request.
  string region = 138946292 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "region"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // Name of the SSL policy to update. The name must be 1-63 characters long, and comply with RFC1035.
  string ssl_policy = 295190213 [(google.api.field_behavior) = REQUIRED];

  // The body resource for this request
  SslPolicy ssl_policy_resource = 274891848 [(google.api.field_behavior) = REQUIRED];

}

// A request message for RegionTargetHttpsProxies.Patch. See the method description for details.
message PatchRegionTargetHttpsProxyRequest {
  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // Name of the region for this request.
  string region = 138946292 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "region"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // Name of the TargetHttpsProxy resource to patch.
  string target_https_proxy = 52336748 [(google.api.field_behavior) = REQUIRED];

  // The body resource for this request
  TargetHttpsProxy target_https_proxy_resource = 433657473 [(google.api.field_behavior) = REQUIRED];

}

// A request message for RegionUrlMaps.Patch. See the method description for details.
message PatchRegionUrlMapRequest {
  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // Name of the region scoping this request.
  string region = 138946292 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "region"
  ];

  // begin_interface: MixerMutationRequestBuilder Request ID to support idempotency.
  optional string request_id = 37109963;

  // Name of the UrlMap resource to patch.
  string url_map = 367020684 [(google.api.field_behavior) = REQUIRED];

  // The body resource for this request
  UrlMap url_map_resource = 168675425 [(google.api.field_behavior) = REQUIRED];

}

// A request message for Routers.Patch. See the method description for details.
message PatchRouterRequest {
  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // Name of the region for this request.
  string region = 138946292 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "region"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // Name of the Router resource to patch.
  string router = 148608841 [(google.api.field_behavior) = REQUIRED];

  // The body resource for this request
  Router router_resource = 155222084 [(google.api.field_behavior) = REQUIRED];

}

// A request message for FirewallPolicies.PatchRule. See the method description for details.
message PatchRuleFirewallPolicyRequest {
  // Name of the firewall policy to update.
  string firewall_policy = 498173265 [(google.api.field_behavior) = REQUIRED];

  // The body resource for this request
  FirewallPolicyRule firewall_policy_rule_resource = 250523523 [(google.api.field_behavior) = REQUIRED];

  // The priority of the rule to patch.
  optional int32 priority = 445151652;

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

}

// A request message for NetworkFirewallPolicies.PatchRule. See the method description for details.
message PatchRuleNetworkFirewallPolicyRequest {
  // Name of the firewall policy to update.
  string firewall_policy = 498173265 [(google.api.field_behavior) = REQUIRED];

  // The body resource for this request
  FirewallPolicyRule firewall_policy_rule_resource = 250523523 [(google.api.field_behavior) = REQUIRED];

  // The priority of the rule to patch.
  optional int32 priority = 445151652;

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

}

// A request message for RegionNetworkFirewallPolicies.PatchRule. See the method description for details.
message PatchRuleRegionNetworkFirewallPolicyRequest {
  // Name of the firewall policy to update.
  string firewall_policy = 498173265 [(google.api.field_behavior) = REQUIRED];

  // The body resource for this request
  FirewallPolicyRule firewall_policy_rule_resource = 250523523 [(google.api.field_behavior) = REQUIRED];

  // The priority of the rule to patch.
  optional int32 priority = 445151652;

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // Name of the region scoping this request.
  string region = 138946292 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "region"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

}

// A request message for SecurityPolicies.PatchRule. See the method description for details.
message PatchRuleSecurityPolicyRequest {
  // The priority of the rule to patch.
  optional int32 priority = 445151652;

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // Name of the security policy to update.
  string security_policy = 171082513 [(google.api.field_behavior) = REQUIRED];

  // The body resource for this request
  SecurityPolicyRule security_policy_rule_resource = 402693443 [(google.api.field_behavior) = REQUIRED];

  // If true, the request will not be committed.
  optional bool validate_only = 242744629;

}

// A request message for SecurityPolicies.Patch. See the method description for details.
message PatchSecurityPolicyRequest {
  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // Name of the security policy to update.
  string security_policy = 171082513 [(google.api.field_behavior) = REQUIRED];

  // The body resource for this request
  SecurityPolicy security_policy_resource = 216159612 [(google.api.field_behavior) = REQUIRED];

}

// A request message for ServiceAttachments.Patch. See the method description for details.
message PatchServiceAttachmentRequest {
  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // The region scoping this request and should conform to RFC1035.
  string region = 138946292 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "region"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // The resource id of the ServiceAttachment to patch. It should conform to RFC1035 resource name or be a string form on an unsigned long number.
  string service_attachment = 338957549 [(google.api.field_behavior) = REQUIRED];

  // The body resource for this request
  ServiceAttachment service_attachment_resource = 472980256 [(google.api.field_behavior) = REQUIRED];

}

// A request message for SslPolicies.Patch. See the method description for details.
message PatchSslPolicyRequest {
  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // Name of the SSL policy to update. The name must be 1-63 characters long, and comply with RFC1035.
  string ssl_policy = 295190213 [(google.api.field_behavior) = REQUIRED];

  // The body resource for this request
  SslPolicy ssl_policy_resource = 274891848 [(google.api.field_behavior) = REQUIRED];

}

// A request message for Subnetworks.Patch. See the method description for details.
message PatchSubnetworkRequest {
  // The drain timeout specifies the upper bound in seconds on the amount of time allowed to drain connections from the current ACTIVE subnetwork to the current BACKUP subnetwork. The drain timeout is only applicable when the following conditions are true: - the subnetwork being patched has purpose = INTERNAL_HTTPS_LOAD_BALANCER - the subnetwork being patched has role = BACKUP - the patch request is setting the role to ACTIVE. Note that after this patch operation the roles of the ACTIVE and BACKUP subnetworks will be swapped.
  optional int32 drain_timeout_seconds = 357707098;

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // Name of the region scoping this request.
  string region = 138946292 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "region"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // Name of the Subnetwork resource to patch.
  string subnetwork = 307827694 [(google.api.field_behavior) = REQUIRED];

  // The body resource for this request
  Subnetwork subnetwork_resource = 42233151 [(google.api.field_behavior) = REQUIRED];

}

// A request message for TargetGrpcProxies.Patch. See the method description for details.
message PatchTargetGrpcProxyRequest {
  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // Name of the TargetGrpcProxy resource to patch.
  string target_grpc_proxy = 5020283 [(google.api.field_behavior) = REQUIRED];

  // The body resource for this request
  TargetGrpcProxy target_grpc_proxy_resource = 328922450 [(google.api.field_behavior) = REQUIRED];

}

// A request message for TargetHttpProxies.Patch. See the method description for details.
message PatchTargetHttpProxyRequest {
  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // Name of the TargetHttpProxy resource to patch.
  string target_http_proxy = 206872421 [(google.api.field_behavior) = REQUIRED];

  // The body resource for this request
  TargetHttpProxy target_http_proxy_resource = 24696744 [(google.api.field_behavior) = REQUIRED];

}

// A request message for TargetHttpsProxies.Patch. See the method description for details.
message PatchTargetHttpsProxyRequest {
  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // Name of the TargetHttpsProxy resource to patch.
  string target_https_proxy = 52336748 [(google.api.field_behavior) = REQUIRED];

  // The body resource for this request
  TargetHttpsProxy target_https_proxy_resource = 433657473 [(google.api.field_behavior) = REQUIRED];

}

// A request message for UrlMaps.Patch. See the method description for details.
message PatchUrlMapRequest {
  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // Name of the UrlMap resource to patch.
  string url_map = 367020684 [(google.api.field_behavior) = REQUIRED];

  // The body resource for this request
  UrlMap url_map_resource = 168675425 [(google.api.field_behavior) = REQUIRED];

}

// A matcher for the path portion of the URL. The BackendService from the longest-matched rule will serve the URL. If no rule was matched, the default service is used.
message PathMatcher {
  // defaultRouteAction takes effect when none of the pathRules or routeRules match. The load balancer performs advanced routing actions, such as URL rewrites and header transformations, before forwarding the request to the selected backend. If defaultRouteAction specifies any weightedBackendServices, defaultService must not be set. Conversely if defaultService is set, defaultRouteAction cannot contain any weightedBackendServices. Only one of defaultRouteAction or defaultUrlRedirect must be set. URL maps for Classic external HTTP(S) load balancers only support the urlRewrite action within a path matcher's defaultRouteAction.
  optional HttpRouteAction default_route_action = 378919466;

  // The full or partial URL to the BackendService resource. This URL is used if none of the pathRules or routeRules defined by this PathMatcher are matched. For example, the following are all valid URLs to a BackendService resource: - https://www.googleapis.com/compute/v1/projects/project /global/backendServices/backendService - compute/v1/projects/project/global/backendServices/backendService - global/backendServices/backendService If defaultRouteAction is also specified, advanced routing actions, such as URL rewrites, take effect before sending the request to the backend. However, if defaultService is specified, defaultRouteAction cannot contain any weightedBackendServices. Conversely, if defaultRouteAction specifies any weightedBackendServices, defaultService must not be specified. Only one of defaultService, defaultUrlRedirect , or defaultRouteAction.weightedBackendService must be set. Authorization requires one or more of the following Google IAM permissions on the specified resource default_service: - compute.backendBuckets.use - compute.backendServices.use 
  optional string default_service = 370242231;

  // When none of the specified pathRules or routeRules match, the request is redirected to a URL specified by defaultUrlRedirect. If defaultUrlRedirect is specified, defaultService or defaultRouteAction must not be set. Not supported when the URL map is bound to a target gRPC proxy.
  optional HttpRedirectAction default_url_redirect = 359503338;

  // An optional description of this resource. Provide this property when you create the resource.
  optional string description = 422937596;

  // Specifies changes to request and response headers that need to take effect for the selected backend service. HeaderAction specified here are applied after the matching HttpRouteRule HeaderAction and before the HeaderAction in the UrlMap HeaderAction is not supported for load balancers that have their loadBalancingScheme set to EXTERNAL. Not supported when the URL map is bound to a target gRPC proxy that has validateForProxyless field set to true.
  optional HttpHeaderAction header_action = 328077352;

  // The name to which this PathMatcher is referred by the HostRule.
  optional string name = 3373707;

  // The list of path rules. Use this list instead of routeRules when routing based on simple path matching is all that's required. The order by which path rules are specified does not matter. Matches are always done on the longest-path-first basis. For example: a pathRule with a path /a/b/c/* will match before /a/b/* irrespective of the order in which those paths appear in this list. Within a given pathMatcher, only one of pathRules or routeRules must be set.
  repeated PathRule path_rules = 104439901;

  // The list of HTTP route rules. Use this list instead of pathRules when advanced route matching and routing actions are desired. routeRules are evaluated in order of priority, from the lowest to highest number. Within a given pathMatcher, you can set only one of pathRules or routeRules.
  repeated HttpRouteRule route_rules = 376292225;

}

// A path-matching rule for a URL. If matched, will use the specified BackendService to handle the traffic arriving at this URL.
message PathRule {
  // The list of path patterns to match. Each must start with / and the only place a * is allowed is at the end following a /. The string fed to the path matcher does not include any text after the first ? or #, and those chars are not allowed here.
  repeated string paths = 106438894;

  // In response to a matching path, the load balancer performs advanced routing actions, such as URL rewrites and header transformations, before forwarding the request to the selected backend. If routeAction specifies any weightedBackendServices, service must not be set. Conversely if service is set, routeAction cannot contain any weightedBackendServices. Only one of routeAction or urlRedirect must be set. URL maps for Classic external HTTP(S) load balancers only support the urlRewrite action within a path rule's routeAction.
  optional HttpRouteAction route_action = 424563948;

  // The full or partial URL of the backend service resource to which traffic is directed if this rule is matched. If routeAction is also specified, advanced routing actions, such as URL rewrites, take effect before sending the request to the backend. However, if service is specified, routeAction cannot contain any weightedBackendServices. Conversely, if routeAction specifies any weightedBackendServices, service must not be specified. Only one of urlRedirect, service or routeAction.weightedBackendService must be set.
  optional string service = 373540533;

  // When a path pattern is matched, the request is redirected to a URL specified by urlRedirect. If urlRedirect is specified, service or routeAction must not be set. Not supported when the URL map is bound to a target gRPC proxy.
  optional HttpRedirectAction url_redirect = 405147820;

}

//
message PerInstanceConfig {
  // The status of applying this per-instance configuration on the corresponding managed instance.
  enum Status {
    // A value indicating that the enum field is not set.
    UNDEFINED_STATUS = 0;

    // The per-instance configuration is being applied to the instance, but is not yet effective, possibly waiting for the instance to, for example, REFRESH.
    APPLYING = 352003508;

    // The per-instance configuration deletion is being applied on the instance, possibly waiting for the instance to, for example, REFRESH.
    DELETING = 528602024;

    // The per-instance configuration is effective on the instance, meaning that all disks, ips and metadata specified in this configuration are attached or set on the instance.
    EFFECTIVE = 244201863;

    // *[Default]* The default status, when no per-instance configuration exists.
    NONE = 2402104;

    // The per-instance configuration is set on an instance but not been applied yet.
    UNAPPLIED = 483935140;

    // The per-instance configuration has been deleted, but the deletion is not yet applied.
    UNAPPLIED_DELETION = 313956873;

  }

  // Fingerprint of this per-instance config. This field can be used in optimistic locking. It is ignored when inserting a per-instance config. An up-to-date fingerprint must be provided in order to update an existing per-instance configuration or the field needs to be unset.
  optional string fingerprint = 234678500;

  // The name of a per-instance configuration and its corresponding instance. Serves as a merge key during UpdatePerInstanceConfigs operations, that is, if a per-instance configuration with the same name exists then it will be updated, otherwise a new one will be created for the VM instance with the same name. An attempt to create a per-instance configconfiguration for a VM instance that either doesn't exist or is not part of the group will result in an error.
  optional string name = 3373707;

  // The intended preserved state for the given instance. Does not contain preserved state generated from a stateful policy.
  optional PreservedState preserved_state = 2634026;

  // The status of applying this per-instance configuration on the corresponding managed instance.
  // Check the Status enum for the list of possible values.
  optional string status = 181260274;

}

// An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { "bindings": [ { "role": "roles/resourcemanager.organizationAdmin", "members": [ "user:mike@example.com", "group:admins@example.com", "domain:google.com", "serviceAccount:my-project-id@appspot.gserviceaccount.com" ] }, { "role": "roles/resourcemanager.organizationViewer", "members": [ "user:eve@example.com" ], "condition": { "title": "expirable access", "description": "Does not grant access after Sep 2020", "expression": "request.time < timestamp('2020-10-01T00:00:00.000Z')", } } ], "etag": "BwWWja0YfJA=", "version": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).
message Policy {
  // Specifies cloud audit logging configuration for this policy.
  repeated AuditConfig audit_configs = 328080653;

  // Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.
  repeated Binding bindings = 403251854;

  // `etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.
  optional string etag = 3123477;

  optional bool iam_owned = 450566203;

  // This is deprecated and has no effect. Do not use.
  repeated Rule rules = 108873975;

  // Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
  optional int32 version = 351608024;

}

//
message PreconfiguredWafSet {
  // List of entities that are currently supported for WAF rules.
  repeated WafExpressionSet expression_sets = 474011032;

}

// Preserved state for a given instance.
message PreservedState {
  // Preserved disks defined for this instance. This map is keyed with the device names of the disks.
  map<string, PreservedStatePreservedDisk> disks = 95594102;

  // Preserved metadata defined for this instance.
  map<string, string> metadata = 86866735;

}

//
message PreservedStatePreservedDisk {
  // These stateful disks will never be deleted during autohealing, update, instance recreate operations. This flag is used to configure if the disk should be deleted after it is no longer used by the group, e.g. when the given instance or the whole MIG is deleted. Note: disks attached in READ_ONLY mode cannot be auto-deleted.
  enum AutoDelete {
    // A value indicating that the enum field is not set.
    UNDEFINED_AUTO_DELETE = 0;

    NEVER = 74175084;

    ON_PERMANENT_INSTANCE_DELETION = 95727719;

  }

  // The mode in which to attach this disk, either READ_WRITE or READ_ONLY. If not specified, the default is to attach the disk in READ_WRITE mode.
  enum Mode {
    // A value indicating that the enum field is not set.
    UNDEFINED_MODE = 0;

    // Attaches this disk in read-only mode. Multiple VM instances can use a disk in READ_ONLY mode at a time.
    READ_ONLY = 91950261;

    // *[Default]* Attaches this disk in READ_WRITE mode. Only one VM instance at a time can be attached to a disk in READ_WRITE mode.
    READ_WRITE = 173607894;

  }

  // These stateful disks will never be deleted during autohealing, update, instance recreate operations. This flag is used to configure if the disk should be deleted after it is no longer used by the group, e.g. when the given instance or the whole MIG is deleted. Note: disks attached in READ_ONLY mode cannot be auto-deleted.
  // Check the AutoDelete enum for the list of possible values.
  optional string auto_delete = 464761403;

  // The mode in which to attach this disk, either READ_WRITE or READ_ONLY. If not specified, the default is to attach the disk in READ_WRITE mode.
  // Check the Mode enum for the list of possible values.
  optional string mode = 3357091;

  // The URL of the disk resource that is stateful and should be attached to the VM instance.
  optional string source = 177235995;

}

// A request message for Routers.Preview. See the method description for details.
message PreviewRouterRequest {
  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Name of the region for this request.
  string region = 138946292 [(google.api.field_behavior) = REQUIRED];

  // Name of the Router resource to query.
  string router = 148608841 [(google.api.field_behavior) = REQUIRED];

  // The body resource for this request
  Router router_resource = 155222084 [(google.api.field_behavior) = REQUIRED];

}

// Represents a Project resource. A project is used to organize resources in a Google Cloud Platform environment. For more information, read about the Resource Hierarchy.
message Project {
  // This signifies the default network tier used for configuring resources of the project and can only take the following values: PREMIUM, STANDARD. Initially the default network tier is PREMIUM.
  enum DefaultNetworkTier {
    // A value indicating that the enum field is not set.
    UNDEFINED_DEFAULT_NETWORK_TIER = 0;

    // Public internet quality with fixed bandwidth.
    FIXED_STANDARD = 310464328;

    // High quality, Google-grade network tier, support for all networking products.
    PREMIUM = 399530551;

    // Public internet quality, only limited support for other networking products.
    STANDARD = 484642493;

    // (Output only) Temporary tier for FIXED_STANDARD when fixed standard tier is expired or not configured.
    STANDARD_OVERRIDES_FIXED_STANDARD = 465847234;

  }

  // [Output Only] Default internal DNS setting used by VMs running in this project.
  enum VmDnsSetting {
    // A value indicating that the enum field is not set.
    UNDEFINED_VM_DNS_SETTING = 0;

    GLOBAL_DEFAULT = 345419141;

    UNSPECIFIED_VM_DNS_SETTING = 35691930;

    ZONAL_DEFAULT = 368475782;

    ZONAL_ONLY = 521198951;

  }

  // [Output Only] The role this project has in a shared VPC configuration. Currently, only projects with the host role, which is specified by the value HOST, are differentiated.
  enum XpnProjectStatus {
    // A value indicating that the enum field is not set.
    UNDEFINED_XPN_PROJECT_STATUS = 0;

    HOST = 2223528;

    UNSPECIFIED_XPN_PROJECT_STATUS = 340393257;

  }

  // Metadata key/value pairs available to all instances contained in this project. See Custom metadata for more information.
  optional Metadata common_instance_metadata = 185794117;

  // [Output Only] Creation timestamp in RFC3339 text format.
  optional string creation_timestamp = 30525366;

  // This signifies the default network tier used for configuring resources of the project and can only take the following values: PREMIUM, STANDARD. Initially the default network tier is PREMIUM.
  // Check the DefaultNetworkTier enum for the list of possible values.
  optional string default_network_tier = 471753361;

  // [Output Only] Default service account used by VMs running in this project.
  optional string default_service_account = 298712229;

  // An optional textual description of the resource.
  optional string description = 422937596;

  // Restricted features enabled for use on this project.
  repeated string enabled_features = 469017467;

  // [Output Only] The unique identifier for the resource. This identifier is defined by the server. This is *not* the project ID, and is just a unique ID used by Compute Engine to identify resources.
  optional uint64 id = 3355;

  // [Output Only] Type of the resource. Always compute#project for projects.
  optional string kind = 3292052;

  // The project ID. For example: my-example-project. Use the project ID to make requests to Compute Engine.
  optional string name = 3373707;

  // [Output Only] Quotas assigned to this project.
  repeated Quota quotas = 125341947;

  // [Output Only] Server-defined URL for the resource.
  optional string self_link = 456214797;

  // The naming prefix for daily usage reports and the Google Cloud Storage bucket where they are stored.
  optional UsageExportLocation usage_export_location = 347543874;

  // [Output Only] Default internal DNS setting used by VMs running in this project.
  // Check the VmDnsSetting enum for the list of possible values.
  optional string vm_dns_setting = 58856370;

  // [Output Only] The role this project has in a shared VPC configuration. Currently, only projects with the host role, which is specified by the value HOST, are differentiated.
  // Check the XpnProjectStatus enum for the list of possible values.
  optional string xpn_project_status = 228419265;

}

//
message ProjectsDisableXpnResourceRequest {
  // Service resource (a.k.a service project) ID.
  optional XpnResourceId xpn_resource = 133384631;

}

//
message ProjectsEnableXpnResourceRequest {
  // Service resource (a.k.a service project) ID.
  optional XpnResourceId xpn_resource = 133384631;

}

//
message ProjectsGetXpnResources {
  // [Output Only] Type of resource. Always compute#projectsGetXpnResources for lists of service resources (a.k.a service projects)
  optional string kind = 3292052;

  // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
  optional string next_page_token = 79797525;

  // Service resources (a.k.a service projects) attached to this project as their shared VPC host.
  repeated XpnResourceId resources = 164412965;

}

//
message ProjectsListXpnHostsRequest {
  // Optional organization ID managed by Cloud Resource Manager, for which to list shared VPC host projects. If not specified, the organization will be inferred from the project.
  optional string organization = 105180467;

}

//
message ProjectsSetDefaultNetworkTierRequest {
  // Default network tier to be set.
  enum NetworkTier {
    // A value indicating that the enum field is not set.
    UNDEFINED_NETWORK_TIER = 0;

    // Public internet quality with fixed bandwidth.
    FIXED_STANDARD = 310464328;

    // High quality, Google-grade network tier, support for all networking products.
    PREMIUM = 399530551;

    // Public internet quality, only limited support for other networking products.
    STANDARD = 484642493;

    // (Output only) Temporary tier for FIXED_STANDARD when fixed standard tier is expired or not configured.
    STANDARD_OVERRIDES_FIXED_STANDARD = 465847234;

  }

  // Default network tier to be set.
  // Check the NetworkTier enum for the list of possible values.
  optional string network_tier = 517397843;

}

// A public advertised prefix represents an aggregated IP prefix or netblock which customers bring to cloud. The IP prefix is a single unit of route advertisement and is announced globally to the internet.
message PublicAdvertisedPrefix {
  // The status of the public advertised prefix. Possible values include: - `INITIAL`: RPKI validation is complete. - `PTR_CONFIGURED`: User has configured the PTR. - `VALIDATED`: Reverse DNS lookup is successful. - `REVERSE_DNS_LOOKUP_FAILED`: Reverse DNS lookup failed. - `PREFIX_CONFIGURATION_IN_PROGRESS`: The prefix is being configured. - `PREFIX_CONFIGURATION_COMPLETE`: The prefix is fully configured. - `PREFIX_REMOVAL_IN_PROGRESS`: The prefix is being removed. 
  enum Status {
    // A value indicating that the enum field is not set.
    UNDEFINED_STATUS = 0;

    // RPKI validation is complete.
    INITIAL = 518841124;

    // The prefix is fully configured.
    PREFIX_CONFIGURATION_COMPLETE = 480889551;

    // The prefix is being configured.
    PREFIX_CONFIGURATION_IN_PROGRESS = 378550961;

    // The prefix is being removed.
    PREFIX_REMOVAL_IN_PROGRESS = 284375783;

    // User has configured the PTR.
    PTR_CONFIGURED = 513497167;

    // Reverse DNS lookup failed.
    REVERSE_DNS_LOOKUP_FAILED = 295755183;

    // Reverse DNS lookup is successful.
    VALIDATED = 66197998;

  }

  // [Output Only] Creation timestamp in RFC3339 text format.
  optional string creation_timestamp = 30525366;

  // An optional description of this resource. Provide this property when you create the resource.
  optional string description = 422937596;

  // The IPv4 address to be used for reverse DNS verification.
  optional string dns_verification_ip = 241011381;

  // Fingerprint of this resource. A hash of the contents stored in this object. This field is used in optimistic locking. This field will be ignored when inserting a new PublicAdvertisedPrefix. An up-to-date fingerprint must be provided in order to update the PublicAdvertisedPrefix, otherwise the request will fail with error 412 conditionNotMet. To see the latest fingerprint, make a get() request to retrieve a PublicAdvertisedPrefix.
  optional string fingerprint = 234678500;

  // [Output Only] The unique identifier for the resource type. The server generates this identifier.
  optional uint64 id = 3355;

  // The IPv4 address range, in CIDR format, represented by this public advertised prefix.
  optional string ip_cidr_range = 98117322;

  // [Output Only] Type of the resource. Always compute#publicAdvertisedPrefix for public advertised prefixes.
  optional string kind = 3292052;

  // Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
  optional string name = 3373707;

  // [Output Only] The list of public delegated prefixes that exist for this public advertised prefix.
  repeated PublicAdvertisedPrefixPublicDelegatedPrefix public_delegated_prefixs = 425811723;

  // [Output Only] Server-defined URL for the resource.
  optional string self_link = 456214797;

  // [Output Only] The shared secret to be used for reverse DNS verification.
  optional string shared_secret = 381932490;

  // The status of the public advertised prefix. Possible values include: - `INITIAL`: RPKI validation is complete. - `PTR_CONFIGURED`: User has configured the PTR. - `VALIDATED`: Reverse DNS lookup is successful. - `REVERSE_DNS_LOOKUP_FAILED`: Reverse DNS lookup failed. - `PREFIX_CONFIGURATION_IN_PROGRESS`: The prefix is being configured. - `PREFIX_CONFIGURATION_COMPLETE`: The prefix is fully configured. - `PREFIX_REMOVAL_IN_PROGRESS`: The prefix is being removed.
  // Check the Status enum for the list of possible values.
  optional string status = 181260274;

}

//
message PublicAdvertisedPrefixList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 3355;

  // A list of PublicAdvertisedPrefix resources.
  repeated PublicAdvertisedPrefix items = 100526016;

  // [Output Only] Type of the resource. Always compute#publicAdvertisedPrefix for public advertised prefixes.
  optional string kind = 3292052;

  // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
  optional string next_page_token = 79797525;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 456214797;

  // [Output Only] Informational warning message.
  optional Warning warning = 50704284;

}

// Represents a CIDR range which can be used to assign addresses.
message PublicAdvertisedPrefixPublicDelegatedPrefix {
  // The IP address range of the public delegated prefix
  optional string ip_range = 145092645;

  // The name of the public delegated prefix
  optional string name = 3373707;

  // The project number of the public delegated prefix
  optional string project = 227560217;

  // The region of the public delegated prefix if it is regional. If absent, the prefix is global.
  optional string region = 138946292;

  // The status of the public delegated prefix. Possible values are: INITIALIZING: The public delegated prefix is being initialized and addresses cannot be created yet. ANNOUNCED: The public delegated prefix is active.
  optional string status = 181260274;

}

// A PublicDelegatedPrefix resource represents an IP block within a PublicAdvertisedPrefix that is configured within a single cloud scope (global or region). IPs in the block can be allocated to resources within that scope. Public delegated prefixes may be further broken up into smaller IP blocks in the same scope as the parent block.
message PublicDelegatedPrefix {
  // [Output Only] The status of the public delegated prefix, which can be one of following values: - `INITIALIZING` The public delegated prefix is being initialized and addresses cannot be created yet. - `READY_TO_ANNOUNCE` The public delegated prefix is a live migration prefix and is active. - `ANNOUNCED` The public delegated prefix is active. - `DELETING` The public delegated prefix is being deprovsioned. 
  enum Status {
    // A value indicating that the enum field is not set.
    UNDEFINED_STATUS = 0;

    // The public delegated prefix is active.
    ANNOUNCED = 365103355;

    // The public delegated prefix is being deprovsioned.
    DELETING = 528602024;

    // The public delegated prefix is being initialized and addresses cannot be created yet.
    INITIALIZING = 306588749;

    // The public delegated prefix is currently withdrawn but ready to be announced.
    READY_TO_ANNOUNCE = 64641265;

  }

  // [Output Only] Creation timestamp in RFC3339 text format.
  optional string creation_timestamp = 30525366;

  // An optional description of this resource. Provide this property when you create the resource.
  optional string description = 422937596;

  // Fingerprint of this resource. A hash of the contents stored in this object. This field is used in optimistic locking. This field will be ignored when inserting a new PublicDelegatedPrefix. An up-to-date fingerprint must be provided in order to update the PublicDelegatedPrefix, otherwise the request will fail with error 412 conditionNotMet. To see the latest fingerprint, make a get() request to retrieve a PublicDelegatedPrefix.
  optional string fingerprint = 234678500;

  // [Output Only] The unique identifier for the resource type. The server generates this identifier.
  optional uint64 id = 3355;

  // The IPv4 address range, in CIDR format, represented by this public delegated prefix.
  optional string ip_cidr_range = 98117322;

  // If true, the prefix will be live migrated.
  optional bool is_live_migration = 511823856;

  // [Output Only] Type of the resource. Always compute#publicDelegatedPrefix for public delegated prefixes.
  optional string kind = 3292052;

  // Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
  optional string name = 3373707;

  // The URL of parent prefix. Either PublicAdvertisedPrefix or PublicDelegatedPrefix.
  optional string parent_prefix = 15233991;

  // The list of sub public delegated prefixes that exist for this public delegated prefix.
  repeated PublicDelegatedPrefixPublicDelegatedSubPrefix public_delegated_sub_prefixs = 188940044;

  // [Output Only] URL of the region where the public delegated prefix resides. This field applies only to the region resource. You must specify this field as part of the HTTP request URL. It is not settable as a field in the request body.
  optional string region = 138946292;

  // [Output Only] Server-defined URL for the resource.
  optional string self_link = 456214797;

  // [Output Only] The status of the public delegated prefix, which can be one of following values: - `INITIALIZING` The public delegated prefix is being initialized and addresses cannot be created yet. - `READY_TO_ANNOUNCE` The public delegated prefix is a live migration prefix and is active. - `ANNOUNCED` The public delegated prefix is active. - `DELETING` The public delegated prefix is being deprovsioned.
  // Check the Status enum for the list of possible values.
  optional string status = 181260274;

}

//
message PublicDelegatedPrefixAggregatedList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 3355;

  // A list of PublicDelegatedPrefixesScopedList resources.
  map<string, PublicDelegatedPrefixesScopedList> items = 100526016;

  // [Output Only] Type of the resource. Always compute#publicDelegatedPrefixAggregatedList for aggregated lists of public delegated prefixes.
  optional string kind = 3292052;

  // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
  optional string next_page_token = 79797525;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 456214797;

  // [Output Only] Unreachable resources.
  repeated string unreachables = 243372063;

  // [Output Only] Informational warning message.
  optional Warning warning = 50704284;

}

//
message PublicDelegatedPrefixList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 3355;

  // A list of PublicDelegatedPrefix resources.
  repeated PublicDelegatedPrefix items = 100526016;

  // [Output Only] Type of the resource. Always compute#publicDelegatedPrefixList for public delegated prefixes.
  optional string kind = 3292052;

  // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
  optional string next_page_token = 79797525;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 456214797;

  // [Output Only] Informational warning message.
  optional Warning warning = 50704284;

}

// Represents a sub PublicDelegatedPrefix.
message PublicDelegatedPrefixPublicDelegatedSubPrefix {
  // [Output Only] The status of the sub public delegated prefix.
  enum Status {
    // A value indicating that the enum field is not set.
    UNDEFINED_STATUS = 0;

    ACTIVE = 314733318;

    INACTIVE = 270421099;

  }

  // Name of the project scoping this PublicDelegatedSubPrefix.
  optional string delegatee_project = 414860634;

  // An optional description of this resource. Provide this property when you create the resource.
  optional string description = 422937596;

  // The IPv4 address range, in CIDR format, represented by this sub public delegated prefix.
  optional string ip_cidr_range = 98117322;

  // Whether the sub prefix is delegated to create Address resources in the delegatee project.
  optional bool is_address = 352617951;

  // The name of the sub public delegated prefix.
  optional string name = 3373707;

  // [Output Only] The region of the sub public delegated prefix if it is regional. If absent, the sub prefix is global.
  optional string region = 138946292;

  // [Output Only] The status of the sub public delegated prefix.
  // Check the Status enum for the list of possible values.
  optional string status = 181260274;

}

//
message PublicDelegatedPrefixesScopedList {
  // [Output Only] A list of PublicDelegatedPrefixes contained in this scope.
  repeated PublicDelegatedPrefix public_delegated_prefixes = 315261206;

  // [Output Only] Informational warning which replaces the list of public delegated prefixes when the list is empty.
  optional Warning warning = 50704284;

}

// A quotas entry.
message Quota {
  // [Output Only] Name of the quota metric.
  enum Metric {
    // A value indicating that the enum field is not set.
    UNDEFINED_METRIC = 0;

    A2_CPUS = 153206585;

    AFFINITY_GROUPS = 108303563;

    AUTOSCALERS = 471248988;

    BACKEND_BUCKETS = 137626846;

    BACKEND_SERVICES = 269623753;

    C2D_CPUS = 508182517;

    C2_CPUS = 317601211;

    C3_CPUS = 346230362;

    COMMITMENTS = 456141790;

    COMMITTED_A2_CPUS = 59330902;

    COMMITTED_C2D_CPUS = 282390904;

    COMMITTED_C2_CPUS = 223725528;

    COMMITTED_C3_CPUS = 252354679;

    COMMITTED_CPUS = 292394702;

    COMMITTED_E2_CPUS = 388120154;

    COMMITTED_LICENSES = 357606869;

    COMMITTED_LOCAL_SSD_TOTAL_GB = 308393480;

    COMMITTED_M3_CPUS = 585985;

    COMMITTED_MEMORY_OPTIMIZED_CPUS = 489057886;

    COMMITTED_N2A_CPUS = 40064304;

    COMMITTED_N2D_CPUS = 125951757;

    COMMITTED_N2_CPUS = 322589603;

    COMMITTED_NVIDIA_A100_80GB_GPUS = 464326565;

    COMMITTED_NVIDIA_A100_GPUS = 375799445;

    COMMITTED_NVIDIA_K80_GPUS = 3857188;

    COMMITTED_NVIDIA_P100_GPUS = 107528100;

    COMMITTED_NVIDIA_P4_GPUS = 347952897;

    COMMITTED_NVIDIA_T4_GPUS = 139871237;

    COMMITTED_NVIDIA_V100_GPUS = 219562;

    COMMITTED_T2A_CPUS = 296378986;

    COMMITTED_T2D_CPUS = 382266439;

    // Guest CPUs
    CPUS = 2075595;

    CPUS_ALL_REGIONS = 470911149;

    DISKS_TOTAL_GB = 353520543;

    E2_CPUS = 481995837;

    EXTERNAL_MANAGED_FORWARDING_RULES = 150790089;

    EXTERNAL_NETWORK_LB_FORWARDING_RULES = 374298265;

    EXTERNAL_PROTOCOL_FORWARDING_RULES = 63478888;

    EXTERNAL_VPN_GATEWAYS = 272457134;

    FIREWALLS = 374485843;

    FORWARDING_RULES = 432668949;

    GLOBAL_EXTERNAL_MANAGED_BACKEND_SERVICES = 164566753;

    GLOBAL_EXTERNAL_MANAGED_FORWARDING_RULES = 327611949;

    GLOBAL_EXTERNAL_PROXY_LB_BACKEND_SERVICES = 400256169;

    GLOBAL_INTERNAL_ADDRESSES = 42738332;

    GLOBAL_INTERNAL_MANAGED_BACKEND_SERVICES = 256608303;

    GLOBAL_INTERNAL_TRAFFIC_DIRECTOR_BACKEND_SERVICES = 323514196;

    GPUS_ALL_REGIONS = 39387177;

    HEALTH_CHECKS = 289347502;

    IMAGES = 15562360;

    INSTANCES = 131337822;

    INSTANCE_GROUPS = 355919038;

    INSTANCE_GROUP_MANAGERS = 101798192;

    INSTANCE_TEMPLATES = 226188271;

    INTERCONNECTS = 415204741;

    INTERCONNECT_ATTACHMENTS_PER_REGION = 159968086;

    INTERCONNECT_ATTACHMENTS_TOTAL_MBPS = 425090419;

    INTERCONNECT_TOTAL_GBPS = 285341866;

    INTERNAL_ADDRESSES = 197899392;

    INTERNAL_TRAFFIC_DIRECTOR_FORWARDING_RULES = 266433668;

    IN_PLACE_SNAPSHOTS = 151359133;

    IN_USE_ADDRESSES = 402125072;

    IN_USE_BACKUP_SCHEDULES = 32786705;

    IN_USE_SNAPSHOT_SCHEDULES = 462104083;

    LOCAL_SSD_TOTAL_GB = 330878021;

    M1_CPUS = 37203366;

    M2_CPUS = 65832517;

    M3_CPUS = 94461668;

    MACHINE_IMAGES = 446986640;

    N2A_CPUS = 265855917;

    N2D_CPUS = 351743370;

    N2_CPUS = 416465286;

    NETWORKS = 485481477;

    NETWORK_ATTACHMENTS = 149028575;

    NETWORK_ENDPOINT_GROUPS = 102144909;

    NETWORK_FIREWALL_POLICIES = 101117374;

    NODE_GROUPS = 24624817;

    NODE_TEMPLATES = 474896668;

    NVIDIA_A100_80GB_GPUS = 286389320;

    NVIDIA_A100_GPUS = 504872978;

    NVIDIA_K80_GPUS = 163886599;

    NVIDIA_P100_GPUS = 236601633;

    NVIDIA_P100_VWS_GPUS = 213970574;

    NVIDIA_P4_GPUS = 283841470;

    NVIDIA_P4_VWS_GPUS = 528296619;

    NVIDIA_T4_GPUS = 75759810;

    NVIDIA_T4_VWS_GPUS = 319813039;

    NVIDIA_V100_GPUS = 129293095;

    PACKET_MIRRORINGS = 15578407;

    PD_EXTREME_TOTAL_PROVISIONED_IOPS = 69593965;

    PREEMPTIBLE_CPUS = 251184841;

    PREEMPTIBLE_LOCAL_SSD_GB = 260819336;

    PREEMPTIBLE_NVIDIA_A100_80GB_GPUS = 151942410;

    PREEMPTIBLE_NVIDIA_A100_GPUS = 68832784;

    PREEMPTIBLE_NVIDIA_K80_GPUS = 374960201;

    PREEMPTIBLE_NVIDIA_P100_GPUS = 337432351;

    PREEMPTIBLE_NVIDIA_P100_VWS_GPUS = 313544076;

    PREEMPTIBLE_NVIDIA_P4_GPUS = 429197628;

    PREEMPTIBLE_NVIDIA_P4_VWS_GPUS = 252981545;

    PREEMPTIBLE_NVIDIA_T4_GPUS = 221115968;

    PREEMPTIBLE_NVIDIA_T4_VWS_GPUS = 44497965;

    PREEMPTIBLE_NVIDIA_V100_GPUS = 230123813;

    PSC_ILB_CONSUMER_FORWARDING_RULES_PER_PRODUCER_NETWORK = 231164291;

    PSC_INTERNAL_LB_FORWARDING_RULES = 169005435;

    PUBLIC_ADVERTISED_PREFIXES = 471371980;

    PUBLIC_DELEGATED_PREFIXES = 532465974;

    REGIONAL_AUTOSCALERS = 29363772;

    REGIONAL_EXTERNAL_MANAGED_BACKEND_SERVICES = 4240989;

    REGIONAL_EXTERNAL_NETWORK_LB_BACKEND_SERVICES = 409564525;

    REGIONAL_INSTANCE_GROUP_MANAGERS = 37543696;

    REGIONAL_INTERNAL_LB_BACKEND_SERVICES = 137983760;

    REGIONAL_INTERNAL_MANAGED_BACKEND_SERVICES = 96282539;

    RESERVATIONS = 32644647;

    RESOURCE_POLICIES = 83955297;

    ROUTERS = 493018666;

    ROUTES = 275680074;

    SECURITY_POLICIES = 189518703;

    SECURITY_POLICIES_PER_REGION = 249041734;

    SECURITY_POLICY_CEVAL_RULES = 470815689;

    SECURITY_POLICY_RULES = 203549225;

    SECURITY_POLICY_RULES_PER_REGION = 126510156;

    SERVICE_ATTACHMENTS = 471521510;

    // The total number of snapshots allowed for a single project.
    SNAPSHOTS = 343405327;

    SSD_TOTAL_GB = 161732561;

    SSL_CERTIFICATES = 378372399;

    STATIC_ADDRESSES = 93624049;

    STATIC_BYOIP_ADDRESSES = 275809649;

    STATIC_EXTERNAL_IPV6_ADDRESS_RANGES = 472346774;

    SUBNETWORKS = 421330469;

    T2A_CPUS = 522170599;

    T2D_CPUS = 71187140;

    TARGET_HTTPS_PROXIES = 219522506;

    TARGET_HTTP_PROXIES = 164117155;

    TARGET_INSTANCES = 284519728;

    TARGET_POOLS = 348261257;

    TARGET_SSL_PROXIES = 159216235;

    TARGET_TCP_PROXIES = 182243136;

    TARGET_VPN_GATEWAYS = 75029928;

    URL_MAPS = 378660743;

    VPN_GATEWAYS = 35620282;

    VPN_TUNNELS = 104327296;

    XPN_SERVICE_PROJECTS = 95191981;

  }

  // [Output Only] Quota limit for this metric.
  optional double limit = 102976443;

  // [Output Only] Name of the quota metric.
  // Check the Metric enum for the list of possible values.
  optional string metric = 533067184;

  // [Output Only] Owning resource. This is the resource on which this quota is applied.
  optional string owner = 106164915;

  // [Output Only] Current usage of this metric.
  optional double usage = 111574433;

}

// Additional details for quota exceeded error for resource quota.
message QuotaExceededInfo {
  // The map holding related quota dimensions.
  map<string, string> dimensions = 414334925;

  // Current effective quota limit. The limit's unit depends on the quota type or metric.
  optional double limit = 102976443;

  // The name of the quota limit.
  optional string limit_name = 398197903;

  // The Compute Engine quota metric name.
  optional string metric_name = 409881530;

}

// The parameters of the raw disk image.
message RawDisk {
  // The format used to encode and transmit the block device, which should be TAR. This is just a container and transmission format and not a runtime format. Provided by the client when the disk image is created.
  enum ContainerType {
    // A value indicating that the enum field is not set.
    UNDEFINED_CONTAINER_TYPE = 0;

    TAR = 82821;

  }

  // The format used to encode and transmit the block device, which should be TAR. This is just a container and transmission format and not a runtime format. Provided by the client when the disk image is created.
  // Check the ContainerType enum for the list of possible values.
  optional string container_type = 318809144;

  // [Deprecated] This field is deprecated. An optional SHA1 checksum of the disk image before unpackaging provided by the client when the disk image is created.
  optional string sha1_checksum = 314444349;

  // The full Google Cloud Storage URL where the raw disk image archive is stored. The following are valid formats for the URL: - https://storage.googleapis.com/bucket_name/image_archive_name - https://storage.googleapis.com/bucket_name/folder_name/ image_archive_name In order to create an image, you must provide the full or partial URL of one of the following: - The rawDisk.source URL - The sourceDisk URL - The sourceImage URL - The sourceSnapshot URL 
  optional string source = 177235995;

}

// A request message for InstanceGroupManagers.RecreateInstances. See the method description for details.
message RecreateInstancesInstanceGroupManagerRequest {
  // The name of the managed instance group.
  string instance_group_manager = 249363395 [(google.api.field_behavior) = REQUIRED];

  // The body resource for this request
  InstanceGroupManagersRecreateInstancesRequest instance_group_managers_recreate_instances_request_resource = 21405952 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // The name of the zone where the managed instance group is located.
  string zone = 3744684 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "zone"
  ];

}

// A request message for RegionInstanceGroupManagers.RecreateInstances. See the method description for details.
message RecreateInstancesRegionInstanceGroupManagerRequest {
  // Name of the managed instance group.
  string instance_group_manager = 249363395 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // Name of the region scoping this request.
  string region = 138946292 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "region"
  ];

  // The body resource for this request
  RegionInstanceGroupManagersRecreateRequest region_instance_group_managers_recreate_request_resource = 170999316 [(google.api.field_behavior) = REQUIRED];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

}

// Represents a reference to a resource.
message Reference {
  // [Output Only] Type of the resource. Always compute#reference for references.
  optional string kind = 3292052;

  // A description of the reference type with no implied semantics. Possible values include: 1. MEMBER_OF 
  optional string reference_type = 247521198;

  // URL of the resource which refers to the target.
  optional string referrer = 351173663;

  // URL of the resource to which this reference points.
  optional string target = 192835985;

}

// Represents a Region resource. A region is a geographical area where a resource is located. For more information, read Regions and Zones.
message Region {
  // [Output Only] Status of the region, either UP or DOWN.
  enum Status {
    // A value indicating that the enum field is not set.
    UNDEFINED_STATUS = 0;

    DOWN = 2104482;

    UP = 2715;

  }

  // [Output Only] Creation timestamp in RFC3339 text format.
  optional string creation_timestamp = 30525366;

  // [Output Only] The deprecation status associated with this region.
  optional DeprecationStatus deprecated = 515138995;

  // [Output Only] Textual description of the resource.
  optional string description = 422937596;

  // [Output Only] The unique identifier for the resource. This identifier is defined by the server.
  optional uint64 id = 3355;

  // [Output Only] Type of the resource. Always compute#region for regions.
  optional string kind = 3292052;

  // [Output Only] Name of the resource.
  optional string name = 3373707;

  // [Output Only] Quotas assigned to this region.
  repeated Quota quotas = 125341947;

  // [Output Only] Server-defined URL for the resource.
  optional string self_link = 456214797;

  // [Output Only] Status of the region, either UP or DOWN.
  // Check the Status enum for the list of possible values.
  optional string status = 181260274;

  // [Output Only] Reserved for future use.
  optional bool supports_pzs = 83983214;

  // [Output Only] A list of zones available in this region, in the form of resource URLs.
  repeated string zones = 116085319;

}

// Contains a list of autoscalers.
message RegionAutoscalerList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 3355;

  // A list of Autoscaler resources.
  repeated Autoscaler items = 100526016;

  // Type of resource.
  optional string kind = 3292052;

  // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
  optional string next_page_token = 79797525;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 456214797;

  // [Output Only] Informational warning message.
  optional Warning warning = 50704284;

}

//
message RegionDiskTypeList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 3355;

  // A list of DiskType resources.
  repeated DiskType items = 100526016;

  // [Output Only] Type of resource. Always compute#regionDiskTypeList for region disk types.
  optional string kind = 3292052;

  // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
  optional string next_page_token = 79797525;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 456214797;

  // [Output Only] Informational warning message.
  optional Warning warning = 50704284;

}

//
message RegionDisksAddResourcePoliciesRequest {
  // Resource policies to be added to this disk.
  repeated string resource_policies = 22220385;

}

//
message RegionDisksRemoveResourcePoliciesRequest {
  // Resource policies to be removed from this disk.
  repeated string resource_policies = 22220385;

}

//
message RegionDisksResizeRequest {
  // The new size of the regional persistent disk, which is specified in GB.
  optional int64 size_gb = 494929369;

}

// Contains a list of InstanceGroup resources.
message RegionInstanceGroupList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 3355;

  // A list of InstanceGroup resources.
  repeated InstanceGroup items = 100526016;

  // The resource type.
  optional string kind = 3292052;

  // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
  optional string next_page_token = 79797525;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 456214797;

  // [Output Only] Informational warning message.
  optional Warning warning = 50704284;

}

// RegionInstanceGroupManagers.deletePerInstanceConfigs
message RegionInstanceGroupManagerDeleteInstanceConfigReq {
  // The list of instance names for which we want to delete per-instance configs on this managed instance group.
  repeated string names = 104585032;

}

// Contains a list of managed instance groups.
message RegionInstanceGroupManagerList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 3355;

  // A list of InstanceGroupManager resources.
  repeated InstanceGroupManager items = 100526016;

  // [Output Only] The resource type, which is always compute#instanceGroupManagerList for a list of managed instance groups that exist in th regional scope.
  optional string kind = 3292052;

  // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
  optional string next_page_token = 79797525;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 456214797;

  // [Output Only] Informational warning message.
  optional Warning warning = 50704284;

}

// RegionInstanceGroupManagers.patchPerInstanceConfigs
message RegionInstanceGroupManagerPatchInstanceConfigReq {
  // The list of per-instance configurations to insert or patch on this managed instance group.
  repeated PerInstanceConfig per_instance_configs = 526265001;

}

// RegionInstanceGroupManagers.updatePerInstanceConfigs
message RegionInstanceGroupManagerUpdateInstanceConfigReq {
  // The list of per-instance configurations to insert or patch on this managed instance group.
  repeated PerInstanceConfig per_instance_configs = 526265001;

}

//
message RegionInstanceGroupManagersAbandonInstancesRequest {
  // The URLs of one or more instances to abandon. This can be a full URL or a partial URL, such as zones/[ZONE]/instances/[INSTANCE_NAME].
  repeated string instances = 29097598;

}

// RegionInstanceGroupManagers.applyUpdatesToInstances
message RegionInstanceGroupManagersApplyUpdatesRequest {
  // The minimal action that you want to perform on each instance during the update: - REPLACE: At minimum, delete the instance and create it again. - RESTART: Stop the instance and start it again. - REFRESH: Do not stop the instance. - NONE: Do not disrupt the instance at all. By default, the minimum action is NONE. If your update requires a more disruptive action than you set with this flag, the necessary action is performed to execute the update.
  // Additional supported values which may be not listed in the enum directly due to technical reasons:
  // NONE
  // REFRESH
  // REPLACE
  // RESTART
  enum MinimalAction {
    // A value indicating that the enum field is not set.
    UNDEFINED_MINIMAL_ACTION = 0;

  }

  // The most disruptive action that you want to perform on each instance during the update: - REPLACE: Delete the instance and create it again. - RESTART: Stop the instance and start it again. - REFRESH: Do not stop the instance. - NONE: Do not disrupt the instance at all. By default, the most disruptive allowed action is REPLACE. If your update requires a more disruptive action than you set with this flag, the update request will fail.
  // Additional supported values which may be not listed in the enum directly due to technical reasons:
  // NONE
  // REFRESH
  // REPLACE
  // RESTART
  enum MostDisruptiveAllowedAction {
    // A value indicating that the enum field is not set.
    UNDEFINED_MOST_DISRUPTIVE_ALLOWED_ACTION = 0;

  }

  // Flag to update all instances instead of specified list of “instances”. If the flag is set to true then the instances may not be specified in the request.
  optional bool all_instances = 403676512;

  // The list of URLs of one or more instances for which you want to apply updates. Each URL can be a full URL or a partial URL, such as zones/[ZONE]/instances/[INSTANCE_NAME].
  repeated string instances = 29097598;

  // The minimal action that you want to perform on each instance during the update: - REPLACE: At minimum, delete the instance and create it again. - RESTART: Stop the instance and start it again. - REFRESH: Do not stop the instance. - NONE: Do not disrupt the instance at all. By default, the minimum action is NONE. If your update requires a more disruptive action than you set with this flag, the necessary action is performed to execute the update.
  // Check the MinimalAction enum for the list of possible values.
  optional string minimal_action = 270567060;

  // The most disruptive action that you want to perform on each instance during the update: - REPLACE: Delete the instance and create it again. - RESTART: Stop the instance and start it again. - REFRESH: Do not stop the instance. - NONE: Do not disrupt the instance at all. By default, the most disruptive allowed action is REPLACE. If your update requires a more disruptive action than you set with this flag, the update request will fail.
  // Check the MostDisruptiveAllowedAction enum for the list of possible values.
  optional string most_disruptive_allowed_action = 66103053;

}

// RegionInstanceGroupManagers.createInstances
message RegionInstanceGroupManagersCreateInstancesRequest {
  // [Required] List of specifications of per-instance configs.
  repeated PerInstanceConfig instances = 29097598;

}

//
message RegionInstanceGroupManagersDeleteInstancesRequest {
  // The URLs of one or more instances to delete. This can be a full URL or a partial URL, such as zones/[ZONE]/instances/[INSTANCE_NAME].
  repeated string instances = 29097598;

  // Specifies whether the request should proceed despite the inclusion of instances that are not members of the group or that are already in the process of being deleted or abandoned. If this field is set to `false` and such an instance is specified in the request, the operation fails. The operation always fails if the request contains a malformed instance URL or a reference to an instance that exists in a zone or region other than the group's zone or region.
  optional bool skip_instances_on_validation_error = 40631073;

}

//
message RegionInstanceGroupManagersListErrorsResponse {
  // [Output Only] The list of errors of the managed instance group.
  repeated InstanceManagedByIgmError items = 100526016;

  // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
  optional string next_page_token = 79797525;

}

//
message RegionInstanceGroupManagersListInstanceConfigsResp {
  // [Output Only] The list of PerInstanceConfig.
  repeated PerInstanceConfig items = 100526016;

  // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
  optional string next_page_token = 79797525;

  // [Output Only] Informational warning message.
  optional Warning warning = 50704284;

}

//
message RegionInstanceGroupManagersListInstancesResponse {
  // A list of managed instances.
  repeated ManagedInstance managed_instances = 336219614;

  // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
  optional string next_page_token = 79797525;

}

//
message RegionInstanceGroupManagersRecreateRequest {
  // The URLs of one or more instances to recreate. This can be a full URL or a partial URL, such as zones/[ZONE]/instances/[INSTANCE_NAME].
  repeated string instances = 29097598;

}

//
message RegionInstanceGroupManagersSetTargetPoolsRequest {
  // Fingerprint of the target pools information, which is a hash of the contents. This field is used for optimistic locking when you update the target pool entries. This field is optional.
  optional string fingerprint = 234678500;

  // The URL of all TargetPool resources to which instances in the instanceGroup field are added. The target pools automatically apply to all of the instances in the managed instance group.
  repeated string target_pools = 336072617;

}

//
message RegionInstanceGroupManagersSetTemplateRequest {
  // URL of the InstanceTemplate resource from which all new instances will be created.
  optional string instance_template = 309248228;

}

//
message RegionInstanceGroupsListInstances {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 3355;

  // A list of InstanceWithNamedPorts resources.
  repeated InstanceWithNamedPorts items = 100526016;

  // The resource type.
  optional string kind = 3292052;

  // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
  optional string next_page_token = 79797525;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 456214797;

  // [Output Only] Informational warning message.
  optional Warning warning = 50704284;

}

//
message RegionInstanceGroupsListInstancesRequest {
  // Instances in which state should be returned. Valid options are: 'ALL', 'RUNNING'. By default, it lists all instances.
  enum InstanceState {
    // A value indicating that the enum field is not set.
    UNDEFINED_INSTANCE_STATE = 0;

    // Matches any status of the instances, running, non-running and others.
    ALL = 64897;

    // Instance is in RUNNING state if it is running.
    RUNNING = 121282975;

  }

  // Instances in which state should be returned. Valid options are: 'ALL', 'RUNNING'. By default, it lists all instances.
  // Check the InstanceState enum for the list of possible values.
  optional string instance_state = 92223591;

  // Name of port user is interested in. It is optional. If it is set, only information about this ports will be returned. If it is not set, all the named ports will be returned. Always lists all instances.
  optional string port_name = 41534345;

}

//
message RegionInstanceGroupsSetNamedPortsRequest {
  // The fingerprint of the named ports information for this instance group. Use this optional property to prevent conflicts when multiple users change the named ports settings concurrently. Obtain the fingerprint with the instanceGroups.get method. Then, include the fingerprint in your request to ensure that you do not overwrite changes that were applied from another concurrent request.
  optional string fingerprint = 234678500;

  // The list of named ports to set for this instance group.
  repeated NamedPort named_ports = 427598732;

}

// Contains a list of region resources.
message RegionList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 3355;

  // A list of Region resources.
  repeated Region items = 100526016;

  // [Output Only] Type of resource. Always compute#regionList for lists of regions.
  optional string kind = 3292052;

  // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
  optional string next_page_token = 79797525;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 456214797;

  // [Output Only] Informational warning message.
  optional Warning warning = 50704284;

}

//
message RegionNetworkFirewallPoliciesGetEffectiveFirewallsResponse {
  // Effective firewalls from firewall policy.
  repeated RegionNetworkFirewallPoliciesGetEffectiveFirewallsResponseEffectiveFirewallPolicy firewall_policys = 410985794;

  // Effective firewalls on the network.
  repeated Firewall firewalls = 272245619;

}

//
message RegionNetworkFirewallPoliciesGetEffectiveFirewallsResponseEffectiveFirewallPolicy {
  // [Output Only] The type of the firewall policy. Can be one of HIERARCHY, NETWORK, NETWORK_REGIONAL.
  enum Type {
    // A value indicating that the enum field is not set.
    UNDEFINED_TYPE = 0;

    HIERARCHY = 69902869;

    NETWORK = 413984270;

    NETWORK_REGIONAL = 190804272;

    UNSPECIFIED = 526786327;

  }

  // [Output Only] The display name of the firewall policy.
  optional string display_name = 4473832;

  // [Output Only] The name of the firewall policy.
  optional string name = 3373707;

  // The rules that apply to the network.
  repeated FirewallPolicyRule rules = 108873975;

  // [Output Only] The type of the firewall policy. Can be one of HIERARCHY, NETWORK, NETWORK_REGIONAL.
  // Check the Type enum for the list of possible values.
  optional string type = 3575610;

}

//
message RegionSetLabelsRequest {
  // The fingerprint of the previous set of labels for this resource, used to detect conflicts. The fingerprint is initially generated by Compute Engine and changes after every request to modify or update labels. You must always provide an up-to-date fingerprint hash in order to update or change labels. Make a get() request to the resource to get the latest fingerprint.
  optional string label_fingerprint = 178124825;

  // The labels to set for this resource.
  map<string, string> labels = 500195327;

}

//
message RegionSetPolicyRequest {
  // Flatten Policy to create a backwacd compatible wire-format. Deprecated. Use 'policy' to specify bindings.
  repeated Binding bindings = 403251854;

  // Flatten Policy to create a backward compatible wire-format. Deprecated. Use 'policy' to specify the etag.
  optional string etag = 3123477;

  // REQUIRED: The complete policy to be applied to the 'resource'. The size of the policy is limited to a few 10s of KB. An empty policy is in general a valid policy but certain services (like Projects) might reject them.
  optional Policy policy = 91071794;

}

//
message RegionTargetHttpsProxiesSetSslCertificatesRequest {
  // New set of SslCertificate resources to associate with this TargetHttpsProxy resource.
  repeated string ssl_certificates = 366006543;

}

//
message RegionUrlMapsValidateRequest {
  // Content of the UrlMap to be validated.
  optional UrlMap resource = 195806222;

}

// A request message for FirewallPolicies.RemoveAssociation. See the method description for details.
message RemoveAssociationFirewallPolicyRequest {
  // Name of the firewall policy to update.
  string firewall_policy = 498173265 [(google.api.field_behavior) = REQUIRED];

  // Name for the attachment that will be removed.
  optional string name = 3373707;

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

}

// A request message for NetworkFirewallPolicies.RemoveAssociation. See the method description for details.
message RemoveAssociationNetworkFirewallPolicyRequest {
  // Name of the firewall policy to update.
  string firewall_policy = 498173265 [(google.api.field_behavior) = REQUIRED];

  // Name for the attachment that will be removed.
  optional string name = 3373707;

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

}

// A request message for RegionNetworkFirewallPolicies.RemoveAssociation. See the method description for details.
message RemoveAssociationRegionNetworkFirewallPolicyRequest {
  // Name of the firewall policy to update.
  string firewall_policy = 498173265 [(google.api.field_behavior) = REQUIRED];

  // Name for the association that will be removed.
  optional string name = 3373707;

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // Name of the region scoping this request.
  string region = 138946292 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "region"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

}

// A request message for TargetPools.RemoveHealthCheck. See the method description for details.
message RemoveHealthCheckTargetPoolRequest {
  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // Name of the region for this request.
  string region = 138946292 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "region"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // Name of the target pool to remove health checks from.
  string target_pool = 62796298 [(google.api.field_behavior) = REQUIRED];

  // The body resource for this request
  TargetPoolsRemoveHealthCheckRequest target_pools_remove_health_check_request_resource = 304985011 [(google.api.field_behavior) = REQUIRED];

}

// A request message for TargetPools.RemoveInstance. See the method description for details.
message RemoveInstanceTargetPoolRequest {
  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // Name of the region scoping this request.
  string region = 138946292 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "region"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // Name of the TargetPool resource to remove instances from.
  string target_pool = 62796298 [(google.api.field_behavior) = REQUIRED];

  // The body resource for this request
  TargetPoolsRemoveInstanceRequest target_pools_remove_instance_request_resource = 29548547 [(google.api.field_behavior) = REQUIRED];

}

// A request message for InstanceGroups.RemoveInstances. See the method description for details.
message RemoveInstancesInstanceGroupRequest {
  // The name of the instance group where the specified instances will be removed.
  string instance_group = 81095253 [(google.api.field_behavior) = REQUIRED];

  // The body resource for this request
  InstanceGroupsRemoveInstancesRequest instance_groups_remove_instances_request_resource = 390981817 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // The name of the zone where the instance group is located.
  string zone = 3744684 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "zone"
  ];

}

// A request message for Networks.RemovePeering. See the method description for details.
message RemovePeeringNetworkRequest {
  // Name of the network resource to remove peering from.
  string network = 232872494 [(google.api.field_behavior) = REQUIRED];

  // The body resource for this request
  NetworksRemovePeeringRequest networks_remove_peering_request_resource = 421162494 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

}

// A request message for Disks.RemoveResourcePolicies. See the method description for details.
message RemoveResourcePoliciesDiskRequest {
  // The disk name for this request.
  string disk = 3083677 [(google.api.field_behavior) = REQUIRED];

  // The body resource for this request
  DisksRemoveResourcePoliciesRequest disks_remove_resource_policies_request_resource = 436756718 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // The name of the zone for this request.
  string zone = 3744684 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "zone"
  ];

}

// A request message for Instances.RemoveResourcePolicies. See the method description for details.
message RemoveResourcePoliciesInstanceRequest {
  // The instance name for this request.
  string instance = 18257045 [(google.api.field_behavior) = REQUIRED];

  // The body resource for this request
  InstancesRemoveResourcePoliciesRequest instances_remove_resource_policies_request_resource = 49229558 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // The name of the zone for this request.
  string zone = 3744684 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "zone"
  ];

}

// A request message for RegionDisks.RemoveResourcePolicies. See the method description for details.
message RemoveResourcePoliciesRegionDiskRequest {
  // The disk name for this request.
  string disk = 3083677 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // The name of the region for this request.
  string region = 138946292 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "region"
  ];

  // The body resource for this request
  RegionDisksRemoveResourcePoliciesRequest region_disks_remove_resource_policies_request_resource = 8741283 [(google.api.field_behavior) = REQUIRED];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

}

// A request message for FirewallPolicies.RemoveRule. See the method description for details.
message RemoveRuleFirewallPolicyRequest {
  // Name of the firewall policy to update.
  string firewall_policy = 498173265 [(google.api.field_behavior) = REQUIRED];

  // The priority of the rule to remove from the firewall policy.
  optional int32 priority = 445151652;

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

}

// A request message for NetworkFirewallPolicies.RemoveRule. See the method description for details.
message RemoveRuleNetworkFirewallPolicyRequest {
  // Name of the firewall policy to update.
  string firewall_policy = 498173265 [(google.api.field_behavior) = REQUIRED];

  // The priority of the rule to remove from the firewall policy.
  optional int32 priority = 445151652;

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

}

// A request message for RegionNetworkFirewallPolicies.RemoveRule. See the method description for details.
message RemoveRuleRegionNetworkFirewallPolicyRequest {
  // Name of the firewall policy to update.
  string firewall_policy = 498173265 [(google.api.field_behavior) = REQUIRED];

  // The priority of the rule to remove from the firewall policy.
  optional int32 priority = 445151652;

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // Name of the region scoping this request.
  string region = 138946292 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "region"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

}

// A request message for SecurityPolicies.RemoveRule. See the method description for details.
message RemoveRuleSecurityPolicyRequest {
  // The priority of the rule to remove from the security policy.
  optional int32 priority = 445151652;

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // Name of the security policy to update.
  string security_policy = 171082513 [(google.api.field_behavior) = REQUIRED];

}

// A policy that specifies how requests intended for the route's backends are shadowed to a separate mirrored backend service. The load balancer doesn't wait for responses from the shadow service. Before sending traffic to the shadow service, the host or authority header is suffixed with -shadow.
message RequestMirrorPolicy {
  // The full or partial URL to the BackendService resource being mirrored to. The backend service configured for a mirroring policy must reference backends that are of the same type as the original backend service matched in the URL map. Serverless NEG backends are not currently supported as a mirrored backend service. 
  optional string backend_service = 306946058;

}

// Represents a reservation resource. A reservation ensures that capacity is held in a specific zone even if the reserved VMs are not running. For more information, read Reserving zonal resources.
message Reservation {
  // [Output Only] The status of the reservation.
  enum Status {
    // A value indicating that the enum field is not set.
    UNDEFINED_STATUS = 0;

    // Resources are being allocated for the reservation.
    CREATING = 455564985;

    // Reservation is currently being deleted.
    DELETING = 528602024;

    INVALID = 530283991;

    // Reservation has allocated all its resources.
    READY = 77848963;

    // Reservation is currently being resized.
    UPDATING = 494614342;

  }

  // [Output Only] Full or partial URL to a parent commitment. This field displays for reservations that are tied to a commitment.
  optional string commitment = 482134805;

  // [Output Only] Creation timestamp in RFC3339 text format.
  optional string creation_timestamp = 30525366;

  // An optional description of this resource. Provide this property when you create the resource.
  optional string description = 422937596;

  // [Output Only] The unique identifier for the resource. This identifier is defined by the server.
  optional uint64 id = 3355;

  // [Output Only] Type of the resource. Always compute#reservations for reservations.
  optional string kind = 3292052;

  // The name of the resource, provided by the client when initially creating the resource. The resource name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
  optional string name = 3373707;

  // Resource policies to be added to this reservation. The key is defined by user, and the value is resource policy url. This is to define placement policy with reservation.
  map<string, string> resource_policies = 22220385;

  // [Output Only] Status information for Reservation resource.
  optional AllocationResourceStatus resource_status = 249429315;

  // [Output Only] Reserved for future use.
  optional bool satisfies_pzs = 480964267;

  // [Output Only] Server-defined fully-qualified URL for this resource.
  optional string self_link = 456214797;

  // Specify share-settings to create a shared reservation. This property is optional. For more information about the syntax and options for this field and its subfields, see the guide for creating a shared reservation.
  optional ShareSettings share_settings = 266668163;

  // Reservation for instances with specific machine shapes.
  optional AllocationSpecificSKUReservation specific_reservation = 404901951;

  // Indicates whether the reservation can be consumed by VMs with affinity for "any" reservation. If the field is set, then only VMs that target the reservation by name can consume from this reservation.
  optional bool specific_reservation_required = 226550687;

  // [Output Only] The status of the reservation.
  // Check the Status enum for the list of possible values.
  optional string status = 181260274;

  // Zone in which the reservation resides. A zone must be provided if the reservation is created within a commitment.
  optional string zone = 3744684;

}

// Specifies the reservations that this instance can consume from.
message ReservationAffinity {
  // Specifies the type of reservation from which this instance can consume resources: ANY_RESERVATION (default), SPECIFIC_RESERVATION, or NO_RESERVATION. See Consuming reserved instances for examples.
  enum ConsumeReservationType {
    // A value indicating that the enum field is not set.
    UNDEFINED_CONSUME_RESERVATION_TYPE = 0;

    // Consume any allocation available.
    ANY_RESERVATION = 200008121;

    // Do not consume from any allocated capacity.
    NO_RESERVATION = 169322030;

    // Must consume from a specific reservation. Must specify key value fields for specifying the reservations.
    SPECIFIC_RESERVATION = 229889055;

    UNSPECIFIED = 526786327;

  }

  // Specifies the type of reservation from which this instance can consume resources: ANY_RESERVATION (default), SPECIFIC_RESERVATION, or NO_RESERVATION. See Consuming reserved instances for examples.
  // Check the ConsumeReservationType enum for the list of possible values.
  optional string consume_reservation_type = 300736944;

  // Corresponds to the label key of a reservation resource. To target a SPECIFIC_RESERVATION by name, specify googleapis.com/reservation-name as the key and specify the name of your reservation as its value.
  optional string key = 106079;

  // Corresponds to the label values of a reservation resource. This can be either a name to a reservation in the same project or "projects/different-project/reservations/some-reservation-name" to target a shared reservation in the same zone but in a different project.
  repeated string values = 249928994;

}

// Contains a list of reservations.
message ReservationAggregatedList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 3355;

  // A list of Allocation resources.
  map<string, ReservationsScopedList> items = 100526016;

  // Type of resource.
  optional string kind = 3292052;

  // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
  optional string next_page_token = 79797525;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 456214797;

  // [Output Only] Unreachable resources.
  repeated string unreachables = 243372063;

  // [Output Only] Informational warning message.
  optional Warning warning = 50704284;

}

//
message ReservationList {
  // [Output Only] The unique identifier for the resource. This identifier is defined by the server.
  optional string id = 3355;

  // [Output Only] A list of Allocation resources.
  repeated Reservation items = 100526016;

  // [Output Only] Type of resource.Always compute#reservationsList for listsof reservations
  optional string kind = 3292052;

  // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
  optional string next_page_token = 79797525;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 456214797;

  // [Output Only] Informational warning message.
  optional Warning warning = 50704284;

}

//
message ReservationsResizeRequest {
  // Number of allocated resources can be resized with minimum = 1 and maximum = 1000.
  optional int64 specific_sku_count = 13890720;

}

//
message ReservationsScopedList {
  // A list of reservations contained in this scope.
  repeated Reservation reservations = 399717927;

  // Informational warning which replaces the list of reservations when the list is empty.
  optional Warning warning = 50704284;

}

// A request message for Instances.Reset. See the method description for details.
message ResetInstanceRequest {
  // Name of the instance scoping this request.
  string instance = 18257045 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // The name of the zone for this request.
  string zone = 3744684 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "zone"
  ];

}

// A request message for Disks.Resize. See the method description for details.
message ResizeDiskRequest {
  // The name of the persistent disk.
  string disk = 3083677 [(google.api.field_behavior) = REQUIRED];

  // The body resource for this request
  DisksResizeRequest disks_resize_request_resource = 78307616 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // The name of the zone for this request.
  string zone = 3744684 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "zone"
  ];

}

// A request message for InstanceGroupManagers.Resize. See the method description for details.
message ResizeInstanceGroupManagerRequest {
  // The name of the managed instance group.
  string instance_group_manager = 249363395 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // The number of running instances that the managed instance group should maintain at any given time. The group automatically adds or removes instances to maintain the number of instances specified by this parameter.
  int32 size = 3530753 [(google.api.field_behavior) = REQUIRED];

  // The name of the zone where the managed instance group is located.
  string zone = 3744684 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "zone"
  ];

}

// A request message for RegionDisks.Resize. See the method description for details.
message ResizeRegionDiskRequest {
  // Name of the regional persistent disk.
  string disk = 3083677 [(google.api.field_behavior) = REQUIRED];

  // The project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // Name of the region for this request.
  string region = 138946292 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "region"
  ];

  // The body resource for this request
  RegionDisksResizeRequest region_disks_resize_request_resource = 446633237 [(google.api.field_behavior) = REQUIRED];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

}

// A request message for RegionInstanceGroupManagers.Resize. See the method description for details.
message ResizeRegionInstanceGroupManagerRequest {
  // Name of the managed instance group.
  string instance_group_manager = 249363395 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // Name of the region scoping this request.
  string region = 138946292 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "region"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // Number of instances that should exist in this instance group manager.
  int32 size = 3530753 [(google.api.field_behavior) = REQUIRED];

}

// A request message for Reservations.Resize. See the method description for details.
message ResizeReservationRequest {
  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // Name of the reservation to update.
  string reservation = 47530956 [(google.api.field_behavior) = REQUIRED];

  // The body resource for this request
  ReservationsResizeRequest reservations_resize_request_resource = 389262801 [(google.api.field_behavior) = REQUIRED];

  // Name of the zone for this request.
  string zone = 3744684 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "zone"
  ];

}

// Commitment for a particular resource (a Commitment is composed of one or more of these).
message ResourceCommitment {
  // Type of resource for which this commitment applies. Possible values are VCPU, MEMORY, LOCAL_SSD, and ACCELERATOR.
  enum Type {
    // A value indicating that the enum field is not set.
    UNDEFINED_TYPE = 0;

    ACCELERATOR = 429815371;

    LOCAL_SSD = 508934896;

    MEMORY = 123056385;

    UNSPECIFIED = 526786327;

    VCPU = 2628978;

  }

  // Name of the accelerator type resource. Applicable only when the type is ACCELERATOR.
  optional string accelerator_type = 138031246;

  // The amount of the resource purchased (in a type-dependent unit, such as bytes). For vCPUs, this can just be an integer. For memory, this must be provided in MB. Memory must be a multiple of 256 MB, with up to 6.5GB of memory per every vCPU.
  optional int64 amount = 196759640;

  // Type of resource for which this commitment applies. Possible values are VCPU, MEMORY, LOCAL_SSD, and ACCELERATOR.
  // Check the Type enum for the list of possible values.
  optional string type = 3575610;

}

//
message ResourceGroupReference {
  // A URI referencing one of the instance groups or network endpoint groups listed in the backend service.
  optional string group = 98629247;

}

//
message ResourcePoliciesScopedList {
  // A list of resourcePolicies contained in this scope.
  repeated ResourcePolicy resource_policies = 22220385;

  // Informational warning which replaces the list of resourcePolicies when the list is empty.
  optional Warning warning = 50704284;

}

// Represents a Resource Policy resource. You can use resource policies to schedule actions for some Compute Engine resources. For example, you can use them to schedule persistent disk snapshots.
message ResourcePolicy {
  // [Output Only] The status of resource policy creation.
  enum Status {
    // A value indicating that the enum field is not set.
    UNDEFINED_STATUS = 0;

    // Resource policy is being created.
    CREATING = 455564985;

    // Resource policy is being deleted.
    DELETING = 528602024;

    // Resource policy is expired and will not run again.
    EXPIRED = 482489093;

    INVALID = 530283991;

    // Resource policy is ready to be used.
    READY = 77848963;

  }

  // [Output Only] Creation timestamp in RFC3339 text format.
  optional string creation_timestamp = 30525366;

  optional string description = 422937596;

  // Resource policy for instances for placement configuration.
  optional ResourcePolicyGroupPlacementPolicy group_placement_policy = 10931596;

  // [Output Only] The unique identifier for the resource. This identifier is defined by the server.
  optional uint64 id = 3355;

  // Resource policy for scheduling instance operations.
  optional ResourcePolicyInstanceSchedulePolicy instance_schedule_policy = 344877104;

  // [Output Only] Type of the resource. Always compute#resource_policies for resource policies.
  optional string kind = 3292052;

  // The name of the resource, provided by the client when initially creating the resource. The resource name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
  optional string name = 3373707;

  optional string region = 138946292;

  // [Output Only] The system status of the resource policy.
  optional ResourcePolicyResourceStatus resource_status = 249429315;

  // [Output Only] Server-defined fully-qualified URL for this resource.
  optional string self_link = 456214797;

  // Resource policy for persistent disks for creating snapshots.
  optional ResourcePolicySnapshotSchedulePolicy snapshot_schedule_policy = 218131295;

  // [Output Only] The status of resource policy creation.
  // Check the Status enum for the list of possible values.
  optional string status = 181260274;

}

// Contains a list of resourcePolicies.
message ResourcePolicyAggregatedList {
  optional string etag = 3123477;

  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 3355;

  // A list of ResourcePolicy resources.
  map<string, ResourcePoliciesScopedList> items = 100526016;

  // Type of resource.
  optional string kind = 3292052;

  // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
  optional string next_page_token = 79797525;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 456214797;

  // [Output Only] Unreachable resources.
  repeated string unreachables = 243372063;

  // [Output Only] Informational warning message.
  optional Warning warning = 50704284;

}

// Time window specified for daily operations.
message ResourcePolicyDailyCycle {
  // Defines a schedule with units measured in days. The value determines how many days pass between the start of each cycle.
  optional int32 days_in_cycle = 369790004;

  // [Output only] A predetermined duration for the window, automatically chosen to be the smallest possible in the given scenario.
  optional string duration = 155471252;

  // Start time of the window. This must be in UTC format that resolves to one of 00:00, 04:00, 08:00, 12:00, 16:00, or 20:00. For example, both 13:00-5 and 08:00 are valid.
  optional string start_time = 37467274;

}

// A GroupPlacementPolicy specifies resource placement configuration. It specifies the failure bucket separation as well as network locality
message ResourcePolicyGroupPlacementPolicy {
  // Specifies network collocation
  enum Collocation {
    // A value indicating that the enum field is not set.
    UNDEFINED_COLLOCATION = 0;

    COLLOCATED = 103257554;

    UNSPECIFIED_COLLOCATION = 464308205;

  }

  // The number of availability domains to spread instances across. If two instances are in different availability domain, they are not in the same low latency network.
  optional int32 availability_domain_count = 12453432;

  // Specifies network collocation
  // Check the Collocation enum for the list of possible values.
  optional string collocation = 511156533;

  // Number of VMs in this placement group. Google does not recommend that you use this field unless you use a compact policy and you want your policy to work only if it contains this exact number of VMs.
  optional int32 vm_count = 261463431;

}

// Time window specified for hourly operations.
message ResourcePolicyHourlyCycle {
  // [Output only] Duration of the time window, automatically chosen to be smallest possible in the given scenario.
  optional string duration = 155471252;

  // Defines a schedule with units measured in hours. The value determines how many hours pass between the start of each cycle.
  optional int32 hours_in_cycle = 526763132;

  // Time within the window to start the operations. It must be in format "HH:MM", where HH : [00-23] and MM : [00-00] GMT.
  optional string start_time = 37467274;

}

// An InstanceSchedulePolicy specifies when and how frequent certain operations are performed on the instance.
message ResourcePolicyInstanceSchedulePolicy {
  // The expiration time of the schedule. The timestamp is an RFC3339 string.
  optional string expiration_time = 230299229;

  // The start time of the schedule. The timestamp is an RFC3339 string.
  optional string start_time = 37467274;

  // Specifies the time zone to be used in interpreting Schedule.schedule. The value of this field must be a time zone name from the tz database: https://wikipedia.org/wiki/Tz_database.
  optional string time_zone = 36848094;

  // Specifies the schedule for starting instances.
  optional ResourcePolicyInstanceSchedulePolicySchedule vm_start_schedule = 17762396;

  // Specifies the schedule for stopping instances.
  optional ResourcePolicyInstanceSchedulePolicySchedule vm_stop_schedule = 426242732;

}

// Schedule for an instance operation.
message ResourcePolicyInstanceSchedulePolicySchedule {
  // Specifies the frequency for the operation, using the unix-cron format.
  optional string schedule = 375820951;

}

//
message ResourcePolicyList {
  optional string etag = 3123477;

  // [Output Only] The unique identifier for the resource. This identifier is defined by the server.
  optional string id = 3355;

  // [Output Only] A list of ResourcePolicy resources.
  repeated ResourcePolicy items = 100526016;

  // [Output Only] Type of resource.Always compute#resourcePoliciesList for listsof resourcePolicies
  optional string kind = 3292052;

  // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
  optional string next_page_token = 79797525;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 456214797;

  // [Output Only] Informational warning message.
  optional Warning warning = 50704284;

}

// Contains output only fields. Use this sub-message for all output fields set on ResourcePolicy. The internal structure of this "status" field should mimic the structure of ResourcePolicy proto specification.
message ResourcePolicyResourceStatus {
  // [Output Only] Specifies a set of output values reffering to the instance_schedule_policy system status. This field should have the same name as corresponding policy field.
  optional ResourcePolicyResourceStatusInstanceSchedulePolicyStatus instance_schedule_policy = 344877104;

}

//
message ResourcePolicyResourceStatusInstanceSchedulePolicyStatus {
  // [Output Only] The last time the schedule successfully ran. The timestamp is an RFC3339 string.
  optional string last_run_start_time = 303069063;

  // [Output Only] The next time the schedule is planned to run. The actual time might be slightly different. The timestamp is an RFC3339 string.
  optional string next_run_start_time = 318642570;

}

// A snapshot schedule policy specifies when and how frequently snapshots are to be created for the target disk. Also specifies how many and how long these scheduled snapshots should be retained.
message ResourcePolicySnapshotSchedulePolicy {
  // Retention policy applied to snapshots created by this resource policy.
  optional ResourcePolicySnapshotSchedulePolicyRetentionPolicy retention_policy = 68625779;

  // A Vm Maintenance Policy specifies what kind of infrastructure maintenance we are allowed to perform on this VM and when. Schedule that is applied to disks covered by this policy.
  optional ResourcePolicySnapshotSchedulePolicySchedule schedule = 375820951;

  // Properties with which snapshots are created such as labels, encryption keys.
  optional ResourcePolicySnapshotSchedulePolicySnapshotProperties snapshot_properties = 185371278;

}

// Policy for retention of scheduled snapshots.
message ResourcePolicySnapshotSchedulePolicyRetentionPolicy {
  // Specifies the behavior to apply to scheduled snapshots when the source disk is deleted.
  enum OnSourceDiskDelete {
    // A value indicating that the enum field is not set.
    UNDEFINED_ON_SOURCE_DISK_DELETE = 0;

    APPLY_RETENTION_POLICY = 535071332;

    KEEP_AUTO_SNAPSHOTS = 258925689;

    UNSPECIFIED_ON_SOURCE_DISK_DELETE = 239140769;

  }

  // Maximum age of the snapshot that is allowed to be kept.
  optional int32 max_retention_days = 324296979;

  // Specifies the behavior to apply to scheduled snapshots when the source disk is deleted.
  // Check the OnSourceDiskDelete enum for the list of possible values.
  optional string on_source_disk_delete = 321955529;

}

// A schedule for disks where the schedueled operations are performed.
message ResourcePolicySnapshotSchedulePolicySchedule {
  optional ResourcePolicyDailyCycle daily_schedule = 86159869;

  optional ResourcePolicyHourlyCycle hourly_schedule = 38328485;

  optional ResourcePolicyWeeklyCycle weekly_schedule = 359548053;

}

// Specified snapshot properties for scheduled snapshots created by this policy.
message ResourcePolicySnapshotSchedulePolicySnapshotProperties {
  // Chain name that the snapshot is created in.
  optional string chain_name = 68644169;

  // Indication to perform a 'guest aware' snapshot.
  optional bool guest_flush = 385550813;

  // Labels to apply to scheduled snapshots. These can be later modified by the setLabels method. Label values may be empty.
  map<string, string> labels = 500195327;

  // Cloud Storage bucket storage location of the auto snapshot (regional or multi-regional).
  repeated string storage_locations = 328005274;

}

// Time window specified for weekly operations.
message ResourcePolicyWeeklyCycle {
  // Up to 7 intervals/windows, one for each day of the week.
  repeated ResourcePolicyWeeklyCycleDayOfWeek day_of_weeks = 257871834;

}

//
message ResourcePolicyWeeklyCycleDayOfWeek {
  // Defines a schedule that runs on specific days of the week. Specify one or more days. The following options are available: MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY.
  enum Day {
    // A value indicating that the enum field is not set.
    UNDEFINED_DAY = 0;

    FRIDAY = 471398751;

    INVALID = 530283991;

    MONDAY = 132310288;

    SATURDAY = 279037881;

    SUNDAY = 309626320;

    THURSDAY = 207198682;

    TUESDAY = 277509677;

    WEDNESDAY = 422029110;

  }

  // Defines a schedule that runs on specific days of the week. Specify one or more days. The following options are available: MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY.
  // Check the Day enum for the list of possible values.
  optional string day = 99228;

  // [Output only] Duration of the time window, automatically chosen to be smallest possible in the given scenario.
  optional string duration = 155471252;

  // Time within the window to start the operations. It must be in format "HH:MM", where HH : [00-23] and MM : [00-00] GMT.
  optional string start_time = 37467274;

}

// Contains output only fields. Use this sub-message for actual values set on Instance attributes as compared to the value requested by the user (intent) in their instance CRUD calls.
message ResourceStatus {
  // [Output Only] An opaque ID of the host on which the VM is running.
  optional string physical_host = 464370704;

}

// A request message for Instances.Resume. See the method description for details.
message ResumeInstanceRequest {
  // Name of the instance resource to resume.
  string instance = 18257045 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // The name of the zone for this request.
  string zone = 3744684 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "zone"
  ];

}

// Represents a Route resource. A route defines a path from VM instances in the VPC network to a specific destination. This destination can be inside or outside the VPC network. For more information, read the Routes overview.
message Route {
  // [Output only] The status of the route.
  enum RouteStatus {
    // A value indicating that the enum field is not set.
    UNDEFINED_ROUTE_STATUS = 0;

    // This route is processed and active.
    ACTIVE = 314733318;

    // The route is dropped due to the VPC exceeding the dynamic route limit. For dynamic route limit, please refer to the Learned route example
    DROPPED = 496235424;

    // This route is processed but inactive due to failure from the backend. The backend may have rejected the route
    INACTIVE = 270421099;

    // This route is being processed internally. The status will change once processed.
    PENDING = 35394935;

  }

  // [Output Only] The type of this route, which can be one of the following values: - 'TRANSIT' for a transit route that this router learned from another Cloud Router and will readvertise to one of its BGP peers - 'SUBNET' for a route from a subnet of the VPC - 'BGP' for a route learned from a BGP peer of this router - 'STATIC' for a static route
  enum RouteType {
    // A value indicating that the enum field is not set.
    UNDEFINED_ROUTE_TYPE = 0;

    BGP = 65707;

    STATIC = 308331118;

    SUBNET = 309278557;

    TRANSIT = 187793843;

  }

  // [Output Only] AS path.
  repeated RouteAsPath as_paths = 137568929;

  // [Output Only] Creation timestamp in RFC3339 text format.
  optional string creation_timestamp = 30525366;

  // An optional description of this resource. Provide this field when you create the resource.
  optional string description = 422937596;

  // The destination range of outgoing packets that this route applies to. Both IPv4 and IPv6 are supported.
  optional string dest_range = 381327712;

  // [Output Only] The unique identifier for the resource. This identifier is defined by the server.
  optional uint64 id = 3355;

  // [Output Only] Type of this resource. Always compute#routes for Route resources.
  optional string kind = 3292052;

  // Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?`. The first character must be a lowercase letter, and all following characters (except for the last character) must be a dash, lowercase letter, or digit. The last character must be a lowercase letter or digit.
  optional string name = 3373707;

  // Fully-qualified URL of the network that this route applies to.
  optional string network = 232872494;

  // The URL to a gateway that should handle matching packets. You can only specify the internet gateway using a full or partial valid URL: projects/ project/global/gateways/default-internet-gateway
  optional string next_hop_gateway = 377175298;

  // The URL to a forwarding rule of type loadBalancingScheme=INTERNAL that should handle matching packets or the IP address of the forwarding Rule. For example, the following are all valid URLs: - 10.128.0.56 - https://www.googleapis.com/compute/v1/projects/project/regions/region /forwardingRules/forwardingRule - regions/region/forwardingRules/forwardingRule 
  optional string next_hop_ilb = 198679901;

  // The URL to an instance that should handle matching packets. You can specify this as a full or partial URL. For example: https://www.googleapis.com/compute/v1/projects/project/zones/zone/instances/
  optional string next_hop_instance = 393508247;

  // The network IP address of an instance that should handle matching packets. Only IPv4 is supported.
  optional string next_hop_ip = 110319529;

  // The URL of the local network if it should handle matching packets.
  optional string next_hop_network = 262295788;

  // [Output Only] The network peering name that should handle matching packets, which should conform to RFC1035.
  optional string next_hop_peering = 412682750;

  // The URL to a VpnTunnel that should handle matching packets.
  optional string next_hop_vpn_tunnel = 519844501;

  // The priority of this route. Priority is used to break ties in cases where there is more than one matching route of equal prefix length. In cases where multiple routes have equal prefix length, the one with the lowest-numbered priority value wins. The default value is `1000`. The priority value must be from `0` to `65535`, inclusive.
  optional uint32 priority = 445151652;

  // [Output only] The status of the route.
  // Check the RouteStatus enum for the list of possible values.
  optional string route_status = 418162344;

  // [Output Only] The type of this route, which can be one of the following values: - 'TRANSIT' for a transit route that this router learned from another Cloud Router and will readvertise to one of its BGP peers - 'SUBNET' for a route from a subnet of the VPC - 'BGP' for a route learned from a BGP peer of this router - 'STATIC' for a static route
  // Check the RouteType enum for the list of possible values.
  optional string route_type = 375888752;

  // [Output Only] Server-defined fully-qualified URL for this resource.
  optional string self_link = 456214797;

  // A list of instance tags to which this route applies.
  repeated string tags = 3552281;

  // [Output Only] If potential misconfigurations are detected for this route, this field will be populated with warning messages.
  repeated Warnings warnings = 498091095;

}

//
message RouteAsPath {
  // [Output Only] The type of the AS Path, which can be one of the following values: - 'AS_SET': unordered set of autonomous systems that the route in has traversed - 'AS_SEQUENCE': ordered set of autonomous systems that the route has traversed - 'AS_CONFED_SEQUENCE': ordered set of Member Autonomous Systems in the local confederation that the route has traversed - 'AS_CONFED_SET': unordered set of Member Autonomous Systems in the local confederation that the route has traversed 
  enum PathSegmentType {
    // A value indicating that the enum field is not set.
    UNDEFINED_PATH_SEGMENT_TYPE = 0;

    AS_CONFED_SEQUENCE = 222152624;

    AS_CONFED_SET = 374040307;

    AS_SEQUENCE = 106735918;

    AS_SET = 329846453;

  }

  // [Output Only] The AS numbers of the AS Path.
  repeated uint32 as_lists = 134112584;

  // [Output Only] The type of the AS Path, which can be one of the following values: - 'AS_SET': unordered set of autonomous systems that the route in has traversed - 'AS_SEQUENCE': ordered set of autonomous systems that the route has traversed - 'AS_CONFED_SEQUENCE': ordered set of Member Autonomous Systems in the local confederation that the route has traversed - 'AS_CONFED_SET': unordered set of Member Autonomous Systems in the local confederation that the route has traversed
  // Check the PathSegmentType enum for the list of possible values.
  optional string path_segment_type = 513464992;

}

// Contains a list of Route resources.
message RouteList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 3355;

  // A list of Route resources.
  repeated Route items = 100526016;

  // Type of resource.
  optional string kind = 3292052;

  // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
  optional string next_page_token = 79797525;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 456214797;

  // [Output Only] Informational warning message.
  optional Warning warning = 50704284;

}

// Represents a Cloud Router resource. For more information about Cloud Router, read the Cloud Router overview.
message Router {
  // BGP information specific to this router.
  optional RouterBgp bgp = 97483;

  // BGP information that must be configured into the routing stack to establish BGP peering. This information must specify the peer ASN and either the interface name, IP address, or peer IP address. Please refer to RFC4273.
  repeated RouterBgpPeer bgp_peers = 452695773;

  // [Output Only] Creation timestamp in RFC3339 text format.
  optional string creation_timestamp = 30525366;

  // An optional description of this resource. Provide this property when you create the resource.
  optional string description = 422937596;

  // Indicates if a router is dedicated for use with encrypted VLAN attachments (interconnectAttachments).
  optional bool encrypted_interconnect_router = 297996575;

  // [Output Only] The unique identifier for the resource. This identifier is defined by the server.
  optional uint64 id = 3355;

  // Router interfaces. Each interface requires either one linked resource, (for example, linkedVpnTunnel), or IP address and IP address range (for example, ipRange), or both.
  repeated RouterInterface interfaces = 12073562;

  // [Output Only] Type of resource. Always compute#router for routers.
  optional string kind = 3292052;

  // Keys used for MD5 authentication.
  repeated RouterMd5AuthenticationKey md5_authentication_keys = 71063322;

  // Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
  optional string name = 3373707;

  // A list of NAT services created in this router.
  repeated RouterNat nats = 3373938;

  // URI of the network to which this router belongs.
  optional string network = 232872494;

  // [Output Only] URI of the region where the router resides. You must specify this field as part of the HTTP request URL. It is not settable as a field in the request body.
  optional string region = 138946292;

  // [Output Only] Server-defined URL for the resource.
  optional string self_link = 456214797;

}

// Description-tagged IP ranges for the router to advertise.
message RouterAdvertisedIpRange {
  // User-specified description for the IP range.
  optional string description = 422937596;

  // The IP range to advertise. The value must be a CIDR-formatted string.
  optional string range = 108280125;

}

// Contains a list of routers.
message RouterAggregatedList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 3355;

  // A list of Router resources.
  map<string, RoutersScopedList> items = 100526016;

  // Type of resource.
  optional string kind = 3292052;

  // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
  optional string next_page_token = 79797525;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 456214797;

  // [Output Only] Unreachable resources.
  repeated string unreachables = 243372063;

  // [Output Only] Informational warning message.
  optional Warning warning = 50704284;

}

//
message RouterBgp {
  // User-specified flag to indicate which mode to use for advertisement. The options are DEFAULT or CUSTOM.
  enum AdvertiseMode {
    // A value indicating that the enum field is not set.
    UNDEFINED_ADVERTISE_MODE = 0;

    CUSTOM = 388595569;

    DEFAULT = 115302945;

  }

  //
  enum AdvertisedGroups {
    // A value indicating that the enum field is not set.
    UNDEFINED_ADVERTISED_GROUPS = 0;

    // Advertise all available subnets (including peer VPC subnets).
    ALL_SUBNETS = 3622872;

  }

  // User-specified flag to indicate which mode to use for advertisement. The options are DEFAULT or CUSTOM.
  // Check the AdvertiseMode enum for the list of possible values.
  optional string advertise_mode = 312134331;

  // User-specified list of prefix groups to advertise in custom mode. This field can only be populated if advertise_mode is CUSTOM and is advertised to all peers of the router. These groups will be advertised in addition to any specified prefixes. Leave this field blank to advertise no custom groups.
  // Check the AdvertisedGroups enum for the list of possible values.
  repeated string advertised_groups = 21065526;

  // User-specified list of individual IP ranges to advertise in custom mode. This field can only be populated if advertise_mode is CUSTOM and is advertised to all peers of the router. These IP ranges will be advertised in addition to any specified groups. Leave this field blank to advertise no custom IP ranges.
  repeated RouterAdvertisedIpRange advertised_ip_ranges = 35449932;

  // Local BGP Autonomous System Number (ASN). Must be an RFC6996 private ASN, either 16-bit or 32-bit. The value will be fixed for this router resource. All VPN tunnels that link to this router will have the same local ASN.
  optional uint32 asn = 96892;

  // The interval in seconds between BGP keepalive messages that are sent to the peer. Hold time is three times the interval at which keepalive messages are sent, and the hold time is the maximum number of seconds allowed to elapse between successive keepalive messages that BGP receives from a peer. BGP will use the smaller of either the local hold time value or the peer's hold time value as the hold time for the BGP connection between the two peers. If set, this value must be between 20 and 60. The default is 20.
  optional uint32 keepalive_interval = 276771516;

}

//
message RouterBgpPeer {
  // User-specified flag to indicate which mode to use for advertisement.
  enum AdvertiseMode {
    // A value indicating that the enum field is not set.
    UNDEFINED_ADVERTISE_MODE = 0;

    CUSTOM = 388595569;

    DEFAULT = 115302945;

  }

  //
  enum AdvertisedGroups {
    // A value indicating that the enum field is not set.
    UNDEFINED_ADVERTISED_GROUPS = 0;

    // Advertise all available subnets (including peer VPC subnets).
    ALL_SUBNETS = 3622872;

  }

  // The status of the BGP peer connection. If set to FALSE, any active session with the peer is terminated and all associated routing information is removed. If set to TRUE, the peer connection can be established with routing information. The default is TRUE.
  enum Enable {
    // A value indicating that the enum field is not set.
    UNDEFINED_ENABLE = 0;

    FALSE = 66658563;

    TRUE = 2583950;

  }

  // [Output Only] The resource that configures and manages this BGP peer. - MANAGED_BY_USER is the default value and can be managed by you or other users - MANAGED_BY_ATTACHMENT is a BGP peer that is configured and managed by Cloud Interconnect, specifically by an InterconnectAttachment of type PARTNER. Google automatically creates, updates, and deletes this type of BGP peer when the PARTNER InterconnectAttachment is created, updated, or deleted. 
  enum ManagementType {
    // A value indicating that the enum field is not set.
    UNDEFINED_MANAGEMENT_TYPE = 0;

    // The BGP peer is automatically created for PARTNER type InterconnectAttachment; Google will automatically create/delete this BGP peer when the PARTNER InterconnectAttachment is created/deleted, and Google will update the ipAddress and peerIpAddress when the PARTNER InterconnectAttachment is provisioned. This type of BGP peer cannot be created or deleted, but can be modified for all fields except for name, ipAddress and peerIpAddress.
    MANAGED_BY_ATTACHMENT = 458926411;

    // Default value, the BGP peer is manually created and managed by user.
    MANAGED_BY_USER = 317294067;

  }

  // User-specified flag to indicate which mode to use for advertisement.
  // Check the AdvertiseMode enum for the list of possible values.
  optional string advertise_mode = 312134331;

  // User-specified list of prefix groups to advertise in custom mode, which currently supports the following option: - ALL_SUBNETS: Advertises all of the router's own VPC subnets. This excludes any routes learned for subnets that use VPC Network Peering. Note that this field can only be populated if advertise_mode is CUSTOM and overrides the list defined for the router (in the "bgp" message). These groups are advertised in addition to any specified prefixes. Leave this field blank to advertise no custom groups.
  // Check the AdvertisedGroups enum for the list of possible values.
  repeated string advertised_groups = 21065526;

  // User-specified list of individual IP ranges to advertise in custom mode. This field can only be populated if advertise_mode is CUSTOM and overrides the list defined for the router (in the "bgp" message). These IP ranges are advertised in addition to any specified groups. Leave this field blank to advertise no custom IP ranges.
  repeated RouterAdvertisedIpRange advertised_ip_ranges = 35449932;

  // The priority of routes advertised to this BGP peer. Where there is more than one matching route of maximum length, the routes with the lowest priority value win.
  optional uint32 advertised_route_priority = 186486332;

  // BFD configuration for the BGP peering.
  optional RouterBgpPeerBfd bfd = 97440;

  // The status of the BGP peer connection. If set to FALSE, any active session with the peer is terminated and all associated routing information is removed. If set to TRUE, the peer connection can be established with routing information. The default is TRUE.
  // Check the Enable enum for the list of possible values.
  optional string enable = 311764355;

  // Enable IPv6 traffic over BGP Peer. If not specified, it is disabled by default.
  optional bool enable_ipv6 = 181467939;

  // Name of the interface the BGP peer is associated with.
  optional string interface_name = 437854673;

  // IP address of the interface inside Google Cloud Platform. Only IPv4 is supported.
  optional string ip_address = 406272220;

  // IPv6 address of the interface inside Google Cloud Platform.
  optional string ipv6_nexthop_address = 27968211;

  // [Output Only] The resource that configures and manages this BGP peer. - MANAGED_BY_USER is the default value and can be managed by you or other users - MANAGED_BY_ATTACHMENT is a BGP peer that is configured and managed by Cloud Interconnect, specifically by an InterconnectAttachment of type PARTNER. Google automatically creates, updates, and deletes this type of BGP peer when the PARTNER InterconnectAttachment is created, updated, or deleted.
  // Check the ManagementType enum for the list of possible values.
  optional string management_type = 173703606;

  // Present if MD5 authentication is enabled for the peering. Must be the name of one of the entries in the Router.md5_authentication_keys. The field must comply with RFC1035.
  optional string md5_authentication_key_name = 281075345;

  // Name of this BGP peer. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
  optional string name = 3373707;

  // Peer BGP Autonomous System Number (ASN). Each BGP interface may use a different value.
  optional uint32 peer_asn = 69573151;

  // IP address of the BGP interface outside Google Cloud Platform. Only IPv4 is supported.
  optional string peer_ip_address = 207735769;

  // IPv6 address of the BGP interface outside Google Cloud Platform.
  optional string peer_ipv6_nexthop_address = 491486608;

  // URI of the VM instance that is used as third-party router appliances such as Next Gen Firewalls, Virtual Routers, or Router Appliances. The VM instance must be located in zones contained in the same region as this Cloud Router. The VM instance is the peer side of the BGP session.
  optional string router_appliance_instance = 468312989;

}

//
message RouterBgpPeerBfd {
  // The BFD session initialization mode for this BGP peer. If set to ACTIVE, the Cloud Router will initiate the BFD session for this BGP peer. If set to PASSIVE, the Cloud Router will wait for the peer router to initiate the BFD session for this BGP peer. If set to DISABLED, BFD is disabled for this BGP peer. The default is DISABLED.
  enum SessionInitializationMode {
    // A value indicating that the enum field is not set.
    UNDEFINED_SESSION_INITIALIZATION_MODE = 0;

    ACTIVE = 314733318;

    DISABLED = 516696700;

    PASSIVE = 462813959;

  }

  // The minimum interval, in milliseconds, between BFD control packets received from the peer router. The actual value is negotiated between the two routers and is equal to the greater of this value and the transmit interval of the other router. If set, this value must be between 1000 and 30000. The default is 1000.
  optional uint32 min_receive_interval = 186981614;

  // The minimum interval, in milliseconds, between BFD control packets transmitted to the peer router. The actual value is negotiated between the two routers and is equal to the greater of this value and the corresponding receive interval of the other router. If set, this value must be between 1000 and 30000. The default is 1000.
  optional uint32 min_transmit_interval = 523282631;

  // The number of consecutive BFD packets that must be missed before BFD declares that a peer is unavailable. If set, the value must be a value between 5 and 16. The default is 5.
  optional uint32 multiplier = 191331777;

  // The BFD session initialization mode for this BGP peer. If set to ACTIVE, the Cloud Router will initiate the BFD session for this BGP peer. If set to PASSIVE, the Cloud Router will wait for the peer router to initiate the BFD session for this BGP peer. If set to DISABLED, BFD is disabled for this BGP peer. The default is DISABLED.
  // Check the SessionInitializationMode enum for the list of possible values.
  optional string session_initialization_mode = 105957049;

}

//
message RouterInterface {
  // [Output Only] The resource that configures and manages this interface. - MANAGED_BY_USER is the default value and can be managed directly by users. - MANAGED_BY_ATTACHMENT is an interface that is configured and managed by Cloud Interconnect, specifically, by an InterconnectAttachment of type PARTNER. Google automatically creates, updates, and deletes this type of interface when the PARTNER InterconnectAttachment is created, updated, or deleted. 
  enum ManagementType {
    // A value indicating that the enum field is not set.
    UNDEFINED_MANAGEMENT_TYPE = 0;

    // The interface is automatically created for PARTNER type InterconnectAttachment, Google will automatically create/update/delete this interface when the PARTNER InterconnectAttachment is created/provisioned/deleted. This type of interface cannot be manually managed by user.
    MANAGED_BY_ATTACHMENT = 458926411;

    // Default value, the interface is manually created and managed by user.
    MANAGED_BY_USER = 317294067;

  }

  // IP address and range of the interface. The IP range must be in the RFC3927 link-local IP address space. The value must be a CIDR-formatted string, for example: 169.254.0.1/30. NOTE: Do not truncate the address as it represents the IP address of the interface.
  optional string ip_range = 145092645;

  // URI of the linked Interconnect attachment. It must be in the same region as the router. Each interface can have one linked resource, which can be a VPN tunnel, an Interconnect attachment, or a virtual machine instance.
  optional string linked_interconnect_attachment = 501085518;

  // URI of the linked VPN tunnel, which must be in the same region as the router. Each interface can have one linked resource, which can be a VPN tunnel, an Interconnect attachment, or a virtual machine instance.
  optional string linked_vpn_tunnel = 352296953;

  // [Output Only] The resource that configures and manages this interface. - MANAGED_BY_USER is the default value and can be managed directly by users. - MANAGED_BY_ATTACHMENT is an interface that is configured and managed by Cloud Interconnect, specifically, by an InterconnectAttachment of type PARTNER. Google automatically creates, updates, and deletes this type of interface when the PARTNER InterconnectAttachment is created, updated, or deleted.
  // Check the ManagementType enum for the list of possible values.
  optional string management_type = 173703606;

  // Name of this interface entry. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
  optional string name = 3373707;

  // The regional private internal IP address that is used to establish BGP sessions to a VM instance acting as a third-party Router Appliance, such as a Next Gen Firewall, a Virtual Router, or an SD-WAN VM.
  optional string private_ip_address = 100854040;

  // Name of the interface that will be redundant with the current interface you are creating. The redundantInterface must belong to the same Cloud Router as the interface here. To establish the BGP session to a Router Appliance VM, you must create two BGP peers. The two BGP peers must be attached to two separate interfaces that are redundant with each other. The redundant_interface must be 1-63 characters long, and comply with RFC1035. Specifically, the redundant_interface must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
  optional string redundant_interface = 523187303;

  // The URI of the subnetwork resource that this interface belongs to, which must be in the same region as the Cloud Router. When you establish a BGP session to a VM instance using this interface, the VM instance must belong to the same subnetwork as the subnetwork specified here.
  optional string subnetwork = 307827694;

}

// Contains a list of Router resources.
message RouterList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 3355;

  // A list of Router resources.
  repeated Router items = 100526016;

  // [Output Only] Type of resource. Always compute#router for routers.
  optional string kind = 3292052;

  // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
  optional string next_page_token = 79797525;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 456214797;

  // [Output Only] Informational warning message.
  optional Warning warning = 50704284;

}

//
message RouterMd5AuthenticationKey {
  // [Input only] Value of the key. For patch and update calls, it can be skipped to copy the value from the previous configuration. This is allowed if the key with the same name existed before the operation. Maximum length is 80 characters. Can only contain printable ASCII characters.
  optional string key = 106079;

  // Name used to identify the key. Must be unique within a router. Must be referenced by at least one bgpPeer. Must comply with RFC1035.
  optional string name = 3373707;

}

// Represents a Nat resource. It enables the VMs within the specified subnetworks to access Internet without external IP addresses. It specifies a list of subnetworks (and the ranges within) that want to use NAT. Customers can also provide the external IPs that would be used for NAT. GCP would auto-allocate ephemeral IPs if no external IPs are provided.
message RouterNat {
  //
  enum EndpointTypes {
    // A value indicating that the enum field is not set.
    UNDEFINED_ENDPOINT_TYPES = 0;

    // This is used for Secure Web Gateway endpoints.
    ENDPOINT_TYPE_SWG = 159344456;

    // This is the default.
    ENDPOINT_TYPE_VM = 57095474;

  }

  // Specify the NatIpAllocateOption, which can take one of the following values: - MANUAL_ONLY: Uses only Nat IP addresses provided by customers. When there are not enough specified Nat IPs, the Nat service fails for new VMs. - AUTO_ONLY: Nat IPs are allocated by Google Cloud Platform; customers can't specify any Nat IPs. When choosing AUTO_ONLY, then nat_ip should be empty. 
  enum NatIpAllocateOption {
    // A value indicating that the enum field is not set.
    UNDEFINED_NAT_IP_ALLOCATE_OPTION = 0;

    // Nat IPs are allocated by GCP; customers can not specify any Nat IPs.
    AUTO_ONLY = 182333500;

    // Only use Nat IPs provided by customers. When specified Nat IPs are not enough then the Nat service fails for new VMs.
    MANUAL_ONLY = 261251205;

  }

  // Specify the Nat option, which can take one of the following values: - ALL_SUBNETWORKS_ALL_IP_RANGES: All of the IP ranges in every Subnetwork are allowed to Nat. - ALL_SUBNETWORKS_ALL_PRIMARY_IP_RANGES: All of the primary IP ranges in every Subnetwork are allowed to Nat. - LIST_OF_SUBNETWORKS: A list of Subnetworks are allowed to Nat (specified in the field subnetwork below) The default is SUBNETWORK_IP_RANGE_TO_NAT_OPTION_UNSPECIFIED. Note that if this field contains ALL_SUBNETWORKS_ALL_IP_RANGES or ALL_SUBNETWORKS_ALL_PRIMARY_IP_RANGES, then there should not be any other Router.Nat section in any Router for this network in this region.
  enum SourceSubnetworkIpRangesToNat {
    // A value indicating that the enum field is not set.
    UNDEFINED_SOURCE_SUBNETWORK_IP_RANGES_TO_NAT = 0;

    // All the IP ranges in every Subnetwork are allowed to Nat.
    ALL_SUBNETWORKS_ALL_IP_RANGES = 179964376;

    // All the primary IP ranges in every Subnetwork are allowed to Nat.
    ALL_SUBNETWORKS_ALL_PRIMARY_IP_RANGES = 185573819;

    // A list of Subnetworks are allowed to Nat (specified in the field subnetwork below)
    LIST_OF_SUBNETWORKS = 517542270;

  }

  // A list of URLs of the IP resources to be drained. These IPs must be valid static external IPs that have been assigned to the NAT. These IPs should be used for updating/patching a NAT only.
  repeated string drain_nat_ips = 504078535;

  // Enable Dynamic Port Allocation. If not specified, it is disabled by default. If set to true, - Dynamic Port Allocation will be enabled on this NAT config. - enableEndpointIndependentMapping cannot be set to true. - If minPorts is set, minPortsPerVm must be set to a power of two greater than or equal to 32. If minPortsPerVm is not set, a minimum of 32 ports will be allocated to a VM from this NAT config. 
  optional bool enable_dynamic_port_allocation = 532106402;

  optional bool enable_endpoint_independent_mapping = 259441819;

  // List of NAT-ted endpoint types supported by the Nat Gateway. If the list is empty, then it will be equivalent to include ENDPOINT_TYPE_VM
  // Check the EndpointTypes enum for the list of possible values.
  repeated string endpoint_types = 502633807;

  // Timeout (in seconds) for ICMP connections. Defaults to 30s if not set.
  optional int32 icmp_idle_timeout_sec = 3647562;

  // Configure logging on this NAT.
  optional RouterNatLogConfig log_config = 351299741;

  // Maximum number of ports allocated to a VM from this NAT config when Dynamic Port Allocation is enabled. If Dynamic Port Allocation is not enabled, this field has no effect. If Dynamic Port Allocation is enabled, and this field is set, it must be set to a power of two greater than minPortsPerVm, or 64 if minPortsPerVm is not set. If Dynamic Port Allocation is enabled and this field is not set, a maximum of 65536 ports will be allocated to a VM from this NAT config.
  optional int32 max_ports_per_vm = 250062049;

  // Minimum number of ports allocated to a VM from this NAT config. If not set, a default number of ports is allocated to a VM. This is rounded up to the nearest power of 2. For example, if the value of this field is 50, at least 64 ports are allocated to a VM.
  optional int32 min_ports_per_vm = 186193587;

  // Unique name of this Nat service. The name must be 1-63 characters long and comply with RFC1035.
  optional string name = 3373707;

  // Specify the NatIpAllocateOption, which can take one of the following values: - MANUAL_ONLY: Uses only Nat IP addresses provided by customers. When there are not enough specified Nat IPs, the Nat service fails for new VMs. - AUTO_ONLY: Nat IPs are allocated by Google Cloud Platform; customers can't specify any Nat IPs. When choosing AUTO_ONLY, then nat_ip should be empty.
  // Check the NatIpAllocateOption enum for the list of possible values.
  optional string nat_ip_allocate_option = 429726845;

  // A list of URLs of the IP resources used for this Nat service. These IP addresses must be valid static external IP addresses assigned to the project.
  repeated string nat_ips = 117635086;

  // A list of rules associated with this NAT.
  repeated RouterNatRule rules = 108873975;

  // Specify the Nat option, which can take one of the following values: - ALL_SUBNETWORKS_ALL_IP_RANGES: All of the IP ranges in every Subnetwork are allowed to Nat. - ALL_SUBNETWORKS_ALL_PRIMARY_IP_RANGES: All of the primary IP ranges in every Subnetwork are allowed to Nat. - LIST_OF_SUBNETWORKS: A list of Subnetworks are allowed to Nat (specified in the field subnetwork below) The default is SUBNETWORK_IP_RANGE_TO_NAT_OPTION_UNSPECIFIED. Note that if this field contains ALL_SUBNETWORKS_ALL_IP_RANGES or ALL_SUBNETWORKS_ALL_PRIMARY_IP_RANGES, then there should not be any other Router.Nat section in any Router for this network in this region.
  // Check the SourceSubnetworkIpRangesToNat enum for the list of possible values.
  optional string source_subnetwork_ip_ranges_to_nat = 252213211;

  // A list of Subnetwork resources whose traffic should be translated by NAT Gateway. It is used only when LIST_OF_SUBNETWORKS is selected for the SubnetworkIpRangeToNatOption above.
  repeated RouterNatSubnetworkToNat subnetworks = 415853125;

  // Timeout (in seconds) for TCP established connections. Defaults to 1200s if not set.
  optional int32 tcp_established_idle_timeout_sec = 223098349;

  // Timeout (in seconds) for TCP connections that are in TIME_WAIT state. Defaults to 120s if not set.
  optional int32 tcp_time_wait_timeout_sec = 513596925;

  // Timeout (in seconds) for TCP transitory connections. Defaults to 30s if not set.
  optional int32 tcp_transitory_idle_timeout_sec = 205028774;

  // Timeout (in seconds) for UDP connections. Defaults to 30s if not set.
  optional int32 udp_idle_timeout_sec = 64919878;

}

// Configuration of logging on a NAT.
message RouterNatLogConfig {
  // Specify the desired filtering of logs on this NAT. If unspecified, logs are exported for all connections handled by this NAT. This option can take one of the following values: - ERRORS_ONLY: Export logs only for connection failures. - TRANSLATIONS_ONLY: Export logs only for successful connections. - ALL: Export logs for all connections, successful and unsuccessful. 
  enum Filter {
    // A value indicating that the enum field is not set.
    UNDEFINED_FILTER = 0;

    // Export logs for all (successful and unsuccessful) connections.
    ALL = 64897;

    // Export logs for connection failures only.
    ERRORS_ONLY = 307484672;

    // Export logs for successful connections only.
    TRANSLATIONS_ONLY = 357212649;

  }

  // Indicates whether or not to export logs. This is false by default.
  optional bool enable = 311764355;

  // Specify the desired filtering of logs on this NAT. If unspecified, logs are exported for all connections handled by this NAT. This option can take one of the following values: - ERRORS_ONLY: Export logs only for connection failures. - TRANSLATIONS_ONLY: Export logs only for successful connections. - ALL: Export logs for all connections, successful and unsuccessful.
  // Check the Filter enum for the list of possible values.
  optional string filter = 336120696;

}

//
message RouterNatRule {
  // The action to be enforced for traffic that matches this rule.
  optional RouterNatRuleAction action = 187661878;

  // An optional description of this rule.
  optional string description = 422937596;

  // CEL expression that specifies the match condition that egress traffic from a VM is evaluated against. If it evaluates to true, the corresponding `action` is enforced. The following examples are valid match expressions for public NAT: "inIpRange(destination.ip, '1.1.0.0/16') || inIpRange(destination.ip, '2.2.0.0/16')" "destination.ip == '1.1.0.1' || destination.ip == '8.8.8.8'" The following example is a valid match expression for private NAT: "nexthop.hub == 'https://networkconnectivity.googleapis.com/v1alpha1/projects/my-project/global/hub/hub-1'"
  optional string match = 103668165;

  // An integer uniquely identifying a rule in the list. The rule number must be a positive value between 0 and 65000, and must be unique among rules within a NAT.
  optional uint32 rule_number = 535211500;

}

//
message RouterNatRuleAction {
  // A list of URLs of the IP resources used for this NAT rule. These IP addresses must be valid static external IP addresses assigned to the project. This field is used for public NAT.
  repeated string source_nat_active_ips = 210378229;

  // A list of URLs of the IP resources to be drained. These IPs must be valid static external IPs that have been assigned to the NAT. These IPs should be used for updating/patching a NAT rule only. This field is used for public NAT.
  repeated string source_nat_drain_ips = 340812451;

}

// Defines the IP ranges that want to use NAT for a subnetwork.
message RouterNatSubnetworkToNat {
  //
  enum SourceIpRangesToNat {
    // A value indicating that the enum field is not set.
    UNDEFINED_SOURCE_IP_RANGES_TO_NAT = 0;

    // The primary and all the secondary ranges are allowed to Nat.
    ALL_IP_RANGES = 35608496;

    // A list of secondary ranges are allowed to Nat.
    LIST_OF_SECONDARY_IP_RANGES = 192289308;

    // The primary range is allowed to Nat.
    PRIMARY_IP_RANGE = 297109954;

  }

  // URL for the subnetwork resource that will use NAT.
  optional string name = 3373707;

  // A list of the secondary ranges of the Subnetwork that are allowed to use NAT. This can be populated only if "LIST_OF_SECONDARY_IP_RANGES" is one of the values in source_ip_ranges_to_nat.
  repeated string secondary_ip_range_names = 264315097;

  // Specify the options for NAT ranges in the Subnetwork. All options of a single value are valid except NAT_IP_RANGE_OPTION_UNSPECIFIED. The only valid option with multiple values is: ["PRIMARY_IP_RANGE", "LIST_OF_SECONDARY_IP_RANGES"] Default: [ALL_IP_RANGES]
  // Check the SourceIpRangesToNat enum for the list of possible values.
  repeated string source_ip_ranges_to_nat = 388310386;

}

//
message RouterStatus {
  // Best routes for this router's network.
  repeated Route best_routes = 395826693;

  // Best routes learned by this router.
  repeated Route best_routes_for_router = 119389689;

  repeated RouterStatusBgpPeerStatus bgp_peer_status = 218459131;

  repeated RouterStatusNatStatus nat_status = 63098064;

  // URI of the network to which this router belongs.
  optional string network = 232872494;

}

//
message RouterStatusBgpPeerStatus {
  // Status of the BGP peer: {UP, DOWN}
  enum Status {
    // A value indicating that the enum field is not set.
    UNDEFINED_STATUS = 0;

    DOWN = 2104482;

    UNKNOWN = 433141802;

    UP = 2715;

  }

  // Indicates why particular status was returned.
  enum StatusReason {
    // A value indicating that the enum field is not set.
    UNDEFINED_STATUS_REASON = 0;

    // Indicates internal problems with configuration of MD5 authentication. This particular reason can only be returned when md5AuthEnabled is true and status is DOWN.
    MD5_AUTH_INTERNAL_PROBLEM = 140462259;

    STATUS_REASON_UNSPECIFIED = 394331913;

  }

  // Routes that were advertised to the remote BGP peer
  repeated Route advertised_routes = 333393068;

  optional BfdStatus bfd_status = 395631729;

  // Enable IPv6 traffic over BGP Peer. If not specified, it is disabled by default.
  optional bool enable_ipv6 = 181467939;

  // IP address of the local BGP interface.
  optional string ip_address = 406272220;

  // IPv6 address of the local BGP interface.
  optional string ipv6_nexthop_address = 27968211;

  // URL of the VPN tunnel that this BGP peer controls.
  optional string linked_vpn_tunnel = 352296953;

  // Informs whether MD5 authentication is enabled on this BGP peer.
  optional bool md5_auth_enabled = 451152075;

  // Name of this BGP peer. Unique within the Routers resource.
  optional string name = 3373707;

  // Number of routes learned from the remote BGP Peer.
  optional uint32 num_learned_routes = 135457535;

  // IP address of the remote BGP interface.
  optional string peer_ip_address = 207735769;

  // IPv6 address of the remote BGP interface.
  optional string peer_ipv6_nexthop_address = 491486608;

  // [Output only] URI of the VM instance that is used as third-party router appliances such as Next Gen Firewalls, Virtual Routers, or Router Appliances. The VM instance is the peer side of the BGP session.
  optional string router_appliance_instance = 468312989;

  // The state of the BGP session. For a list of possible values for this field, see BGP session states.
  optional string state = 109757585;

  // Status of the BGP peer: {UP, DOWN}
  // Check the Status enum for the list of possible values.
  optional string status = 181260274;

  // Indicates why particular status was returned.
  // Check the StatusReason enum for the list of possible values.
  optional string status_reason = 342706993;

  // Time this session has been up. Format: 14 years, 51 weeks, 6 days, 23 hours, 59 minutes, 59 seconds
  optional string uptime = 235379688;

  // Time this session has been up, in seconds. Format: 145
  optional string uptime_seconds = 104736040;

}

// Status of a NAT contained in this router.
message RouterStatusNatStatus {
  // A list of IPs auto-allocated for NAT. Example: ["1.1.1.1", "129.2.16.89"]
  repeated string auto_allocated_nat_ips = 510794246;

  // A list of IPs auto-allocated for NAT that are in drain mode. Example: ["1.1.1.1", "179.12.26.133"].
  repeated string drain_auto_allocated_nat_ips = 309184557;

  // A list of IPs user-allocated for NAT that are in drain mode. Example: ["1.1.1.1", "179.12.26.133"].
  repeated string drain_user_allocated_nat_ips = 305268553;

  // The number of extra IPs to allocate. This will be greater than 0 only if user-specified IPs are NOT enough to allow all configured VMs to use NAT. This value is meaningful only when auto-allocation of NAT IPs is *not* used.
  optional int32 min_extra_nat_ips_needed = 365786338;

  // Unique name of this NAT.
  optional string name = 3373707;

  // Number of VM endpoints (i.e., Nics) that can use NAT.
  optional int32 num_vm_endpoints_with_nat_mappings = 512367468;

  // Status of rules in this NAT.
  repeated RouterStatusNatStatusNatRuleStatus rule_status = 140223125;

  // A list of fully qualified URLs of reserved IP address resources.
  repeated string user_allocated_nat_ip_resources = 212776151;

  // A list of IPs user-allocated for NAT. They will be raw IP strings like "179.12.26.133".
  repeated string user_allocated_nat_ips = 506878242;

}

// Status of a NAT Rule contained in this NAT.
message RouterStatusNatStatusNatRuleStatus {
  // A list of active IPs for NAT. Example: ["1.1.1.1", "179.12.26.133"].
  repeated string active_nat_ips = 208517077;

  // A list of IPs for NAT that are in drain mode. Example: ["1.1.1.1", "179.12.26.133"].
  repeated string drain_nat_ips = 504078535;

  // The number of extra IPs to allocate. This will be greater than 0 only if the existing IPs in this NAT Rule are NOT enough to allow all configured VMs to use NAT.
  optional int32 min_extra_ips_needed = 353002756;

  // Number of VM endpoints (i.e., NICs) that have NAT Mappings from this NAT Rule.
  optional int32 num_vm_endpoints_with_nat_mappings = 512367468;

  // Rule number of the rule.
  optional int32 rule_number = 535211500;

}

//
message RouterStatusResponse {
  // Type of resource.
  optional string kind = 3292052;

  optional RouterStatus result = 139315229;

}

//
message RoutersPreviewResponse {
  // Preview of given router.
  optional Router resource = 195806222;

}

//
message RoutersScopedList {
  // A list of routers contained in this scope.
  repeated Router routers = 311906890;

  // Informational warning which replaces the list of routers when the list is empty.
  optional Warning warning = 50704284;

}

// This is deprecated and has no effect. Do not use.
message Rule {
  // This is deprecated and has no effect. Do not use.
  enum Action {
    // A value indicating that the enum field is not set.
    UNDEFINED_ACTION = 0;

    // This is deprecated and has no effect. Do not use.
    ALLOW = 62368553;

    // This is deprecated and has no effect. Do not use.
    ALLOW_WITH_LOG = 76034177;

    // This is deprecated and has no effect. Do not use.
    DENY = 2094604;

    // This is deprecated and has no effect. Do not use.
    DENY_WITH_LOG = 351433982;

    // This is deprecated and has no effect. Do not use.
    LOG = 75556;

    // This is deprecated and has no effect. Do not use.
    NO_ACTION = 260643444;

  }

  // This is deprecated and has no effect. Do not use.
  // Check the Action enum for the list of possible values.
  optional string action = 187661878;

  // This is deprecated and has no effect. Do not use.
  repeated Condition conditions = 142882488;

  // This is deprecated and has no effect. Do not use.
  optional string description = 422937596;

  // This is deprecated and has no effect. Do not use.
  repeated string ins = 104430;

  // This is deprecated and has no effect. Do not use.
  repeated LogConfig log_configs = 152873846;

  // This is deprecated and has no effect. Do not use.
  repeated string not_ins = 518443138;

  // This is deprecated and has no effect. Do not use.
  repeated string permissions = 59962500;

}

//
message SSLHealthCheck {
  // Specifies how a port is selected for health checking. Can be one of the following values: USE_FIXED_PORT: Specifies a port number explicitly using the port field in the health check. Supported by backend services for pass-through load balancers and backend services for proxy load balancers. Not supported by target pools. The health check supports all backends supported by the backend service provided the backend can be health checked. For example, GCE_VM_IP network endpoint groups, GCE_VM_IP_PORT network endpoint groups, and instance group backends. USE_NAMED_PORT: Not supported. USE_SERVING_PORT: Provides an indirect method of specifying the health check port by referring to the backend service. Only supported by backend services for proxy load balancers. Not supported by target pools. Not supported by backend services for pass-through load balancers. Supports all backends that can be health checked; for example, GCE_VM_IP_PORT network endpoint groups and instance group backends. For GCE_VM_IP_PORT network endpoint group backends, the health check uses the port number specified for each endpoint in the network endpoint group. For instance group backends, the health check uses the port number determined by looking up the backend service's named port in the instance group's list of named ports.
  enum PortSpecification {
    // A value indicating that the enum field is not set.
    UNDEFINED_PORT_SPECIFICATION = 0;

    // The port number in the health check's port is used for health checking. Applies to network endpoint group and instance group backends.
    USE_FIXED_PORT = 190235748;

    // Not supported.
    USE_NAMED_PORT = 349300671;

    // For network endpoint group backends, the health check uses the port number specified on each endpoint in the network endpoint group. For instance group backends, the health check uses the port number specified for the backend service's named port defined in the instance group's named ports.
    USE_SERVING_PORT = 362637516;

  }

  // Specifies the type of proxy header to append before sending data to the backend, either NONE or PROXY_V1. The default is NONE.
  enum ProxyHeader {
    // A value indicating that the enum field is not set.
    UNDEFINED_PROXY_HEADER = 0;

    NONE = 2402104;

    PROXY_V1 = 334352940;

  }

  // The TCP port number to which the health check prober sends packets. The default value is 443. Valid values are 1 through 65535.
  optional int32 port = 3446913;

  // Not supported.
  optional string port_name = 41534345;

  // Specifies how a port is selected for health checking. Can be one of the following values: USE_FIXED_PORT: Specifies a port number explicitly using the port field in the health check. Supported by backend services for pass-through load balancers and backend services for proxy load balancers. Not supported by target pools. The health check supports all backends supported by the backend service provided the backend can be health checked. For example, GCE_VM_IP network endpoint groups, GCE_VM_IP_PORT network endpoint groups, and instance group backends. USE_NAMED_PORT: Not supported. USE_SERVING_PORT: Provides an indirect method of specifying the health check port by referring to the backend service. Only supported by backend services for proxy load balancers. Not supported by target pools. Not supported by backend services for pass-through load balancers. Supports all backends that can be health checked; for example, GCE_VM_IP_PORT network endpoint groups and instance group backends. For GCE_VM_IP_PORT network endpoint group backends, the health check uses the port number specified for each endpoint in the network endpoint group. For instance group backends, the health check uses the port number determined by looking up the backend service's named port in the instance group's list of named ports.
  // Check the PortSpecification enum for the list of possible values.
  optional string port_specification = 51590597;

  // Specifies the type of proxy header to append before sending data to the backend, either NONE or PROXY_V1. The default is NONE.
  // Check the ProxyHeader enum for the list of possible values.
  optional string proxy_header = 160374142;

  // Instructs the health check prober to send this exact ASCII string, up to 1024 bytes in length, after establishing the TCP connection and SSL handshake.
  optional string request = 21951119;

  // Creates a content-based SSL health check. In addition to establishing a TCP connection and the TLS handshake, you can configure the health check to pass only when the backend sends this exact response ASCII string, up to 1024 bytes in length. For details, see: https://cloud.google.com/load-balancing/docs/health-check-concepts#criteria-protocol-ssl-tcp
  optional string response = 196547649;

}

// DEPRECATED: Please use compute#savedDisk instead. An instance-attached disk resource.
message SavedAttachedDisk {
  // Specifies the disk interface to use for attaching this disk, which is either SCSI or NVME.
  enum Interface {
    // A value indicating that the enum field is not set.
    UNDEFINED_INTERFACE = 0;

    NVME = 2408800;

    SCSI = 2539686;

  }

  // The mode in which this disk is attached to the source instance, either READ_WRITE or READ_ONLY.
  enum Mode {
    // A value indicating that the enum field is not set.
    UNDEFINED_MODE = 0;

    // Attaches this disk in read-only mode. Multiple virtual machines can use a disk in read-only mode at a time.
    READ_ONLY = 91950261;

    // *[Default]* Attaches this disk in read-write mode. Only one virtual machine at a time can be attached to a disk in read-write mode.
    READ_WRITE = 173607894;

  }

  // [Output Only] An indicator whether storageBytes is in a stable state or it is being adjusted as a result of shared storage reallocation. This status can either be UPDATING, meaning the size of the snapshot is being updated, or UP_TO_DATE, meaning the size of the snapshot is up-to-date.
  enum StorageBytesStatus {
    // A value indicating that the enum field is not set.
    UNDEFINED_STORAGE_BYTES_STATUS = 0;

    UPDATING = 494614342;

    UP_TO_DATE = 101306702;

  }

  // Specifies the type of the attached disk, either SCRATCH or PERSISTENT.
  enum Type {
    // A value indicating that the enum field is not set.
    UNDEFINED_TYPE = 0;

    PERSISTENT = 460683927;

    SCRATCH = 496778970;

  }

  // Specifies whether the disk will be auto-deleted when the instance is deleted (but not when the disk is detached from the instance).
  optional bool auto_delete = 464761403;

  // Indicates that this is a boot disk. The virtual machine will use the first partition of the disk for its root filesystem.
  optional bool boot = 3029746;

  // Specifies the name of the disk attached to the source instance.
  optional string device_name = 67541716;

  // The encryption key for the disk.
  optional CustomerEncryptionKey disk_encryption_key = 271660677;

  // The size of the disk in base-2 GB.
  optional int64 disk_size_gb = 316263735;

  // [Output Only] URL of the disk type resource. For example: projects/project /zones/zone/diskTypes/pd-standard or pd-ssd
  optional string disk_type = 93009052;

  // A list of features to enable on the guest operating system. Applicable only for bootable images. Read Enabling guest operating system features to see a list of available options.
  repeated GuestOsFeature guest_os_features = 79294545;

  // Specifies zero-based index of the disk that is attached to the source instance.
  optional int32 index = 100346066;

  // Specifies the disk interface to use for attaching this disk, which is either SCSI or NVME.
  // Check the Interface enum for the list of possible values.
  optional string interface = 502623545;

  // [Output Only] Type of the resource. Always compute#attachedDisk for attached disks.
  optional string kind = 3292052;

  // [Output Only] Any valid publicly visible licenses.
  repeated string licenses = 337642578;

  // The mode in which this disk is attached to the source instance, either READ_WRITE or READ_ONLY.
  // Check the Mode enum for the list of possible values.
  optional string mode = 3357091;

  // Specifies a URL of the disk attached to the source instance.
  optional string source = 177235995;

  // [Output Only] A size of the storage used by the disk's snapshot by this machine image.
  optional int64 storage_bytes = 424631719;

  // [Output Only] An indicator whether storageBytes is in a stable state or it is being adjusted as a result of shared storage reallocation. This status can either be UPDATING, meaning the size of the snapshot is being updated, or UP_TO_DATE, meaning the size of the snapshot is up-to-date.
  // Check the StorageBytesStatus enum for the list of possible values.
  optional string storage_bytes_status = 490739082;

  // Specifies the type of the attached disk, either SCRATCH or PERSISTENT.
  // Check the Type enum for the list of possible values.
  optional string type = 3575610;

}

// An instance-attached disk resource.
message SavedDisk {
  // [Output Only] The architecture of the attached disk.
  enum Architecture {
    // A value indicating that the enum field is not set.
    UNDEFINED_ARCHITECTURE = 0;

    // Default value indicating Architecture is not set.
    ARCHITECTURE_UNSPECIFIED = 394750507;

    // Machines with architecture ARM64
    ARM64 = 62547450;

    // Machines with architecture X86_64
    X86_64 = 425300551;

  }

  // [Output Only] An indicator whether storageBytes is in a stable state or it is being adjusted as a result of shared storage reallocation. This status can either be UPDATING, meaning the size of the snapshot is being updated, or UP_TO_DATE, meaning the size of the snapshot is up-to-date.
  enum StorageBytesStatus {
    // A value indicating that the enum field is not set.
    UNDEFINED_STORAGE_BYTES_STATUS = 0;

    UPDATING = 494614342;

    UP_TO_DATE = 101306702;

  }

  // [Output Only] The architecture of the attached disk.
  // Check the Architecture enum for the list of possible values.
  optional string architecture = 302803283;

  // [Output Only] Type of the resource. Always compute#savedDisk for attached disks.
  optional string kind = 3292052;

  // Specifies a URL of the disk attached to the source instance.
  optional string source_disk = 451753793;

  // [Output Only] Size of the individual disk snapshot used by this machine image.
  optional int64 storage_bytes = 424631719;

  // [Output Only] An indicator whether storageBytes is in a stable state or it is being adjusted as a result of shared storage reallocation. This status can either be UPDATING, meaning the size of the snapshot is being updated, or UP_TO_DATE, meaning the size of the snapshot is up-to-date.
  // Check the StorageBytesStatus enum for the list of possible values.
  optional string storage_bytes_status = 490739082;

}

//
message ScalingScheduleStatus {
  // [Output Only] The current state of a scaling schedule.
  enum State {
    // A value indicating that the enum field is not set.
    UNDEFINED_STATE = 0;

    // The current autoscaling recommendation is influenced by this scaling schedule.
    ACTIVE = 314733318;

    // This scaling schedule has been disabled by the user.
    DISABLED = 516696700;

    // This scaling schedule will never become active again.
    OBSOLETE = 66532761;

    // The current autoscaling recommendation is not influenced by this scaling schedule.
    READY = 77848963;

  }

  // [Output Only] The last time the scaling schedule became active. Note: this is a timestamp when a schedule actually became active, not when it was planned to do so. The timestamp is in RFC3339 text format.
  optional string last_start_time = 34545107;

  // [Output Only] The next time the scaling schedule is to become active. Note: this is a timestamp when a schedule is planned to run, but the actual time might be slightly different. The timestamp is in RFC3339 text format.
  optional string next_start_time = 97270102;

  // [Output Only] The current state of a scaling schedule.
  // Check the State enum for the list of possible values.
  optional string state = 109757585;

}

// Sets the scheduling options for an Instance.
message Scheduling {
  // Specifies the termination action for the instance.
  enum InstanceTerminationAction {
    // A value indicating that the enum field is not set.
    UNDEFINED_INSTANCE_TERMINATION_ACTION = 0;

    // Delete the VM.
    DELETE = 402225579;

    // Default value. This value is unused.
    INSTANCE_TERMINATION_ACTION_UNSPECIFIED = 92954803;

    // Stop the VM without storing in-memory content. default action.
    STOP = 2555906;

  }

  // Defines the maintenance behavior for this instance. For standard instances, the default behavior is MIGRATE. For preemptible instances, the default and only possible behavior is TERMINATE. For more information, see Set VM host maintenance policy.
  enum OnHostMaintenance {
    // A value indicating that the enum field is not set.
    UNDEFINED_ON_HOST_MAINTENANCE = 0;

    // *[Default]* Allows Compute Engine to automatically migrate instances out of the way of maintenance events.
    MIGRATE = 165699979;

    // Tells Compute Engine to terminate and (optionally) restart the instance away from the maintenance activity. If you would like your instance to be restarted, set the automaticRestart flag to true. Your instance may be restarted more than once, and it may be restarted outside the window of maintenance events.
    TERMINATE = 527617601;

  }

  // Specifies the provisioning model of the instance.
  enum ProvisioningModel {
    // A value indicating that the enum field is not set.
    UNDEFINED_PROVISIONING_MODEL = 0;

    // Heavily discounted, no guaranteed runtime.
    SPOT = 2552066;

    // Standard provisioning with user controlled runtime, no discounts.
    STANDARD = 484642493;

  }

  // Specifies whether the instance should be automatically restarted if it is terminated by Compute Engine (not terminated by a user). You can only set the automatic restart option for standard instances. Preemptible instances cannot be automatically restarted. By default, this is set to true so an instance is automatically restarted if it is terminated by Compute Engine.
  optional bool automatic_restart = 350821371;

  // Specifies the termination action for the instance.
  // Check the InstanceTerminationAction enum for the list of possible values.
  optional string instance_termination_action = 107380667;

  // An opaque location hint used to place the instance close to other resources. This field is for use by internal tools that use the public API.
  optional string location_hint = 350519505;

  // The minimum number of virtual CPUs this instance will consume when running on a sole-tenant node.
  optional int32 min_node_cpus = 317231675;

  // A set of node affinity and anti-affinity configurations. Refer to Configuring node affinity for more information. Overrides reservationAffinity.
  repeated SchedulingNodeAffinity node_affinities = 461799971;

  // Defines the maintenance behavior for this instance. For standard instances, the default behavior is MIGRATE. For preemptible instances, the default and only possible behavior is TERMINATE. For more information, see Set VM host maintenance policy.
  // Check the OnHostMaintenance enum for the list of possible values.
  optional string on_host_maintenance = 64616796;

  // Defines whether the instance is preemptible. This can only be set during instance creation or while the instance is stopped and therefore, in a `TERMINATED` state. See Instance Life Cycle for more information on the possible instance states.
  optional bool preemptible = 324203169;

  // Specifies the provisioning model of the instance.
  // Check the ProvisioningModel enum for the list of possible values.
  optional string provisioning_model = 494423;

}

// Node Affinity: the configuration of desired nodes onto which this Instance could be scheduled.
message SchedulingNodeAffinity {
  // Defines the operation of node selection. Valid operators are IN for affinity and NOT_IN for anti-affinity.
  enum Operator {
    // A value indicating that the enum field is not set.
    UNDEFINED_OPERATOR = 0;

    // Requires Compute Engine to seek for matched nodes.
    IN = 2341;

    // Requires Compute Engine to avoid certain nodes.
    NOT_IN = 161144369;

    OPERATOR_UNSPECIFIED = 128892924;

  }

  // Corresponds to the label key of Node resource.
  optional string key = 106079;

  // Defines the operation of node selection. Valid operators are IN for affinity and NOT_IN for anti-affinity.
  // Check the Operator enum for the list of possible values.
  optional string operator = 36317348;

  // Corresponds to the label values of Node resource.
  repeated string values = 249928994;

}

//
message ScratchDisks {
  // Size of the scratch disk, defined in GB.
  optional int32 disk_gb = 60990141;

}

// An instance's screenshot.
message Screenshot {
  // [Output Only] The Base64-encoded screenshot data.
  optional string contents = 506419994;

  // [Output Only] Type of the resource. Always compute#screenshot for the screenshots.
  optional string kind = 3292052;

}

//
message SecurityPoliciesAggregatedList {
  optional string etag = 3123477;

  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 3355;

  // A list of SecurityPoliciesScopedList resources.
  map<string, SecurityPoliciesScopedList> items = 100526016;

  // [Output Only] Type of resource. Always compute#securityPolicyAggregatedList for lists of Security Policies.
  optional string kind = 3292052;

  // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
  optional string next_page_token = 79797525;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 456214797;

  // [Output Only] Unreachable resources.
  repeated string unreachables = 243372063;

  // [Output Only] Informational warning message.
  optional Warning warning = 50704284;

}

//
message SecurityPoliciesListPreconfiguredExpressionSetsResponse {
  optional SecurityPoliciesWafConfig preconfigured_expression_sets = 536200826;

}

//
message SecurityPoliciesScopedList {
  // A list of SecurityPolicies contained in this scope.
  repeated SecurityPolicy security_policies = 127783791;

  // Informational warning which replaces the list of security policies when the list is empty.
  optional Warning warning = 50704284;

}

//
message SecurityPoliciesWafConfig {
  optional PreconfiguredWafSet waf_rules = 74899924;

}

// Represents a Google Cloud Armor security policy resource. Only external backend services that use load balancers can reference a security policy. For more information, see Google Cloud Armor security policy overview.
message SecurityPolicy {
  // The type indicates the intended use of the security policy. - CLOUD_ARMOR: Cloud Armor backend security policies can be configured to filter incoming HTTP requests targeting backend services. They filter requests before they hit the origin servers. - CLOUD_ARMOR_EDGE: Cloud Armor edge security policies can be configured to filter incoming HTTP requests targeting backend services (including Cloud CDN-enabled) as well as backend buckets (Cloud Storage). They filter requests before the request is served from Google's cache. - CLOUD_ARMOR_INTERNAL_SERVICE: Cloud Armor internal service policies can be configured to filter HTTP requests targeting services managed by Traffic Director in a service mesh. They filter requests before the request is served from the application. - CLOUD_ARMOR_NETWORK: Cloud Armor network policies can be configured to filter packets targeting network load balancing resources such as backend services, target pools, target instances, and instances with external IPs. They filter requests before the request is served from the application. This field can be set only at resource creation time.
  enum Type {
    // A value indicating that the enum field is not set.
    UNDEFINED_TYPE = 0;

    CLOUD_ARMOR = 260640373;

    CLOUD_ARMOR_EDGE = 250728775;

    CLOUD_ARMOR_NETWORK = 488527428;

  }

  optional SecurityPolicyAdaptiveProtectionConfig adaptive_protection_config = 150240735;

  optional SecurityPolicyAdvancedOptionsConfig advanced_options_config = 449276352;

  // [Output Only] Creation timestamp in RFC3339 text format.
  optional string creation_timestamp = 30525366;

  optional SecurityPolicyDdosProtectionConfig ddos_protection_config = 50315853;

  // An optional description of this resource. Provide this property when you create the resource.
  optional string description = 422937596;

  // Specifies a fingerprint for this resource, which is essentially a hash of the metadata's contents and used for optimistic locking. The fingerprint is initially generated by Compute Engine and changes after every request to modify or update metadata. You must always provide an up-to-date fingerprint hash in order to update or change metadata, otherwise the request will fail with error 412 conditionNotMet. To see the latest fingerprint, make get() request to the security policy.
  optional string fingerprint = 234678500;

  // [Output Only] The unique identifier for the resource. This identifier is defined by the server.
  optional uint64 id = 3355;

  // [Output only] Type of the resource. Always compute#securityPolicyfor security policies
  optional string kind = 3292052;

  // Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
  optional string name = 3373707;

  optional SecurityPolicyRecaptchaOptionsConfig recaptcha_options_config = 519006811;

  // [Output Only] URL of the region where the regional security policy resides. This field is not applicable to global security policies.
  optional string region = 138946292;

  // A list of rules that belong to this policy. There must always be a default rule which is a rule with priority 2147483647 and match all condition (for the match condition this means match "*" for srcIpRanges and for the networkMatch condition every field must be either match "*" or not set). If no rules are provided when creating a security policy, a default rule with action "allow" will be added.
  repeated SecurityPolicyRule rules = 108873975;

  // [Output Only] Server-defined URL for the resource.
  optional string self_link = 456214797;

  // The type indicates the intended use of the security policy. - CLOUD_ARMOR: Cloud Armor backend security policies can be configured to filter incoming HTTP requests targeting backend services. They filter requests before they hit the origin servers. - CLOUD_ARMOR_EDGE: Cloud Armor edge security policies can be configured to filter incoming HTTP requests targeting backend services (including Cloud CDN-enabled) as well as backend buckets (Cloud Storage). They filter requests before the request is served from Google's cache. - CLOUD_ARMOR_INTERNAL_SERVICE: Cloud Armor internal service policies can be configured to filter HTTP requests targeting services managed by Traffic Director in a service mesh. They filter requests before the request is served from the application. - CLOUD_ARMOR_NETWORK: Cloud Armor network policies can be configured to filter packets targeting network load balancing resources such as backend services, target pools, target instances, and instances with external IPs. They filter requests before the request is served from the application. This field can be set only at resource creation time.
  // Check the Type enum for the list of possible values.
  optional string type = 3575610;

}

// Configuration options for Cloud Armor Adaptive Protection (CAAP).
message SecurityPolicyAdaptiveProtectionConfig {
  // If set to true, enables Cloud Armor Machine Learning.
  optional SecurityPolicyAdaptiveProtectionConfigLayer7DdosDefenseConfig layer7_ddos_defense_config = 437316771;

}

// Configuration options for L7 DDoS detection.
message SecurityPolicyAdaptiveProtectionConfigLayer7DdosDefenseConfig {
  // Rule visibility can be one of the following: STANDARD - opaque rules. (default) PREMIUM - transparent rules.
  enum RuleVisibility {
    // A value indicating that the enum field is not set.
    UNDEFINED_RULE_VISIBILITY = 0;

    PREMIUM = 399530551;

    STANDARD = 484642493;

  }

  // If set to true, enables CAAP for L7 DDoS detection.
  optional bool enable = 311764355;

  // Rule visibility can be one of the following: STANDARD - opaque rules. (default) PREMIUM - transparent rules.
  // Check the RuleVisibility enum for the list of possible values.
  optional string rule_visibility = 453258293;

}

//
message SecurityPolicyAdvancedOptionsConfig {
  //
  enum JsonParsing {
    // A value indicating that the enum field is not set.
    UNDEFINED_JSON_PARSING = 0;

    DISABLED = 516696700;

    STANDARD = 484642493;

  }

  //
  enum LogLevel {
    // A value indicating that the enum field is not set.
    UNDEFINED_LOG_LEVEL = 0;

    NORMAL = 161067239;

    VERBOSE = 532219234;

  }

  // Custom configuration to apply the JSON parsing. Only applicable when json_parsing is set to STANDARD.
  optional SecurityPolicyAdvancedOptionsConfigJsonCustomConfig json_custom_config = 111570105;

  // 
  // Check the JsonParsing enum for the list of possible values.
  optional string json_parsing = 282493529;

  // 
  // Check the LogLevel enum for the list of possible values.
  optional string log_level = 140582601;

}

//
message SecurityPolicyAdvancedOptionsConfigJsonCustomConfig {
  // A list of custom Content-Type header values to apply the JSON parsing. As per RFC 1341, a Content-Type header value has the following format: Content-Type := type "/" subtype *[";" parameter] When configuring a custom Content-Type header value, only the type/subtype needs to be specified, and the parameters should be excluded.
  repeated string content_types = 17428787;

}

//
message SecurityPolicyDdosProtectionConfig {
  //
  enum DdosProtection {
    // A value indicating that the enum field is not set.
    UNDEFINED_DDOS_PROTECTION = 0;

    ADVANCED = 63789090;

    STANDARD = 484642493;

  }

  // 
  // Check the DdosProtection enum for the list of possible values.
  optional string ddos_protection = 275173268;

}

//
message SecurityPolicyList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 3355;

  // A list of SecurityPolicy resources.
  repeated SecurityPolicy items = 100526016;

  // [Output Only] Type of resource. Always compute#securityPolicyList for listsof securityPolicies
  optional string kind = 3292052;

  // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
  optional string next_page_token = 79797525;

  // [Output Only] Informational warning message.
  optional Warning warning = 50704284;

}

//
message SecurityPolicyRecaptchaOptionsConfig {
  // An optional field to supply a reCAPTCHA site key to be used for all the rules using the redirect action with the type of GOOGLE_RECAPTCHA under the security policy. The specified site key needs to be created from the reCAPTCHA API. The user is responsible for the validity of the specified site key. If not specified, a Google-managed site key is used.
  optional string redirect_site_key = 447677034;

}

//
message SecurityPolicyReference {
  optional string security_policy = 171082513;

}

// Represents a rule that describes one or more match conditions along with the action to be taken when traffic matches this condition (allow or deny).
message SecurityPolicyRule {
  // The Action to perform when the rule is matched. The following are the valid actions: - allow: allow access to target. - deny(STATUS): deny access to target, returns the HTTP response code specified. Valid values for `STATUS` are 403, 404, and 502. - rate_based_ban: limit client traffic to the configured threshold and ban the client if the traffic exceeds the threshold. Configure parameters for this action in RateLimitOptions. Requires rate_limit_options to be set. - redirect: redirect to a different target. This can either be an internal reCAPTCHA redirect, or an external URL-based redirect via a 302 response. Parameters for this action can be configured via redirectOptions. - throttle: limit client traffic to the configured threshold. Configure parameters for this action in rateLimitOptions. Requires rate_limit_options to be set for this. 
  optional string action = 187661878;

  // An optional description of this resource. Provide this property when you create the resource.
  optional string description = 422937596;

  // Optional, additional actions that are performed on headers.
  optional SecurityPolicyRuleHttpHeaderAction header_action = 328077352;

  // [Output only] Type of the resource. Always compute#securityPolicyRule for security policy rules
  optional string kind = 3292052;

  // A match condition that incoming traffic is evaluated against. If it evaluates to true, the corresponding 'action' is enforced.
  optional SecurityPolicyRuleMatcher match = 103668165;

  // Preconfigured WAF configuration to be applied for the rule. If the rule does not evaluate preconfigured WAF rules, i.e., if evaluatePreconfiguredWaf() is not used, this field will have no effect.
  optional SecurityPolicyRulePreconfiguredWafConfig preconfigured_waf_config = 117805027;

  // If set to true, the specified action is not enforced.
  optional bool preview = 218686408;

  // An integer indicating the priority of a rule in the list. The priority must be a positive value between 0 and 2147483647. Rules are evaluated from highest to lowest priority where 0 is the highest priority and 2147483647 is the lowest priority.
  optional int32 priority = 445151652;

  // Must be specified if the action is "rate_based_ban" or "throttle". Cannot be specified for any other actions.
  optional SecurityPolicyRuleRateLimitOptions rate_limit_options = 67544315;

  // Parameters defining the redirect action. Cannot be specified for any other actions.
  optional SecurityPolicyRuleRedirectOptions redirect_options = 163285307;

}

//
message SecurityPolicyRuleHttpHeaderAction {
  // The list of request headers to add or overwrite if they're already present.
  repeated SecurityPolicyRuleHttpHeaderActionHttpHeaderOption request_headers_to_adds = 87987661;

}

//
message SecurityPolicyRuleHttpHeaderActionHttpHeaderOption {
  // The name of the header to set.
  optional string header_name = 110223613;

  // The value to set the named header to.
  optional string header_value = 203094335;

}

// Represents a match condition that incoming traffic is evaluated against. Exactly one field must be specified.
message SecurityPolicyRuleMatcher {
  // Preconfigured versioned expression. If this field is specified, config must also be specified. Available preconfigured expressions along with their requirements are: SRC_IPS_V1 - must specify the corresponding src_ip_range field in config.
  enum VersionedExpr {
    // A value indicating that the enum field is not set.
    UNDEFINED_VERSIONED_EXPR = 0;

    // Matches the source IP address of a request to the IP ranges supplied in config.
    SRC_IPS_V1 = 70925961;

  }

  // The configuration options available when specifying versioned_expr. This field must be specified if versioned_expr is specified and cannot be specified if versioned_expr is not specified.
  optional SecurityPolicyRuleMatcherConfig config = 255820610;

  // User defined CEVAL expression. A CEVAL expression is used to specify match criteria such as origin.ip, source.region_code and contents in the request header.
  optional Expr expr = 3127797;

  // Preconfigured versioned expression. If this field is specified, config must also be specified. Available preconfigured expressions along with their requirements are: SRC_IPS_V1 - must specify the corresponding src_ip_range field in config.
  // Check the VersionedExpr enum for the list of possible values.
  optional string versioned_expr = 322286013;

}

//
message SecurityPolicyRuleMatcherConfig {
  // CIDR IP address range. Maximum number of src_ip_ranges allowed is 10.
  repeated string src_ip_ranges = 432128083;

}

//
message SecurityPolicyRulePreconfiguredWafConfig {
  // A list of exclusions to apply during preconfigured WAF evaluation.
  repeated SecurityPolicyRulePreconfiguredWafConfigExclusion exclusions = 208665701;

}

//
message SecurityPolicyRulePreconfiguredWafConfigExclusion {
  // A list of request cookie names whose value will be excluded from inspection during preconfigured WAF evaluation.
  repeated SecurityPolicyRulePreconfiguredWafConfigExclusionFieldParams request_cookies_to_exclude = 156757878;

  // A list of request header names whose value will be excluded from inspection during preconfigured WAF evaluation.
  repeated SecurityPolicyRulePreconfiguredWafConfigExclusionFieldParams request_headers_to_exclude = 63230495;

  // A list of request query parameter names whose value will be excluded from inspection during preconfigured WAF evaluation. Note that the parameter can be in the query string or in the POST body.
  repeated SecurityPolicyRulePreconfiguredWafConfigExclusionFieldParams request_query_params_to_exclude = 340692744;

  // A list of request URIs from the request line to be excluded from inspection during preconfigured WAF evaluation. When specifying this field, the query or fragment part should be excluded.
  repeated SecurityPolicyRulePreconfiguredWafConfigExclusionFieldParams request_uris_to_exclude = 90690846;

  // A list of target rule IDs under the WAF rule set to apply the preconfigured WAF exclusion. If omitted, it refers to all the rule IDs under the WAF rule set.
  repeated string target_rule_ids = 498430435;

  // Target WAF rule set to apply the preconfigured WAF exclusion.
  optional string target_rule_set = 498440077;

}

//
message SecurityPolicyRulePreconfiguredWafConfigExclusionFieldParams {
  // The match operator for the field.
  enum Op {
    // A value indicating that the enum field is not set.
    UNDEFINED_OP = 0;

    // The operator matches if the field value contains the specified value.
    CONTAINS = 215180831;

    // The operator matches if the field value ends with the specified value.
    ENDS_WITH = 490402221;

    // The operator matches if the field value equals the specified value.
    EQUALS = 442201023;

    // The operator matches if the field value is any value.
    EQUALS_ANY = 337226060;

    // The operator matches if the field value starts with the specified value.
    STARTS_WITH = 139505652;

  }

  // The match operator for the field.
  // Check the Op enum for the list of possible values.
  optional string op = 3553;

  // The value of the field.
  optional string val = 116513;

}

//
message SecurityPolicyRuleRateLimitOptions {
  // Determines the key to enforce the rate_limit_threshold on. Possible values are: - ALL: A single rate limit threshold is applied to all the requests matching this rule. This is the default value if "enforceOnKey" is not configured. - IP: The source IP address of the request is the key. Each IP has this limit enforced separately. - HTTP_HEADER: The value of the HTTP header whose name is configured under "enforceOnKeyName". The key value is truncated to the first 128 bytes of the header value. If no such header is present in the request, the key type defaults to ALL. - XFF_IP: The first IP address (i.e. the originating client IP address) specified in the list of IPs under X-Forwarded-For HTTP header. If no such header is present or the value is not a valid IP, the key defaults to the source IP address of the request i.e. key type IP. - HTTP_COOKIE: The value of the HTTP cookie whose name is configured under "enforceOnKeyName". The key value is truncated to the first 128 bytes of the cookie value. If no such cookie is present in the request, the key type defaults to ALL. - HTTP_PATH: The URL path of the HTTP request. The key value is truncated to the first 128 bytes. - SNI: Server name indication in the TLS session of the HTTPS request. The key value is truncated to the first 128 bytes. The key type defaults to ALL on a HTTP session. - REGION_CODE: The country/region from which the request originates. 
  enum EnforceOnKey {
    // A value indicating that the enum field is not set.
    UNDEFINED_ENFORCE_ON_KEY = 0;

    ALL = 64897;

    HTTP_COOKIE = 494981627;

    HTTP_HEADER = 91597348;

    HTTP_PATH = 311503228;

    IP = 2343;

    REGION_CODE = 79559768;

    SNI = 82254;

    XFF_IP = 438707118;

  }

  // Can only be specified if the action for the rule is "rate_based_ban". If specified, determines the time (in seconds) the traffic will continue to be banned by the rate limit after the rate falls below the threshold.
  optional int32 ban_duration_sec = 42896726;

  // Can only be specified if the action for the rule is "rate_based_ban". If specified, the key will be banned for the configured 'ban_duration_sec' when the number of requests that exceed the 'rate_limit_threshold' also exceed this 'ban_threshold'.
  optional SecurityPolicyRuleRateLimitOptionsThreshold ban_threshold = 501208123;

  // Action to take for requests that are under the configured rate limit threshold. Valid option is "allow" only.
  optional string conform_action = 517612367;

  // Determines the key to enforce the rate_limit_threshold on. Possible values are: - ALL: A single rate limit threshold is applied to all the requests matching this rule. This is the default value if "enforceOnKey" is not configured. - IP: The source IP address of the request is the key. Each IP has this limit enforced separately. - HTTP_HEADER: The value of the HTTP header whose name is configured under "enforceOnKeyName". The key value is truncated to the first 128 bytes of the header value. If no such header is present in the request, the key type defaults to ALL. - XFF_IP: The first IP address (i.e. the originating client IP address) specified in the list of IPs under X-Forwarded-For HTTP header. If no such header is present or the value is not a valid IP, the key defaults to the source IP address of the request i.e. key type IP. - HTTP_COOKIE: The value of the HTTP cookie whose name is configured under "enforceOnKeyName". The key value is truncated to the first 128 bytes of the cookie value. If no such cookie is present in the request, the key type defaults to ALL. - HTTP_PATH: The URL path of the HTTP request. The key value is truncated to the first 128 bytes. - SNI: Server name indication in the TLS session of the HTTPS request. The key value is truncated to the first 128 bytes. The key type defaults to ALL on a HTTP session. - REGION_CODE: The country/region from which the request originates.
  // Check the EnforceOnKey enum for the list of possible values.
  optional string enforce_on_key = 416648956;

  // Rate limit key name applicable only for the following key types: HTTP_HEADER -- Name of the HTTP header whose value is taken as the key value. HTTP_COOKIE -- Name of the HTTP cookie whose value is taken as the key value.
  optional string enforce_on_key_name = 132555246;

  // Action to take for requests that are above the configured rate limit threshold, to either deny with a specified HTTP response code, or redirect to a different endpoint. Valid options are `deny(STATUS)`, where valid values for `STATUS` are 403, 404, 429, and 502, and `redirect`, where the redirect parameters come from `exceedRedirectOptions` below.
  optional string exceed_action = 167159073;

  // Parameters defining the redirect action that is used as the exceed action. Cannot be specified if the exceed action is not redirect.
  optional SecurityPolicyRuleRedirectOptions exceed_redirect_options = 473646694;

  // Threshold at which to begin ratelimiting.
  optional SecurityPolicyRuleRateLimitOptionsThreshold rate_limit_threshold = 315875208;

}

//
message SecurityPolicyRuleRateLimitOptionsThreshold {
  // Number of HTTP(S) requests for calculating the threshold.
  optional int32 count = 94851343;

  // Interval over which the threshold is computed.
  optional int32 interval_sec = 41084375;

}

//
message SecurityPolicyRuleRedirectOptions {
  // Type of the redirect action.
  enum Type {
    // A value indicating that the enum field is not set.
    UNDEFINED_TYPE = 0;

    EXTERNAL_302 = 395733761;

    GOOGLE_RECAPTCHA = 518803009;

  }

  // Target for the redirect action. This is required if the type is EXTERNAL_302 and cannot be specified for GOOGLE_RECAPTCHA.
  optional string target = 192835985;

  // Type of the redirect action.
  // Check the Type enum for the list of possible values.
  optional string type = 3575610;

}

// The authentication and authorization settings for a BackendService.
message SecuritySettings {
  // Optional. A URL referring to a networksecurity.ClientTlsPolicy resource that describes how clients should authenticate with this service's backends. clientTlsPolicy only applies to a global BackendService with the loadBalancingScheme set to INTERNAL_SELF_MANAGED. If left blank, communications are not encrypted. Note: This field currently has no impact.
  optional string client_tls_policy = 462325226;

  // Optional. A list of Subject Alternative Names (SANs) that the client verifies during a mutual TLS handshake with an server/endpoint for this BackendService. When the server presents its X.509 certificate to the client, the client inspects the certificate's subjectAltName field. If the field contains one of the specified values, the communication continues. Otherwise, it fails. This additional check enables the client to verify that the server is authorized to run the requested service. Note that the contents of the server certificate's subjectAltName field are configured by the Public Key Infrastructure which provisions server identities. Only applies to a global BackendService with loadBalancingScheme set to INTERNAL_SELF_MANAGED. Only applies when BackendService has an attached clientTlsPolicy with clientCertificate (mTLS mode). Note: This field currently has no impact.
  repeated string subject_alt_names = 330029535;

}

// A request message for Instances.SendDiagnosticInterrupt. See the method description for details.
message SendDiagnosticInterruptInstanceRequest {
  // Name of the instance scoping this request.
  string instance = 18257045 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // The name of the zone for this request.
  string zone = 3744684 [(google.api.field_behavior) = REQUIRED];

}

// A response message for Instances.SendDiagnosticInterrupt. See the method description for details.
message SendDiagnosticInterruptInstanceResponse {
}

// An instance serial console output.
message SerialPortOutput {
  // [Output Only] The contents of the console output.
  optional string contents = 506419994;

  // [Output Only] Type of the resource. Always compute#serialPortOutput for serial port output.
  optional string kind = 3292052;

  // [Output Only] The position of the next byte of content, regardless of whether the content exists, following the output returned in the `contents` property. Use this value in the next request as the start parameter.
  optional int64 next = 3377907;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 456214797;

  // The starting byte position of the output that was returned. This should match the start parameter sent with the request. If the serial console output exceeds the size of the buffer (1 MB), older output is overwritten by newer content. The output start value will indicate the byte position of the output that was returned, which might be different than the `start` value that was specified in the request.
  optional int64 start = 109757538;

}

//
message ServerBinding {
  //
  enum Type {
    // A value indicating that the enum field is not set.
    UNDEFINED_TYPE = 0;

    // Node may associate with any physical server over its lifetime.
    RESTART_NODE_ON_ANY_SERVER = 502950985;

    // Node may associate with minimal physical servers over its lifetime.
    RESTART_NODE_ON_MINIMAL_SERVERS = 204166495;

    SERVER_BINDING_TYPE_UNSPECIFIED = 180825512;

  }

  // 
  // Check the Type enum for the list of possible values.
  optional string type = 3575610;

}

// A service account.
message ServiceAccount {
  // Email address of the service account.
  optional string email = 96619420;

  // The list of scopes to be made available for this service account.
  repeated string scopes = 165973151;

}

// Represents a ServiceAttachment resource. A service attachment represents a service that a producer has exposed. It encapsulates the load balancer which fronts the service runs and a list of NAT IP ranges that the producers uses to represent the consumers connecting to the service. next tag = 20
message ServiceAttachment {
  // The connection preference of service attachment. The value can be set to ACCEPT_AUTOMATIC. An ACCEPT_AUTOMATIC service attachment is one that always accepts the connection from consumer forwarding rules.
  enum ConnectionPreference {
    // A value indicating that the enum field is not set.
    UNDEFINED_CONNECTION_PREFERENCE = 0;

    ACCEPT_AUTOMATIC = 75250580;

    ACCEPT_MANUAL = 373061341;

    CONNECTION_PREFERENCE_UNSPECIFIED = 34590772;

  }

  // [Output Only] An array of connections for all the consumers connected to this service attachment.
  repeated ServiceAttachmentConnectedEndpoint connected_endpoints = 72223688;

  // The connection preference of service attachment. The value can be set to ACCEPT_AUTOMATIC. An ACCEPT_AUTOMATIC service attachment is one that always accepts the connection from consumer forwarding rules.
  // Check the ConnectionPreference enum for the list of possible values.
  optional string connection_preference = 285818076;

  // Projects that are allowed to connect to this service attachment.
  repeated ServiceAttachmentConsumerProjectLimit consumer_accept_lists = 402725703;

  // Projects that are not allowed to connect to this service attachment. The project can be specified using its id or number.
  repeated string consumer_reject_lists = 204033182;

  // [Output Only] Creation timestamp in RFC3339 text format.
  optional string creation_timestamp = 30525366;

  // An optional description of this resource. Provide this property when you create the resource.
  optional string description = 422937596;

  // If specified, the domain name will be used during the integration between the PSC connected endpoints and the Cloud DNS. For example, this is a valid domain name: "p.mycompany.com.". Current max number of domain names supported is 1.
  repeated string domain_names = 6450189;

  // If true, enable the proxy protocol which is for supplying client TCP/IP address data in TCP connections that traverse proxies on their way to destination servers.
  optional bool enable_proxy_protocol = 363791237;

  // Fingerprint of this resource. A hash of the contents stored in this object. This field is used in optimistic locking. This field will be ignored when inserting a ServiceAttachment. An up-to-date fingerprint must be provided in order to patch/update the ServiceAttachment; otherwise, the request will fail with error 412 conditionNotMet. To see the latest fingerprint, make a get() request to retrieve the ServiceAttachment.
  optional string fingerprint = 234678500;

  // [Output Only] The unique identifier for the resource type. The server generates this identifier.
  optional uint64 id = 3355;

  // [Output Only] Type of the resource. Always compute#serviceAttachment for service attachments.
  optional string kind = 3292052;

  // Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
  optional string name = 3373707;

  // An array of URLs where each entry is the URL of a subnet provided by the service producer to use for NAT in this service attachment.
  repeated string nat_subnets = 374785944;

  // The URL of a forwarding rule with loadBalancingScheme INTERNAL* that is serving the endpoint identified by this service attachment.
  optional string producer_forwarding_rule = 247927889;

  // [Output Only] An 128-bit global unique ID of the PSC service attachment.
  optional Uint128 psc_service_attachment_id = 527695214;

  // [Output Only] URL of the region where the service attachment resides. This field applies only to the region resource. You must specify this field as part of the HTTP request URL. It is not settable as a field in the request body.
  optional string region = 138946292;

  // [Output Only] Server-defined URL for the resource.
  optional string self_link = 456214797;

  // The URL of a service serving the endpoint identified by this service attachment.
  optional string target_service = 1293831;

}

// Contains a list of ServiceAttachmentsScopedList.
message ServiceAttachmentAggregatedList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 3355;

  // A list of ServiceAttachmentsScopedList resources.
  map<string, ServiceAttachmentsScopedList> items = 100526016;

  // Type of resource.
  optional string kind = 3292052;

  // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
  optional string next_page_token = 79797525;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 456214797;

  // [Output Only] Unreachable resources.
  repeated string unreachables = 243372063;

  // [Output Only] Informational warning message.
  optional Warning warning = 50704284;

}

// [Output Only] A connection connected to this service attachment.
message ServiceAttachmentConnectedEndpoint {
  // The status of a connected endpoint to this service attachment.
  enum Status {
    // A value indicating that the enum field is not set.
    UNDEFINED_STATUS = 0;

    // The connection has been accepted by the producer.
    ACCEPTED = 246714279;

    // The connection has been closed by the producer.
    CLOSED = 380163436;

    // The connection has been accepted by the producer, but the producer needs to take further action before the forwarding rule can serve traffic.
    NEEDS_ATTENTION = 344491452;

    // The connection is pending acceptance by the producer.
    PENDING = 35394935;

    // The consumer is still connected but not using the connection.
    REJECTED = 174130302;

    STATUS_UNSPECIFIED = 42133066;

  }

  // The url of a connected endpoint.
  optional string endpoint = 130489749;

  // The PSC connection id of the connected endpoint.
  optional uint64 psc_connection_id = 292082397;

  // The status of a connected endpoint to this service attachment.
  // Check the Status enum for the list of possible values.
  optional string status = 181260274;

}

//
message ServiceAttachmentConsumerProjectLimit {
  // The value of the limit to set.
  optional uint32 connection_limit = 131403546;

  // The network URL for the network to set the limit for.
  optional string network_url = 207194078;

  // The project id or number for the project to set the limit for.
  optional string project_id_or_num = 349783336;

}

//
message ServiceAttachmentList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 3355;

  // A list of ServiceAttachment resources.
  repeated ServiceAttachment items = 100526016;

  // [Output Only] Type of the resource. Always compute#serviceAttachment for service attachments.
  optional string kind = 3292052;

  // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
  optional string next_page_token = 79797525;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 456214797;

  // [Output Only] Informational warning message.
  optional Warning warning = 50704284;

}

//
message ServiceAttachmentsScopedList {
  // A list of ServiceAttachments contained in this scope.
  repeated ServiceAttachment service_attachments = 307136806;

  // Informational warning which replaces the list of service attachments when the list is empty.
  optional Warning warning = 50704284;

}

// A request message for TargetSslProxies.SetBackendService. See the method description for details.
message SetBackendServiceTargetSslProxyRequest {
  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // The body resource for this request
  TargetSslProxiesSetBackendServiceRequest target_ssl_proxies_set_backend_service_request_resource = 139080868 [(google.api.field_behavior) = REQUIRED];

  // Name of the TargetSslProxy resource whose BackendService resource is to be set.
  string target_ssl_proxy = 338795853 [(google.api.field_behavior) = REQUIRED];

}

// A request message for TargetTcpProxies.SetBackendService. See the method description for details.
message SetBackendServiceTargetTcpProxyRequest {
  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // The body resource for this request
  TargetTcpProxiesSetBackendServiceRequest target_tcp_proxies_set_backend_service_request_resource = 273721583 [(google.api.field_behavior) = REQUIRED];

  // Name of the TargetTcpProxy resource whose BackendService resource is to be set.
  string target_tcp_proxy = 503065442 [(google.api.field_behavior) = REQUIRED];

}

// A request message for TargetPools.SetBackup. See the method description for details.
message SetBackupTargetPoolRequest {
  // New failoverRatio value for the target pool.
  optional float failover_ratio = 212667006;

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // Name of the region scoping this request.
  string region = 138946292 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "region"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // Name of the TargetPool resource to set a backup pool for.
  string target_pool = 62796298 [(google.api.field_behavior) = REQUIRED];

  // The body resource for this request
  TargetReference target_reference_resource = 523721712 [(google.api.field_behavior) = REQUIRED];

}

// A request message for TargetHttpsProxies.SetCertificateMap. See the method description for details.
message SetCertificateMapTargetHttpsProxyRequest {
  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // The body resource for this request
  TargetHttpsProxiesSetCertificateMapRequest target_https_proxies_set_certificate_map_request_resource = 467639099 [(google.api.field_behavior) = REQUIRED];

  // Name of the TargetHttpsProxy resource whose CertificateMap is to be set. The name must be 1-63 characters long, and comply with RFC1035.
  string target_https_proxy = 52336748 [(google.api.field_behavior) = REQUIRED];

}

// A request message for TargetSslProxies.SetCertificateMap. See the method description for details.
message SetCertificateMapTargetSslProxyRequest {
  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // The body resource for this request
  TargetSslProxiesSetCertificateMapRequest target_ssl_proxies_set_certificate_map_request_resource = 343984954 [(google.api.field_behavior) = REQUIRED];

  // Name of the TargetSslProxy resource whose CertificateMap is to be set. The name must be 1-63 characters long, and comply with RFC1035.
  string target_ssl_proxy = 338795853 [(google.api.field_behavior) = REQUIRED];

}

// A request message for Projects.SetCommonInstanceMetadata. See the method description for details.
message SetCommonInstanceMetadataProjectRequest {
  // The body resource for this request
  Metadata metadata_resource = 291086110 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

}

// A request message for Projects.SetDefaultNetworkTier. See the method description for details.
message SetDefaultNetworkTierProjectRequest {
  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // The body resource for this request
  ProjectsSetDefaultNetworkTierRequest projects_set_default_network_tier_request_resource = 126410762 [(google.api.field_behavior) = REQUIRED];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

}

// A request message for Instances.SetDeletionProtection. See the method description for details.
message SetDeletionProtectionInstanceRequest {
  // Whether the resource should be protected against deletion.
  optional bool deletion_protection = 458014698;

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // Name or id of the resource for this request.
  string resource = 195806222 [(google.api.field_behavior) = REQUIRED];

  // The name of the zone for this request.
  string zone = 3744684 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "zone"
  ];

}

// A request message for Instances.SetDiskAutoDelete. See the method description for details.
message SetDiskAutoDeleteInstanceRequest {
  // Whether to auto-delete the disk when the instance is deleted.
  bool auto_delete = 464761403 [(google.api.field_behavior) = REQUIRED];

  // The device name of the disk to modify. Make a get() request on the instance to view currently attached disks and device names.
  string device_name = 67541716 [(google.api.field_behavior) = REQUIRED];

  // The instance name for this request.
  string instance = 18257045 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // The name of the zone for this request.
  string zone = 3744684 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "zone"
  ];

}

// A request message for BackendBuckets.SetEdgeSecurityPolicy. See the method description for details.
message SetEdgeSecurityPolicyBackendBucketRequest {
  // Name of the BackendService resource to which the security policy should be set. The name should conform to RFC1035.
  string backend_bucket = 91714037 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // The body resource for this request
  SecurityPolicyReference security_policy_reference_resource = 204135024 [(google.api.field_behavior) = REQUIRED];

}

// A request message for BackendServices.SetEdgeSecurityPolicy. See the method description for details.
message SetEdgeSecurityPolicyBackendServiceRequest {
  // Name of the BackendService resource to which the edge security policy should be set. The name should conform to RFC1035.
  string backend_service = 306946058 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // The body resource for this request
  SecurityPolicyReference security_policy_reference_resource = 204135024 [(google.api.field_behavior) = REQUIRED];

}

// A request message for BackendServices.SetIamPolicy. See the method description for details.
message SetIamPolicyBackendServiceRequest {
  // The body resource for this request
  GlobalSetPolicyRequest global_set_policy_request_resource = 337048498 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Name or id of the resource for this request.
  string resource = 195806222 [(google.api.field_behavior) = REQUIRED];

}

// A request message for Disks.SetIamPolicy. See the method description for details.
message SetIamPolicyDiskRequest {
  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Name or id of the resource for this request.
  string resource = 195806222 [(google.api.field_behavior) = REQUIRED];

  // The name of the zone for this request.
  string zone = 3744684 [(google.api.field_behavior) = REQUIRED];

  // The body resource for this request
  ZoneSetPolicyRequest zone_set_policy_request_resource = 382082107 [(google.api.field_behavior) = REQUIRED];

}

// A request message for FirewallPolicies.SetIamPolicy. See the method description for details.
message SetIamPolicyFirewallPolicyRequest {
  // The body resource for this request
  GlobalOrganizationSetPolicyRequest global_organization_set_policy_request_resource = 177408606 [(google.api.field_behavior) = REQUIRED];

  // Name or id of the resource for this request.
  string resource = 195806222 [(google.api.field_behavior) = REQUIRED];

}

// A request message for Images.SetIamPolicy. See the method description for details.
message SetIamPolicyImageRequest {
  // The body resource for this request
  GlobalSetPolicyRequest global_set_policy_request_resource = 337048498 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Name or id of the resource for this request.
  string resource = 195806222 [(google.api.field_behavior) = REQUIRED];

}

// A request message for Instances.SetIamPolicy. See the method description for details.
message SetIamPolicyInstanceRequest {
  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Name or id of the resource for this request.
  string resource = 195806222 [(google.api.field_behavior) = REQUIRED];

  // The name of the zone for this request.
  string zone = 3744684 [(google.api.field_behavior) = REQUIRED];

  // The body resource for this request
  ZoneSetPolicyRequest zone_set_policy_request_resource = 382082107 [(google.api.field_behavior) = REQUIRED];

}

// A request message for InstanceTemplates.SetIamPolicy. See the method description for details.
message SetIamPolicyInstanceTemplateRequest {
  // The body resource for this request
  GlobalSetPolicyRequest global_set_policy_request_resource = 337048498 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Name or id of the resource for this request.
  string resource = 195806222 [(google.api.field_behavior) = REQUIRED];

}

// A request message for Licenses.SetIamPolicy. See the method description for details.
message SetIamPolicyLicenseRequest {
  // The body resource for this request
  GlobalSetPolicyRequest global_set_policy_request_resource = 337048498 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Name or id of the resource for this request.
  string resource = 195806222 [(google.api.field_behavior) = REQUIRED];

}

// A request message for MachineImages.SetIamPolicy. See the method description for details.
message SetIamPolicyMachineImageRequest {
  // The body resource for this request
  GlobalSetPolicyRequest global_set_policy_request_resource = 337048498 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Name or id of the resource for this request.
  string resource = 195806222 [(google.api.field_behavior) = REQUIRED];

}

// A request message for NetworkAttachments.SetIamPolicy. See the method description for details.
message SetIamPolicyNetworkAttachmentRequest {
  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // The name of the region for this request.
  string region = 138946292 [(google.api.field_behavior) = REQUIRED];

  // The body resource for this request
  RegionSetPolicyRequest region_set_policy_request_resource = 276489091 [(google.api.field_behavior) = REQUIRED];

  // Name or id of the resource for this request.
  string resource = 195806222 [(google.api.field_behavior) = REQUIRED];

}

// A request message for NetworkFirewallPolicies.SetIamPolicy. See the method description for details.
message SetIamPolicyNetworkFirewallPolicyRequest {
  // The body resource for this request
  GlobalSetPolicyRequest global_set_policy_request_resource = 337048498 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Name or id of the resource for this request.
  string resource = 195806222 [(google.api.field_behavior) = REQUIRED];

}

// A request message for NodeGroups.SetIamPolicy. See the method description for details.
message SetIamPolicyNodeGroupRequest {
  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Name or id of the resource for this request.
  string resource = 195806222 [(google.api.field_behavior) = REQUIRED];

  // The name of the zone for this request.
  string zone = 3744684 [(google.api.field_behavior) = REQUIRED];

  // The body resource for this request
  ZoneSetPolicyRequest zone_set_policy_request_resource = 382082107 [(google.api.field_behavior) = REQUIRED];

}

// A request message for NodeTemplates.SetIamPolicy. See the method description for details.
message SetIamPolicyNodeTemplateRequest {
  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // The name of the region for this request.
  string region = 138946292 [(google.api.field_behavior) = REQUIRED];

  // The body resource for this request
  RegionSetPolicyRequest region_set_policy_request_resource = 276489091 [(google.api.field_behavior) = REQUIRED];

  // Name or id of the resource for this request.
  string resource = 195806222 [(google.api.field_behavior) = REQUIRED];

}

// A request message for RegionBackendServices.SetIamPolicy. See the method description for details.
message SetIamPolicyRegionBackendServiceRequest {
  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // The name of the region for this request.
  string region = 138946292 [(google.api.field_behavior) = REQUIRED];

  // The body resource for this request
  RegionSetPolicyRequest region_set_policy_request_resource = 276489091 [(google.api.field_behavior) = REQUIRED];

  // Name or id of the resource for this request.
  string resource = 195806222 [(google.api.field_behavior) = REQUIRED];

}

// A request message for RegionDisks.SetIamPolicy. See the method description for details.
message SetIamPolicyRegionDiskRequest {
  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // The name of the region for this request.
  string region = 138946292 [(google.api.field_behavior) = REQUIRED];

  // The body resource for this request
  RegionSetPolicyRequest region_set_policy_request_resource = 276489091 [(google.api.field_behavior) = REQUIRED];

  // Name or id of the resource for this request.
  string resource = 195806222 [(google.api.field_behavior) = REQUIRED];

}

// A request message for RegionNetworkFirewallPolicies.SetIamPolicy. See the method description for details.
message SetIamPolicyRegionNetworkFirewallPolicyRequest {
  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // The name of the region for this request.
  string region = 138946292 [(google.api.field_behavior) = REQUIRED];

  // The body resource for this request
  RegionSetPolicyRequest region_set_policy_request_resource = 276489091 [(google.api.field_behavior) = REQUIRED];

  // Name or id of the resource for this request.
  string resource = 195806222 [(google.api.field_behavior) = REQUIRED];

}

// A request message for Reservations.SetIamPolicy. See the method description for details.
message SetIamPolicyReservationRequest {
  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Name or id of the resource for this request.
  string resource = 195806222 [(google.api.field_behavior) = REQUIRED];

  // The name of the zone for this request.
  string zone = 3744684 [(google.api.field_behavior) = REQUIRED];

  // The body resource for this request
  ZoneSetPolicyRequest zone_set_policy_request_resource = 382082107 [(google.api.field_behavior) = REQUIRED];

}

// A request message for ResourcePolicies.SetIamPolicy. See the method description for details.
message SetIamPolicyResourcePolicyRequest {
  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // The name of the region for this request.
  string region = 138946292 [(google.api.field_behavior) = REQUIRED];

  // The body resource for this request
  RegionSetPolicyRequest region_set_policy_request_resource = 276489091 [(google.api.field_behavior) = REQUIRED];

  // Name or id of the resource for this request.
  string resource = 195806222 [(google.api.field_behavior) = REQUIRED];

}

// A request message for ServiceAttachments.SetIamPolicy. See the method description for details.
message SetIamPolicyServiceAttachmentRequest {
  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // The name of the region for this request.
  string region = 138946292 [(google.api.field_behavior) = REQUIRED];

  // The body resource for this request
  RegionSetPolicyRequest region_set_policy_request_resource = 276489091 [(google.api.field_behavior) = REQUIRED];

  // Name or id of the resource for this request.
  string resource = 195806222 [(google.api.field_behavior) = REQUIRED];

}

// A request message for Snapshots.SetIamPolicy. See the method description for details.
message SetIamPolicySnapshotRequest {
  // The body resource for this request
  GlobalSetPolicyRequest global_set_policy_request_resource = 337048498 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Name or id of the resource for this request.
  string resource = 195806222 [(google.api.field_behavior) = REQUIRED];

}

// A request message for Subnetworks.SetIamPolicy. See the method description for details.
message SetIamPolicySubnetworkRequest {
  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // The name of the region for this request.
  string region = 138946292 [(google.api.field_behavior) = REQUIRED];

  // The body resource for this request
  RegionSetPolicyRequest region_set_policy_request_resource = 276489091 [(google.api.field_behavior) = REQUIRED];

  // Name or id of the resource for this request.
  string resource = 195806222 [(google.api.field_behavior) = REQUIRED];

}

// A request message for InstanceGroupManagers.SetInstanceTemplate. See the method description for details.
message SetInstanceTemplateInstanceGroupManagerRequest {
  // The name of the managed instance group.
  string instance_group_manager = 249363395 [(google.api.field_behavior) = REQUIRED];

  // The body resource for this request
  InstanceGroupManagersSetInstanceTemplateRequest instance_group_managers_set_instance_template_request_resource = 9809093 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // The name of the zone where the managed instance group is located.
  string zone = 3744684 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "zone"
  ];

}

// A request message for RegionInstanceGroupManagers.SetInstanceTemplate. See the method description for details.
message SetInstanceTemplateRegionInstanceGroupManagerRequest {
  // The name of the managed instance group.
  string instance_group_manager = 249363395 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // Name of the region scoping this request.
  string region = 138946292 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "region"
  ];

  // The body resource for this request
  RegionInstanceGroupManagersSetTemplateRequest region_instance_group_managers_set_template_request_resource = 187310412 [(google.api.field_behavior) = REQUIRED];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

}

// A request message for Addresses.SetLabels. See the method description for details.
message SetLabelsAddressRequest {
  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // The region for this request.
  string region = 138946292 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "region"
  ];

  // The body resource for this request
  RegionSetLabelsRequest region_set_labels_request_resource = 259357782 [(google.api.field_behavior) = REQUIRED];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // Name or id of the resource for this request.
  string resource = 195806222 [(google.api.field_behavior) = REQUIRED];

}

// A request message for Disks.SetLabels. See the method description for details.
message SetLabelsDiskRequest {
  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // Name or id of the resource for this request.
  string resource = 195806222 [(google.api.field_behavior) = REQUIRED];

  // The name of the zone for this request.
  string zone = 3744684 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "zone"
  ];

  // The body resource for this request
  ZoneSetLabelsRequest zone_set_labels_request_resource = 364950798 [(google.api.field_behavior) = REQUIRED];

}

// A request message for ExternalVpnGateways.SetLabels. See the method description for details.
message SetLabelsExternalVpnGatewayRequest {
  // The body resource for this request
  GlobalSetLabelsRequest global_set_labels_request_resource = 319917189 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // Name or id of the resource for this request.
  string resource = 195806222 [(google.api.field_behavior) = REQUIRED];

}

// A request message for ForwardingRules.SetLabels. See the method description for details.
message SetLabelsForwardingRuleRequest {
  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // The region for this request.
  string region = 138946292 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "region"
  ];

  // The body resource for this request
  RegionSetLabelsRequest region_set_labels_request_resource = 259357782 [(google.api.field_behavior) = REQUIRED];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // Name or id of the resource for this request.
  string resource = 195806222 [(google.api.field_behavior) = REQUIRED];

}

// A request message for GlobalAddresses.SetLabels. See the method description for details.
message SetLabelsGlobalAddressRequest {
  // The body resource for this request
  GlobalSetLabelsRequest global_set_labels_request_resource = 319917189 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // Name or id of the resource for this request.
  string resource = 195806222 [(google.api.field_behavior) = REQUIRED];

}

// A request message for GlobalForwardingRules.SetLabels. See the method description for details.
message SetLabelsGlobalForwardingRuleRequest {
  // The body resource for this request
  GlobalSetLabelsRequest global_set_labels_request_resource = 319917189 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // Name or id of the resource for this request.
  string resource = 195806222 [(google.api.field_behavior) = REQUIRED];

}

// A request message for Images.SetLabels. See the method description for details.
message SetLabelsImageRequest {
  // The body resource for this request
  GlobalSetLabelsRequest global_set_labels_request_resource = 319917189 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // Name or id of the resource for this request.
  string resource = 195806222 [(google.api.field_behavior) = REQUIRED];

}

// A request message for Instances.SetLabels. See the method description for details.
message SetLabelsInstanceRequest {
  // Name of the instance scoping this request.
  string instance = 18257045 [(google.api.field_behavior) = REQUIRED];

  // The body resource for this request
  InstancesSetLabelsRequest instances_set_labels_request_resource = 207749344 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // The name of the zone for this request.
  string zone = 3744684 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "zone"
  ];

}

// A request message for InterconnectAttachments.SetLabels. See the method description for details.
message SetLabelsInterconnectAttachmentRequest {
  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // The region for this request.
  string region = 138946292 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "region"
  ];

  // The body resource for this request
  RegionSetLabelsRequest region_set_labels_request_resource = 259357782 [(google.api.field_behavior) = REQUIRED];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // Name or id of the resource for this request.
  string resource = 195806222 [(google.api.field_behavior) = REQUIRED];

}

// A request message for Interconnects.SetLabels. See the method description for details.
message SetLabelsInterconnectRequest {
  // The body resource for this request
  GlobalSetLabelsRequest global_set_labels_request_resource = 319917189 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // Name or id of the resource for this request.
  string resource = 195806222 [(google.api.field_behavior) = REQUIRED];

}

// A request message for RegionDisks.SetLabels. See the method description for details.
message SetLabelsRegionDiskRequest {
  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // The region for this request.
  string region = 138946292 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "region"
  ];

  // The body resource for this request
  RegionSetLabelsRequest region_set_labels_request_resource = 259357782 [(google.api.field_behavior) = REQUIRED];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // Name or id of the resource for this request.
  string resource = 195806222 [(google.api.field_behavior) = REQUIRED];

}

// A request message for SecurityPolicies.SetLabels. See the method description for details.
message SetLabelsSecurityPolicyRequest {
  // The body resource for this request
  GlobalSetLabelsRequest global_set_labels_request_resource = 319917189 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // Name or id of the resource for this request.
  string resource = 195806222 [(google.api.field_behavior) = REQUIRED];

}

// A request message for Snapshots.SetLabels. See the method description for details.
message SetLabelsSnapshotRequest {
  // The body resource for this request
  GlobalSetLabelsRequest global_set_labels_request_resource = 319917189 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // Name or id of the resource for this request.
  string resource = 195806222 [(google.api.field_behavior) = REQUIRED];

}

// A request message for TargetVpnGateways.SetLabels. See the method description for details.
message SetLabelsTargetVpnGatewayRequest {
  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // The region for this request.
  string region = 138946292 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "region"
  ];

  // The body resource for this request
  RegionSetLabelsRequest region_set_labels_request_resource = 259357782 [(google.api.field_behavior) = REQUIRED];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // Name or id of the resource for this request.
  string resource = 195806222 [(google.api.field_behavior) = REQUIRED];

}

// A request message for VpnGateways.SetLabels. See the method description for details.
message SetLabelsVpnGatewayRequest {
  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // The region for this request.
  string region = 138946292 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "region"
  ];

  // The body resource for this request
  RegionSetLabelsRequest region_set_labels_request_resource = 259357782 [(google.api.field_behavior) = REQUIRED];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // Name or id of the resource for this request.
  string resource = 195806222 [(google.api.field_behavior) = REQUIRED];

}

// A request message for VpnTunnels.SetLabels. See the method description for details.
message SetLabelsVpnTunnelRequest {
  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // The region for this request.
  string region = 138946292 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "region"
  ];

  // The body resource for this request
  RegionSetLabelsRequest region_set_labels_request_resource = 259357782 [(google.api.field_behavior) = REQUIRED];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // Name or id of the resource for this request.
  string resource = 195806222 [(google.api.field_behavior) = REQUIRED];

}

// A request message for Instances.SetMachineResources. See the method description for details.
message SetMachineResourcesInstanceRequest {
  // Name of the instance scoping this request.
  string instance = 18257045 [(google.api.field_behavior) = REQUIRED];

  // The body resource for this request
  InstancesSetMachineResourcesRequest instances_set_machine_resources_request_resource = 196286318 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // The name of the zone for this request.
  string zone = 3744684 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "zone"
  ];

}

// A request message for Instances.SetMachineType. See the method description for details.
message SetMachineTypeInstanceRequest {
  // Name of the instance scoping this request.
  string instance = 18257045 [(google.api.field_behavior) = REQUIRED];

  // The body resource for this request
  InstancesSetMachineTypeRequest instances_set_machine_type_request_resource = 254157709 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // The name of the zone for this request.
  string zone = 3744684 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "zone"
  ];

}

// A request message for Instances.SetMetadata. See the method description for details.
message SetMetadataInstanceRequest {
  // Name of the instance scoping this request.
  string instance = 18257045 [(google.api.field_behavior) = REQUIRED];

  // The body resource for this request
  Metadata metadata_resource = 291086110 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // The name of the zone for this request.
  string zone = 3744684 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "zone"
  ];

}

// A request message for Instances.SetMinCpuPlatform. See the method description for details.
message SetMinCpuPlatformInstanceRequest {
  // Name of the instance scoping this request.
  string instance = 18257045 [(google.api.field_behavior) = REQUIRED];

  // The body resource for this request
  InstancesSetMinCpuPlatformRequest instances_set_min_cpu_platform_request_resource = 148459368 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // The name of the zone for this request.
  string zone = 3744684 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "zone"
  ];

}

// A request message for Instances.SetName. See the method description for details.
message SetNameInstanceRequest {
  // The instance name for this request.
  string instance = 18257045 [(google.api.field_behavior) = REQUIRED];

  // The body resource for this request
  InstancesSetNameRequest instances_set_name_request_resource = 272080980 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // The name of the zone for this request.
  string zone = 3744684 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "zone"
  ];

}

// A request message for InstanceGroups.SetNamedPorts. See the method description for details.
message SetNamedPortsInstanceGroupRequest {
  // The name of the instance group where the named ports are updated.
  string instance_group = 81095253 [(google.api.field_behavior) = REQUIRED];

  // The body resource for this request
  InstanceGroupsSetNamedPortsRequest instance_groups_set_named_ports_request_resource = 385151535 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // The name of the zone where the instance group is located.
  string zone = 3744684 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "zone"
  ];

}

// A request message for RegionInstanceGroups.SetNamedPorts. See the method description for details.
message SetNamedPortsRegionInstanceGroupRequest {
  // The name of the regional instance group where the named ports are updated.
  string instance_group = 81095253 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // Name of the region scoping this request.
  string region = 138946292 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "region"
  ];

  // The body resource for this request
  RegionInstanceGroupsSetNamedPortsRequest region_instance_groups_set_named_ports_request_resource = 1574938 [(google.api.field_behavior) = REQUIRED];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

}

// A request message for NodeGroups.SetNodeTemplate. See the method description for details.
message SetNodeTemplateNodeGroupRequest {
  // Name of the NodeGroup resource to update.
  string node_group = 469958146 [(google.api.field_behavior) = REQUIRED];

  // The body resource for this request
  NodeGroupsSetNodeTemplateRequest node_groups_set_node_template_request_resource = 117382321 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // The name of the zone for this request.
  string zone = 3744684 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "zone"
  ];

}

// A request message for Subnetworks.SetPrivateIpGoogleAccess. See the method description for details.
message SetPrivateIpGoogleAccessSubnetworkRequest {
  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // Name of the region scoping this request.
  string region = 138946292 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "region"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // Name of the Subnetwork resource.
  string subnetwork = 307827694 [(google.api.field_behavior) = REQUIRED];

  // The body resource for this request
  SubnetworksSetPrivateIpGoogleAccessRequest subnetworks_set_private_ip_google_access_request_resource = 268920696 [(google.api.field_behavior) = REQUIRED];

}

// A request message for TargetSslProxies.SetProxyHeader. See the method description for details.
message SetProxyHeaderTargetSslProxyRequest {
  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // The body resource for this request
  TargetSslProxiesSetProxyHeaderRequest target_ssl_proxies_set_proxy_header_request_resource = 205284526 [(google.api.field_behavior) = REQUIRED];

  // Name of the TargetSslProxy resource whose ProxyHeader is to be set.
  string target_ssl_proxy = 338795853 [(google.api.field_behavior) = REQUIRED];

}

// A request message for TargetTcpProxies.SetProxyHeader. See the method description for details.
message SetProxyHeaderTargetTcpProxyRequest {
  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // The body resource for this request
  TargetTcpProxiesSetProxyHeaderRequest target_tcp_proxies_set_proxy_header_request_resource = 219958339 [(google.api.field_behavior) = REQUIRED];

  // Name of the TargetTcpProxy resource whose ProxyHeader is to be set.
  string target_tcp_proxy = 503065442 [(google.api.field_behavior) = REQUIRED];

}

// A request message for TargetHttpsProxies.SetQuicOverride. See the method description for details.
message SetQuicOverrideTargetHttpsProxyRequest {
  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // The body resource for this request
  TargetHttpsProxiesSetQuicOverrideRequest target_https_proxies_set_quic_override_request_resource = 72940258 [(google.api.field_behavior) = REQUIRED];

  // Name of the TargetHttpsProxy resource to set the QUIC override policy for. The name should conform to RFC1035.
  string target_https_proxy = 52336748 [(google.api.field_behavior) = REQUIRED];

}

// A request message for Instances.SetScheduling. See the method description for details.
message SetSchedulingInstanceRequest {
  // Instance name for this request.
  string instance = 18257045 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // The body resource for this request
  Scheduling scheduling_resource = 463181401 [(google.api.field_behavior) = REQUIRED];

  // The name of the zone for this request.
  string zone = 3744684 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "zone"
  ];

}

// A request message for BackendServices.SetSecurityPolicy. See the method description for details.
message SetSecurityPolicyBackendServiceRequest {
  // Name of the BackendService resource to which the security policy should be set. The name should conform to RFC1035.
  string backend_service = 306946058 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // The body resource for this request
  SecurityPolicyReference security_policy_reference_resource = 204135024 [(google.api.field_behavior) = REQUIRED];

}

// A request message for Instances.SetServiceAccount. See the method description for details.
message SetServiceAccountInstanceRequest {
  // Name of the instance resource to start.
  string instance = 18257045 [(google.api.field_behavior) = REQUIRED];

  // The body resource for this request
  InstancesSetServiceAccountRequest instances_set_service_account_request_resource = 275550008 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // The name of the zone for this request.
  string zone = 3744684 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "zone"
  ];

}

// A request message for Instances.SetShieldedInstanceIntegrityPolicy. See the method description for details.
message SetShieldedInstanceIntegrityPolicyInstanceRequest {
  // Name or id of the instance scoping this request.
  string instance = 18257045 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // The body resource for this request
  ShieldedInstanceIntegrityPolicy shielded_instance_integrity_policy_resource = 409169462 [(google.api.field_behavior) = REQUIRED];

  // The name of the zone for this request.
  string zone = 3744684 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "zone"
  ];

}

// A request message for RegionTargetHttpsProxies.SetSslCertificates. See the method description for details.
message SetSslCertificatesRegionTargetHttpsProxyRequest {
  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // Name of the region scoping this request.
  string region = 138946292 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "region"
  ];

  // The body resource for this request
  RegionTargetHttpsProxiesSetSslCertificatesRequest region_target_https_proxies_set_ssl_certificates_request_resource = 390693383 [(google.api.field_behavior) = REQUIRED];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // Name of the TargetHttpsProxy resource to set an SslCertificates resource for.
  string target_https_proxy = 52336748 [(google.api.field_behavior) = REQUIRED];

}

// A request message for TargetHttpsProxies.SetSslCertificates. See the method description for details.
message SetSslCertificatesTargetHttpsProxyRequest {
  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // The body resource for this request
  TargetHttpsProxiesSetSslCertificatesRequest target_https_proxies_set_ssl_certificates_request_resource = 223122908 [(google.api.field_behavior) = REQUIRED];

  // Name of the TargetHttpsProxy resource to set an SslCertificates resource for.
  string target_https_proxy = 52336748 [(google.api.field_behavior) = REQUIRED];

}

// A request message for TargetSslProxies.SetSslCertificates. See the method description for details.
message SetSslCertificatesTargetSslProxyRequest {
  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // The body resource for this request
  TargetSslProxiesSetSslCertificatesRequest target_ssl_proxies_set_ssl_certificates_request_resource = 147940797 [(google.api.field_behavior) = REQUIRED];

  // Name of the TargetSslProxy resource whose SslCertificate resource is to be set.
  string target_ssl_proxy = 338795853 [(google.api.field_behavior) = REQUIRED];

}

// A request message for TargetHttpsProxies.SetSslPolicy. See the method description for details.
message SetSslPolicyTargetHttpsProxyRequest {
  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // The body resource for this request
  SslPolicyReference ssl_policy_reference_resource = 235403836 [(google.api.field_behavior) = REQUIRED];

  // Name of the TargetHttpsProxy resource whose SSL policy is to be set. The name must be 1-63 characters long, and comply with RFC1035.
  string target_https_proxy = 52336748 [(google.api.field_behavior) = REQUIRED];

}

// A request message for TargetSslProxies.SetSslPolicy. See the method description for details.
message SetSslPolicyTargetSslProxyRequest {
  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // The body resource for this request
  SslPolicyReference ssl_policy_reference_resource = 235403836 [(google.api.field_behavior) = REQUIRED];

  // Name of the TargetSslProxy resource whose SSL policy is to be set. The name must be 1-63 characters long, and comply with RFC1035.
  string target_ssl_proxy = 338795853 [(google.api.field_behavior) = REQUIRED];

}

// A request message for Instances.SetTags. See the method description for details.
message SetTagsInstanceRequest {
  // Name of the instance scoping this request.
  string instance = 18257045 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // The body resource for this request
  Tags tags_resource = 331435380 [(google.api.field_behavior) = REQUIRED];

  // The name of the zone for this request.
  string zone = 3744684 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "zone"
  ];

}

// A request message for ForwardingRules.SetTarget. See the method description for details.
message SetTargetForwardingRuleRequest {
  // Name of the ForwardingRule resource in which target is to be set.
  string forwarding_rule = 269964030 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // Name of the region scoping this request.
  string region = 138946292 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "region"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // The body resource for this request
  TargetReference target_reference_resource = 523721712 [(google.api.field_behavior) = REQUIRED];

}

// A request message for GlobalForwardingRules.SetTarget. See the method description for details.
message SetTargetGlobalForwardingRuleRequest {
  // Name of the ForwardingRule resource in which target is to be set.
  string forwarding_rule = 269964030 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // The body resource for this request
  TargetReference target_reference_resource = 523721712 [(google.api.field_behavior) = REQUIRED];

}

// A request message for InstanceGroupManagers.SetTargetPools. See the method description for details.
message SetTargetPoolsInstanceGroupManagerRequest {
  // The name of the managed instance group.
  string instance_group_manager = 249363395 [(google.api.field_behavior) = REQUIRED];

  // The body resource for this request
  InstanceGroupManagersSetTargetPoolsRequest instance_group_managers_set_target_pools_request_resource = 281150216 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // The name of the zone where the managed instance group is located.
  string zone = 3744684 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "zone"
  ];

}

// A request message for RegionInstanceGroupManagers.SetTargetPools. See the method description for details.
message SetTargetPoolsRegionInstanceGroupManagerRequest {
  // Name of the managed instance group.
  string instance_group_manager = 249363395 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // Name of the region scoping this request.
  string region = 138946292 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "region"
  ];

  // The body resource for this request
  RegionInstanceGroupManagersSetTargetPoolsRequest region_instance_group_managers_set_target_pools_request_resource = 78734717 [(google.api.field_behavior) = REQUIRED];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

}

// A request message for RegionTargetHttpProxies.SetUrlMap. See the method description for details.
message SetUrlMapRegionTargetHttpProxyRequest {
  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // Name of the region scoping this request.
  string region = 138946292 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "region"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // Name of the TargetHttpProxy to set a URL map for.
  string target_http_proxy = 206872421 [(google.api.field_behavior) = REQUIRED];

  // The body resource for this request
  UrlMapReference url_map_reference_resource = 398701333 [(google.api.field_behavior) = REQUIRED];

}

// A request message for RegionTargetHttpsProxies.SetUrlMap. See the method description for details.
message SetUrlMapRegionTargetHttpsProxyRequest {
  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // Name of the region scoping this request.
  string region = 138946292 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "region"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // Name of the TargetHttpsProxy to set a URL map for.
  string target_https_proxy = 52336748 [(google.api.field_behavior) = REQUIRED];

  // The body resource for this request
  UrlMapReference url_map_reference_resource = 398701333 [(google.api.field_behavior) = REQUIRED];

}

// A request message for TargetHttpProxies.SetUrlMap. See the method description for details.
message SetUrlMapTargetHttpProxyRequest {
  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // Name of the TargetHttpProxy to set a URL map for.
  string target_http_proxy = 206872421 [(google.api.field_behavior) = REQUIRED];

  // The body resource for this request
  UrlMapReference url_map_reference_resource = 398701333 [(google.api.field_behavior) = REQUIRED];

}

// A request message for TargetHttpsProxies.SetUrlMap. See the method description for details.
message SetUrlMapTargetHttpsProxyRequest {
  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // Name of the TargetHttpsProxy resource whose URL map is to be set.
  string target_https_proxy = 52336748 [(google.api.field_behavior) = REQUIRED];

  // The body resource for this request
  UrlMapReference url_map_reference_resource = 398701333 [(google.api.field_behavior) = REQUIRED];

}

// A request message for Projects.SetUsageExportBucket. See the method description for details.
message SetUsageExportBucketProjectRequest {
  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // The body resource for this request
  UsageExportLocation usage_export_location_resource = 20260459 [(google.api.field_behavior) = REQUIRED];

}

// The share setting for reservations and sole tenancy node groups.
message ShareSettings {
  // Type of sharing for this shared-reservation
  enum ShareType {
    // A value indicating that the enum field is not set.
    UNDEFINED_SHARE_TYPE = 0;

    // Default value.
    LOCAL = 72607563;

    // Shared-reservation is open to entire Organization
    ORGANIZATION = 274978099;

    // Default value. This value is unused.
    SHARE_TYPE_UNSPECIFIED = 494771730;

    // Shared-reservation is open to specific projects
    SPECIFIC_PROJECTS = 347838695;

  }

  // A map of project id and project config. This is only valid when share_type's value is SPECIFIC_PROJECTS.
  map<string, ShareSettingsProjectConfig> project_map = 134212406;

  // Type of sharing for this shared-reservation
  // Check the ShareType enum for the list of possible values.
  optional string share_type = 359533466;

}

// Config for each project in the share settings.
message ShareSettingsProjectConfig {
  // The project ID, should be same as the key of this project config in the parent map.
  optional string project_id = 177513473;

}

// A set of Shielded Instance options.
message ShieldedInstanceConfig {
  // Defines whether the instance has integrity monitoring enabled. Enabled by default.
  optional bool enable_integrity_monitoring = 409071030;

  // Defines whether the instance has Secure Boot enabled. Disabled by default.
  optional bool enable_secure_boot = 123568638;

  // Defines whether the instance has the vTPM enabled. Enabled by default.
  optional bool enable_vtpm = 181858935;

}

// A Shielded Instance Identity.
message ShieldedInstanceIdentity {
  // An Endorsement Key (EK) made by the RSA 2048 algorithm issued to the Shielded Instance's vTPM.
  optional ShieldedInstanceIdentityEntry encryption_key = 488268707;

  // [Output Only] Type of the resource. Always compute#shieldedInstanceIdentity for shielded Instance identity entry.
  optional string kind = 3292052;

  // An Attestation Key (AK) made by the RSA 2048 algorithm issued to the Shielded Instance's vTPM.
  optional ShieldedInstanceIdentityEntry signing_key = 320948261;

}

// A Shielded Instance Identity Entry.
message ShieldedInstanceIdentityEntry {
  // A PEM-encoded X.509 certificate. This field can be empty.
  optional string ek_cert = 450178589;

  // A PEM-encoded public key.
  optional string ek_pub = 308947940;

}

// The policy describes the baseline against which Instance boot integrity is measured.
message ShieldedInstanceIntegrityPolicy {
  // Updates the integrity policy baseline using the measurements from the VM instance's most recent boot.
  optional bool update_auto_learn_policy = 245490215;

}

// Represents a customer-supplied Signing Key used by Cloud CDN Signed URLs
message SignedUrlKey {
  // Name of the key. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
  optional string key_name = 500938859;

  // 128-bit key value used for signing the URL. The key value must be a valid RFC 4648 Section 5 base64url encoded string.
  optional string key_value = 504106897;

}

// A request message for Instances.SimulateMaintenanceEvent. See the method description for details.
message SimulateMaintenanceEventInstanceRequest {
  // Name of the instance scoping this request.
  string instance = 18257045 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // The name of the zone for this request.
  string zone = 3744684 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "zone"
  ];

}

// A request message for NodeGroups.SimulateMaintenanceEvent. See the method description for details.
message SimulateMaintenanceEventNodeGroupRequest {
  // Name of the NodeGroup resource whose nodes will go under maintenance simulation.
  string node_group = 469958146 [(google.api.field_behavior) = REQUIRED];

  // The body resource for this request
  NodeGroupsSimulateMaintenanceEventRequest node_groups_simulate_maintenance_event_request_resource = 351468764 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // The name of the zone for this request.
  string zone = 3744684 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "zone"
  ];

}

// Represents a Persistent Disk Snapshot resource. You can use snapshots to back up data on a regular interval. For more information, read Creating persistent disk snapshots.
message Snapshot {
  // [Output Only] The architecture of the snapshot. Valid values are ARM64 or X86_64.
  enum Architecture {
    // A value indicating that the enum field is not set.
    UNDEFINED_ARCHITECTURE = 0;

    // Default value indicating Architecture is not set.
    ARCHITECTURE_UNSPECIFIED = 394750507;

    // Machines with architecture ARM64
    ARM64 = 62547450;

    // Machines with architecture X86_64
    X86_64 = 425300551;

  }

  // Indicates the type of the snapshot.
  enum SnapshotType {
    // A value indicating that the enum field is not set.
    UNDEFINED_SNAPSHOT_TYPE = 0;

    ARCHIVE = 506752162;

    STANDARD = 484642493;

  }

  // [Output Only] The status of the snapshot. This can be CREATING, DELETING, FAILED, READY, or UPLOADING.
  enum Status {
    // A value indicating that the enum field is not set.
    UNDEFINED_STATUS = 0;

    // Snapshot creation is in progress.
    CREATING = 455564985;

    // Snapshot is currently being deleted.
    DELETING = 528602024;

    // Snapshot creation failed.
    FAILED = 455706685;

    // Snapshot has been created successfully.
    READY = 77848963;

    // Snapshot is being uploaded.
    UPLOADING = 267603489;

  }

  // [Output Only] An indicator whether storageBytes is in a stable state or it is being adjusted as a result of shared storage reallocation. This status can either be UPDATING, meaning the size of the snapshot is being updated, or UP_TO_DATE, meaning the size of the snapshot is up-to-date.
  enum StorageBytesStatus {
    // A value indicating that the enum field is not set.
    UNDEFINED_STORAGE_BYTES_STATUS = 0;

    UPDATING = 494614342;

    UP_TO_DATE = 101306702;

  }

  // [Output Only] The architecture of the snapshot. Valid values are ARM64 or X86_64.
  // Check the Architecture enum for the list of possible values.
  optional string architecture = 302803283;

  // [Output Only] Set to true if snapshots are automatically created by applying resource policy on the target disk.
  optional bool auto_created = 463922264;

  // Creates the new snapshot in the snapshot chain labeled with the specified name. The chain name must be 1-63 characters long and comply with RFC1035. This is an uncommon option only for advanced service owners who needs to create separate snapshot chains, for example, for chargeback tracking. When you describe your snapshot resource, this field is visible only if it has a non-empty value.
  optional string chain_name = 68644169;

  // [Output Only] Size in bytes of the snapshot at creation time.
  optional int64 creation_size_bytes = 125400077;

  // [Output Only] Creation timestamp in RFC3339 text format.
  optional string creation_timestamp = 30525366;

  // An optional description of this resource. Provide this property when you create the resource.
  optional string description = 422937596;

  // [Output Only] Size of the source disk, specified in GB.
  optional int64 disk_size_gb = 316263735;

  // [Output Only] Number of bytes downloaded to restore a snapshot to a disk.
  optional int64 download_bytes = 435054068;

  // [Output Only] The unique identifier for the resource. This identifier is defined by the server.
  optional uint64 id = 3355;

  // [Output Only] Type of the resource. Always compute#snapshot for Snapshot resources.
  optional string kind = 3292052;

  // A fingerprint for the labels being applied to this snapshot, which is essentially a hash of the labels set used for optimistic locking. The fingerprint is initially generated by Compute Engine and changes after every request to modify or update labels. You must always provide an up-to-date fingerprint hash in order to update or change labels, otherwise the request will fail with error 412 conditionNotMet. To see the latest fingerprint, make a get() request to retrieve a snapshot.
  optional string label_fingerprint = 178124825;

  // Labels to apply to this snapshot. These can be later modified by the setLabels method. Label values may be empty.
  map<string, string> labels = 500195327;

  // [Output Only] Integer license codes indicating which licenses are attached to this snapshot.
  repeated int64 license_codes = 45482664;

  // [Output Only] A list of public visible licenses that apply to this snapshot. This can be because the original image had licenses attached (such as a Windows image).
  repeated string licenses = 337642578;

  // An opaque location hint used to place the snapshot close to other resources. This field is for use by internal tools that use the public API.
  optional string location_hint = 350519505;

  // Name of the resource; provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
  optional string name = 3373707;

  // [Output Only] Reserved for future use.
  optional bool satisfies_pzs = 480964267;

  // [Output Only] Server-defined URL for the resource.
  optional string self_link = 456214797;

  // Encrypts the snapshot using a customer-supplied encryption key. After you encrypt a snapshot using a customer-supplied key, you must provide the same key if you use the snapshot later. For example, you must provide the encryption key when you create a disk from the encrypted snapshot in a future request. Customer-supplied encryption keys do not protect access to metadata of the snapshot. If you do not provide an encryption key when creating the snapshot, then the snapshot will be encrypted using an automatically generated key and you do not need to provide a key to use the snapshot later.
  optional CustomerEncryptionKey snapshot_encryption_key = 43334526;

  // Indicates the type of the snapshot.
  // Check the SnapshotType enum for the list of possible values.
  optional string snapshot_type = 124349653;

  // The source disk used to create this snapshot.
  optional string source_disk = 451753793;

  // The customer-supplied encryption key of the source disk. Required if the source disk is protected by a customer-supplied encryption key.
  optional CustomerEncryptionKey source_disk_encryption_key = 531501153;

  // [Output Only] The ID value of the disk used to create this snapshot. This value may be used to determine whether the snapshot was taken from the current or a previous instance of a given disk name.
  optional string source_disk_id = 454190809;

  // [Output Only] URL of the resource policy which created this scheduled snapshot.
  optional string source_snapshot_schedule_policy = 235756291;

  // [Output Only] ID of the resource policy which created this scheduled snapshot.
  optional string source_snapshot_schedule_policy_id = 70489047;

  // [Output Only] The status of the snapshot. This can be CREATING, DELETING, FAILED, READY, or UPLOADING.
  // Check the Status enum for the list of possible values.
  optional string status = 181260274;

  // [Output Only] A size of the storage used by the snapshot. As snapshots share storage, this number is expected to change with snapshot creation/deletion.
  optional int64 storage_bytes = 424631719;

  // [Output Only] An indicator whether storageBytes is in a stable state or it is being adjusted as a result of shared storage reallocation. This status can either be UPDATING, meaning the size of the snapshot is being updated, or UP_TO_DATE, meaning the size of the snapshot is up-to-date.
  // Check the StorageBytesStatus enum for the list of possible values.
  optional string storage_bytes_status = 490739082;

  // Cloud Storage bucket storage location of the snapshot (regional or multi-regional).
  repeated string storage_locations = 328005274;

}

// Contains a list of Snapshot resources.
message SnapshotList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 3355;

  // A list of Snapshot resources.
  repeated Snapshot items = 100526016;

  // Type of resource.
  optional string kind = 3292052;

  // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
  optional string next_page_token = 79797525;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 456214797;

  // [Output Only] Informational warning message.
  optional Warning warning = 50704284;

}

//
message SourceDiskEncryptionKey {
  // The customer-supplied encryption key of the source disk. Required if the source disk is protected by a customer-supplied encryption key.
  optional CustomerEncryptionKey disk_encryption_key = 271660677;

  // URL of the disk attached to the source instance. This can be a full or valid partial URL. For example, the following are valid values: - https://www.googleapis.com/compute/v1/projects/project/zones/zone /disks/disk - projects/project/zones/zone/disks/disk - zones/zone/disks/disk 
  optional string source_disk = 451753793;

}

// A specification of the parameters to use when creating the instance template from a source instance.
message SourceInstanceParams {
  // Attached disks configuration. If not provided, defaults are applied: For boot disk and any other R/W disks, the source images for each disk will be used. For read-only disks, they will be attached in read-only mode. Local SSD disks will be created as blank volumes.
  repeated DiskInstantiationConfig disk_configs = 235580623;

}

// DEPRECATED: Please use compute#instanceProperties instead. New properties will not be added to this field.
message SourceInstanceProperties {
  // KeyRevocationActionType of the instance. Supported options are "STOP" and "NONE". The default value is "NONE" if it is not specified.
  enum KeyRevocationActionType {
    // A value indicating that the enum field is not set.
    UNDEFINED_KEY_REVOCATION_ACTION_TYPE = 0;

    // Default value. This value is unused.
    KEY_REVOCATION_ACTION_TYPE_UNSPECIFIED = 467110106;

    // Indicates user chose no operation.
    NONE = 2402104;

    // Indicates user chose to opt for VM shutdown on key revocation.
    STOP = 2555906;

  }

  // Enables instances created based on this machine image to send packets with source IP addresses other than their own and receive packets with destination IP addresses other than their own. If these instances will be used as an IP gateway or it will be set as the next-hop in a Route resource, specify true. If unsure, leave this set to false. See the Enable IP forwarding documentation for more information.
  optional bool can_ip_forward = 467731324;

  // Whether the instance created from this machine image should be protected against deletion.
  optional bool deletion_protection = 458014698;

  // An optional text description for the instances that are created from this machine image.
  optional string description = 422937596;

  // An array of disks that are associated with the instances that are created from this machine image.
  repeated SavedAttachedDisk disks = 95594102;

  // A list of guest accelerator cards' type and count to use for instances created from this machine image.
  repeated AcceleratorConfig guest_accelerators = 463595119;

  // KeyRevocationActionType of the instance. Supported options are "STOP" and "NONE". The default value is "NONE" if it is not specified.
  // Check the KeyRevocationActionType enum for the list of possible values.
  optional string key_revocation_action_type = 235941474;

  // Labels to apply to instances that are created from this machine image.
  map<string, string> labels = 500195327;

  // The machine type to use for instances that are created from this machine image.
  optional string machine_type = 227711026;

  // The metadata key/value pairs to assign to instances that are created from this machine image. These pairs can consist of custom metadata or predefined keys. See Project and instance metadata for more information.
  optional Metadata metadata = 86866735;

  // Minimum cpu/platform to be used by instances created from this machine image. The instance may be scheduled on the specified or newer cpu/platform. Applicable values are the friendly names of CPU platforms, such as minCpuPlatform: "Intel Haswell" or minCpuPlatform: "Intel Sandy Bridge". For more information, read Specifying a Minimum CPU Platform.
  optional string min_cpu_platform = 242912759;

  // An array of network access configurations for this interface.
  repeated NetworkInterface network_interfaces = 52735243;

  // Specifies the scheduling options for the instances that are created from this machine image.
  optional Scheduling scheduling = 386688404;

  // A list of service accounts with specified scopes. Access tokens for these service accounts are available to the instances that are created from this machine image. Use metadata queries to obtain the access tokens for these instances.
  repeated ServiceAccount service_accounts = 277537328;

  // A list of tags to apply to the instances that are created from this machine image. The tags identify valid sources or targets for network firewalls. The setTags method can modify this list of tags. Each tag within the list must comply with RFC1035.
  optional Tags tags = 3552281;

}

// Represents an SSL Certificate resource. Google Compute Engine has two SSL Certificate resources: * [Global](/compute/docs/reference/rest/v1/sslCertificates) * [Regional](/compute/docs/reference/rest/v1/regionSslCertificates) The sslCertificates are used by: - external HTTPS load balancers - SSL proxy load balancers The regionSslCertificates are used by internal HTTPS load balancers. Optionally, certificate file contents that you upload can contain a set of up to five PEM-encoded certificates. The API call creates an object (sslCertificate) that holds this data. You can use SSL keys and certificates to secure connections to a load balancer. For more information, read Creating and using SSL certificates, SSL certificates quotas and limits, and Troubleshooting SSL certificates.
message SslCertificate {
  // (Optional) Specifies the type of SSL certificate, either "SELF_MANAGED" or "MANAGED". If not specified, the certificate is self-managed and the fields certificate and private_key are used.
  enum Type {
    // A value indicating that the enum field is not set.
    UNDEFINED_TYPE = 0;

    // Google-managed SSLCertificate.
    MANAGED = 479501183;

    // Certificate uploaded by user.
    SELF_MANAGED = 434437516;

    TYPE_UNSPECIFIED = 437714322;

  }

  // A value read into memory from a certificate file. The certificate file must be in PEM format. The certificate chain must be no greater than 5 certs long. The chain must include at least one intermediate cert.
  optional string certificate = 341787031;

  // [Output Only] Creation timestamp in RFC3339 text format.
  optional string creation_timestamp = 30525366;

  // An optional description of this resource. Provide this property when you create the resource.
  optional string description = 422937596;

  // [Output Only] Expire time of the certificate. RFC3339
  optional string expire_time = 440691181;

  // [Output Only] The unique identifier for the resource. This identifier is defined by the server.
  optional uint64 id = 3355;

  // [Output Only] Type of the resource. Always compute#sslCertificate for SSL certificates.
  optional string kind = 3292052;

  // Configuration and status of a managed SSL certificate.
  optional SslCertificateManagedSslCertificate managed = 298389407;

  // Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
  optional string name = 3373707;

  // A value read into memory from a write-only private key file. The private key file must be in PEM format. For security, only insert requests include this field.
  optional string private_key = 361331107;

  // [Output Only] URL of the region where the regional SSL Certificate resides. This field is not applicable to global SSL Certificate.
  optional string region = 138946292;

  // [Output only] Server-defined URL for the resource.
  optional string self_link = 456214797;

  // Configuration and status of a self-managed SSL certificate.
  optional SslCertificateSelfManagedSslCertificate self_managed = 329284012;

  // [Output Only] Domains associated with the certificate via Subject Alternative Name.
  repeated string subject_alternative_names = 528807907;

  // (Optional) Specifies the type of SSL certificate, either "SELF_MANAGED" or "MANAGED". If not specified, the certificate is self-managed and the fields certificate and private_key are used.
  // Check the Type enum for the list of possible values.
  optional string type = 3575610;

}

//
message SslCertificateAggregatedList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 3355;

  // A list of SslCertificatesScopedList resources.
  map<string, SslCertificatesScopedList> items = 100526016;

  // [Output Only] Type of resource. Always compute#sslCertificateAggregatedList for lists of SSL Certificates.
  optional string kind = 3292052;

  // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
  optional string next_page_token = 79797525;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 456214797;

  // [Output Only] Unreachable resources.
  repeated string unreachables = 243372063;

  // [Output Only] Informational warning message.
  optional Warning warning = 50704284;

}

// Contains a list of SslCertificate resources.
message SslCertificateList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 3355;

  // A list of SslCertificate resources.
  repeated SslCertificate items = 100526016;

  // Type of resource.
  optional string kind = 3292052;

  // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
  optional string next_page_token = 79797525;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 456214797;

  // [Output Only] Informational warning message.
  optional Warning warning = 50704284;

}

// Configuration and status of a managed SSL certificate.
message SslCertificateManagedSslCertificate {
  // [Output only] Status of the managed certificate resource.
  enum Status {
    // A value indicating that the enum field is not set.
    UNDEFINED_STATUS = 0;

    // The certificate management is working, and a certificate has been provisioned.
    ACTIVE = 314733318;

    MANAGED_CERTIFICATE_STATUS_UNSPECIFIED = 474800850;

    // The certificate management is working. GCP will attempt to provision the first certificate.
    PROVISIONING = 290896621;

    // Certificate provisioning failed due to an issue with the DNS or load balancing configuration. For details of which domain failed, consult domain_status field.
    PROVISIONING_FAILED = 76813775;

    // Certificate provisioning failed due to an issue with the DNS or load balancing configuration. It won't be retried. To try again delete and create a new managed SslCertificate resource. For details of which domain failed, consult domain_status field.
    PROVISIONING_FAILED_PERMANENTLY = 275036203;

    // Renewal of the certificate has failed due to an issue with the DNS or load balancing configuration. The existing cert is still serving; however, it will expire shortly. To provision a renewed certificate, delete and create a new managed SslCertificate resource. For details on which domain failed, consult domain_status field.
    RENEWAL_FAILED = 434659076;

  }

  // [Output only] Detailed statuses of the domains specified for managed certificate resource.
  map<string, string> domain_status = 360305613;

  // The domains for which a managed SSL certificate will be generated. Each Google-managed SSL certificate supports up to the [maximum number of domains per Google-managed SSL certificate](/load-balancing/docs/quotas#ssl_certificates).
  repeated string domains = 226935855;

  // [Output only] Status of the managed certificate resource.
  // Check the Status enum for the list of possible values.
  optional string status = 181260274;

}

// Configuration and status of a self-managed SSL certificate.
message SslCertificateSelfManagedSslCertificate {
  // A local certificate file. The certificate must be in PEM format. The certificate chain must be no greater than 5 certs long. The chain must include at least one intermediate cert.
  optional string certificate = 341787031;

  // A write-only private key in PEM format. Only insert requests will include this field.
  optional string private_key = 361331107;

}

//
message SslCertificatesScopedList {
  // List of SslCertificates contained in this scope.
  repeated SslCertificate ssl_certificates = 366006543;

  // Informational warning which replaces the list of backend services when the list is empty.
  optional Warning warning = 50704284;

}

//
message SslPoliciesAggregatedList {
  optional string etag = 3123477;

  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 3355;

  // A list of SslPoliciesScopedList resources.
  map<string, SslPoliciesScopedList> items = 100526016;

  // [Output Only] Type of resource. Always compute#sslPolicyAggregatedList for lists of SSL Policies.
  optional string kind = 3292052;

  // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
  optional string next_page_token = 79797525;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 456214797;

  // [Output Only] Unreachable resources.
  repeated string unreachables = 243372063;

  // [Output Only] Informational warning message.
  optional Warning warning = 50704284;

}

//
message SslPoliciesList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 3355;

  // A list of SslPolicy resources.
  repeated SslPolicy items = 100526016;

  // [Output Only] Type of the resource. Always compute#sslPoliciesList for lists of sslPolicies.
  optional string kind = 3292052;

  // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
  optional string next_page_token = 79797525;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 456214797;

  // [Output Only] Informational warning message.
  optional Warning warning = 50704284;

}

//
message SslPoliciesListAvailableFeaturesResponse {
  repeated string features = 246211645;

}

//
message SslPoliciesScopedList {
  // A list of SslPolicies contained in this scope.
  repeated SslPolicy ssl_policies = 209941027;

  // Informational warning which replaces the list of SSL policies when the list is empty.
  optional Warning warning = 50704284;

}

// Represents an SSL Policy resource. Use SSL policies to control the SSL features, such as versions and cipher suites, offered by an HTTPS or SSL Proxy load balancer. For more information, read SSL Policy Concepts.
message SslPolicy {
  // The minimum version of SSL protocol that can be used by the clients to establish a connection with the load balancer. This can be one of TLS_1_0, TLS_1_1, TLS_1_2.
  enum MinTlsVersion {
    // A value indicating that the enum field is not set.
    UNDEFINED_MIN_TLS_VERSION = 0;

    // TLS 1.0
    TLS_1_0 = 33116734;

    // TLS 1.1
    TLS_1_1 = 33116735;

    // TLS 1.2
    TLS_1_2 = 33116736;

  }

  // Profile specifies the set of SSL features that can be used by the load balancer when negotiating SSL with clients. This can be one of COMPATIBLE, MODERN, RESTRICTED, or CUSTOM. If using CUSTOM, the set of SSL features to enable must be specified in the customFeatures field.
  enum Profile {
    // A value indicating that the enum field is not set.
    UNDEFINED_PROFILE = 0;

    // Compatible profile. Allows the broadset set of clients, even those which support only out-of-date SSL features to negotiate with the load balancer.
    COMPATIBLE = 179357396;

    // Custom profile. Allow only the set of allowed SSL features specified in the customFeatures field.
    CUSTOM = 388595569;

    // Modern profile. Supports a wide set of SSL features, allowing modern clients to negotiate SSL with the load balancer.
    MODERN = 132013855;

    // Restricted profile. Supports a reduced set of SSL features, intended to meet stricter compliance requirements.
    RESTRICTED = 261551195;

  }

  // [Output Only] Creation timestamp in RFC3339 text format.
  optional string creation_timestamp = 30525366;

  // A list of features enabled when the selected profile is CUSTOM. The method returns the set of features that can be specified in this list. This field must be empty if the profile is not CUSTOM.
  repeated string custom_features = 34789707;

  // An optional description of this resource. Provide this property when you create the resource.
  optional string description = 422937596;

  // [Output Only] The list of features enabled in the SSL policy.
  repeated string enabled_features = 469017467;

  // Fingerprint of this resource. A hash of the contents stored in this object. This field is used in optimistic locking. This field will be ignored when inserting a SslPolicy. An up-to-date fingerprint must be provided in order to update the SslPolicy, otherwise the request will fail with error 412 conditionNotMet. To see the latest fingerprint, make a get() request to retrieve an SslPolicy.
  optional string fingerprint = 234678500;

  // [Output Only] The unique identifier for the resource. This identifier is defined by the server.
  optional uint64 id = 3355;

  // [Output only] Type of the resource. Always compute#sslPolicyfor SSL policies.
  optional string kind = 3292052;

  // The minimum version of SSL protocol that can be used by the clients to establish a connection with the load balancer. This can be one of TLS_1_0, TLS_1_1, TLS_1_2.
  // Check the MinTlsVersion enum for the list of possible values.
  optional string min_tls_version = 8155943;

  // Name of the resource. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
  optional string name = 3373707;

  // Profile specifies the set of SSL features that can be used by the load balancer when negotiating SSL with clients. This can be one of COMPATIBLE, MODERN, RESTRICTED, or CUSTOM. If using CUSTOM, the set of SSL features to enable must be specified in the customFeatures field.
  // Check the Profile enum for the list of possible values.
  optional string profile = 227445161;

  // [Output Only] URL of the region where the regional SSL policy resides. This field is not applicable to global SSL policies.
  optional string region = 138946292;

  // [Output Only] Server-defined URL for the resource.
  optional string self_link = 456214797;

  // [Output Only] If potential misconfigurations are detected for this SSL policy, this field will be populated with warning messages.
  repeated Warnings warnings = 498091095;

}

//
message SslPolicyReference {
  // URL of the SSL policy resource. Set this to empty string to clear any existing SSL policy associated with the target proxy resource.
  optional string ssl_policy = 295190213;

}

// A request message for Instances.Start. See the method description for details.
message StartInstanceRequest {
  // Name of the instance resource to start.
  string instance = 18257045 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // The name of the zone for this request.
  string zone = 3744684 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "zone"
  ];

}

// A request message for Instances.StartWithEncryptionKey. See the method description for details.
message StartWithEncryptionKeyInstanceRequest {
  // Name of the instance resource to start.
  string instance = 18257045 [(google.api.field_behavior) = REQUIRED];

  // The body resource for this request
  InstancesStartWithEncryptionKeyRequest instances_start_with_encryption_key_request_resource = 441712511 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // The name of the zone for this request.
  string zone = 3744684 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "zone"
  ];

}

//
message StatefulPolicy {
  optional StatefulPolicyPreservedState preserved_state = 2634026;

}

// Configuration of preserved resources.
message StatefulPolicyPreservedState {
  // Disks created on the instances that will be preserved on instance delete, update, etc. This map is keyed with the device names of the disks.
  map<string, StatefulPolicyPreservedStateDiskDevice> disks = 95594102;

}

//
message StatefulPolicyPreservedStateDiskDevice {
  // These stateful disks will never be deleted during autohealing, update or VM instance recreate operations. This flag is used to configure if the disk should be deleted after it is no longer used by the group, e.g. when the given instance or the whole group is deleted. Note: disks attached in READ_ONLY mode cannot be auto-deleted.
  enum AutoDelete {
    // A value indicating that the enum field is not set.
    UNDEFINED_AUTO_DELETE = 0;

    NEVER = 74175084;

    ON_PERMANENT_INSTANCE_DELETION = 95727719;

  }

  // These stateful disks will never be deleted during autohealing, update or VM instance recreate operations. This flag is used to configure if the disk should be deleted after it is no longer used by the group, e.g. when the given instance or the whole group is deleted. Note: disks attached in READ_ONLY mode cannot be auto-deleted.
  // Check the AutoDelete enum for the list of possible values.
  optional string auto_delete = 464761403;

}

// A request message for Instances.Stop. See the method description for details.
message StopInstanceRequest {
  // If true, discard the contents of any attached localSSD partitions. Default value is false.
  optional bool discard_local_ssd = 319517903;

  // Name of the instance resource to stop.
  string instance = 18257045 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // The name of the zone for this request.
  string zone = 3744684 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "zone"
  ];

}

// Represents a Subnetwork resource. A subnetwork (also known as a subnet) is a logical partition of a Virtual Private Cloud network with one primary IP range and zero or more secondary IP ranges. For more information, read Virtual Private Cloud (VPC) Network.
message Subnetwork {
  // The access type of IPv6 address this subnet holds. It's immutable and can only be specified during creation or the first time the subnet is updated into IPV4_IPV6 dual stack.
  enum Ipv6AccessType {
    // A value indicating that the enum field is not set.
    UNDEFINED_IPV6_ACCESS_TYPE = 0;

    // VMs on this subnet will be assigned IPv6 addresses that are accessible via the Internet, as well as the VPC network.
    EXTERNAL = 35607499;

    // VMs on this subnet will be assigned IPv6 addresses that are only accessible over the VPC network.
    INTERNAL = 279295677;

    UNSPECIFIED_IPV6_ACCESS_TYPE = 313080613;

  }

  // This field is for internal use. This field can be both set at resource creation time and updated using patch.
  enum PrivateIpv6GoogleAccess {
    // A value indicating that the enum field is not set.
    UNDEFINED_PRIVATE_IPV6_GOOGLE_ACCESS = 0;

    // Disable private IPv6 access to/from Google services.
    DISABLE_GOOGLE_ACCESS = 450958579;

    // Bidirectional private IPv6 access to/from Google services.
    ENABLE_BIDIRECTIONAL_ACCESS_TO_GOOGLE = 427975994;

    // Outbound private IPv6 access from VMs in this subnet to Google services.
    ENABLE_OUTBOUND_VM_ACCESS_TO_GOOGLE = 288210263;

  }

  // The purpose of the resource. This field can be either PRIVATE_RFC_1918 or INTERNAL_HTTPS_LOAD_BALANCER. A subnetwork with purpose set to INTERNAL_HTTPS_LOAD_BALANCER is a user-created subnetwork that is reserved for Internal HTTP(S) Load Balancing. If unspecified, the purpose defaults to PRIVATE_RFC_1918. The enableFlowLogs field isn't supported with the purpose field set to INTERNAL_HTTPS_LOAD_BALANCER.
  enum Purpose {
    // A value indicating that the enum field is not set.
    UNDEFINED_PURPOSE = 0;

    // Subnet reserved for Internal HTTP(S) Load Balancing.
    INTERNAL_HTTPS_LOAD_BALANCER = 248748889;

    // Regular user created or automatically created subnet.
    PRIVATE = 403485027;

    // Regular user created or automatically created subnet.
    PRIVATE_RFC_1918 = 254902107;

    // Subnetworks created for Private Service Connect in the producer network.
    PRIVATE_SERVICE_CONNECT = 48134724;

    // Subnetwork used for Regional Internal/External HTTP(S) Load Balancing.
    REGIONAL_MANAGED_PROXY = 153049966;

  }

  // The role of subnetwork. Currently, this field is only used when purpose = INTERNAL_HTTPS_LOAD_BALANCER. The value can be set to ACTIVE or BACKUP. An ACTIVE subnetwork is one that is currently being used for Internal HTTP(S) Load Balancing. A BACKUP subnetwork is one that is ready to be promoted to ACTIVE or is currently draining. This field can be updated with a patch request.
  enum Role {
    // A value indicating that the enum field is not set.
    UNDEFINED_ROLE = 0;

    // The ACTIVE subnet that is currently used.
    ACTIVE = 314733318;

    // The BACKUP subnet that could be promoted to ACTIVE.
    BACKUP = 341010882;

  }

  // The stack type for the subnet. If set to IPV4_ONLY, new VMs in the subnet are assigned IPv4 addresses only. If set to IPV4_IPV6, new VMs in the subnet can be assigned both IPv4 and IPv6 addresses. If not specified, IPV4_ONLY is used. This field can be both set at resource creation time and updated using patch.
  enum StackType {
    // A value indicating that the enum field is not set.
    UNDEFINED_STACK_TYPE = 0;

    // New VMs in this subnet can have both IPv4 and IPv6 addresses.
    IPV4_IPV6 = 22197249;

    // New VMs in this subnet will only be assigned IPv4 addresses.
    IPV4_ONLY = 22373798;

    UNSPECIFIED_STACK_TYPE = 298084569;

  }

  // [Output Only] The state of the subnetwork, which can be one of the following values: READY: Subnetwork is created and ready to use DRAINING: only applicable to subnetworks that have the purpose set to INTERNAL_HTTPS_LOAD_BALANCER and indicates that connections to the load balancer are being drained. A subnetwork that is draining cannot be used or modified until it reaches a status of READY
  enum State {
    // A value indicating that the enum field is not set.
    UNDEFINED_STATE = 0;

    // Subnetwork is being drained.
    DRAINING = 480455402;

    // Subnetwork is ready for use.
    READY = 77848963;

  }

  // [Output Only] Creation timestamp in RFC3339 text format.
  optional string creation_timestamp = 30525366;

  // An optional description of this resource. Provide this property when you create the resource. This field can be set only at resource creation time.
  optional string description = 422937596;

  // Whether to enable flow logging for this subnetwork. If this field is not explicitly set, it will not appear in get listings. If not set the default behavior is determined by the org policy, if there is no org policy specified, then it will default to disabled. This field isn't supported with the purpose field set to INTERNAL_HTTPS_LOAD_BALANCER.
  optional bool enable_flow_logs = 151544420;

  // The external IPv6 address range that is owned by this subnetwork.
  optional string external_ipv6_prefix = 139299190;

  // Fingerprint of this resource. A hash of the contents stored in this object. This field is used in optimistic locking. This field will be ignored when inserting a Subnetwork. An up-to-date fingerprint must be provided in order to update the Subnetwork, otherwise the request will fail with error 412 conditionNotMet. To see the latest fingerprint, make a get() request to retrieve a Subnetwork.
  optional string fingerprint = 234678500;

  // [Output Only] The gateway address for default routes to reach destination addresses outside this subnetwork.
  optional string gateway_address = 459867385;

  // [Output Only] The unique identifier for the resource. This identifier is defined by the server.
  optional uint64 id = 3355;

  // [Output Only] The internal IPv6 address range that is assigned to this subnetwork.
  optional string internal_ipv6_prefix = 506270056;

  // The range of internal addresses that are owned by this subnetwork. Provide this property when you create the subnetwork. For example, 10.0.0.0/8 or 100.64.0.0/10. Ranges must be unique and non-overlapping within a network. Only IPv4 is supported. This field is set at resource creation time. The range can be any range listed in the Valid ranges list. The range can be expanded after creation using expandIpCidrRange.
  optional string ip_cidr_range = 98117322;

  // The access type of IPv6 address this subnet holds. It's immutable and can only be specified during creation or the first time the subnet is updated into IPV4_IPV6 dual stack.
  // Check the Ipv6AccessType enum for the list of possible values.
  optional string ipv6_access_type = 504658653;

  // [Output Only] This field is for internal use.
  optional string ipv6_cidr_range = 273141258;

  // [Output Only] Type of the resource. Always compute#subnetwork for Subnetwork resources.
  optional string kind = 3292052;

  // This field denotes the VPC flow logging options for this subnetwork. If logging is enabled, logs are exported to Cloud Logging.
  optional SubnetworkLogConfig log_config = 351299741;

  // The name of the resource, provided by the client when initially creating the resource. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
  optional string name = 3373707;

  // The URL of the network to which this subnetwork belongs, provided by the client when initially creating the subnetwork. This field can be set only at resource creation time.
  optional string network = 232872494;

  // Whether the VMs in this subnet can access Google services without assigned external IP addresses. This field can be both set at resource creation time and updated using setPrivateIpGoogleAccess.
  optional bool private_ip_google_access = 421491790;

  // This field is for internal use. This field can be both set at resource creation time and updated using patch.
  // Check the PrivateIpv6GoogleAccess enum for the list of possible values.
  optional string private_ipv6_google_access = 48277006;

  // The purpose of the resource. This field can be either PRIVATE_RFC_1918 or INTERNAL_HTTPS_LOAD_BALANCER. A subnetwork with purpose set to INTERNAL_HTTPS_LOAD_BALANCER is a user-created subnetwork that is reserved for Internal HTTP(S) Load Balancing. If unspecified, the purpose defaults to PRIVATE_RFC_1918. The enableFlowLogs field isn't supported with the purpose field set to INTERNAL_HTTPS_LOAD_BALANCER.
  // Check the Purpose enum for the list of possible values.
  optional string purpose = 316407070;

  // URL of the region where the Subnetwork resides. This field can be set only at resource creation time.
  optional string region = 138946292;

  // The role of subnetwork. Currently, this field is only used when purpose = INTERNAL_HTTPS_LOAD_BALANCER. The value can be set to ACTIVE or BACKUP. An ACTIVE subnetwork is one that is currently being used for Internal HTTP(S) Load Balancing. A BACKUP subnetwork is one that is ready to be promoted to ACTIVE or is currently draining. This field can be updated with a patch request.
  // Check the Role enum for the list of possible values.
  optional string role = 3506294;

  // An array of configurations for secondary IP ranges for VM instances contained in this subnetwork. The primary IP of such VM must belong to the primary ipCidrRange of the subnetwork. The alias IPs may belong to either primary or secondary ranges. This field can be updated with a patch request.
  repeated SubnetworkSecondaryRange secondary_ip_ranges = 136658915;

  // [Output Only] Server-defined URL for the resource.
  optional string self_link = 456214797;

  // The stack type for the subnet. If set to IPV4_ONLY, new VMs in the subnet are assigned IPv4 addresses only. If set to IPV4_IPV6, new VMs in the subnet can be assigned both IPv4 and IPv6 addresses. If not specified, IPV4_ONLY is used. This field can be both set at resource creation time and updated using patch.
  // Check the StackType enum for the list of possible values.
  optional string stack_type = 425908881;

  // [Output Only] The state of the subnetwork, which can be one of the following values: READY: Subnetwork is created and ready to use DRAINING: only applicable to subnetworks that have the purpose set to INTERNAL_HTTPS_LOAD_BALANCER and indicates that connections to the load balancer are being drained. A subnetwork that is draining cannot be used or modified until it reaches a status of READY
  // Check the State enum for the list of possible values.
  optional string state = 109757585;

}

//
message SubnetworkAggregatedList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 3355;

  // A list of SubnetworksScopedList resources.
  map<string, SubnetworksScopedList> items = 100526016;

  // [Output Only] Type of resource. Always compute#subnetworkAggregatedList for aggregated lists of subnetworks.
  optional string kind = 3292052;

  // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
  optional string next_page_token = 79797525;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 456214797;

  // [Output Only] Unreachable resources.
  repeated string unreachables = 243372063;

  // [Output Only] Informational warning message.
  optional Warning warning = 50704284;

}

// Contains a list of Subnetwork resources.
message SubnetworkList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 3355;

  // A list of Subnetwork resources.
  repeated Subnetwork items = 100526016;

  // [Output Only] Type of resource. Always compute#subnetworkList for lists of subnetworks.
  optional string kind = 3292052;

  // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
  optional string next_page_token = 79797525;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 456214797;

  // [Output Only] Informational warning message.
  optional Warning warning = 50704284;

}

// The available logging options for this subnetwork.
message SubnetworkLogConfig {
  // Can only be specified if VPC flow logging for this subnetwork is enabled. Toggles the aggregation interval for collecting flow logs. Increasing the interval time will reduce the amount of generated flow logs for long lasting connections. Default is an interval of 5 seconds per connection.
  enum AggregationInterval {
    // A value indicating that the enum field is not set.
    UNDEFINED_AGGREGATION_INTERVAL = 0;

    INTERVAL_10_MIN = 487155916;

    INTERVAL_15_MIN = 491773521;

    INTERVAL_1_MIN = 69052714;

    INTERVAL_30_SEC = 7548937;

    INTERVAL_5_MIN = 72746798;

    INTERVAL_5_SEC = 72752429;

  }

  // Can only be specified if VPC flow logs for this subnetwork is enabled. Configures whether all, none or a subset of metadata fields should be added to the reported VPC flow logs. Default is EXCLUDE_ALL_METADATA.
  enum Metadata {
    // A value indicating that the enum field is not set.
    UNDEFINED_METADATA = 0;

    CUSTOM_METADATA = 62450749;

    EXCLUDE_ALL_METADATA = 334519954;

    INCLUDE_ALL_METADATA = 164619908;

  }

  // Can only be specified if VPC flow logging for this subnetwork is enabled. Toggles the aggregation interval for collecting flow logs. Increasing the interval time will reduce the amount of generated flow logs for long lasting connections. Default is an interval of 5 seconds per connection.
  // Check the AggregationInterval enum for the list of possible values.
  optional string aggregation_interval = 174919042;

  // Whether to enable flow logging for this subnetwork. If this field is not explicitly set, it will not appear in get listings. If not set the default behavior is determined by the org policy, if there is no org policy specified, then it will default to disabled.
  optional bool enable = 311764355;

  // Can only be specified if VPC flow logs for this subnetwork is enabled. The filter expression is used to define which VPC flow logs should be exported to Cloud Logging.
  optional string filter_expr = 183374428;

  // Can only be specified if VPC flow logging for this subnetwork is enabled. The value of the field must be in [0, 1]. Set the sampling rate of VPC flow logs within the subnetwork where 1.0 means all collected logs are reported and 0.0 means no logs are reported. Default is 0.5 unless otherwise specified by the org policy, which means half of all collected logs are reported.
  optional float flow_sampling = 530150360;

  // Can only be specified if VPC flow logs for this subnetwork is enabled. Configures whether all, none or a subset of metadata fields should be added to the reported VPC flow logs. Default is EXCLUDE_ALL_METADATA.
  // Check the Metadata enum for the list of possible values.
  optional string metadata = 86866735;

  // Can only be specified if VPC flow logs for this subnetwork is enabled and "metadata" was set to CUSTOM_METADATA.
  repeated string metadata_fields = 378461641;

}

// Represents a secondary IP range of a subnetwork.
message SubnetworkSecondaryRange {
  // The range of IP addresses belonging to this subnetwork secondary range. Provide this property when you create the subnetwork. Ranges must be unique and non-overlapping with all primary and secondary IP ranges within a network. Only IPv4 is supported. The range can be any range listed in the Valid ranges list.
  optional string ip_cidr_range = 98117322;

  // The name associated with this subnetwork secondary range, used when adding an alias IP range to a VM instance. The name must be 1-63 characters long, and comply with RFC1035. The name must be unique within the subnetwork.
  optional string range_name = 332216397;

}

//
message SubnetworksExpandIpCidrRangeRequest {
  // The IP (in CIDR format or netmask) of internal addresses that are legal on this Subnetwork. This range should be disjoint from other subnetworks within this network. This range can only be larger than (i.e. a superset of) the range previously defined before the update.
  optional string ip_cidr_range = 98117322;

}

//
message SubnetworksScopedList {
  // A list of subnetworks contained in this scope.
  repeated Subnetwork subnetworks = 415853125;

  // An informational warning that appears when the list of addresses is empty.
  optional Warning warning = 50704284;

}

//
message SubnetworksSetPrivateIpGoogleAccessRequest {
  optional bool private_ip_google_access = 421491790;

}

// Subsetting configuration for this BackendService. Currently this is applicable only for Internal TCP/UDP load balancing, Internal HTTP(S) load balancing and Traffic Director.
message Subsetting {
  //
  enum Policy {
    // A value indicating that the enum field is not set.
    UNDEFINED_POLICY = 0;

    // Subsetting based on consistent hashing. For Traffic Director, the number of backends per backend group (the subset size) is based on the `subset_size` parameter. For Internal HTTP(S) load balancing, the number of backends per backend group (the subset size) is dynamically adjusted in two cases: - As the number of proxy instances participating in Internal HTTP(S) load balancing increases, the subset size decreases. - When the total number of backends in a network exceeds the capacity of a single proxy instance, subset sizes are reduced automatically for each service that has backend subsetting enabled.
    CONSISTENT_HASH_SUBSETTING = 108989492;

    // No Subsetting. Clients may open connections and send traffic to all backends of this backend service. This can lead to performance issues if there is substantial imbalance in the count of clients and backends.
    NONE = 2402104;

  }

  // 
  // Check the Policy enum for the list of possible values.
  optional string policy = 91071794;

}

// A request message for Instances.Suspend. See the method description for details.
message SuspendInstanceRequest {
  // If true, discard the contents of any attached localSSD partitions. Default value is false.
  optional bool discard_local_ssd = 319517903;

  // Name of the instance resource to suspend.
  string instance = 18257045 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // The name of the zone for this request.
  string zone = 3744684 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "zone"
  ];

}

// A request message for Networks.SwitchToCustomMode. See the method description for details.
message SwitchToCustomModeNetworkRequest {
  // Name of the network to be updated.
  string network = 232872494 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

}

//
message TCPHealthCheck {
  // Specifies how a port is selected for health checking. Can be one of the following values: USE_FIXED_PORT: Specifies a port number explicitly using the port field in the health check. Supported by backend services for pass-through load balancers and backend services for proxy load balancers. Not supported by target pools. The health check supports all backends supported by the backend service provided the backend can be health checked. For example, GCE_VM_IP network endpoint groups, GCE_VM_IP_PORT network endpoint groups, and instance group backends. USE_NAMED_PORT: Not supported. USE_SERVING_PORT: Provides an indirect method of specifying the health check port by referring to the backend service. Only supported by backend services for proxy load balancers. Not supported by target pools. Not supported by backend services for pass-through load balancers. Supports all backends that can be health checked; for example, GCE_VM_IP_PORT network endpoint groups and instance group backends. For GCE_VM_IP_PORT network endpoint group backends, the health check uses the port number specified for each endpoint in the network endpoint group. For instance group backends, the health check uses the port number determined by looking up the backend service's named port in the instance group's list of named ports.
  enum PortSpecification {
    // A value indicating that the enum field is not set.
    UNDEFINED_PORT_SPECIFICATION = 0;

    // The port number in the health check's port is used for health checking. Applies to network endpoint group and instance group backends.
    USE_FIXED_PORT = 190235748;

    // Not supported.
    USE_NAMED_PORT = 349300671;

    // For network endpoint group backends, the health check uses the port number specified on each endpoint in the network endpoint group. For instance group backends, the health check uses the port number specified for the backend service's named port defined in the instance group's named ports.
    USE_SERVING_PORT = 362637516;

  }

  // Specifies the type of proxy header to append before sending data to the backend, either NONE or PROXY_V1. The default is NONE.
  enum ProxyHeader {
    // A value indicating that the enum field is not set.
    UNDEFINED_PROXY_HEADER = 0;

    NONE = 2402104;

    PROXY_V1 = 334352940;

  }

  // The TCP port number to which the health check prober sends packets. The default value is 80. Valid values are 1 through 65535.
  optional int32 port = 3446913;

  // Not supported.
  optional string port_name = 41534345;

  // Specifies how a port is selected for health checking. Can be one of the following values: USE_FIXED_PORT: Specifies a port number explicitly using the port field in the health check. Supported by backend services for pass-through load balancers and backend services for proxy load balancers. Not supported by target pools. The health check supports all backends supported by the backend service provided the backend can be health checked. For example, GCE_VM_IP network endpoint groups, GCE_VM_IP_PORT network endpoint groups, and instance group backends. USE_NAMED_PORT: Not supported. USE_SERVING_PORT: Provides an indirect method of specifying the health check port by referring to the backend service. Only supported by backend services for proxy load balancers. Not supported by target pools. Not supported by backend services for pass-through load balancers. Supports all backends that can be health checked; for example, GCE_VM_IP_PORT network endpoint groups and instance group backends. For GCE_VM_IP_PORT network endpoint group backends, the health check uses the port number specified for each endpoint in the network endpoint group. For instance group backends, the health check uses the port number determined by looking up the backend service's named port in the instance group's list of named ports.
  // Check the PortSpecification enum for the list of possible values.
  optional string port_specification = 51590597;

  // Specifies the type of proxy header to append before sending data to the backend, either NONE or PROXY_V1. The default is NONE.
  // Check the ProxyHeader enum for the list of possible values.
  optional string proxy_header = 160374142;

  // Instructs the health check prober to send this exact ASCII string, up to 1024 bytes in length, after establishing the TCP connection.
  optional string request = 21951119;

  // Creates a content-based TCP health check. In addition to establishing a TCP connection, you can configure the health check to pass only when the backend sends this exact response ASCII string, up to 1024 bytes in length. For details, see: https://cloud.google.com/load-balancing/docs/health-check-concepts#criteria-protocol-ssl-tcp
  optional string response = 196547649;

}

// A set of instance tags.
message Tags {
  // Specifies a fingerprint for this request, which is essentially a hash of the tags' contents and used for optimistic locking. The fingerprint is initially generated by Compute Engine and changes after every request to modify or update tags. You must always provide an up-to-date fingerprint hash in order to update or change tags. To see the latest fingerprint, make get() request to the instance.
  optional string fingerprint = 234678500;

  // An array of tags. Each tag must be 1-63 characters long, and comply with RFC1035.
  repeated string items = 100526016;

}

// Represents a Target gRPC Proxy resource. A target gRPC proxy is a component of load balancers intended for load balancing gRPC traffic. Only global forwarding rules with load balancing scheme INTERNAL_SELF_MANAGED can reference a target gRPC proxy. The target gRPC Proxy references a URL map that specifies how traffic is routed to gRPC backend services.
message TargetGrpcProxy {
  // [Output Only] Creation timestamp in RFC3339 text format.
  optional string creation_timestamp = 30525366;

  // An optional description of this resource. Provide this property when you create the resource.
  optional string description = 422937596;

  // Fingerprint of this resource. A hash of the contents stored in this object. This field is used in optimistic locking. This field will be ignored when inserting a TargetGrpcProxy. An up-to-date fingerprint must be provided in order to patch/update the TargetGrpcProxy; otherwise, the request will fail with error 412 conditionNotMet. To see the latest fingerprint, make a get() request to retrieve the TargetGrpcProxy.
  optional string fingerprint = 234678500;

  // [Output Only] The unique identifier for the resource type. The server generates this identifier.
  optional uint64 id = 3355;

  // [Output Only] Type of the resource. Always compute#targetGrpcProxy for target grpc proxies.
  optional string kind = 3292052;

  // Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
  optional string name = 3373707;

  // [Output Only] Server-defined URL for the resource.
  optional string self_link = 456214797;

  // [Output Only] Server-defined URL with id for the resource.
  optional string self_link_with_id = 44520962;

  // URL to the UrlMap resource that defines the mapping from URL to the BackendService. The protocol field in the BackendService must be set to GRPC.
  optional string url_map = 367020684;

  // If true, indicates that the BackendServices referenced by the urlMap may be accessed by gRPC applications without using a sidecar proxy. This will enable configuration checks on urlMap and its referenced BackendServices to not allow unsupported features. A gRPC application must use "xds:///" scheme in the target URI of the service it is connecting to. If false, indicates that the BackendServices referenced by the urlMap will be accessed by gRPC applications via a sidecar proxy. In this case, a gRPC application must not use "xds:///" scheme in the target URI of the service it is connecting to
  optional bool validate_for_proxyless = 101822888;

}

//
message TargetGrpcProxyList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 3355;

  // A list of TargetGrpcProxy resources.
  repeated TargetGrpcProxy items = 100526016;

  // [Output Only] Type of the resource. Always compute#targetGrpcProxy for target grpc proxies.
  optional string kind = 3292052;

  // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
  optional string next_page_token = 79797525;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 456214797;

  // [Output Only] Informational warning message.
  optional Warning warning = 50704284;

}

//
message TargetHttpProxiesScopedList {
  // A list of TargetHttpProxies contained in this scope.
  repeated TargetHttpProxy target_http_proxies = 162147011;

  // Informational warning which replaces the list of backend services when the list is empty.
  optional Warning warning = 50704284;

}

// Represents a Target HTTP Proxy resource. Google Compute Engine has two Target HTTP Proxy resources: * [Global](/compute/docs/reference/rest/v1/targetHttpProxies) * [Regional](/compute/docs/reference/rest/v1/regionTargetHttpProxies) A target HTTP proxy is a component of GCP HTTP load balancers. * targetHttpProxies are used by external HTTP load balancers and Traffic Director. * regionTargetHttpProxies are used by internal HTTP load balancers. Forwarding rules reference a target HTTP proxy, and the target proxy then references a URL map. For more information, read Using Target Proxies and Forwarding rule concepts.
message TargetHttpProxy {
  // [Output Only] Creation timestamp in RFC3339 text format.
  optional string creation_timestamp = 30525366;

  // An optional description of this resource. Provide this property when you create the resource.
  optional string description = 422937596;

  // Fingerprint of this resource. A hash of the contents stored in this object. This field is used in optimistic locking. This field will be ignored when inserting a TargetHttpProxy. An up-to-date fingerprint must be provided in order to patch/update the TargetHttpProxy; otherwise, the request will fail with error 412 conditionNotMet. To see the latest fingerprint, make a get() request to retrieve the TargetHttpProxy.
  optional string fingerprint = 234678500;

  // [Output Only] The unique identifier for the resource. This identifier is defined by the server.
  optional uint64 id = 3355;

  // [Output Only] Type of resource. Always compute#targetHttpProxy for target HTTP proxies.
  optional string kind = 3292052;

  // Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
  optional string name = 3373707;

  // This field only applies when the forwarding rule that references this target proxy has a loadBalancingScheme set to INTERNAL_SELF_MANAGED. When this field is set to true, Envoy proxies set up inbound traffic interception and bind to the IP address and port specified in the forwarding rule. This is generally useful when using Traffic Director to configure Envoy as a gateway or middle proxy (in other words, not a sidecar proxy). The Envoy proxy listens for inbound requests and handles requests when it receives them. The default is false.
  optional bool proxy_bind = 286025582;

  // [Output Only] URL of the region where the regional Target HTTP Proxy resides. This field is not applicable to global Target HTTP Proxies.
  optional string region = 138946292;

  // [Output Only] Server-defined URL for the resource.
  optional string self_link = 456214797;

  // URL to the UrlMap resource that defines the mapping from URL to the BackendService.
  optional string url_map = 367020684;

}

//
message TargetHttpProxyAggregatedList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 3355;

  // A list of TargetHttpProxiesScopedList resources.
  map<string, TargetHttpProxiesScopedList> items = 100526016;

  // [Output Only] Type of resource. Always compute#targetHttpProxyAggregatedList for lists of Target HTTP Proxies.
  optional string kind = 3292052;

  // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
  optional string next_page_token = 79797525;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 456214797;

  // [Output Only] Unreachable resources.
  repeated string unreachables = 243372063;

}

// A list of TargetHttpProxy resources.
message TargetHttpProxyList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 3355;

  // A list of TargetHttpProxy resources.
  repeated TargetHttpProxy items = 100526016;

  // Type of resource. Always compute#targetHttpProxyList for lists of target HTTP proxies.
  optional string kind = 3292052;

  // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
  optional string next_page_token = 79797525;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 456214797;

  // [Output Only] Informational warning message.
  optional Warning warning = 50704284;

}

//
message TargetHttpsProxiesScopedList {
  // A list of TargetHttpsProxies contained in this scope.
  repeated TargetHttpsProxy target_https_proxies = 366607882;

  // Informational warning which replaces the list of backend services when the list is empty.
  optional Warning warning = 50704284;

}

//
message TargetHttpsProxiesSetCertificateMapRequest {
  // URL of the Certificate Map to associate with this TargetHttpsProxy.
  optional string certificate_map = 156463796;

}

//
message TargetHttpsProxiesSetQuicOverrideRequest {
  // QUIC policy for the TargetHttpsProxy resource.
  enum QuicOverride {
    // A value indicating that the enum field is not set.
    UNDEFINED_QUIC_OVERRIDE = 0;

    // The load balancer will not attempt to negotiate QUIC with clients.
    DISABLE = 241807048;

    // The load balancer will attempt to negotiate QUIC with clients.
    ENABLE = 438835587;

    // No overrides to the default QUIC policy. This option is implicit if no QUIC override has been specified in the request.
    NONE = 2402104;

  }

  // QUIC policy for the TargetHttpsProxy resource.
  // Check the QuicOverride enum for the list of possible values.
  optional string quic_override = 456577197;

}

//
message TargetHttpsProxiesSetSslCertificatesRequest {
  // New set of SslCertificate resources to associate with this TargetHttpsProxy resource. At least one SSL certificate must be specified. Currently, you may specify up to 15 SSL certificates.
  repeated string ssl_certificates = 366006543;

}

// Represents a Target HTTPS Proxy resource. Google Compute Engine has two Target HTTPS Proxy resources: * [Global](/compute/docs/reference/rest/v1/targetHttpsProxies) * [Regional](/compute/docs/reference/rest/v1/regionTargetHttpsProxies) A target HTTPS proxy is a component of GCP HTTPS load balancers. * targetHttpsProxies are used by external HTTPS load balancers. * regionTargetHttpsProxies are used by internal HTTPS load balancers. Forwarding rules reference a target HTTPS proxy, and the target proxy then references a URL map. For more information, read Using Target Proxies and Forwarding rule concepts.
message TargetHttpsProxy {
  // Specifies the QUIC override policy for this TargetHttpsProxy resource. This setting determines whether the load balancer attempts to negotiate QUIC with clients. You can specify NONE, ENABLE, or DISABLE. - When quic-override is set to NONE, Google manages whether QUIC is used. - When quic-override is set to ENABLE, the load balancer uses QUIC when possible. - When quic-override is set to DISABLE, the load balancer doesn't use QUIC. - If the quic-override flag is not specified, NONE is implied. 
  enum QuicOverride {
    // A value indicating that the enum field is not set.
    UNDEFINED_QUIC_OVERRIDE = 0;

    // The load balancer will not attempt to negotiate QUIC with clients.
    DISABLE = 241807048;

    // The load balancer will attempt to negotiate QUIC with clients.
    ENABLE = 438835587;

    // No overrides to the default QUIC policy. This option is implicit if no QUIC override has been specified in the request.
    NONE = 2402104;

  }

  // Optional. A URL referring to a networksecurity.AuthorizationPolicy resource that describes how the proxy should authorize inbound traffic. If left blank, access will not be restricted by an authorization policy. Refer to the AuthorizationPolicy resource for additional details. authorizationPolicy only applies to a global TargetHttpsProxy attached to globalForwardingRules with the loadBalancingScheme set to INTERNAL_SELF_MANAGED. Note: This field currently has no impact.
  optional string authorization_policy = 33945528;

  // URL of a certificate map that identifies a certificate map associated with the given target proxy. This field can only be set for global target proxies. If set, sslCertificates will be ignored.
  optional string certificate_map = 156463796;

  // [Output Only] Creation timestamp in RFC3339 text format.
  optional string creation_timestamp = 30525366;

  // An optional description of this resource. Provide this property when you create the resource.
  optional string description = 422937596;

  // Fingerprint of this resource. A hash of the contents stored in this object. This field is used in optimistic locking. This field will be ignored when inserting a TargetHttpsProxy. An up-to-date fingerprint must be provided in order to patch the TargetHttpsProxy; otherwise, the request will fail with error 412 conditionNotMet. To see the latest fingerprint, make a get() request to retrieve the TargetHttpsProxy.
  optional string fingerprint = 234678500;

  // [Output Only] The unique identifier for the resource. This identifier is defined by the server.
  optional uint64 id = 3355;

  // [Output Only] Type of resource. Always compute#targetHttpsProxy for target HTTPS proxies.
  optional string kind = 3292052;

  // Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
  optional string name = 3373707;

  // This field only applies when the forwarding rule that references this target proxy has a loadBalancingScheme set to INTERNAL_SELF_MANAGED. When this field is set to true, Envoy proxies set up inbound traffic interception and bind to the IP address and port specified in the forwarding rule. This is generally useful when using Traffic Director to configure Envoy as a gateway or middle proxy (in other words, not a sidecar proxy). The Envoy proxy listens for inbound requests and handles requests when it receives them. The default is false.
  optional bool proxy_bind = 286025582;

  // Specifies the QUIC override policy for this TargetHttpsProxy resource. This setting determines whether the load balancer attempts to negotiate QUIC with clients. You can specify NONE, ENABLE, or DISABLE. - When quic-override is set to NONE, Google manages whether QUIC is used. - When quic-override is set to ENABLE, the load balancer uses QUIC when possible. - When quic-override is set to DISABLE, the load balancer doesn't use QUIC. - If the quic-override flag is not specified, NONE is implied.
  // Check the QuicOverride enum for the list of possible values.
  optional string quic_override = 456577197;

  // [Output Only] URL of the region where the regional TargetHttpsProxy resides. This field is not applicable to global TargetHttpsProxies.
  optional string region = 138946292;

  // [Output Only] Server-defined URL for the resource.
  optional string self_link = 456214797;

  // Optional. A URL referring to a networksecurity.ServerTlsPolicy resource that describes how the proxy should authenticate inbound traffic. serverTlsPolicy only applies to a global TargetHttpsProxy attached to globalForwardingRules with the loadBalancingScheme set to INTERNAL_SELF_MANAGED. If left blank, communications are not encrypted. Note: This field currently has no impact.
  optional string server_tls_policy = 295825266;

  // URLs to SslCertificate resources that are used to authenticate connections between users and the load balancer. At least one SSL certificate must be specified. Currently, you may specify up to 15 SSL certificates. sslCertificates do not apply when the load balancing scheme is set to INTERNAL_SELF_MANAGED.
  repeated string ssl_certificates = 366006543;

  // URL of SslPolicy resource that will be associated with the TargetHttpsProxy resource. If not set, the TargetHttpsProxy resource has no SSL policy configured.
  optional string ssl_policy = 295190213;

  // A fully-qualified or valid partial URL to the UrlMap resource that defines the mapping from URL to the BackendService. For example, the following are all valid URLs for specifying a URL map: - https://www.googleapis.compute/v1/projects/project/global/urlMaps/ url-map - projects/project/global/urlMaps/url-map - global/urlMaps/url-map 
  optional string url_map = 367020684;

}

//
message TargetHttpsProxyAggregatedList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 3355;

  // A list of TargetHttpsProxiesScopedList resources.
  map<string, TargetHttpsProxiesScopedList> items = 100526016;

  // [Output Only] Type of resource. Always compute#targetHttpsProxyAggregatedList for lists of Target HTTP Proxies.
  optional string kind = 3292052;

  // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
  optional string next_page_token = 79797525;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 456214797;

  // [Output Only] Unreachable resources.
  repeated string unreachables = 243372063;

  // [Output Only] Informational warning message.
  optional Warning warning = 50704284;

}

// Contains a list of TargetHttpsProxy resources.
message TargetHttpsProxyList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 3355;

  // A list of TargetHttpsProxy resources.
  repeated TargetHttpsProxy items = 100526016;

  // Type of resource. Always compute#targetHttpsProxyList for lists of target HTTPS proxies.
  optional string kind = 3292052;

  // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
  optional string next_page_token = 79797525;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 456214797;

  // [Output Only] Informational warning message.
  optional Warning warning = 50704284;

}

// Represents a Target Instance resource. You can use a target instance to handle traffic for one or more forwarding rules, which is ideal for forwarding protocol traffic that is managed by a single source. For example, ESP, AH, TCP, or UDP. For more information, read Target instances.
message TargetInstance {
  // Must have a value of NO_NAT. Protocol forwarding delivers packets while preserving the destination IP address of the forwarding rule referencing the target instance.
  enum NatPolicy {
    // A value indicating that the enum field is not set.
    UNDEFINED_NAT_POLICY = 0;

    // No NAT performed.
    NO_NAT = 161455491;

  }

  // [Output Only] Creation timestamp in RFC3339 text format.
  optional string creation_timestamp = 30525366;

  // An optional description of this resource. Provide this property when you create the resource.
  optional string description = 422937596;

  // [Output Only] The unique identifier for the resource. This identifier is defined by the server.
  optional uint64 id = 3355;

  // A URL to the virtual machine instance that handles traffic for this target instance. When creating a target instance, you can provide the fully-qualified URL or a valid partial URL to the desired virtual machine. For example, the following are all valid URLs: - https://www.googleapis.com/compute/v1/projects/project/zones/zone /instances/instance - projects/project/zones/zone/instances/instance - zones/zone/instances/instance 
  optional string instance = 18257045;

  // [Output Only] The type of the resource. Always compute#targetInstance for target instances.
  optional string kind = 3292052;

  // Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
  optional string name = 3373707;

  // Must have a value of NO_NAT. Protocol forwarding delivers packets while preserving the destination IP address of the forwarding rule referencing the target instance.
  // Check the NatPolicy enum for the list of possible values.
  optional string nat_policy = 509780496;

  // The URL of the network this target instance uses to forward traffic. If not specified, the traffic will be forwarded to the network that the default network interface belongs to.
  optional string network = 232872494;

  // [Output Only] Server-defined URL for the resource.
  optional string self_link = 456214797;

  // [Output Only] URL of the zone where the target instance resides. You must specify this field as part of the HTTP request URL. It is not settable as a field in the request body.
  optional string zone = 3744684;

}

//
message TargetInstanceAggregatedList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 3355;

  // A list of TargetInstance resources.
  map<string, TargetInstancesScopedList> items = 100526016;

  // Type of resource.
  optional string kind = 3292052;

  // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
  optional string next_page_token = 79797525;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 456214797;

  // [Output Only] Unreachable resources.
  repeated string unreachables = 243372063;

  // [Output Only] Informational warning message.
  optional Warning warning = 50704284;

}

// Contains a list of TargetInstance resources.
message TargetInstanceList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 3355;

  // A list of TargetInstance resources.
  repeated TargetInstance items = 100526016;

  // Type of resource.
  optional string kind = 3292052;

  // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
  optional string next_page_token = 79797525;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 456214797;

  // [Output Only] Informational warning message.
  optional Warning warning = 50704284;

}

//
message TargetInstancesScopedList {
  // A list of target instances contained in this scope.
  repeated TargetInstance target_instances = 392915280;

  // Informational warning which replaces the list of addresses when the list is empty.
  optional Warning warning = 50704284;

}

// Represents a Target Pool resource. Target pools are used for network TCP/UDP load balancing. A target pool references member instances, an associated legacy HttpHealthCheck resource, and, optionally, a backup target pool. For more information, read Using target pools.
message TargetPool {
  // Session affinity option, must be one of the following values: NONE: Connections from the same client IP may go to any instance in the pool. CLIENT_IP: Connections from the same client IP will go to the same instance in the pool while that instance remains healthy. CLIENT_IP_PROTO: Connections from the same client IP with the same IP protocol will go to the same instance in the pool while that instance remains healthy.
  enum SessionAffinity {
    // A value indicating that the enum field is not set.
    UNDEFINED_SESSION_AFFINITY = 0;

    // 2-tuple hash on packet's source and destination IP addresses. Connections from the same source IP address to the same destination IP address will be served by the same backend VM while that VM remains healthy.
    CLIENT_IP = 345665051;

    // 1-tuple hash only on packet's source IP address. Connections from the same source IP address will be served by the same backend VM while that VM remains healthy. This option can only be used for Internal TCP/UDP Load Balancing.
    CLIENT_IP_NO_DESTINATION = 106122516;

    // 5-tuple hash on packet's source and destination IP addresses, IP protocol, and source and destination ports. Connections for the same IP protocol from the same source IP address and port to the same destination IP address and port will be served by the same backend VM while that VM remains healthy. This option cannot be used for HTTP(S) load balancing.
    CLIENT_IP_PORT_PROTO = 221722926;

    // 3-tuple hash on packet's source and destination IP addresses, and IP protocol. Connections for the same IP protocol from the same source IP address to the same destination IP address will be served by the same backend VM while that VM remains healthy. This option cannot be used for HTTP(S) load balancing.
    CLIENT_IP_PROTO = 25322148;

    // Hash based on a cookie generated by the L7 loadbalancer. Only valid for HTTP(S) load balancing.
    GENERATED_COOKIE = 370321204;

    // The hash is based on a user specified header field.
    HEADER_FIELD = 200737960;

    // The hash is based on a user provided cookie.
    HTTP_COOKIE = 494981627;

    // No session affinity. Connections from the same client IP may go to any instance in the pool.
    NONE = 2402104;

  }

  // The server-defined URL for the resource. This field is applicable only when the containing target pool is serving a forwarding rule as the primary pool, and its failoverRatio field is properly set to a value between [0, 1]. backupPool and failoverRatio together define the fallback behavior of the primary target pool: if the ratio of the healthy instances in the primary pool is at or below failoverRatio, traffic arriving at the load-balanced IP will be directed to the backup pool. In case where failoverRatio and backupPool are not set, or all the instances in the backup pool are unhealthy, the traffic will be directed back to the primary pool in the "force" mode, where traffic will be spread to the healthy instances with the best effort, or to all instances when no instance is healthy.
  optional string backup_pool = 45884537;

  // [Output Only] Creation timestamp in RFC3339 text format.
  optional string creation_timestamp = 30525366;

  // An optional description of this resource. Provide this property when you create the resource.
  optional string description = 422937596;

  // This field is applicable only when the containing target pool is serving a forwarding rule as the primary pool (i.e., not as a backup pool to some other target pool). The value of the field must be in [0, 1]. If set, backupPool must also be set. They together define the fallback behavior of the primary target pool: if the ratio of the healthy instances in the primary pool is at or below this number, traffic arriving at the load-balanced IP will be directed to the backup pool. In case where failoverRatio is not set or all the instances in the backup pool are unhealthy, the traffic will be directed back to the primary pool in the "force" mode, where traffic will be spread to the healthy instances with the best effort, or to all instances when no instance is healthy.
  optional float failover_ratio = 212667006;

  // The URL of the HttpHealthCheck resource. A member instance in this pool is considered healthy if and only if the health checks pass. Only legacy HttpHealthChecks are supported. Only one health check may be specified.
  repeated string health_checks = 448370606;

  // [Output Only] The unique identifier for the resource. This identifier is defined by the server.
  optional uint64 id = 3355;

  // A list of resource URLs to the virtual machine instances serving this pool. They must live in zones contained in the same region as this pool.
  repeated string instances = 29097598;

  // [Output Only] Type of the resource. Always compute#targetPool for target pools.
  optional string kind = 3292052;

  // Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
  optional string name = 3373707;

  // [Output Only] URL of the region where the target pool resides.
  optional string region = 138946292;

  // [Output Only] Server-defined URL for the resource.
  optional string self_link = 456214797;

  // Session affinity option, must be one of the following values: NONE: Connections from the same client IP may go to any instance in the pool. CLIENT_IP: Connections from the same client IP will go to the same instance in the pool while that instance remains healthy. CLIENT_IP_PROTO: Connections from the same client IP with the same IP protocol will go to the same instance in the pool while that instance remains healthy.
  // Check the SessionAffinity enum for the list of possible values.
  optional string session_affinity = 463888561;

}

//
message TargetPoolAggregatedList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 3355;

  // A list of TargetPool resources.
  map<string, TargetPoolsScopedList> items = 100526016;

  // [Output Only] Type of resource. Always compute#targetPoolAggregatedList for aggregated lists of target pools.
  optional string kind = 3292052;

  // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
  optional string next_page_token = 79797525;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 456214797;

  // [Output Only] Unreachable resources.
  repeated string unreachables = 243372063;

  // [Output Only] Informational warning message.
  optional Warning warning = 50704284;

}

//
message TargetPoolInstanceHealth {
  repeated HealthStatus health_status = 380545845;

  // [Output Only] Type of resource. Always compute#targetPoolInstanceHealth when checking the health of an instance.
  optional string kind = 3292052;

}

// Contains a list of TargetPool resources.
message TargetPoolList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 3355;

  // A list of TargetPool resources.
  repeated TargetPool items = 100526016;

  // [Output Only] Type of resource. Always compute#targetPoolList for lists of target pools.
  optional string kind = 3292052;

  // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
  optional string next_page_token = 79797525;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 456214797;

  // [Output Only] Informational warning message.
  optional Warning warning = 50704284;

}

//
message TargetPoolsAddHealthCheckRequest {
  // The HttpHealthCheck to add to the target pool.
  repeated HealthCheckReference health_checks = 448370606;

}

//
message TargetPoolsAddInstanceRequest {
  // A full or partial URL to an instance to add to this target pool. This can be a full or partial URL. For example, the following are valid URLs: - https://www.googleapis.com/compute/v1/projects/project-id/zones/zone /instances/instance-name - projects/project-id/zones/zone/instances/instance-name - zones/zone/instances/instance-name 
  repeated InstanceReference instances = 29097598;

}

//
message TargetPoolsRemoveHealthCheckRequest {
  // Health check URL to be removed. This can be a full or valid partial URL. For example, the following are valid URLs: - https://www.googleapis.com/compute/beta/projects/project /global/httpHealthChecks/health-check - projects/project/global/httpHealthChecks/health-check - global/httpHealthChecks/health-check 
  repeated HealthCheckReference health_checks = 448370606;

}

//
message TargetPoolsRemoveInstanceRequest {
  // URLs of the instances to be removed from target pool.
  repeated InstanceReference instances = 29097598;

}

//
message TargetPoolsScopedList {
  // A list of target pools contained in this scope.
  repeated TargetPool target_pools = 336072617;

  // Informational warning which replaces the list of addresses when the list is empty.
  optional Warning warning = 50704284;

}

//
message TargetReference {
  optional string target = 192835985;

}

//
message TargetSslProxiesSetBackendServiceRequest {
  // The URL of the new BackendService resource for the targetSslProxy.
  optional string service = 373540533;

}

//
message TargetSslProxiesSetCertificateMapRequest {
  // URL of the Certificate Map to associate with this TargetSslProxy.
  optional string certificate_map = 156463796;

}

//
message TargetSslProxiesSetProxyHeaderRequest {
  // The new type of proxy header to append before sending data to the backend. NONE or PROXY_V1 are allowed.
  enum ProxyHeader {
    // A value indicating that the enum field is not set.
    UNDEFINED_PROXY_HEADER = 0;

    NONE = 2402104;

    PROXY_V1 = 334352940;

  }

  // The new type of proxy header to append before sending data to the backend. NONE or PROXY_V1 are allowed.
  // Check the ProxyHeader enum for the list of possible values.
  optional string proxy_header = 160374142;

}

//
message TargetSslProxiesSetSslCertificatesRequest {
  // New set of URLs to SslCertificate resources to associate with this TargetSslProxy. At least one SSL certificate must be specified. Currently, you may specify up to 15 SSL certificates.
  repeated string ssl_certificates = 366006543;

}

// Represents a Target SSL Proxy resource. A target SSL proxy is a component of a SSL Proxy load balancer. Global forwarding rules reference a target SSL proxy, and the target proxy then references an external backend service. For more information, read Using Target Proxies.
message TargetSslProxy {
  // Specifies the type of proxy header to append before sending data to the backend, either NONE or PROXY_V1. The default is NONE.
  enum ProxyHeader {
    // A value indicating that the enum field is not set.
    UNDEFINED_PROXY_HEADER = 0;

    NONE = 2402104;

    PROXY_V1 = 334352940;

  }

  // URL of a certificate map that identifies a certificate map associated with the given target proxy. This field can only be set for global target proxies. If set, sslCertificates will be ignored.
  optional string certificate_map = 156463796;

  // [Output Only] Creation timestamp in RFC3339 text format.
  optional string creation_timestamp = 30525366;

  // An optional description of this resource. Provide this property when you create the resource.
  optional string description = 422937596;

  // [Output Only] The unique identifier for the resource. This identifier is defined by the server.
  optional uint64 id = 3355;

  // [Output Only] Type of the resource. Always compute#targetSslProxy for target SSL proxies.
  optional string kind = 3292052;

  // Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
  optional string name = 3373707;

  // Specifies the type of proxy header to append before sending data to the backend, either NONE or PROXY_V1. The default is NONE.
  // Check the ProxyHeader enum for the list of possible values.
  optional string proxy_header = 160374142;

  // [Output Only] Server-defined URL for the resource.
  optional string self_link = 456214797;

  // URL to the BackendService resource.
  optional string service = 373540533;

  // URLs to SslCertificate resources that are used to authenticate connections to Backends. At least one SSL certificate must be specified. Currently, you may specify up to 15 SSL certificates. sslCertificates do not apply when the load balancing scheme is set to INTERNAL_SELF_MANAGED.
  repeated string ssl_certificates = 366006543;

  // URL of SslPolicy resource that will be associated with the TargetSslProxy resource. If not set, the TargetSslProxy resource will not have any SSL policy configured.
  optional string ssl_policy = 295190213;

}

// Contains a list of TargetSslProxy resources.
message TargetSslProxyList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 3355;

  // A list of TargetSslProxy resources.
  repeated TargetSslProxy items = 100526016;

  // Type of resource.
  optional string kind = 3292052;

  // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
  optional string next_page_token = 79797525;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 456214797;

  // [Output Only] Informational warning message.
  optional Warning warning = 50704284;

}

//
message TargetTcpProxiesScopedList {
  // A list of TargetTcpProxies contained in this scope.
  repeated TargetTcpProxy target_tcp_proxies = 262056832;

  // Informational warning which replaces the list of backend services when the list is empty.
  optional Warning warning = 50704284;

}

//
message TargetTcpProxiesSetBackendServiceRequest {
  // The URL of the new BackendService resource for the targetTcpProxy.
  optional string service = 373540533;

}

//
message TargetTcpProxiesSetProxyHeaderRequest {
  // The new type of proxy header to append before sending data to the backend. NONE or PROXY_V1 are allowed.
  enum ProxyHeader {
    // A value indicating that the enum field is not set.
    UNDEFINED_PROXY_HEADER = 0;

    NONE = 2402104;

    PROXY_V1 = 334352940;

  }

  // The new type of proxy header to append before sending data to the backend. NONE or PROXY_V1 are allowed.
  // Check the ProxyHeader enum for the list of possible values.
  optional string proxy_header = 160374142;

}

// Represents a Target TCP Proxy resource. A target TCP proxy is a component of a TCP Proxy load balancer. Global forwarding rules reference target TCP proxy, and the target proxy then references an external backend service. For more information, read TCP Proxy Load Balancing overview.
message TargetTcpProxy {
  // Specifies the type of proxy header to append before sending data to the backend, either NONE or PROXY_V1. The default is NONE.
  enum ProxyHeader {
    // A value indicating that the enum field is not set.
    UNDEFINED_PROXY_HEADER = 0;

    NONE = 2402104;

    PROXY_V1 = 334352940;

  }

  // [Output Only] Creation timestamp in RFC3339 text format.
  optional string creation_timestamp = 30525366;

  // An optional description of this resource. Provide this property when you create the resource.
  optional string description = 422937596;

  // [Output Only] The unique identifier for the resource. This identifier is defined by the server.
  optional uint64 id = 3355;

  // [Output Only] Type of the resource. Always compute#targetTcpProxy for target TCP proxies.
  optional string kind = 3292052;

  // Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
  optional string name = 3373707;

  // This field only applies when the forwarding rule that references this target proxy has a loadBalancingScheme set to INTERNAL_SELF_MANAGED. When this field is set to true, Envoy proxies set up inbound traffic interception and bind to the IP address and port specified in the forwarding rule. This is generally useful when using Traffic Director to configure Envoy as a gateway or middle proxy (in other words, not a sidecar proxy). The Envoy proxy listens for inbound requests and handles requests when it receives them. The default is false.
  optional bool proxy_bind = 286025582;

  // Specifies the type of proxy header to append before sending data to the backend, either NONE or PROXY_V1. The default is NONE.
  // Check the ProxyHeader enum for the list of possible values.
  optional string proxy_header = 160374142;

  // [Output Only] URL of the region where the regional TCP proxy resides. This field is not applicable to global TCP proxy.
  optional string region = 138946292;

  // [Output Only] Server-defined URL for the resource.
  optional string self_link = 456214797;

  // URL to the BackendService resource.
  optional string service = 373540533;

}

//
message TargetTcpProxyAggregatedList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 3355;

  // A list of TargetTcpProxiesScopedList resources.
  map<string, TargetTcpProxiesScopedList> items = 100526016;

  // [Output Only] Type of resource. Always compute#targetTcpProxyAggregatedList for lists of Target TCP Proxies.
  optional string kind = 3292052;

  // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
  optional string next_page_token = 79797525;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 456214797;

  // [Output Only] Unreachable resources.
  repeated string unreachables = 243372063;

  // [Output Only] Informational warning message.
  optional Warning warning = 50704284;

}

// Contains a list of TargetTcpProxy resources.
message TargetTcpProxyList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 3355;

  // A list of TargetTcpProxy resources.
  repeated TargetTcpProxy items = 100526016;

  // Type of resource.
  optional string kind = 3292052;

  // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
  optional string next_page_token = 79797525;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 456214797;

  // [Output Only] Informational warning message.
  optional Warning warning = 50704284;

}

// Represents a Target VPN Gateway resource. The target VPN gateway resource represents a Classic Cloud VPN gateway. For more information, read the the Cloud VPN Overview.
message TargetVpnGateway {
  // [Output Only] The status of the VPN gateway, which can be one of the following: CREATING, READY, FAILED, or DELETING.
  enum Status {
    // A value indicating that the enum field is not set.
    UNDEFINED_STATUS = 0;

    CREATING = 455564985;

    DELETING = 528602024;

    FAILED = 455706685;

    READY = 77848963;

  }

  // [Output Only] Creation timestamp in RFC3339 text format.
  optional string creation_timestamp = 30525366;

  // An optional description of this resource. Provide this property when you create the resource.
  optional string description = 422937596;

  // [Output Only] A list of URLs to the ForwardingRule resources. ForwardingRules are created using compute.forwardingRules.insert and associated with a VPN gateway.
  repeated string forwarding_rules = 315821365;

  // [Output Only] The unique identifier for the resource. This identifier is defined by the server.
  optional uint64 id = 3355;

  // [Output Only] Type of resource. Always compute#targetVpnGateway for target VPN gateways.
  optional string kind = 3292052;

  // Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
  optional string name = 3373707;

  // URL of the network to which this VPN gateway is attached. Provided by the client when the VPN gateway is created.
  optional string network = 232872494;

  // [Output Only] URL of the region where the target VPN gateway resides. You must specify this field as part of the HTTP request URL. It is not settable as a field in the request body.
  optional string region = 138946292;

  // [Output Only] Server-defined URL for the resource.
  optional string self_link = 456214797;

  // [Output Only] The status of the VPN gateway, which can be one of the following: CREATING, READY, FAILED, or DELETING.
  // Check the Status enum for the list of possible values.
  optional string status = 181260274;

  // [Output Only] A list of URLs to VpnTunnel resources. VpnTunnels are created using the compute.vpntunnels.insert method and associated with a VPN gateway.
  repeated string tunnels = 104561931;

}

//
message TargetVpnGatewayAggregatedList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 3355;

  // A list of TargetVpnGateway resources.
  map<string, TargetVpnGatewaysScopedList> items = 100526016;

  // [Output Only] Type of resource. Always compute#targetVpnGateway for target VPN gateways.
  optional string kind = 3292052;

  // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
  optional string next_page_token = 79797525;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 456214797;

  // [Output Only] Unreachable resources.
  repeated string unreachables = 243372063;

  // [Output Only] Informational warning message.
  optional Warning warning = 50704284;

}

// Contains a list of TargetVpnGateway resources.
message TargetVpnGatewayList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 3355;

  // A list of TargetVpnGateway resources.
  repeated TargetVpnGateway items = 100526016;

  // [Output Only] Type of resource. Always compute#targetVpnGateway for target VPN gateways.
  optional string kind = 3292052;

  // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
  optional string next_page_token = 79797525;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 456214797;

  // [Output Only] Informational warning message.
  optional Warning warning = 50704284;

}

//
message TargetVpnGatewaysScopedList {
  // [Output Only] A list of target VPN gateways contained in this scope.
  repeated TargetVpnGateway target_vpn_gateways = 401770888;

  // [Output Only] Informational warning which replaces the list of addresses when the list is empty.
  optional Warning warning = 50704284;

}

//
message TestFailure {
  // The actual output URL evaluated by a load balancer containing the scheme, host, path and query parameters.
  optional string actual_output_url = 287075458;

  // Actual HTTP status code for rule with `urlRedirect` calculated by load balancer
  optional int32 actual_redirect_response_code = 42926553;

  // BackendService or BackendBucket returned by load balancer.
  optional string actual_service = 440379652;

  // The expected output URL evaluated by a load balancer containing the scheme, host, path and query parameters.
  optional string expected_output_url = 433967384;

  // Expected HTTP status code for rule with `urlRedirect` calculated by load balancer
  optional int32 expected_redirect_response_code = 18888047;

  // Expected BackendService or BackendBucket resource the given URL should be mapped to.
  optional string expected_service = 133987374;

  // HTTP headers of the request.
  repeated UrlMapTestHeader headers = 258436998;

  // Host portion of the URL.
  optional string host = 3208616;

  // Path portion including query parameters in the URL.
  optional string path = 3433509;

}

// A request message for Disks.TestIamPermissions. See the method description for details.
message TestIamPermissionsDiskRequest {
  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Name or id of the resource for this request.
  string resource = 195806222 [(google.api.field_behavior) = REQUIRED];

  // The body resource for this request
  TestPermissionsRequest test_permissions_request_resource = 439214758 [(google.api.field_behavior) = REQUIRED];

  // The name of the zone for this request.
  string zone = 3744684 [(google.api.field_behavior) = REQUIRED];

}

// A request message for ExternalVpnGateways.TestIamPermissions. See the method description for details.
message TestIamPermissionsExternalVpnGatewayRequest {
  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Name or id of the resource for this request.
  string resource = 195806222 [(google.api.field_behavior) = REQUIRED];

  // The body resource for this request
  TestPermissionsRequest test_permissions_request_resource = 439214758 [(google.api.field_behavior) = REQUIRED];

}

// A request message for FirewallPolicies.TestIamPermissions. See the method description for details.
message TestIamPermissionsFirewallPolicyRequest {
  // Name or id of the resource for this request.
  string resource = 195806222 [(google.api.field_behavior) = REQUIRED];

  // The body resource for this request
  TestPermissionsRequest test_permissions_request_resource = 439214758 [(google.api.field_behavior) = REQUIRED];

}

// A request message for Images.TestIamPermissions. See the method description for details.
message TestIamPermissionsImageRequest {
  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Name or id of the resource for this request.
  string resource = 195806222 [(google.api.field_behavior) = REQUIRED];

  // The body resource for this request
  TestPermissionsRequest test_permissions_request_resource = 439214758 [(google.api.field_behavior) = REQUIRED];

}

// A request message for Instances.TestIamPermissions. See the method description for details.
message TestIamPermissionsInstanceRequest {
  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Name or id of the resource for this request.
  string resource = 195806222 [(google.api.field_behavior) = REQUIRED];

  // The body resource for this request
  TestPermissionsRequest test_permissions_request_resource = 439214758 [(google.api.field_behavior) = REQUIRED];

  // The name of the zone for this request.
  string zone = 3744684 [(google.api.field_behavior) = REQUIRED];

}

// A request message for InstanceTemplates.TestIamPermissions. See the method description for details.
message TestIamPermissionsInstanceTemplateRequest {
  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Name or id of the resource for this request.
  string resource = 195806222 [(google.api.field_behavior) = REQUIRED];

  // The body resource for this request
  TestPermissionsRequest test_permissions_request_resource = 439214758 [(google.api.field_behavior) = REQUIRED];

}

// A request message for LicenseCodes.TestIamPermissions. See the method description for details.
message TestIamPermissionsLicenseCodeRequest {
  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Name or id of the resource for this request.
  string resource = 195806222 [(google.api.field_behavior) = REQUIRED];

  // The body resource for this request
  TestPermissionsRequest test_permissions_request_resource = 439214758 [(google.api.field_behavior) = REQUIRED];

}

// A request message for Licenses.TestIamPermissions. See the method description for details.
message TestIamPermissionsLicenseRequest {
  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Name or id of the resource for this request.
  string resource = 195806222 [(google.api.field_behavior) = REQUIRED];

  // The body resource for this request
  TestPermissionsRequest test_permissions_request_resource = 439214758 [(google.api.field_behavior) = REQUIRED];

}

// A request message for MachineImages.TestIamPermissions. See the method description for details.
message TestIamPermissionsMachineImageRequest {
  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Name or id of the resource for this request.
  string resource = 195806222 [(google.api.field_behavior) = REQUIRED];

  // The body resource for this request
  TestPermissionsRequest test_permissions_request_resource = 439214758 [(google.api.field_behavior) = REQUIRED];

}

// A request message for NetworkAttachments.TestIamPermissions. See the method description for details.
message TestIamPermissionsNetworkAttachmentRequest {
  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // The name of the region for this request.
  string region = 138946292 [(google.api.field_behavior) = REQUIRED];

  // Name or id of the resource for this request.
  string resource = 195806222 [(google.api.field_behavior) = REQUIRED];

  // The body resource for this request
  TestPermissionsRequest test_permissions_request_resource = 439214758 [(google.api.field_behavior) = REQUIRED];

}

// A request message for NetworkEndpointGroups.TestIamPermissions. See the method description for details.
message TestIamPermissionsNetworkEndpointGroupRequest {
  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Name or id of the resource for this request.
  string resource = 195806222 [(google.api.field_behavior) = REQUIRED];

  // The body resource for this request
  TestPermissionsRequest test_permissions_request_resource = 439214758 [(google.api.field_behavior) = REQUIRED];

  // The name of the zone for this request.
  string zone = 3744684 [(google.api.field_behavior) = REQUIRED];

}

// A request message for NetworkFirewallPolicies.TestIamPermissions. See the method description for details.
message TestIamPermissionsNetworkFirewallPolicyRequest {
  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Name or id of the resource for this request.
  string resource = 195806222 [(google.api.field_behavior) = REQUIRED];

  // The body resource for this request
  TestPermissionsRequest test_permissions_request_resource = 439214758 [(google.api.field_behavior) = REQUIRED];

}

// A request message for NodeGroups.TestIamPermissions. See the method description for details.
message TestIamPermissionsNodeGroupRequest {
  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Name or id of the resource for this request.
  string resource = 195806222 [(google.api.field_behavior) = REQUIRED];

  // The body resource for this request
  TestPermissionsRequest test_permissions_request_resource = 439214758 [(google.api.field_behavior) = REQUIRED];

  // The name of the zone for this request.
  string zone = 3744684 [(google.api.field_behavior) = REQUIRED];

}

// A request message for NodeTemplates.TestIamPermissions. See the method description for details.
message TestIamPermissionsNodeTemplateRequest {
  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // The name of the region for this request.
  string region = 138946292 [(google.api.field_behavior) = REQUIRED];

  // Name or id of the resource for this request.
  string resource = 195806222 [(google.api.field_behavior) = REQUIRED];

  // The body resource for this request
  TestPermissionsRequest test_permissions_request_resource = 439214758 [(google.api.field_behavior) = REQUIRED];

}

// A request message for PacketMirrorings.TestIamPermissions. See the method description for details.
message TestIamPermissionsPacketMirroringRequest {
  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // The name of the region for this request.
  string region = 138946292 [(google.api.field_behavior) = REQUIRED];

  // Name or id of the resource for this request.
  string resource = 195806222 [(google.api.field_behavior) = REQUIRED];

  // The body resource for this request
  TestPermissionsRequest test_permissions_request_resource = 439214758 [(google.api.field_behavior) = REQUIRED];

}

// A request message for RegionDisks.TestIamPermissions. See the method description for details.
message TestIamPermissionsRegionDiskRequest {
  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // The name of the region for this request.
  string region = 138946292 [(google.api.field_behavior) = REQUIRED];

  // Name or id of the resource for this request.
  string resource = 195806222 [(google.api.field_behavior) = REQUIRED];

  // The body resource for this request
  TestPermissionsRequest test_permissions_request_resource = 439214758 [(google.api.field_behavior) = REQUIRED];

}

// A request message for RegionNetworkFirewallPolicies.TestIamPermissions. See the method description for details.
message TestIamPermissionsRegionNetworkFirewallPolicyRequest {
  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // The name of the region for this request.
  string region = 138946292 [(google.api.field_behavior) = REQUIRED];

  // Name or id of the resource for this request.
  string resource = 195806222 [(google.api.field_behavior) = REQUIRED];

  // The body resource for this request
  TestPermissionsRequest test_permissions_request_resource = 439214758 [(google.api.field_behavior) = REQUIRED];

}

// A request message for Reservations.TestIamPermissions. See the method description for details.
message TestIamPermissionsReservationRequest {
  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Name or id of the resource for this request.
  string resource = 195806222 [(google.api.field_behavior) = REQUIRED];

  // The body resource for this request
  TestPermissionsRequest test_permissions_request_resource = 439214758 [(google.api.field_behavior) = REQUIRED];

  // The name of the zone for this request.
  string zone = 3744684 [(google.api.field_behavior) = REQUIRED];

}

// A request message for ResourcePolicies.TestIamPermissions. See the method description for details.
message TestIamPermissionsResourcePolicyRequest {
  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // The name of the region for this request.
  string region = 138946292 [(google.api.field_behavior) = REQUIRED];

  // Name or id of the resource for this request.
  string resource = 195806222 [(google.api.field_behavior) = REQUIRED];

  // The body resource for this request
  TestPermissionsRequest test_permissions_request_resource = 439214758 [(google.api.field_behavior) = REQUIRED];

}

// A request message for ServiceAttachments.TestIamPermissions. See the method description for details.
message TestIamPermissionsServiceAttachmentRequest {
  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // The name of the region for this request.
  string region = 138946292 [(google.api.field_behavior) = REQUIRED];

  // Name or id of the resource for this request.
  string resource = 195806222 [(google.api.field_behavior) = REQUIRED];

  // The body resource for this request
  TestPermissionsRequest test_permissions_request_resource = 439214758 [(google.api.field_behavior) = REQUIRED];

}

// A request message for Snapshots.TestIamPermissions. See the method description for details.
message TestIamPermissionsSnapshotRequest {
  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Name or id of the resource for this request.
  string resource = 195806222 [(google.api.field_behavior) = REQUIRED];

  // The body resource for this request
  TestPermissionsRequest test_permissions_request_resource = 439214758 [(google.api.field_behavior) = REQUIRED];

}

// A request message for Subnetworks.TestIamPermissions. See the method description for details.
message TestIamPermissionsSubnetworkRequest {
  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // The name of the region for this request.
  string region = 138946292 [(google.api.field_behavior) = REQUIRED];

  // Name or id of the resource for this request.
  string resource = 195806222 [(google.api.field_behavior) = REQUIRED];

  // The body resource for this request
  TestPermissionsRequest test_permissions_request_resource = 439214758 [(google.api.field_behavior) = REQUIRED];

}

// A request message for VpnGateways.TestIamPermissions. See the method description for details.
message TestIamPermissionsVpnGatewayRequest {
  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // The name of the region for this request.
  string region = 138946292 [(google.api.field_behavior) = REQUIRED];

  // Name or id of the resource for this request.
  string resource = 195806222 [(google.api.field_behavior) = REQUIRED];

  // The body resource for this request
  TestPermissionsRequest test_permissions_request_resource = 439214758 [(google.api.field_behavior) = REQUIRED];

}

//
message TestPermissionsRequest {
  // The set of permissions to check for the 'resource'. Permissions with wildcards (such as '*' or 'storage.*') are not allowed.
  repeated string permissions = 59962500;

}

//
message TestPermissionsResponse {
  // A subset of `TestPermissionsRequest.permissions` that the caller is allowed.
  repeated string permissions = 59962500;

}

//
message Uint128 {
  optional uint64 high = 3202466;

  optional uint64 low = 107348;

}

// A request message for Instances.UpdateAccessConfig. See the method description for details.
message UpdateAccessConfigInstanceRequest {
  // The body resource for this request
  AccessConfig access_config_resource = 387825552 [(google.api.field_behavior) = REQUIRED];

  // The instance name for this request.
  string instance = 18257045 [(google.api.field_behavior) = REQUIRED];

  // The name of the network interface where the access config is attached.
  string network_interface = 365387880 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // The name of the zone for this request.
  string zone = 3744684 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "zone"
  ];

}

// A request message for Autoscalers.Update. See the method description for details.
message UpdateAutoscalerRequest {
  // Name of the autoscaler to update.
  optional string autoscaler = 517258967;

  // The body resource for this request
  Autoscaler autoscaler_resource = 207616118 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // Name of the zone for this request.
  string zone = 3744684 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "zone"
  ];

}

// A request message for BackendBuckets.Update. See the method description for details.
message UpdateBackendBucketRequest {
  // Name of the BackendBucket resource to update.
  string backend_bucket = 91714037 [(google.api.field_behavior) = REQUIRED];

  // The body resource for this request
  BackendBucket backend_bucket_resource = 380757784 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

}

// A request message for BackendServices.Update. See the method description for details.
message UpdateBackendServiceRequest {
  // Name of the BackendService resource to update.
  string backend_service = 306946058 [(google.api.field_behavior) = REQUIRED];

  // The body resource for this request
  BackendService backend_service_resource = 347586723 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

}

// A request message for Disks.Update. See the method description for details.
message UpdateDiskRequest {
  // The disk name for this request.
  string disk = 3083677 [(google.api.field_behavior) = REQUIRED];

  // The body resource for this request
  Disk disk_resource = 25880688 [(google.api.field_behavior) = REQUIRED];

  optional string paths = 106438894;

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // update_mask indicates fields to be updated as part of this request.
  optional string update_mask = 500079778;

  // The name of the zone for this request.
  string zone = 3744684 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "zone"
  ];

}

// A request message for Instances.UpdateDisplayDevice. See the method description for details.
message UpdateDisplayDeviceInstanceRequest {
  // The body resource for this request
  DisplayDevice display_device_resource = 289686106 [(google.api.field_behavior) = REQUIRED];

  // Name of the instance scoping this request.
  string instance = 18257045 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // The name of the zone for this request.
  string zone = 3744684 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "zone"
  ];

}

// A request message for Firewalls.Update. See the method description for details.
message UpdateFirewallRequest {
  // Name of the firewall rule to update.
  string firewall = 511016192 [(google.api.field_behavior) = REQUIRED];

  // The body resource for this request
  Firewall firewall_resource = 41425005 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

}

// A request message for HealthChecks.Update. See the method description for details.
message UpdateHealthCheckRequest {
  // Name of the HealthCheck resource to update.
  string health_check = 308876645 [(google.api.field_behavior) = REQUIRED];

  // The body resource for this request
  HealthCheck health_check_resource = 201925032 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

}

// A request message for Instances.Update. See the method description for details.
message UpdateInstanceRequest {
  // Specifies the action to take when updating an instance even if the updated properties do not require it. If not specified, then Compute Engine acts based on the minimum action that the updated properties require.
  // Additional supported values which may be not listed in the enum directly due to technical reasons:
  // INVALID
  // NO_EFFECT
  // REFRESH
  // RESTART
  enum MinimalAction {
    // A value indicating that the enum field is not set.
    UNDEFINED_MINIMAL_ACTION = 0;

  }

  // Specifies the most disruptive action that can be taken on the instance as part of the update. Compute Engine returns an error if the instance properties require a more disruptive action as part of the instance update. Valid options from lowest to highest are NO_EFFECT, REFRESH, and RESTART.
  // Additional supported values which may be not listed in the enum directly due to technical reasons:
  // INVALID
  // NO_EFFECT
  // REFRESH
  // RESTART
  enum MostDisruptiveAllowedAction {
    // A value indicating that the enum field is not set.
    UNDEFINED_MOST_DISRUPTIVE_ALLOWED_ACTION = 0;

  }

  // Name of the instance resource to update.
  string instance = 18257045 [(google.api.field_behavior) = REQUIRED];

  // The body resource for this request
  Instance instance_resource = 215988344 [(google.api.field_behavior) = REQUIRED];

  // Specifies the action to take when updating an instance even if the updated properties do not require it. If not specified, then Compute Engine acts based on the minimum action that the updated properties require.
  // Check the MinimalAction enum for the list of possible values.
  optional string minimal_action = 270567060;

  // Specifies the most disruptive action that can be taken on the instance as part of the update. Compute Engine returns an error if the instance properties require a more disruptive action as part of the instance update. Valid options from lowest to highest are NO_EFFECT, REFRESH, and RESTART.
  // Check the MostDisruptiveAllowedAction enum for the list of possible values.
  optional string most_disruptive_allowed_action = 66103053;

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // The name of the zone for this request.
  string zone = 3744684 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "zone"
  ];

}

// A request message for Instances.UpdateNetworkInterface. See the method description for details.
message UpdateNetworkInterfaceInstanceRequest {
  // The instance name for this request.
  string instance = 18257045 [(google.api.field_behavior) = REQUIRED];

  // The name of the network interface to update.
  string network_interface = 365387880 [(google.api.field_behavior) = REQUIRED];

  // The body resource for this request
  NetworkInterface network_interface_resource = 325814789 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // The name of the zone for this request.
  string zone = 3744684 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "zone"
  ];

}

// A request message for Networks.UpdatePeering. See the method description for details.
message UpdatePeeringNetworkRequest {
  // Name of the network resource which the updated peering is belonging to.
  string network = 232872494 [(google.api.field_behavior) = REQUIRED];

  // The body resource for this request
  NetworksUpdatePeeringRequest networks_update_peering_request_resource = 224433497 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

}

// A request message for InstanceGroupManagers.UpdatePerInstanceConfigs. See the method description for details.
message UpdatePerInstanceConfigsInstanceGroupManagerRequest {
  // The name of the managed instance group. It should conform to RFC1035.
  string instance_group_manager = 249363395 [(google.api.field_behavior) = REQUIRED];

  // The body resource for this request
  InstanceGroupManagersUpdatePerInstanceConfigsReq instance_group_managers_update_per_instance_configs_req_resource = 141402302 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // The name of the zone where the managed instance group is located. It should conform to RFC1035.
  string zone = 3744684 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "zone"
  ];

}

// A request message for RegionInstanceGroupManagers.UpdatePerInstanceConfigs. See the method description for details.
message UpdatePerInstanceConfigsRegionInstanceGroupManagerRequest {
  // The name of the managed instance group. It should conform to RFC1035.
  string instance_group_manager = 249363395 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // Name of the region scoping this request, should conform to RFC1035.
  string region = 138946292 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "region"
  ];

  // The body resource for this request
  RegionInstanceGroupManagerUpdateInstanceConfigReq region_instance_group_manager_update_instance_config_req_resource = 89036583 [(google.api.field_behavior) = REQUIRED];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

}

// A request message for RegionAutoscalers.Update. See the method description for details.
message UpdateRegionAutoscalerRequest {
  // Name of the autoscaler to update.
  optional string autoscaler = 517258967;

  // The body resource for this request
  Autoscaler autoscaler_resource = 207616118 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // Name of the region scoping this request.
  string region = 138946292 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "region"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

}

// A request message for RegionBackendServices.Update. See the method description for details.
message UpdateRegionBackendServiceRequest {
  // Name of the BackendService resource to update.
  string backend_service = 306946058 [(google.api.field_behavior) = REQUIRED];

  // The body resource for this request
  BackendService backend_service_resource = 347586723 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // Name of the region scoping this request.
  string region = 138946292 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "region"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

}

// A request message for RegionCommitments.Update. See the method description for details.
message UpdateRegionCommitmentRequest {
  // Name of the commitment for which auto renew is being updated.
  string commitment = 482134805 [(google.api.field_behavior) = REQUIRED];

  // The body resource for this request
  Commitment commitment_resource = 244240888 [(google.api.field_behavior) = REQUIRED];

  optional string paths = 106438894;

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // Name of the region for this request.
  string region = 138946292 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "region"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // update_mask indicates fields to be updated as part of this request.
  optional string update_mask = 500079778;

}

// A request message for RegionDisks.Update. See the method description for details.
message UpdateRegionDiskRequest {
  // The disk name for this request.
  string disk = 3083677 [(google.api.field_behavior) = REQUIRED];

  // The body resource for this request
  Disk disk_resource = 25880688 [(google.api.field_behavior) = REQUIRED];

  optional string paths = 106438894;

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // The name of the region for this request.
  string region = 138946292 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "region"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // update_mask indicates fields to be updated as part of this request.
  optional string update_mask = 500079778;

}

// A request message for RegionHealthChecks.Update. See the method description for details.
message UpdateRegionHealthCheckRequest {
  // Name of the HealthCheck resource to update.
  string health_check = 308876645 [(google.api.field_behavior) = REQUIRED];

  // The body resource for this request
  HealthCheck health_check_resource = 201925032 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // Name of the region scoping this request.
  string region = 138946292 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "region"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

}

// A request message for RegionUrlMaps.Update. See the method description for details.
message UpdateRegionUrlMapRequest {
  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // Name of the region scoping this request.
  string region = 138946292 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "region"
  ];

  // begin_interface: MixerMutationRequestBuilder Request ID to support idempotency.
  optional string request_id = 37109963;

  // Name of the UrlMap resource to update.
  string url_map = 367020684 [(google.api.field_behavior) = REQUIRED];

  // The body resource for this request
  UrlMap url_map_resource = 168675425 [(google.api.field_behavior) = REQUIRED];

}

// A request message for Reservations.Update. See the method description for details.
message UpdateReservationRequest {
  optional string paths = 106438894;

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // Name of the reservation to update.
  string reservation = 47530956 [(google.api.field_behavior) = REQUIRED];

  // The body resource for this request
  Reservation reservation_resource = 285030177 [(google.api.field_behavior) = REQUIRED];

  // Update_mask indicates fields to be updated as part of this request.
  optional string update_mask = 500079778;

  // Name of the zone for this request.
  string zone = 3744684 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "zone"
  ];

}

// A request message for Routers.Update. See the method description for details.
message UpdateRouterRequest {
  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // Name of the region for this request.
  string region = 138946292 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "region"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // Name of the Router resource to update.
  string router = 148608841 [(google.api.field_behavior) = REQUIRED];

  // The body resource for this request
  Router router_resource = 155222084 [(google.api.field_behavior) = REQUIRED];

}

// A request message for Instances.UpdateShieldedInstanceConfig. See the method description for details.
message UpdateShieldedInstanceConfigInstanceRequest {
  // Name or id of the instance scoping this request.
  string instance = 18257045 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // The body resource for this request
  ShieldedInstanceConfig shielded_instance_config_resource = 272059224 [(google.api.field_behavior) = REQUIRED];

  // The name of the zone for this request.
  string zone = 3744684 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "zone"
  ];

}

// A request message for UrlMaps.Update. See the method description for details.
message UpdateUrlMapRequest {
  // Project ID for this request.
  string project = 227560217 [
    (google.api.field_behavior) = REQUIRED,
    (google.cloud.operation_request_field) = "project"
  ];

  // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
  optional string request_id = 37109963;

  // Name of the UrlMap resource to update.
  string url_map = 367020684 [(google.api.field_behavior) = REQUIRED];

  // The body resource for this request
  UrlMap url_map_resource = 168675425 [(google.api.field_behavior) = REQUIRED];

}

// Represents a URL Map resource. Compute Engine has two URL Map resources: * [Global](/compute/docs/reference/rest/v1/urlMaps) * [Regional](/compute/docs/reference/rest/v1/regionUrlMaps) A URL map resource is a component of certain types of cloud load balancers and Traffic Director: * urlMaps are used by external HTTP(S) load balancers and Traffic Director. * regionUrlMaps are used by internal HTTP(S) load balancers. For a list of supported URL map features by the load balancer type, see the Load balancing features: Routing and traffic management table. For a list of supported URL map features for Traffic Director, see the Traffic Director features: Routing and traffic management table. This resource defines mappings from hostnames and URL paths to either a backend service or a backend bucket. To use the global urlMaps resource, the backend service must have a loadBalancingScheme of either EXTERNAL or INTERNAL_SELF_MANAGED. To use the regionUrlMaps resource, the backend service must have a loadBalancingScheme of INTERNAL_MANAGED. For more information, read URL Map Concepts.
message UrlMap {
  // [Output Only] Creation timestamp in RFC3339 text format.
  optional string creation_timestamp = 30525366;

  // defaultRouteAction takes effect when none of the hostRules match. The load balancer performs advanced routing actions, such as URL rewrites and header transformations, before forwarding the request to the selected backend. If defaultRouteAction specifies any weightedBackendServices, defaultService must not be set. Conversely if defaultService is set, defaultRouteAction cannot contain any weightedBackendServices. Only one of defaultRouteAction or defaultUrlRedirect must be set. URL maps for Classic external HTTP(S) load balancers only support the urlRewrite action within defaultRouteAction. defaultRouteAction has no effect when the URL map is bound to a target gRPC proxy that has the validateForProxyless field set to true.
  optional HttpRouteAction default_route_action = 378919466;

  // The full or partial URL of the defaultService resource to which traffic is directed if none of the hostRules match. If defaultRouteAction is also specified, advanced routing actions, such as URL rewrites, take effect before sending the request to the backend. However, if defaultService is specified, defaultRouteAction cannot contain any weightedBackendServices. Conversely, if routeAction specifies any weightedBackendServices, service must not be specified. Only one of defaultService, defaultUrlRedirect , or defaultRouteAction.weightedBackendService must be set. defaultService has no effect when the URL map is bound to a target gRPC proxy that has the validateForProxyless field set to true.
  optional string default_service = 370242231;

  // When none of the specified hostRules match, the request is redirected to a URL specified by defaultUrlRedirect. If defaultUrlRedirect is specified, defaultService or defaultRouteAction must not be set. Not supported when the URL map is bound to a target gRPC proxy.
  optional HttpRedirectAction default_url_redirect = 359503338;

  // An optional description of this resource. Provide this property when you create the resource.
  optional string description = 422937596;

  // Fingerprint of this resource. A hash of the contents stored in this object. This field is used in optimistic locking. This field is ignored when inserting a UrlMap. An up-to-date fingerprint must be provided in order to update the UrlMap, otherwise the request will fail with error 412 conditionNotMet. To see the latest fingerprint, make a get() request to retrieve a UrlMap.
  optional string fingerprint = 234678500;

  // Specifies changes to request and response headers that need to take effect for the selected backendService. The headerAction specified here take effect after headerAction specified under pathMatcher. headerAction is not supported for load balancers that have their loadBalancingScheme set to EXTERNAL. Not supported when the URL map is bound to a target gRPC proxy that has validateForProxyless field set to true.
  optional HttpHeaderAction header_action = 328077352;

  // The list of host rules to use against the URL.
  repeated HostRule host_rules = 311804832;

  // [Output Only] The unique identifier for the resource. This identifier is defined by the server.
  optional uint64 id = 3355;

  // [Output Only] Type of the resource. Always compute#urlMaps for url maps.
  optional string kind = 3292052;

  // Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
  optional string name = 3373707;

  // The list of named PathMatchers to use against the URL.
  repeated PathMatcher path_matchers = 271664219;

  // [Output Only] URL of the region where the regional URL map resides. This field is not applicable to global URL maps. You must specify this field as part of the HTTP request URL. It is not settable as a field in the request body.
  optional string region = 138946292;

  // [Output Only] Server-defined URL for the resource.
  optional string self_link = 456214797;

  // The list of expected URL mapping tests. Request to update the UrlMap succeeds only if all test cases pass. You can specify a maximum of 100 tests per UrlMap. Not supported when the URL map is bound to a target gRPC proxy that has validateForProxyless field set to true.
  repeated UrlMapTest tests = 110251553;

}

// Contains a list of UrlMap resources.
message UrlMapList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 3355;

  // A list of UrlMap resources.
  repeated UrlMap items = 100526016;

  // Type of resource.
  optional string kind = 3292052;

  // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
  optional string next_page_token = 79797525;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 456214797;

  // [Output Only] Informational warning message.
  optional Warning warning = 50704284;

}

//
message UrlMapReference {
  optional string url_map = 367020684;

}

// Message for the expected URL mappings.
message UrlMapTest {
  // Description of this test case.
  optional string description = 422937596;

  // The expected output URL evaluated by the load balancer containing the scheme, host, path and query parameters. For rules that forward requests to backends, the test passes only when expectedOutputUrl matches the request forwarded by the load balancer to backends. For rules with urlRewrite, the test verifies that the forwarded request matches hostRewrite and pathPrefixRewrite in the urlRewrite action. When service is specified, expectedOutputUrl`s scheme is ignored. For rules with urlRedirect, the test passes only if expectedOutputUrl matches the URL in the load balancer's redirect response. If urlRedirect specifies https_redirect, the test passes only if the scheme in expectedOutputUrl is also set to HTTPS. If urlRedirect specifies strip_query, the test passes only if expectedOutputUrl does not contain any query parameters. expectedOutputUrl is optional when service is specified.
  optional string expected_output_url = 433967384;

  // For rules with urlRedirect, the test passes only if expectedRedirectResponseCode matches the HTTP status code in load balancer's redirect response. expectedRedirectResponseCode cannot be set when service is set.
  optional int32 expected_redirect_response_code = 18888047;

  // HTTP headers for this request. If headers contains a host header, then host must also match the header value.
  repeated UrlMapTestHeader headers = 258436998;

  // Host portion of the URL. If headers contains a host header, then host must also match the header value.
  optional string host = 3208616;

  // Path portion of the URL.
  optional string path = 3433509;

  // Expected BackendService or BackendBucket resource the given URL should be mapped to. The service field cannot be set if expectedRedirectResponseCode is set.
  optional string service = 373540533;

}

// HTTP headers used in UrlMapTests.
message UrlMapTestHeader {
  // Header name.
  optional string name = 3373707;

  // Header value.
  optional string value = 111972721;

}

// Message representing the validation result for a UrlMap.
message UrlMapValidationResult {
  repeated string load_errors = 310147300;

  // Whether the given UrlMap can be successfully loaded. If false, 'loadErrors' indicates the reasons.
  optional bool load_succeeded = 128326216;

  repeated TestFailure test_failures = 505934134;

  // If successfully loaded, this field indicates whether the test passed. If false, 'testFailures's indicate the reason of failure.
  optional bool test_passed = 192708797;

}

//
message UrlMapsAggregatedList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 3355;

  // A list of UrlMapsScopedList resources.
  map<string, UrlMapsScopedList> items = 100526016;

  // Type of resource.
  optional string kind = 3292052;

  // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
  optional string next_page_token = 79797525;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 456214797;

  // [Output Only] Unreachable resources.
  repeated string unreachables = 243372063;

  // [Output Only] Informational warning message.
  optional Warning warning = 50704284;

}

//
message UrlMapsScopedList {
  // A list of UrlMaps contained in this scope.
  repeated UrlMap url_maps = 103352167;

  // Informational warning which replaces the list of backend services when the list is empty.
  optional Warning warning = 50704284;

}

//
message UrlMapsValidateRequest {
  //
  enum LoadBalancingSchemes {
    // A value indicating that the enum field is not set.
    UNDEFINED_LOAD_BALANCING_SCHEMES = 0;

    // Signifies that this will be used for Classic L7 External Load Balancing.
    EXTERNAL = 35607499;

    // Signifies that this will be used for Envoy-based L7 External Load Balancing.
    EXTERNAL_MANAGED = 512006923;

    // If unspecified, the validation will try to infer the scheme from the backend service resources this Url map references. If the inferrence is not possible, EXTERNAL will be used as the default type.
    LOAD_BALANCING_SCHEME_UNSPECIFIED = 526507452;

  }

  // Specifies the load balancer type(s) this validation request is for. Use EXTERNAL_MANAGED for HTTP/HTTPS External Global Load Balancer with Advanced Traffic Management. Use EXTERNAL for Classic HTTP/HTTPS External Global Load Balancer. Other load balancer types are not supported. For more information, refer to Choosing a load balancer. If unspecified, the load balancing scheme will be inferred from the backend service resources this URL map references. If that can not be inferred (for example, this URL map only references backend buckets, or this Url map is for rewrites and redirects only and doesn't reference any backends), EXTERNAL will be used as the default type. If specified, the scheme(s) must not conflict with the load balancing scheme of the backend service resources this Url map references.
  // Check the LoadBalancingSchemes enum for the list of possible values.
  repeated string load_balancing_schemes = 6308527;

  // Content of the UrlMap to be validated.
  optional UrlMap resource = 195806222;

}

//
message UrlMapsValidateResponse {
  optional UrlMapValidationResult result = 139315229;

}

// The spec for modifying the path before sending the request to the matched backend service.
message UrlRewrite {
  // Before forwarding the request to the selected service, the request's host header is replaced with contents of hostRewrite. The value must be from 1 to 255 characters.
  optional string host_rewrite = 159819253;

  // Before forwarding the request to the selected backend service, the matching portion of the request's path is replaced by pathPrefixRewrite. The value must be from 1 to 1024 characters.
  optional string path_prefix_rewrite = 41186361;

}

// Subnetwork which the current user has compute.subnetworks.use permission on.
message UsableSubnetwork {
  // The access type of IPv6 address this subnet holds. It's immutable and can only be specified during creation or the first time the subnet is updated into IPV4_IPV6 dual stack.
  enum Ipv6AccessType {
    // A value indicating that the enum field is not set.
    UNDEFINED_IPV6_ACCESS_TYPE = 0;

    // VMs on this subnet will be assigned IPv6 addresses that are accessible via the Internet, as well as the VPC network.
    EXTERNAL = 35607499;

    // VMs on this subnet will be assigned IPv6 addresses that are only accessible over the VPC network.
    INTERNAL = 279295677;

  }

  // The purpose of the resource. This field can be either PRIVATE_RFC_1918 or INTERNAL_HTTPS_LOAD_BALANCER. A subnetwork with purpose set to INTERNAL_HTTPS_LOAD_BALANCER is a user-created subnetwork that is reserved for Internal HTTP(S) Load Balancing. If unspecified, the purpose defaults to PRIVATE_RFC_1918. The enableFlowLogs field isn't supported with the purpose field set to INTERNAL_HTTPS_LOAD_BALANCER.
  enum Purpose {
    // A value indicating that the enum field is not set.
    UNDEFINED_PURPOSE = 0;

    // Subnet reserved for Internal HTTP(S) Load Balancing.
    INTERNAL_HTTPS_LOAD_BALANCER = 248748889;

    // Regular user created or automatically created subnet.
    PRIVATE = 403485027;

    // Regular user created or automatically created subnet.
    PRIVATE_RFC_1918 = 254902107;

    // Subnetworks created for Private Service Connect in the producer network.
    PRIVATE_SERVICE_CONNECT = 48134724;

    // Subnetwork used for Regional Internal/External HTTP(S) Load Balancing.
    REGIONAL_MANAGED_PROXY = 153049966;

  }

  // The role of subnetwork. Currently, this field is only used when purpose = INTERNAL_HTTPS_LOAD_BALANCER. The value can be set to ACTIVE or BACKUP. An ACTIVE subnetwork is one that is currently being used for Internal HTTP(S) Load Balancing. A BACKUP subnetwork is one that is ready to be promoted to ACTIVE or is currently draining. This field can be updated with a patch request.
  enum Role {
    // A value indicating that the enum field is not set.
    UNDEFINED_ROLE = 0;

    // The ACTIVE subnet that is currently used.
    ACTIVE = 314733318;

    // The BACKUP subnet that could be promoted to ACTIVE.
    BACKUP = 341010882;

  }

  // The stack type for the subnet. If set to IPV4_ONLY, new VMs in the subnet are assigned IPv4 addresses only. If set to IPV4_IPV6, new VMs in the subnet can be assigned both IPv4 and IPv6 addresses. If not specified, IPV4_ONLY is used. This field can be both set at resource creation time and updated using patch.
  enum StackType {
    // A value indicating that the enum field is not set.
    UNDEFINED_STACK_TYPE = 0;

    // New VMs in this subnet can have both IPv4 and IPv6 addresses.
    IPV4_IPV6 = 22197249;

    // New VMs in this subnet will only be assigned IPv4 addresses.
    IPV4_ONLY = 22373798;

  }

  // [Output Only] The external IPv6 address range that is assigned to this subnetwork.
  optional string external_ipv6_prefix = 139299190;

  // [Output Only] The internal IPv6 address range that is assigned to this subnetwork.
  optional string internal_ipv6_prefix = 506270056;

  // The range of internal addresses that are owned by this subnetwork.
  optional string ip_cidr_range = 98117322;

  // The access type of IPv6 address this subnet holds. It's immutable and can only be specified during creation or the first time the subnet is updated into IPV4_IPV6 dual stack.
  // Check the Ipv6AccessType enum for the list of possible values.
  optional string ipv6_access_type = 504658653;

  // Network URL.
  optional string network = 232872494;

  // The purpose of the resource. This field can be either PRIVATE_RFC_1918 or INTERNAL_HTTPS_LOAD_BALANCER. A subnetwork with purpose set to INTERNAL_HTTPS_LOAD_BALANCER is a user-created subnetwork that is reserved for Internal HTTP(S) Load Balancing. If unspecified, the purpose defaults to PRIVATE_RFC_1918. The enableFlowLogs field isn't supported with the purpose field set to INTERNAL_HTTPS_LOAD_BALANCER.
  // Check the Purpose enum for the list of possible values.
  optional string purpose = 316407070;

  // The role of subnetwork. Currently, this field is only used when purpose = INTERNAL_HTTPS_LOAD_BALANCER. The value can be set to ACTIVE or BACKUP. An ACTIVE subnetwork is one that is currently being used for Internal HTTP(S) Load Balancing. A BACKUP subnetwork is one that is ready to be promoted to ACTIVE or is currently draining. This field can be updated with a patch request.
  // Check the Role enum for the list of possible values.
  optional string role = 3506294;

  // Secondary IP ranges.
  repeated UsableSubnetworkSecondaryRange secondary_ip_ranges = 136658915;

  // The stack type for the subnet. If set to IPV4_ONLY, new VMs in the subnet are assigned IPv4 addresses only. If set to IPV4_IPV6, new VMs in the subnet can be assigned both IPv4 and IPv6 addresses. If not specified, IPV4_ONLY is used. This field can be both set at resource creation time and updated using patch.
  // Check the StackType enum for the list of possible values.
  optional string stack_type = 425908881;

  // Subnetwork URL.
  optional string subnetwork = 307827694;

}

// Secondary IP range of a usable subnetwork.
message UsableSubnetworkSecondaryRange {
  // The range of IP addresses belonging to this subnetwork secondary range.
  optional string ip_cidr_range = 98117322;

  // The name associated with this subnetwork secondary range, used when adding an alias IP range to a VM instance. The name must be 1-63 characters long, and comply with RFC1035. The name must be unique within the subnetwork.
  optional string range_name = 332216397;

}

//
message UsableSubnetworksAggregatedList {
  // [Output Only] The unique identifier for the resource. This identifier is defined by the server.
  optional string id = 3355;

  // [Output] A list of usable subnetwork URLs.
  repeated UsableSubnetwork items = 100526016;

  // [Output Only] Type of resource. Always compute#usableSubnetworksAggregatedList for aggregated lists of usable subnetworks.
  optional string kind = 3292052;

  // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results. In special cases listUsable may return 0 subnetworks and nextPageToken which still should be used to get the next page of results.
  optional string next_page_token = 79797525;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 456214797;

  // [Output Only] Informational warning message.
  optional Warning warning = 50704284;

}

// The location in Cloud Storage and naming method of the daily usage report. Contains bucket_name and report_name prefix.
message UsageExportLocation {
  // The name of an existing bucket in Cloud Storage where the usage report object is stored. The Google Service Account is granted write access to this bucket. This can either be the bucket name by itself, such as example-bucket, or the bucket name with gs:// or https://storage.googleapis.com/ in front of it, such as gs://example-bucket.
  optional string bucket_name = 283610048;

  // An optional prefix for the name of the usage report object stored in bucketName. If not supplied, defaults to usage_gce. The report is stored as a CSV file named report_name_prefix_gce_YYYYMMDD.csv where YYYYMMDD is the day of the usage according to Pacific Time. If you supply a prefix, it should conform to Cloud Storage object naming conventions.
  optional string report_name_prefix = 320198715;

}

// A request message for RegionUrlMaps.Validate. See the method description for details.
message ValidateRegionUrlMapRequest {
  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Name of the region scoping this request.
  string region = 138946292 [(google.api.field_behavior) = REQUIRED];

  // The body resource for this request
  RegionUrlMapsValidateRequest region_url_maps_validate_request_resource = 56632858 [(google.api.field_behavior) = REQUIRED];

  // Name of the UrlMap resource to be validated as.
  string url_map = 367020684 [(google.api.field_behavior) = REQUIRED];

}

// A request message for UrlMaps.Validate. See the method description for details.
message ValidateUrlMapRequest {
  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Name of the UrlMap resource to be validated as.
  string url_map = 367020684 [(google.api.field_behavior) = REQUIRED];

  // The body resource for this request
  UrlMapsValidateRequest url_maps_validate_request_resource = 395913455 [(google.api.field_behavior) = REQUIRED];

}

// Contain information of Nat mapping for a VM endpoint (i.e., NIC).
message VmEndpointNatMappings {
  // Name of the VM instance which the endpoint belongs to
  optional string instance_name = 227947509;

  repeated VmEndpointNatMappingsInterfaceNatMappings interface_nat_mappings = 256196617;

}

// Contain information of Nat mapping for an interface of this endpoint.
message VmEndpointNatMappingsInterfaceNatMappings {
  // List of all drain IP:port-range mappings assigned to this interface. These ranges are inclusive, that is, both the first and the last ports can be used for NAT. Example: ["2.2.2.2:12345-12355", "1.1.1.1:2234-2234"].
  repeated string drain_nat_ip_port_ranges = 395440577;

  // A list of all IP:port-range mappings assigned to this interface. These ranges are inclusive, that is, both the first and the last ports can be used for NAT. Example: ["2.2.2.2:12345-12355", "1.1.1.1:2234-2234"].
  repeated string nat_ip_port_ranges = 531830810;

  // Total number of drain ports across all NAT IPs allocated to this interface. It equals to the aggregated port number in the field drain_nat_ip_port_ranges.
  optional int32 num_total_drain_nat_ports = 335532793;

  // Total number of ports across all NAT IPs allocated to this interface. It equals to the aggregated port number in the field nat_ip_port_ranges.
  optional int32 num_total_nat_ports = 299904384;

  // Information about mappings provided by rules in this NAT.
  repeated VmEndpointNatMappingsInterfaceNatMappingsNatRuleMappings rule_mappings = 486192968;

  // Alias IP range for this interface endpoint. It will be a private (RFC 1918) IP range. Examples: "10.33.4.55/32", or "192.168.5.0/24".
  optional string source_alias_ip_range = 440340952;

  // Primary IP of the VM for this NIC.
  optional string source_virtual_ip = 149836159;

}

// Contains information of NAT Mappings provided by a NAT Rule.
message VmEndpointNatMappingsInterfaceNatMappingsNatRuleMappings {
  // List of all drain IP:port-range mappings assigned to this interface by this rule. These ranges are inclusive, that is, both the first and the last ports can be used for NAT. Example: ["2.2.2.2:12345-12355", "1.1.1.1:2234-2234"].
  repeated string drain_nat_ip_port_ranges = 395440577;

  // A list of all IP:port-range mappings assigned to this interface by this rule. These ranges are inclusive, that is, both the first and the last ports can be used for NAT. Example: ["2.2.2.2:12345-12355", "1.1.1.1:2234-2234"].
  repeated string nat_ip_port_ranges = 531830810;

  // Total number of drain ports across all NAT IPs allocated to this interface by this rule. It equals the aggregated port number in the field drain_nat_ip_port_ranges.
  optional int32 num_total_drain_nat_ports = 335532793;

  // Total number of ports across all NAT IPs allocated to this interface by this rule. It equals the aggregated port number in the field nat_ip_port_ranges.
  optional int32 num_total_nat_ports = 299904384;

  // Rule number of the NAT Rule.
  optional int32 rule_number = 535211500;

}

// Contains a list of VmEndpointNatMappings.
message VmEndpointNatMappingsList {
  // [Output Only] The unique identifier for the resource. This identifier is defined by the server.
  optional string id = 3355;

  // [Output Only] Type of resource. Always compute#vmEndpointNatMappingsList for lists of Nat mappings of VM endpoints.
  optional string kind = 3292052;

  // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
  optional string next_page_token = 79797525;

  // [Output Only] A list of Nat mapping information of VM endpoints.
  repeated VmEndpointNatMappings result = 139315229;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 456214797;

  // [Output Only] Informational warning message.
  optional Warning warning = 50704284;

}

// Represents a HA VPN gateway. HA VPN is a high-availability (HA) Cloud VPN solution that lets you securely connect your on-premises network to your Google Cloud Virtual Private Cloud network through an IPsec VPN connection in a single region. For more information about Cloud HA VPN solutions, see Cloud VPN topologies .
message VpnGateway {
  // The stack type for this VPN gateway to identify the IP protocols that are enabled. Possible values are: IPV4_ONLY, IPV4_IPV6. If not specified, IPV4_ONLY will be used.
  enum StackType {
    // A value indicating that the enum field is not set.
    UNDEFINED_STACK_TYPE = 0;

    // Enable VPN gateway with both IPv4 and IPv6 protocols.
    IPV4_IPV6 = 22197249;

    // Enable VPN gateway with only IPv4 protocol.
    IPV4_ONLY = 22373798;

  }

  // [Output Only] Creation timestamp in RFC3339 text format.
  optional string creation_timestamp = 30525366;

  // An optional description of this resource. Provide this property when you create the resource.
  optional string description = 422937596;

  // [Output Only] The unique identifier for the resource. This identifier is defined by the server.
  optional uint64 id = 3355;

  // [Output Only] Type of resource. Always compute#vpnGateway for VPN gateways.
  optional string kind = 3292052;

  // A fingerprint for the labels being applied to this VpnGateway, which is essentially a hash of the labels set used for optimistic locking. The fingerprint is initially generated by Compute Engine and changes after every request to modify or update labels. You must always provide an up-to-date fingerprint hash in order to update or change labels, otherwise the request will fail with error 412 conditionNotMet. To see the latest fingerprint, make a get() request to retrieve a VpnGateway.
  optional string label_fingerprint = 178124825;

  // Labels for this resource. These can only be added or modified by the setLabels method. Each label key/value pair must comply with RFC1035. Label values may be empty.
  map<string, string> labels = 500195327;

  // Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
  optional string name = 3373707;

  // URL of the network to which this VPN gateway is attached. Provided by the client when the VPN gateway is created.
  optional string network = 232872494;

  // [Output Only] URL of the region where the VPN gateway resides.
  optional string region = 138946292;

  // [Output Only] Server-defined URL for the resource.
  optional string self_link = 456214797;

  // The stack type for this VPN gateway to identify the IP protocols that are enabled. Possible values are: IPV4_ONLY, IPV4_IPV6. If not specified, IPV4_ONLY will be used.
  // Check the StackType enum for the list of possible values.
  optional string stack_type = 425908881;

  // The list of VPN interfaces associated with this VPN gateway.
  repeated VpnGatewayVpnGatewayInterface vpn_interfaces = 91842181;

}

//
message VpnGatewayAggregatedList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 3355;

  // A list of VpnGateway resources.
  map<string, VpnGatewaysScopedList> items = 100526016;

  // [Output Only] Type of resource. Always compute#vpnGateway for VPN gateways.
  optional string kind = 3292052;

  // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
  optional string next_page_token = 79797525;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 456214797;

  // [Output Only] Unreachable resources.
  repeated string unreachables = 243372063;

  // [Output Only] Informational warning message.
  optional Warning warning = 50704284;

}

// Contains a list of VpnGateway resources.
message VpnGatewayList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 3355;

  // A list of VpnGateway resources.
  repeated VpnGateway items = 100526016;

  // [Output Only] Type of resource. Always compute#vpnGateway for VPN gateways.
  optional string kind = 3292052;

  // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
  optional string next_page_token = 79797525;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 456214797;

  // [Output Only] Informational warning message.
  optional Warning warning = 50704284;

}

//
message VpnGatewayStatus {
  // List of VPN connection for this VpnGateway.
  repeated VpnGatewayStatusVpnConnection vpn_connections = 439334538;

}

// Describes the high availability requirement state for the VPN connection between this Cloud VPN gateway and a peer gateway.
message VpnGatewayStatusHighAvailabilityRequirementState {
  // Indicates the high availability requirement state for the VPN connection. Valid values are CONNECTION_REDUNDANCY_MET, CONNECTION_REDUNDANCY_NOT_MET.
  enum State {
    // A value indicating that the enum field is not set.
    UNDEFINED_STATE = 0;

    // VPN tunnels are configured with adequate redundancy from Cloud VPN gateway to the peer VPN gateway. For both GCP-to-non-GCP and GCP-to-GCP connections, the adequate redundancy is a pre-requirement for users to get 99.99% availability on GCP side; please note that for any connection, end-to-end 99.99% availability is subject to proper configuration on the peer VPN gateway.
    CONNECTION_REDUNDANCY_MET = 505242907;

    // VPN tunnels are not configured with adequate redundancy from the Cloud VPN gateway to the peer gateway
    CONNECTION_REDUNDANCY_NOT_MET = 511863311;

  }

  // Indicates the reason why the VPN connection does not meet the high availability redundancy criteria/requirement. Valid values is INCOMPLETE_TUNNELS_COVERAGE.
  enum UnsatisfiedReason {
    // A value indicating that the enum field is not set.
    UNDEFINED_UNSATISFIED_REASON = 0;

    INCOMPLETE_TUNNELS_COVERAGE = 55917437;

  }

  // Indicates the high availability requirement state for the VPN connection. Valid values are CONNECTION_REDUNDANCY_MET, CONNECTION_REDUNDANCY_NOT_MET.
  // Check the State enum for the list of possible values.
  optional string state = 109757585;

  // Indicates the reason why the VPN connection does not meet the high availability redundancy criteria/requirement. Valid values is INCOMPLETE_TUNNELS_COVERAGE.
  // Check the UnsatisfiedReason enum for the list of possible values.
  optional string unsatisfied_reason = 55016330;

}

// Contains some information about a VPN tunnel.
message VpnGatewayStatusTunnel {
  // The VPN gateway interface this VPN tunnel is associated with.
  optional uint32 local_gateway_interface = 158764330;

  // The peer gateway interface this VPN tunnel is connected to, the peer gateway could either be an external VPN gateway or GCP VPN gateway.
  optional uint32 peer_gateway_interface = 214380385;

  // URL reference to the VPN tunnel.
  optional string tunnel_url = 78975256;

}

// A VPN connection contains all VPN tunnels connected from this VpnGateway to the same peer gateway. The peer gateway could either be a external VPN gateway or GCP VPN gateway.
message VpnGatewayStatusVpnConnection {
  // URL reference to the peer external VPN gateways to which the VPN tunnels in this VPN connection are connected. This field is mutually exclusive with peer_gcp_gateway.
  optional string peer_external_gateway = 384956173;

  // URL reference to the peer side VPN gateways to which the VPN tunnels in this VPN connection are connected. This field is mutually exclusive with peer_gcp_gateway.
  optional string peer_gcp_gateway = 281867452;

  // HighAvailabilityRequirementState for the VPN connection.
  optional VpnGatewayStatusHighAvailabilityRequirementState state = 109757585;

  // List of VPN tunnels that are in this VPN connection.
  repeated VpnGatewayStatusTunnel tunnels = 104561931;

}

// A VPN gateway interface.
message VpnGatewayVpnGatewayInterface {
  // [Output Only] Numeric identifier for this VPN interface associated with the VPN gateway.
  optional uint32 id = 3355;

  // URL of the VLAN attachment (interconnectAttachment) resource for this VPN gateway interface. When the value of this field is present, the VPN gateway is used for HA VPN over Cloud Interconnect; all egress or ingress traffic for this VPN gateway interface goes through the specified VLAN attachment resource.
  optional string interconnect_attachment = 308135284;

  // [Output Only] IP address for this VPN interface associated with the VPN gateway. The IP address could be either a regional external IP address or a regional internal IP address. The two IP addresses for a VPN gateway must be all regional external or regional internal IP addresses. There cannot be a mix of regional external IP addresses and regional internal IP addresses. For HA VPN over Cloud Interconnect, the IP addresses for both interfaces could either be regional internal IP addresses or regional external IP addresses. For regular (non HA VPN over Cloud Interconnect) HA VPN tunnels, the IP address must be a regional external IP address.
  optional string ip_address = 406272220;

}

//
message VpnGatewaysGetStatusResponse {
  optional VpnGatewayStatus result = 139315229;

}

//
message VpnGatewaysScopedList {
  // [Output Only] A list of VPN gateways contained in this scope.
  repeated VpnGateway vpn_gateways = 259177882;

  // [Output Only] Informational warning which replaces the list of addresses when the list is empty.
  optional Warning warning = 50704284;

}

// Represents a Cloud VPN Tunnel resource. For more information about VPN, read the the Cloud VPN Overview.
message VpnTunnel {
  // [Output Only] The status of the VPN tunnel, which can be one of the following: - PROVISIONING: Resource is being allocated for the VPN tunnel. - WAITING_FOR_FULL_CONFIG: Waiting to receive all VPN-related configs from the user. Network, TargetVpnGateway, VpnTunnel, ForwardingRule, and Route resources are needed to setup the VPN tunnel. - FIRST_HANDSHAKE: Successful first handshake with the peer VPN. - ESTABLISHED: Secure session is successfully established with the peer VPN. - NETWORK_ERROR: Deprecated, replaced by NO_INCOMING_PACKETS - AUTHORIZATION_ERROR: Auth error (for example, bad shared secret). - NEGOTIATION_FAILURE: Handshake failed. - DEPROVISIONING: Resources are being deallocated for the VPN tunnel. - FAILED: Tunnel creation has failed and the tunnel is not ready to be used. - NO_INCOMING_PACKETS: No incoming packets from peer. - REJECTED: Tunnel configuration was rejected, can be result of being denied access. - ALLOCATING_RESOURCES: Cloud VPN is in the process of allocating all required resources. - STOPPED: Tunnel is stopped due to its Forwarding Rules being deleted for Classic VPN tunnels or the project is in frozen state. - PEER_IDENTITY_MISMATCH: Peer identity does not match peer IP, probably behind NAT. - TS_NARROWING_NOT_ALLOWED: Traffic selector narrowing not allowed for an HA-VPN tunnel. 
  enum Status {
    // A value indicating that the enum field is not set.
    UNDEFINED_STATUS = 0;

    // Cloud VPN is in the process of allocating all required resources (specifically, a borg task).
    ALLOCATING_RESOURCES = 320922816;

    // Auth error (e.g. bad shared secret).
    AUTHORIZATION_ERROR = 23580290;

    // Resources is being deallocated for the VPN tunnel.
    DEPROVISIONING = 428935662;

    // Secure session is successfully established with peer VPN.
    ESTABLISHED = 88852344;

    // Tunnel creation has failed and the tunnel is not ready to be used.
    FAILED = 455706685;

    // Successful first handshake with peer VPN.
    FIRST_HANDSHAKE = 191393000;

    // Handshake failed.
    NEGOTIATION_FAILURE = 360325868;

    // Deprecated, replaced by NO_INCOMING_PACKETS
    NETWORK_ERROR = 193912951;

    // No incoming packets from peer
    NO_INCOMING_PACKETS = 119983216;

    // Resource is being allocated for the VPN tunnel.
    PROVISIONING = 290896621;

    // Tunnel configuration was rejected, can be result of being denylisted.
    REJECTED = 174130302;

    // Tunnel is stopped due to its Forwarding Rules being deleted.
    STOPPED = 444276141;

    // Waiting to receive all VPN-related configs from user. Network, TargetVpnGateway, VpnTunnel, ForwardingRule and Route resources are needed to setup VPN tunnel.
    WAITING_FOR_FULL_CONFIG = 41640522;

  }

  // [Output Only] Creation timestamp in RFC3339 text format.
  optional string creation_timestamp = 30525366;

  // An optional description of this resource. Provide this property when you create the resource.
  optional string description = 422937596;

  // [Output Only] Detailed status message for the VPN tunnel.
  optional string detailed_status = 333501025;

  // [Output Only] The unique identifier for the resource. This identifier is defined by the server.
  optional uint64 id = 3355;

  // IKE protocol version to use when establishing the VPN tunnel with the peer VPN gateway. Acceptable IKE versions are 1 or 2. The default version is 2.
  optional int32 ike_version = 218376220;

  // [Output Only] Type of resource. Always compute#vpnTunnel for VPN tunnels.
  optional string kind = 3292052;

  // Local traffic selector to use when establishing the VPN tunnel with the peer VPN gateway. The value should be a CIDR formatted string, for example: 192.168.0.0/16. The ranges must be disjoint. Only IPv4 is supported.
  repeated string local_traffic_selector = 317314613;

  // Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
  optional string name = 3373707;

  // URL of the peer side external VPN gateway to which this VPN tunnel is connected. Provided by the client when the VPN tunnel is created. This field is exclusive with the field peerGcpGateway.
  optional string peer_external_gateway = 384956173;

  // The interface ID of the external VPN gateway to which this VPN tunnel is connected. Provided by the client when the VPN tunnel is created. Possible values are: `0`, `1`, `2`, `3`. The number of IDs in use depends on the external VPN gateway redundancy type.
  optional int32 peer_external_gateway_interface = 452768391;

  // URL of the peer side HA GCP VPN gateway to which this VPN tunnel is connected. Provided by the client when the VPN tunnel is created. This field can be used when creating highly available VPN from VPC network to VPC network, the field is exclusive with the field peerExternalGateway. If provided, the VPN tunnel will automatically use the same vpnGatewayInterface ID in the peer GCP VPN gateway.
  optional string peer_gcp_gateway = 281867452;

  // IP address of the peer VPN gateway. Only IPv4 is supported.
  optional string peer_ip = 383249700;

  // [Output Only] URL of the region where the VPN tunnel resides. You must specify this field as part of the HTTP request URL. It is not settable as a field in the request body.
  optional string region = 138946292;

  // Remote traffic selectors to use when establishing the VPN tunnel with the peer VPN gateway. The value should be a CIDR formatted string, for example: 192.168.0.0/16. The ranges should be disjoint. Only IPv4 is supported.
  repeated string remote_traffic_selector = 358887098;

  // URL of the router resource to be used for dynamic routing.
  optional string router = 148608841;

  // [Output Only] Server-defined URL for the resource.
  optional string self_link = 456214797;

  // Shared secret used to set the secure session between the Cloud VPN gateway and the peer VPN gateway.
  optional string shared_secret = 381932490;

  // Hash of the shared secret.
  optional string shared_secret_hash = 398881891;

  // [Output Only] The status of the VPN tunnel, which can be one of the following: - PROVISIONING: Resource is being allocated for the VPN tunnel. - WAITING_FOR_FULL_CONFIG: Waiting to receive all VPN-related configs from the user. Network, TargetVpnGateway, VpnTunnel, ForwardingRule, and Route resources are needed to setup the VPN tunnel. - FIRST_HANDSHAKE: Successful first handshake with the peer VPN. - ESTABLISHED: Secure session is successfully established with the peer VPN. - NETWORK_ERROR: Deprecated, replaced by NO_INCOMING_PACKETS - AUTHORIZATION_ERROR: Auth error (for example, bad shared secret). - NEGOTIATION_FAILURE: Handshake failed. - DEPROVISIONING: Resources are being deallocated for the VPN tunnel. - FAILED: Tunnel creation has failed and the tunnel is not ready to be used. - NO_INCOMING_PACKETS: No incoming packets from peer. - REJECTED: Tunnel configuration was rejected, can be result of being denied access. - ALLOCATING_RESOURCES: Cloud VPN is in the process of allocating all required resources. - STOPPED: Tunnel is stopped due to its Forwarding Rules being deleted for Classic VPN tunnels or the project is in frozen state. - PEER_IDENTITY_MISMATCH: Peer identity does not match peer IP, probably behind NAT. - TS_NARROWING_NOT_ALLOWED: Traffic selector narrowing not allowed for an HA-VPN tunnel.
  // Check the Status enum for the list of possible values.
  optional string status = 181260274;

  // URL of the Target VPN gateway with which this VPN tunnel is associated. Provided by the client when the VPN tunnel is created.
  optional string target_vpn_gateway = 532512843;

  // URL of the VPN gateway with which this VPN tunnel is associated. Provided by the client when the VPN tunnel is created. This must be used (instead of target_vpn_gateway) if a High Availability VPN gateway resource is created.
  optional string vpn_gateway = 406684153;

  // The interface ID of the VPN gateway with which this VPN tunnel is associated. Possible values are: `0`, `1`.
  optional int32 vpn_gateway_interface = 95979123;

}

//
message VpnTunnelAggregatedList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 3355;

  // A list of VpnTunnelsScopedList resources.
  map<string, VpnTunnelsScopedList> items = 100526016;

  // [Output Only] Type of resource. Always compute#vpnTunnel for VPN tunnels.
  optional string kind = 3292052;

  // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
  optional string next_page_token = 79797525;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 456214797;

  // [Output Only] Unreachable resources.
  repeated string unreachables = 243372063;

  // [Output Only] Informational warning message.
  optional Warning warning = 50704284;

}

// Contains a list of VpnTunnel resources.
message VpnTunnelList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 3355;

  // A list of VpnTunnel resources.
  repeated VpnTunnel items = 100526016;

  // [Output Only] Type of resource. Always compute#vpnTunnel for VPN tunnels.
  optional string kind = 3292052;

  // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
  optional string next_page_token = 79797525;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 456214797;

  // [Output Only] Informational warning message.
  optional Warning warning = 50704284;

}

//
message VpnTunnelsScopedList {
  // A list of VPN tunnels contained in this scope.
  repeated VpnTunnel vpn_tunnels = 163494080;

  // Informational warning which replaces the list of addresses when the list is empty.
  optional Warning warning = 50704284;

}

//
message WafExpressionSet {
  // A list of alternate IDs. The format should be: - E.g. XSS-stable Generic suffix like "stable" is particularly useful if a policy likes to avail newer set of expressions without having to change the policy. A given alias name can't be used for more than one entity set.
  repeated string aliases = 159207166;

  // List of available expressions.
  repeated WafExpressionSetExpression expressions = 175554779;

  // Google specified expression set ID. The format should be: - E.g. XSS-20170329 required
  optional string id = 3355;

}

//
message WafExpressionSetExpression {
  // Expression ID should uniquely identify the origin of the expression. E.g. owasp-crs-v020901-id973337 identifies Owasp core rule set version 2.9.1 rule id 973337. The ID could be used to determine the individual attack definition that has been detected. It could also be used to exclude it from the policy in case of false positive. required
  optional string id = 3355;

  // The sensitivity value associated with the WAF rule ID. This corresponds to the ModSecurity paranoia level, ranging from 1 to 4. 0 is reserved for opt-in only rules.
  optional int32 sensitivity = 27532959;

}

// A request message for GlobalOperations.Wait. See the method description for details.
message WaitGlobalOperationRequest {
  // Name of the Operations resource to return.
  string operation = 52090215 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

}

// A request message for RegionOperations.Wait. See the method description for details.
message WaitRegionOperationRequest {
  // Name of the Operations resource to return.
  string operation = 52090215 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Name of the region for this request.
  string region = 138946292 [(google.api.field_behavior) = REQUIRED];

}

// A request message for ZoneOperations.Wait. See the method description for details.
message WaitZoneOperationRequest {
  // Name of the Operations resource to return.
  string operation = 52090215 [(google.api.field_behavior) = REQUIRED];

  // Project ID for this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Name of the zone for this request.
  string zone = 3744684 [(google.api.field_behavior) = REQUIRED];

}

// [Output Only] Informational warning message.
message Warning {
  // [Output Only] A warning code, if applicable. For example, Compute Engine returns NO_RESULTS_ON_PAGE if there are no results in the response.
  enum Code {
    // A value indicating that the enum field is not set.
    UNDEFINED_CODE = 0;

    // Warning about failed cleanup of transient changes made by a failed operation.
    CLEANUP_FAILED = 150308440;

    // A link to a deprecated resource was created.
    DEPRECATED_RESOURCE_USED = 391835586;

    // When deploying and at least one of the resources has a type marked as deprecated
    DEPRECATED_TYPE_USED = 346526230;

    // The user created a boot disk that is larger than image size.
    DISK_SIZE_LARGER_THAN_IMAGE_SIZE = 369442967;

    // When deploying and at least one of the resources has a type marked as experimental
    EXPERIMENTAL_TYPE_USED = 451954443;

    // Warning that is present in an external api call
    EXTERNAL_API_WARNING = 175546307;

    // Warning that value of a field has been overridden. Deprecated unused field.
    FIELD_VALUE_OVERRIDEN = 329669423;

    // The operation involved use of an injected kernel, which is deprecated.
    INJECTED_KERNELS_DEPRECATED = 417377419;

    // A WEIGHTED_MAGLEV backend service is associated with a health check that is not of type HTTP/HTTPS/HTTP2.
    INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB = 401542606;

    // When deploying a deployment with a exceedingly large number of resources
    LARGE_DEPLOYMENT_WARNING = 481440678;

    // A resource depends on a missing type
    MISSING_TYPE_DEPENDENCY = 344505463;

    // The route's nextHopIp address is not assigned to an instance on the network.
    NEXT_HOP_ADDRESS_NOT_ASSIGNED = 324964999;

    // The route's next hop instance cannot ip forward.
    NEXT_HOP_CANNOT_IP_FORWARD = 383382887;

    // The route's nextHopInstance URL refers to an instance that does not have an ipv6 interface on the same network as the route.
    NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE = 146748434;

    // The route's nextHopInstance URL refers to an instance that does not exist.
    NEXT_HOP_INSTANCE_NOT_FOUND = 464250446;

    // The route's nextHopInstance URL refers to an instance that is not on the same network as the route.
    NEXT_HOP_INSTANCE_NOT_ON_NETWORK = 243758146;

    // The route's next hop instance does not have a status of RUNNING.
    NEXT_HOP_NOT_RUNNING = 417081265;

    // Error which is not critical. We decided to continue the process despite the mentioned error.
    NOT_CRITICAL_ERROR = 105763924;

    // No results are present on a particular list page.
    NO_RESULTS_ON_PAGE = 30036744;

    // Success is reported, but some results may be missing due to errors
    PARTIAL_SUCCESS = 39966469;

    // The user attempted to use a resource that requires a TOS they have not accepted.
    REQUIRED_TOS_AGREEMENT = 3745539;

    // Warning that a resource is in use.
    RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING = 496728641;

    // One or more of the resources set to auto-delete could not be deleted because they were in use.
    RESOURCE_NOT_DELETED = 168598460;

    // When a resource schema validation is ignored.
    SCHEMA_VALIDATION_IGNORED = 275245642;

    // Instance template used in instance group manager is valid as such, but its application does not make a lot of sense, because it allows only single instance in instance group.
    SINGLE_INSTANCE_PROPERTY_TEMPLATE = 268305617;

    // When undeclared properties in the schema are present
    UNDECLARED_PROPERTIES = 390513439;

    // A given scope cannot be reached.
    UNREACHABLE = 13328052;

  }

  // [Output Only] A warning code, if applicable. For example, Compute Engine returns NO_RESULTS_ON_PAGE if there are no results in the response.
  // Check the Code enum for the list of possible values.
  optional string code = 3059181;

  // [Output Only] Metadata about this warning in key: value format. For example: "data": [ { "key": "scope", "value": "zones/us-east1-d" } 
  repeated Data data = 3076010;

  // [Output Only] A human-readable description of the warning code.
  optional string message = 418054151;

}

//
message Warnings {
  // [Output Only] A warning code, if applicable. For example, Compute Engine returns NO_RESULTS_ON_PAGE if there are no results in the response.
  enum Code {
    // A value indicating that the enum field is not set.
    UNDEFINED_CODE = 0;

    // Warning about failed cleanup of transient changes made by a failed operation.
    CLEANUP_FAILED = 150308440;

    // A link to a deprecated resource was created.
    DEPRECATED_RESOURCE_USED = 391835586;

    // When deploying and at least one of the resources has a type marked as deprecated
    DEPRECATED_TYPE_USED = 346526230;

    // The user created a boot disk that is larger than image size.
    DISK_SIZE_LARGER_THAN_IMAGE_SIZE = 369442967;

    // When deploying and at least one of the resources has a type marked as experimental
    EXPERIMENTAL_TYPE_USED = 451954443;

    // Warning that is present in an external api call
    EXTERNAL_API_WARNING = 175546307;

    // Warning that value of a field has been overridden. Deprecated unused field.
    FIELD_VALUE_OVERRIDEN = 329669423;

    // The operation involved use of an injected kernel, which is deprecated.
    INJECTED_KERNELS_DEPRECATED = 417377419;

    // A WEIGHTED_MAGLEV backend service is associated with a health check that is not of type HTTP/HTTPS/HTTP2.
    INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB = 401542606;

    // When deploying a deployment with a exceedingly large number of resources
    LARGE_DEPLOYMENT_WARNING = 481440678;

    // A resource depends on a missing type
    MISSING_TYPE_DEPENDENCY = 344505463;

    // The route's nextHopIp address is not assigned to an instance on the network.
    NEXT_HOP_ADDRESS_NOT_ASSIGNED = 324964999;

    // The route's next hop instance cannot ip forward.
    NEXT_HOP_CANNOT_IP_FORWARD = 383382887;

    // The route's nextHopInstance URL refers to an instance that does not have an ipv6 interface on the same network as the route.
    NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE = 146748434;

    // The route's nextHopInstance URL refers to an instance that does not exist.
    NEXT_HOP_INSTANCE_NOT_FOUND = 464250446;

    // The route's nextHopInstance URL refers to an instance that is not on the same network as the route.
    NEXT_HOP_INSTANCE_NOT_ON_NETWORK = 243758146;

    // The route's next hop instance does not have a status of RUNNING.
    NEXT_HOP_NOT_RUNNING = 417081265;

    // Error which is not critical. We decided to continue the process despite the mentioned error.
    NOT_CRITICAL_ERROR = 105763924;

    // No results are present on a particular list page.
    NO_RESULTS_ON_PAGE = 30036744;

    // Success is reported, but some results may be missing due to errors
    PARTIAL_SUCCESS = 39966469;

    // The user attempted to use a resource that requires a TOS they have not accepted.
    REQUIRED_TOS_AGREEMENT = 3745539;

    // Warning that a resource is in use.
    RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING = 496728641;

    // One or more of the resources set to auto-delete could not be deleted because they were in use.
    RESOURCE_NOT_DELETED = 168598460;

    // When a resource schema validation is ignored.
    SCHEMA_VALIDATION_IGNORED = 275245642;

    // Instance template used in instance group manager is valid as such, but its application does not make a lot of sense, because it allows only single instance in instance group.
    SINGLE_INSTANCE_PROPERTY_TEMPLATE = 268305617;

    // When undeclared properties in the schema are present
    UNDECLARED_PROPERTIES = 390513439;

    // A given scope cannot be reached.
    UNREACHABLE = 13328052;

  }

  // [Output Only] A warning code, if applicable. For example, Compute Engine returns NO_RESULTS_ON_PAGE if there are no results in the response.
  // Check the Code enum for the list of possible values.
  optional string code = 3059181;

  // [Output Only] Metadata about this warning in key: value format. For example: "data": [ { "key": "scope", "value": "zones/us-east1-d" } 
  repeated Data data = 3076010;

  // [Output Only] A human-readable description of the warning code.
  optional string message = 418054151;

}

// In contrast to a single BackendService in HttpRouteAction to which all matching traffic is directed to, WeightedBackendService allows traffic to be split across multiple backend services. The volume of traffic for each backend service is proportional to the weight specified in each WeightedBackendService
message WeightedBackendService {
  // The full or partial URL to the default BackendService resource. Before forwarding the request to backendService, the load balancer applies any relevant headerActions specified as part of this backendServiceWeight.
  optional string backend_service = 306946058;

  // Specifies changes to request and response headers that need to take effect for the selected backendService. headerAction specified here take effect before headerAction in the enclosing HttpRouteRule, PathMatcher and UrlMap. headerAction is not supported for load balancers that have their loadBalancingScheme set to EXTERNAL. Not supported when the URL map is bound to a target gRPC proxy that has validateForProxyless field set to true.
  optional HttpHeaderAction header_action = 328077352;

  // Specifies the fraction of traffic sent to a backend service, computed as weight / (sum of all weightedBackendService weights in routeAction) . The selection of a backend service is determined only for new traffic. Once a user's request has been directed to a backend service, subsequent requests are sent to the same backend service as determined by the backend service's session affinity policy. The value must be from 0 to 1000.
  optional uint32 weight = 282149496;

}

//
message XpnHostList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 3355;

  // [Output Only] A list of shared VPC host project URLs.
  repeated Project items = 100526016;

  // [Output Only] Type of resource. Always compute#xpnHostList for lists of shared VPC hosts.
  optional string kind = 3292052;

  // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
  optional string next_page_token = 79797525;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 456214797;

  // [Output Only] Informational warning message.
  optional Warning warning = 50704284;

}

// Service resource (a.k.a service project) ID.
message XpnResourceId {
  // The type of the service resource.
  enum Type {
    // A value indicating that the enum field is not set.
    UNDEFINED_TYPE = 0;

    PROJECT = 408671993;

    XPN_RESOURCE_TYPE_UNSPECIFIED = 151607034;

  }

  // The ID of the service resource. In the case of projects, this field supports project id (e.g., my-project-123) and project number (e.g. 12345678).
  optional string id = 3355;

  // The type of the service resource.
  // Check the Type enum for the list of possible values.
  optional string type = 3575610;

}

// Represents a Zone resource. A zone is a deployment area. These deployment areas are subsets of a region. For example the zone us-east1-a is located in the us-east1 region. For more information, read Regions and Zones.
message Zone {
  // [Output Only] Status of the zone, either UP or DOWN.
  enum Status {
    // A value indicating that the enum field is not set.
    UNDEFINED_STATUS = 0;

    DOWN = 2104482;

    UP = 2715;

  }

  // [Output Only] Available cpu/platform selections for the zone.
  repeated string available_cpu_platforms = 175536531;

  // [Output Only] Creation timestamp in RFC3339 text format.
  optional string creation_timestamp = 30525366;

  // [Output Only] The deprecation status associated with this zone.
  optional DeprecationStatus deprecated = 515138995;

  // [Output Only] Textual description of the resource.
  optional string description = 422937596;

  // [Output Only] The unique identifier for the resource. This identifier is defined by the server.
  optional uint64 id = 3355;

  // [Output Only] Type of the resource. Always compute#zone for zones.
  optional string kind = 3292052;

  // [Output Only] Name of the resource.
  optional string name = 3373707;

  // [Output Only] Full URL reference to the region which hosts the zone.
  optional string region = 138946292;

  // [Output Only] Server-defined URL for the resource.
  optional string self_link = 456214797;

  // [Output Only] Status of the zone, either UP or DOWN.
  // Check the Status enum for the list of possible values.
  optional string status = 181260274;

  // [Output Only] Reserved for future use.
  optional bool supports_pzs = 83983214;

}

// Contains a list of zone resources.
message ZoneList {
  // [Output Only] Unique identifier for the resource; defined by the server.
  optional string id = 3355;

  // A list of Zone resources.
  repeated Zone items = 100526016;

  // Type of resource.
  optional string kind = 3292052;

  // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
  optional string next_page_token = 79797525;

  // [Output Only] Server-defined URL for this resource.
  optional string self_link = 456214797;

  // [Output Only] Informational warning message.
  optional Warning warning = 50704284;

}

//
message ZoneSetLabelsRequest {
  // The fingerprint of the previous set of labels for this resource, used to detect conflicts. The fingerprint is initially generated by Compute Engine and changes after every request to modify or update labels. You must always provide an up-to-date fingerprint hash in order to update or change labels. Make a get() request to the resource to get the latest fingerprint.
  optional string label_fingerprint = 178124825;

  // The labels to set for this resource.
  map<string, string> labels = 500195327;

}

//
message ZoneSetPolicyRequest {
  // Flatten Policy to create a backwacd compatible wire-format. Deprecated. Use 'policy' to specify bindings.
  repeated Binding bindings = 403251854;

  // Flatten Policy to create a backward compatible wire-format. Deprecated. Use 'policy' to specify the etag.
  optional string etag = 3123477;

  // REQUIRED: The complete policy to be applied to the 'resource'. The size of the policy is limited to a few 10s of KB. An empty policy is in general a valid policy but certain services (like Projects) might reject them.
  optional Policy policy = 91071794;

}

//
// Services
//
// The AcceleratorTypes API.
service AcceleratorTypes {
  option (google.api.default_host) =
    "compute.googleapis.com";

  option (google.api.oauth_scopes) =
    "https://www.googleapis.com/auth/compute.readonly,"
    "https://www.googleapis.com/auth/compute,"
    "https://www.googleapis.com/auth/cloud-platform";

  // Retrieves an aggregated list of accelerator types.
  rpc AggregatedList(AggregatedListAcceleratorTypesRequest) returns (AcceleratorTypeAggregatedList) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/aggregated/acceleratorTypes"
    };
    option (google.api.method_signature) = "project";
  }

  // Returns the specified accelerator type.
  rpc Get(GetAcceleratorTypeRequest) returns (AcceleratorType) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/zones/{zone}/acceleratorTypes/{accelerator_type}"
    };
    option (google.api.method_signature) = "project,zone,accelerator_type";
  }

  // Retrieves a list of accelerator types that are available to the specified project.
  rpc List(ListAcceleratorTypesRequest) returns (AcceleratorTypeList) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/zones/{zone}/acceleratorTypes"
    };
    option (google.api.method_signature) = "project,zone";
  }

}

// The Addresses API.
service Addresses {
  option (google.api.default_host) =
    "compute.googleapis.com";

  option (google.api.oauth_scopes) =
    "https://www.googleapis.com/auth/compute,"
    "https://www.googleapis.com/auth/cloud-platform";

  // Retrieves an aggregated list of addresses.
  rpc AggregatedList(AggregatedListAddressesRequest) returns (AddressAggregatedList) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/aggregated/addresses"
    };
    option (google.api.method_signature) = "project";
  }

  // Deletes the specified address resource.
  rpc Delete(DeleteAddressRequest) returns (Operation) {
    option (google.api.http) = {
      delete: "/compute/v1/projects/{project}/regions/{region}/addresses/{address}"
    };
    option (google.api.method_signature) = "project,region,address";
    option (google.cloud.operation_service) = "RegionOperations";
  }

  // Returns the specified address resource.
  rpc Get(GetAddressRequest) returns (Address) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/regions/{region}/addresses/{address}"
    };
    option (google.api.method_signature) = "project,region,address";
  }

  // Creates an address resource in the specified project by using the data included in the request.
  rpc Insert(InsertAddressRequest) returns (Operation) {
    option (google.api.http) = {
      body: "address_resource"
      post: "/compute/v1/projects/{project}/regions/{region}/addresses"
    };
    option (google.api.method_signature) = "project,region,address_resource";
    option (google.cloud.operation_service) = "RegionOperations";
  }

  // Retrieves a list of addresses contained within the specified region.
  rpc List(ListAddressesRequest) returns (AddressList) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/regions/{region}/addresses"
    };
    option (google.api.method_signature) = "project,region";
  }

  // Sets the labels on an Address. To learn more about labels, read the Labeling Resources documentation.
  rpc SetLabels(SetLabelsAddressRequest) returns (Operation) {
    option (google.api.http) = {
      body: "region_set_labels_request_resource"
      post: "/compute/v1/projects/{project}/regions/{region}/addresses/{resource}/setLabels"
    };
    option (google.api.method_signature) = "project,region,resource,region_set_labels_request_resource";
    option (google.cloud.operation_service) = "RegionOperations";
  }

}

// The Autoscalers API.
service Autoscalers {
  option (google.api.default_host) =
    "compute.googleapis.com";

  option (google.api.oauth_scopes) =
    "https://www.googleapis.com/auth/compute,"
    "https://www.googleapis.com/auth/cloud-platform";

  // Retrieves an aggregated list of autoscalers.
  rpc AggregatedList(AggregatedListAutoscalersRequest) returns (AutoscalerAggregatedList) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/aggregated/autoscalers"
    };
    option (google.api.method_signature) = "project";
  }

  // Deletes the specified autoscaler.
  rpc Delete(DeleteAutoscalerRequest) returns (Operation) {
    option (google.api.http) = {
      delete: "/compute/v1/projects/{project}/zones/{zone}/autoscalers/{autoscaler}"
    };
    option (google.api.method_signature) = "project,zone,autoscaler";
    option (google.cloud.operation_service) = "ZoneOperations";
  }

  // Returns the specified autoscaler resource.
  rpc Get(GetAutoscalerRequest) returns (Autoscaler) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/zones/{zone}/autoscalers/{autoscaler}"
    };
    option (google.api.method_signature) = "project,zone,autoscaler";
  }

  // Creates an autoscaler in the specified project using the data included in the request.
  rpc Insert(InsertAutoscalerRequest) returns (Operation) {
    option (google.api.http) = {
      body: "autoscaler_resource"
      post: "/compute/v1/projects/{project}/zones/{zone}/autoscalers"
    };
    option (google.api.method_signature) = "project,zone,autoscaler_resource";
    option (google.cloud.operation_service) = "ZoneOperations";
  }

  // Retrieves a list of autoscalers contained within the specified zone.
  rpc List(ListAutoscalersRequest) returns (AutoscalerList) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/zones/{zone}/autoscalers"
    };
    option (google.api.method_signature) = "project,zone";
  }

  // Updates an autoscaler in the specified project using the data included in the request. This method supports PATCH semantics and uses the JSON merge patch format and processing rules.
  rpc Patch(PatchAutoscalerRequest) returns (Operation) {
    option (google.api.http) = {
      body: "autoscaler_resource"
      patch: "/compute/v1/projects/{project}/zones/{zone}/autoscalers"
    };
    option (google.api.method_signature) = "project,zone,autoscaler_resource";
    option (google.cloud.operation_service) = "ZoneOperations";
  }

  // Updates an autoscaler in the specified project using the data included in the request.
  rpc Update(UpdateAutoscalerRequest) returns (Operation) {
    option (google.api.http) = {
      body: "autoscaler_resource"
      put: "/compute/v1/projects/{project}/zones/{zone}/autoscalers"
    };
    option (google.api.method_signature) = "project,zone,autoscaler_resource";
    option (google.cloud.operation_service) = "ZoneOperations";
  }

}

// The BackendBuckets API.
service BackendBuckets {
  option (google.api.default_host) =
    "compute.googleapis.com";

  option (google.api.oauth_scopes) =
    "https://www.googleapis.com/auth/compute,"
    "https://www.googleapis.com/auth/cloud-platform";

  // Adds a key for validating requests with signed URLs for this backend bucket.
  rpc AddSignedUrlKey(AddSignedUrlKeyBackendBucketRequest) returns (Operation) {
    option (google.api.http) = {
      body: "signed_url_key_resource"
      post: "/compute/v1/projects/{project}/global/backendBuckets/{backend_bucket}/addSignedUrlKey"
    };
    option (google.api.method_signature) = "project,backend_bucket,signed_url_key_resource";
    option (google.cloud.operation_service) = "GlobalOperations";
  }

  // Deletes the specified BackendBucket resource.
  rpc Delete(DeleteBackendBucketRequest) returns (Operation) {
    option (google.api.http) = {
      delete: "/compute/v1/projects/{project}/global/backendBuckets/{backend_bucket}"
    };
    option (google.api.method_signature) = "project,backend_bucket";
    option (google.cloud.operation_service) = "GlobalOperations";
  }

  // Deletes a key for validating requests with signed URLs for this backend bucket.
  rpc DeleteSignedUrlKey(DeleteSignedUrlKeyBackendBucketRequest) returns (Operation) {
    option (google.api.http) = {
      post: "/compute/v1/projects/{project}/global/backendBuckets/{backend_bucket}/deleteSignedUrlKey"
    };
    option (google.api.method_signature) = "project,backend_bucket,key_name";
    option (google.cloud.operation_service) = "GlobalOperations";
  }

  // Returns the specified BackendBucket resource.
  rpc Get(GetBackendBucketRequest) returns (BackendBucket) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/global/backendBuckets/{backend_bucket}"
    };
    option (google.api.method_signature) = "project,backend_bucket";
  }

  // Creates a BackendBucket resource in the specified project using the data included in the request.
  rpc Insert(InsertBackendBucketRequest) returns (Operation) {
    option (google.api.http) = {
      body: "backend_bucket_resource"
      post: "/compute/v1/projects/{project}/global/backendBuckets"
    };
    option (google.api.method_signature) = "project,backend_bucket_resource";
    option (google.cloud.operation_service) = "GlobalOperations";
  }

  // Retrieves the list of BackendBucket resources available to the specified project.
  rpc List(ListBackendBucketsRequest) returns (BackendBucketList) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/global/backendBuckets"
    };
    option (google.api.method_signature) = "project";
  }

  // Updates the specified BackendBucket resource with the data included in the request. This method supports PATCH semantics and uses the JSON merge patch format and processing rules.
  rpc Patch(PatchBackendBucketRequest) returns (Operation) {
    option (google.api.http) = {
      body: "backend_bucket_resource"
      patch: "/compute/v1/projects/{project}/global/backendBuckets/{backend_bucket}"
    };
    option (google.api.method_signature) = "project,backend_bucket,backend_bucket_resource";
    option (google.cloud.operation_service) = "GlobalOperations";
  }

  // Sets the edge security policy for the specified backend bucket.
  rpc SetEdgeSecurityPolicy(SetEdgeSecurityPolicyBackendBucketRequest) returns (Operation) {
    option (google.api.http) = {
      body: "security_policy_reference_resource"
      post: "/compute/v1/projects/{project}/global/backendBuckets/{backend_bucket}/setEdgeSecurityPolicy"
    };
    option (google.api.method_signature) = "project,backend_bucket,security_policy_reference_resource";
    option (google.cloud.operation_service) = "GlobalOperations";
  }

  // Updates the specified BackendBucket resource with the data included in the request.
  rpc Update(UpdateBackendBucketRequest) returns (Operation) {
    option (google.api.http) = {
      body: "backend_bucket_resource"
      put: "/compute/v1/projects/{project}/global/backendBuckets/{backend_bucket}"
    };
    option (google.api.method_signature) = "project,backend_bucket,backend_bucket_resource";
    option (google.cloud.operation_service) = "GlobalOperations";
  }

}

// The BackendServices API.
service BackendServices {
  option (google.api.default_host) =
    "compute.googleapis.com";

  option (google.api.oauth_scopes) =
    "https://www.googleapis.com/auth/compute,"
    "https://www.googleapis.com/auth/cloud-platform";

  // Adds a key for validating requests with signed URLs for this backend service.
  rpc AddSignedUrlKey(AddSignedUrlKeyBackendServiceRequest) returns (Operation) {
    option (google.api.http) = {
      body: "signed_url_key_resource"
      post: "/compute/v1/projects/{project}/global/backendServices/{backend_service}/addSignedUrlKey"
    };
    option (google.api.method_signature) = "project,backend_service,signed_url_key_resource";
    option (google.cloud.operation_service) = "GlobalOperations";
  }

  // Retrieves the list of all BackendService resources, regional and global, available to the specified project.
  rpc AggregatedList(AggregatedListBackendServicesRequest) returns (BackendServiceAggregatedList) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/aggregated/backendServices"
    };
    option (google.api.method_signature) = "project";
  }

  // Deletes the specified BackendService resource.
  rpc Delete(DeleteBackendServiceRequest) returns (Operation) {
    option (google.api.http) = {
      delete: "/compute/v1/projects/{project}/global/backendServices/{backend_service}"
    };
    option (google.api.method_signature) = "project,backend_service";
    option (google.cloud.operation_service) = "GlobalOperations";
  }

  // Deletes a key for validating requests with signed URLs for this backend service.
  rpc DeleteSignedUrlKey(DeleteSignedUrlKeyBackendServiceRequest) returns (Operation) {
    option (google.api.http) = {
      post: "/compute/v1/projects/{project}/global/backendServices/{backend_service}/deleteSignedUrlKey"
    };
    option (google.api.method_signature) = "project,backend_service,key_name";
    option (google.cloud.operation_service) = "GlobalOperations";
  }

  // Returns the specified BackendService resource.
  rpc Get(GetBackendServiceRequest) returns (BackendService) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/global/backendServices/{backend_service}"
    };
    option (google.api.method_signature) = "project,backend_service";
  }

  // Gets the most recent health check results for this BackendService. Example request body: { "group": "/zones/us-east1-b/instanceGroups/lb-backend-example" }
  rpc GetHealth(GetHealthBackendServiceRequest) returns (BackendServiceGroupHealth) {
    option (google.api.http) = {
      body: "resource_group_reference_resource"
      post: "/compute/v1/projects/{project}/global/backendServices/{backend_service}/getHealth"
    };
    option (google.api.method_signature) = "project,backend_service,resource_group_reference_resource";
  }

  // Gets the access control policy for a resource. May be empty if no such policy or resource exists.
  rpc GetIamPolicy(GetIamPolicyBackendServiceRequest) returns (Policy) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/global/backendServices/{resource}/getIamPolicy"
    };
    option (google.api.method_signature) = "project,resource";
  }

  // Creates a BackendService resource in the specified project using the data included in the request. For more information, see Backend services overview .
  rpc Insert(InsertBackendServiceRequest) returns (Operation) {
    option (google.api.http) = {
      body: "backend_service_resource"
      post: "/compute/v1/projects/{project}/global/backendServices"
    };
    option (google.api.method_signature) = "project,backend_service_resource";
    option (google.cloud.operation_service) = "GlobalOperations";
  }

  // Retrieves the list of BackendService resources available to the specified project.
  rpc List(ListBackendServicesRequest) returns (BackendServiceList) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/global/backendServices"
    };
    option (google.api.method_signature) = "project";
  }

  // Patches the specified BackendService resource with the data included in the request. For more information, see Backend services overview. This method supports PATCH semantics and uses the JSON merge patch format and processing rules.
  rpc Patch(PatchBackendServiceRequest) returns (Operation) {
    option (google.api.http) = {
      body: "backend_service_resource"
      patch: "/compute/v1/projects/{project}/global/backendServices/{backend_service}"
    };
    option (google.api.method_signature) = "project,backend_service,backend_service_resource";
    option (google.cloud.operation_service) = "GlobalOperations";
  }

  // Sets the edge security policy for the specified backend service.
  rpc SetEdgeSecurityPolicy(SetEdgeSecurityPolicyBackendServiceRequest) returns (Operation) {
    option (google.api.http) = {
      body: "security_policy_reference_resource"
      post: "/compute/v1/projects/{project}/global/backendServices/{backend_service}/setEdgeSecurityPolicy"
    };
    option (google.api.method_signature) = "project,backend_service,security_policy_reference_resource";
    option (google.cloud.operation_service) = "GlobalOperations";
  }

  // Sets the access control policy on the specified resource. Replaces any existing policy.
  rpc SetIamPolicy(SetIamPolicyBackendServiceRequest) returns (Policy) {
    option (google.api.http) = {
      body: "global_set_policy_request_resource"
      post: "/compute/v1/projects/{project}/global/backendServices/{resource}/setIamPolicy"
    };
    option (google.api.method_signature) = "project,resource,global_set_policy_request_resource";
  }

  // Sets the Google Cloud Armor security policy for the specified backend service. For more information, see Google Cloud Armor Overview
  rpc SetSecurityPolicy(SetSecurityPolicyBackendServiceRequest) returns (Operation) {
    option (google.api.http) = {
      body: "security_policy_reference_resource"
      post: "/compute/v1/projects/{project}/global/backendServices/{backend_service}/setSecurityPolicy"
    };
    option (google.api.method_signature) = "project,backend_service,security_policy_reference_resource";
    option (google.cloud.operation_service) = "GlobalOperations";
  }

  // Updates the specified BackendService resource with the data included in the request. For more information, see Backend services overview.
  rpc Update(UpdateBackendServiceRequest) returns (Operation) {
    option (google.api.http) = {
      body: "backend_service_resource"
      put: "/compute/v1/projects/{project}/global/backendServices/{backend_service}"
    };
    option (google.api.method_signature) = "project,backend_service,backend_service_resource";
    option (google.cloud.operation_service) = "GlobalOperations";
  }

}

// The DiskTypes API.
service DiskTypes {
  option (google.api.default_host) =
    "compute.googleapis.com";

  option (google.api.oauth_scopes) =
    "https://www.googleapis.com/auth/compute.readonly,"
    "https://www.googleapis.com/auth/compute,"
    "https://www.googleapis.com/auth/cloud-platform";

  // Retrieves an aggregated list of disk types.
  rpc AggregatedList(AggregatedListDiskTypesRequest) returns (DiskTypeAggregatedList) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/aggregated/diskTypes"
    };
    option (google.api.method_signature) = "project";
  }

  // Returns the specified disk type.
  rpc Get(GetDiskTypeRequest) returns (DiskType) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/zones/{zone}/diskTypes/{disk_type}"
    };
    option (google.api.method_signature) = "project,zone,disk_type";
  }

  // Retrieves a list of disk types available to the specified project.
  rpc List(ListDiskTypesRequest) returns (DiskTypeList) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/zones/{zone}/diskTypes"
    };
    option (google.api.method_signature) = "project,zone";
  }

}

// The Disks API.
service Disks {
  option (google.api.default_host) =
    "compute.googleapis.com";

  option (google.api.oauth_scopes) =
    "https://www.googleapis.com/auth/compute,"
    "https://www.googleapis.com/auth/cloud-platform";

  // Adds existing resource policies to a disk. You can only add one policy which will be applied to this disk for scheduling snapshot creation.
  rpc AddResourcePolicies(AddResourcePoliciesDiskRequest) returns (Operation) {
    option (google.api.http) = {
      body: "disks_add_resource_policies_request_resource"
      post: "/compute/v1/projects/{project}/zones/{zone}/disks/{disk}/addResourcePolicies"
    };
    option (google.api.method_signature) = "project,zone,disk,disks_add_resource_policies_request_resource";
    option (google.cloud.operation_service) = "ZoneOperations";
  }

  // Retrieves an aggregated list of persistent disks.
  rpc AggregatedList(AggregatedListDisksRequest) returns (DiskAggregatedList) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/aggregated/disks"
    };
    option (google.api.method_signature) = "project";
  }

  // Creates a snapshot of a specified persistent disk. For regular snapshot creation, consider using snapshots.insert instead, as that method supports more features, such as creating snapshots in a project different from the source disk project.
  rpc CreateSnapshot(CreateSnapshotDiskRequest) returns (Operation) {
    option (google.api.http) = {
      body: "snapshot_resource"
      post: "/compute/v1/projects/{project}/zones/{zone}/disks/{disk}/createSnapshot"
    };
    option (google.api.method_signature) = "project,zone,disk,snapshot_resource";
    option (google.cloud.operation_service) = "ZoneOperations";
  }

  // Deletes the specified persistent disk. Deleting a disk removes its data permanently and is irreversible. However, deleting a disk does not delete any snapshots previously made from the disk. You must separately delete snapshots.
  rpc Delete(DeleteDiskRequest) returns (Operation) {
    option (google.api.http) = {
      delete: "/compute/v1/projects/{project}/zones/{zone}/disks/{disk}"
    };
    option (google.api.method_signature) = "project,zone,disk";
    option (google.cloud.operation_service) = "ZoneOperations";
  }

  // Returns the specified persistent disk.
  rpc Get(GetDiskRequest) returns (Disk) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/zones/{zone}/disks/{disk}"
    };
    option (google.api.method_signature) = "project,zone,disk";
  }

  // Gets the access control policy for a resource. May be empty if no such policy or resource exists.
  rpc GetIamPolicy(GetIamPolicyDiskRequest) returns (Policy) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/zones/{zone}/disks/{resource}/getIamPolicy"
    };
    option (google.api.method_signature) = "project,zone,resource";
  }

  // Creates a persistent disk in the specified project using the data in the request. You can create a disk from a source (sourceImage, sourceSnapshot, or sourceDisk) or create an empty 500 GB data disk by omitting all properties. You can also create a disk that is larger than the default size by specifying the sizeGb property.
  rpc Insert(InsertDiskRequest) returns (Operation) {
    option (google.api.http) = {
      body: "disk_resource"
      post: "/compute/v1/projects/{project}/zones/{zone}/disks"
    };
    option (google.api.method_signature) = "project,zone,disk_resource";
    option (google.cloud.operation_service) = "ZoneOperations";
  }

  // Retrieves a list of persistent disks contained within the specified zone.
  rpc List(ListDisksRequest) returns (DiskList) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/zones/{zone}/disks"
    };
    option (google.api.method_signature) = "project,zone";
  }

  // Removes resource policies from a disk.
  rpc RemoveResourcePolicies(RemoveResourcePoliciesDiskRequest) returns (Operation) {
    option (google.api.http) = {
      body: "disks_remove_resource_policies_request_resource"
      post: "/compute/v1/projects/{project}/zones/{zone}/disks/{disk}/removeResourcePolicies"
    };
    option (google.api.method_signature) = "project,zone,disk,disks_remove_resource_policies_request_resource";
    option (google.cloud.operation_service) = "ZoneOperations";
  }

  // Resizes the specified persistent disk. You can only increase the size of the disk.
  rpc Resize(ResizeDiskRequest) returns (Operation) {
    option (google.api.http) = {
      body: "disks_resize_request_resource"
      post: "/compute/v1/projects/{project}/zones/{zone}/disks/{disk}/resize"
    };
    option (google.api.method_signature) = "project,zone,disk,disks_resize_request_resource";
    option (google.cloud.operation_service) = "ZoneOperations";
  }

  // Sets the access control policy on the specified resource. Replaces any existing policy.
  rpc SetIamPolicy(SetIamPolicyDiskRequest) returns (Policy) {
    option (google.api.http) = {
      body: "zone_set_policy_request_resource"
      post: "/compute/v1/projects/{project}/zones/{zone}/disks/{resource}/setIamPolicy"
    };
    option (google.api.method_signature) = "project,zone,resource,zone_set_policy_request_resource";
  }

  // Sets the labels on a disk. To learn more about labels, read the Labeling Resources documentation.
  rpc SetLabels(SetLabelsDiskRequest) returns (Operation) {
    option (google.api.http) = {
      body: "zone_set_labels_request_resource"
      post: "/compute/v1/projects/{project}/zones/{zone}/disks/{resource}/setLabels"
    };
    option (google.api.method_signature) = "project,zone,resource,zone_set_labels_request_resource";
    option (google.cloud.operation_service) = "ZoneOperations";
  }

  // Returns permissions that a caller has on the specified resource.
  rpc TestIamPermissions(TestIamPermissionsDiskRequest) returns (TestPermissionsResponse) {
    option (google.api.http) = {
      body: "test_permissions_request_resource"
      post: "/compute/v1/projects/{project}/zones/{zone}/disks/{resource}/testIamPermissions"
    };
    option (google.api.method_signature) = "project,zone,resource,test_permissions_request_resource";
  }

  // Updates the specified disk with the data included in the request. The update is performed only on selected fields included as part of update-mask. Only the following fields can be modified: user_license.
  rpc Update(UpdateDiskRequest) returns (Operation) {
    option (google.api.http) = {
      body: "disk_resource"
      patch: "/compute/v1/projects/{project}/zones/{zone}/disks/{disk}"
    };
    option (google.api.method_signature) = "project,zone,disk,disk_resource";
    option (google.cloud.operation_service) = "ZoneOperations";
  }

}

// The ExternalVpnGateways API.
service ExternalVpnGateways {
  option (google.api.default_host) =
    "compute.googleapis.com";

  option (google.api.oauth_scopes) =
    "https://www.googleapis.com/auth/compute,"
    "https://www.googleapis.com/auth/cloud-platform";

  // Deletes the specified externalVpnGateway.
  rpc Delete(DeleteExternalVpnGatewayRequest) returns (Operation) {
    option (google.api.http) = {
      delete: "/compute/v1/projects/{project}/global/externalVpnGateways/{external_vpn_gateway}"
    };
    option (google.api.method_signature) = "project,external_vpn_gateway";
    option (google.cloud.operation_service) = "GlobalOperations";
  }

  // Returns the specified externalVpnGateway. Get a list of available externalVpnGateways by making a list() request.
  rpc Get(GetExternalVpnGatewayRequest) returns (ExternalVpnGateway) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/global/externalVpnGateways/{external_vpn_gateway}"
    };
    option (google.api.method_signature) = "project,external_vpn_gateway";
  }

  // Creates a ExternalVpnGateway in the specified project using the data included in the request.
  rpc Insert(InsertExternalVpnGatewayRequest) returns (Operation) {
    option (google.api.http) = {
      body: "external_vpn_gateway_resource"
      post: "/compute/v1/projects/{project}/global/externalVpnGateways"
    };
    option (google.api.method_signature) = "project,external_vpn_gateway_resource";
    option (google.cloud.operation_service) = "GlobalOperations";
  }

  // Retrieves the list of ExternalVpnGateway available to the specified project.
  rpc List(ListExternalVpnGatewaysRequest) returns (ExternalVpnGatewayList) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/global/externalVpnGateways"
    };
    option (google.api.method_signature) = "project";
  }

  // Sets the labels on an ExternalVpnGateway. To learn more about labels, read the Labeling Resources documentation.
  rpc SetLabels(SetLabelsExternalVpnGatewayRequest) returns (Operation) {
    option (google.api.http) = {
      body: "global_set_labels_request_resource"
      post: "/compute/v1/projects/{project}/global/externalVpnGateways/{resource}/setLabels"
    };
    option (google.api.method_signature) = "project,resource,global_set_labels_request_resource";
    option (google.cloud.operation_service) = "GlobalOperations";
  }

  // Returns permissions that a caller has on the specified resource.
  rpc TestIamPermissions(TestIamPermissionsExternalVpnGatewayRequest) returns (TestPermissionsResponse) {
    option (google.api.http) = {
      body: "test_permissions_request_resource"
      post: "/compute/v1/projects/{project}/global/externalVpnGateways/{resource}/testIamPermissions"
    };
    option (google.api.method_signature) = "project,resource,test_permissions_request_resource";
  }

}

// The FirewallPolicies API.
service FirewallPolicies {
  option (google.api.default_host) =
    "compute.googleapis.com";

  option (google.api.oauth_scopes) =
    "https://www.googleapis.com/auth/compute,"
    "https://www.googleapis.com/auth/cloud-platform";

  // Inserts an association for the specified firewall policy.
  rpc AddAssociation(AddAssociationFirewallPolicyRequest) returns (Operation) {
    option (google.api.http) = {
      body: "firewall_policy_association_resource"
      post: "/compute/v1/locations/global/firewallPolicies/{firewall_policy}/addAssociation"
    };
    option (google.api.method_signature) = "firewall_policy,firewall_policy_association_resource";
    option (google.cloud.operation_service) = "GlobalOrganizationOperations";
  }

  // Inserts a rule into a firewall policy.
  rpc AddRule(AddRuleFirewallPolicyRequest) returns (Operation) {
    option (google.api.http) = {
      body: "firewall_policy_rule_resource"
      post: "/compute/v1/locations/global/firewallPolicies/{firewall_policy}/addRule"
    };
    option (google.api.method_signature) = "firewall_policy,firewall_policy_rule_resource";
    option (google.cloud.operation_service) = "GlobalOrganizationOperations";
  }

  // Copies rules to the specified firewall policy.
  rpc CloneRules(CloneRulesFirewallPolicyRequest) returns (Operation) {
    option (google.api.http) = {
      post: "/compute/v1/locations/global/firewallPolicies/{firewall_policy}/cloneRules"
    };
    option (google.api.method_signature) = "firewall_policy";
    option (google.cloud.operation_service) = "GlobalOrganizationOperations";
  }

  // Deletes the specified policy.
  rpc Delete(DeleteFirewallPolicyRequest) returns (Operation) {
    option (google.api.http) = {
      delete: "/compute/v1/locations/global/firewallPolicies/{firewall_policy}"
    };
    option (google.api.method_signature) = "firewall_policy";
    option (google.cloud.operation_service) = "GlobalOrganizationOperations";
  }

  // Returns the specified firewall policy.
  rpc Get(GetFirewallPolicyRequest) returns (FirewallPolicy) {
    option (google.api.http) = {
      get: "/compute/v1/locations/global/firewallPolicies/{firewall_policy}"
    };
    option (google.api.method_signature) = "firewall_policy";
  }

  // Gets an association with the specified name.
  rpc GetAssociation(GetAssociationFirewallPolicyRequest) returns (FirewallPolicyAssociation) {
    option (google.api.http) = {
      get: "/compute/v1/locations/global/firewallPolicies/{firewall_policy}/getAssociation"
    };
    option (google.api.method_signature) = "firewall_policy";
  }

  // Gets the access control policy for a resource. May be empty if no such policy or resource exists.
  rpc GetIamPolicy(GetIamPolicyFirewallPolicyRequest) returns (Policy) {
    option (google.api.http) = {
      get: "/compute/v1/locations/global/firewallPolicies/{resource}/getIamPolicy"
    };
    option (google.api.method_signature) = "resource";
  }

  // Gets a rule of the specified priority.
  rpc GetRule(GetRuleFirewallPolicyRequest) returns (FirewallPolicyRule) {
    option (google.api.http) = {
      get: "/compute/v1/locations/global/firewallPolicies/{firewall_policy}/getRule"
    };
    option (google.api.method_signature) = "firewall_policy";
  }

  // Creates a new policy in the specified project using the data included in the request.
  rpc Insert(InsertFirewallPolicyRequest) returns (Operation) {
    option (google.api.http) = {
      body: "firewall_policy_resource"
      post: "/compute/v1/locations/global/firewallPolicies"
    };
    option (google.api.method_signature) = "parent_id,firewall_policy_resource";
    option (google.cloud.operation_service) = "GlobalOrganizationOperations";
  }

  // Lists all the policies that have been configured for the specified folder or organization.
  rpc List(ListFirewallPoliciesRequest) returns (FirewallPolicyList) {
    option (google.api.http) = {
      get: "/compute/v1/locations/global/firewallPolicies"
    };
    option (google.api.method_signature) = "";
  }

  // Lists associations of a specified target, i.e., organization or folder.
  rpc ListAssociations(ListAssociationsFirewallPolicyRequest) returns (FirewallPoliciesListAssociationsResponse) {
    option (google.api.http) = {
      get: "/compute/v1/locations/global/firewallPolicies/listAssociations"
    };
    option (google.api.method_signature) = "";
  }

  // Moves the specified firewall policy.
  rpc Move(MoveFirewallPolicyRequest) returns (Operation) {
    option (google.api.http) = {
      post: "/compute/v1/locations/global/firewallPolicies/{firewall_policy}/move"
    };
    option (google.api.method_signature) = "firewall_policy,parent_id";
    option (google.cloud.operation_service) = "GlobalOrganizationOperations";
  }

  // Patches the specified policy with the data included in the request.
  rpc Patch(PatchFirewallPolicyRequest) returns (Operation) {
    option (google.api.http) = {
      body: "firewall_policy_resource"
      patch: "/compute/v1/locations/global/firewallPolicies/{firewall_policy}"
    };
    option (google.api.method_signature) = "firewall_policy,firewall_policy_resource";
    option (google.cloud.operation_service) = "GlobalOrganizationOperations";
  }

  // Patches a rule of the specified priority.
  rpc PatchRule(PatchRuleFirewallPolicyRequest) returns (Operation) {
    option (google.api.http) = {
      body: "firewall_policy_rule_resource"
      post: "/compute/v1/locations/global/firewallPolicies/{firewall_policy}/patchRule"
    };
    option (google.api.method_signature) = "firewall_policy,firewall_policy_rule_resource";
    option (google.cloud.operation_service) = "GlobalOrganizationOperations";
  }

  // Removes an association for the specified firewall policy.
  rpc RemoveAssociation(RemoveAssociationFirewallPolicyRequest) returns (Operation) {
    option (google.api.http) = {
      post: "/compute/v1/locations/global/firewallPolicies/{firewall_policy}/removeAssociation"
    };
    option (google.api.method_signature) = "firewall_policy";
    option (google.cloud.operation_service) = "GlobalOrganizationOperations";
  }

  // Deletes a rule of the specified priority.
  rpc RemoveRule(RemoveRuleFirewallPolicyRequest) returns (Operation) {
    option (google.api.http) = {
      post: "/compute/v1/locations/global/firewallPolicies/{firewall_policy}/removeRule"
    };
    option (google.api.method_signature) = "firewall_policy";
    option (google.cloud.operation_service) = "GlobalOrganizationOperations";
  }

  // Sets the access control policy on the specified resource. Replaces any existing policy.
  rpc SetIamPolicy(SetIamPolicyFirewallPolicyRequest) returns (Policy) {
    option (google.api.http) = {
      body: "global_organization_set_policy_request_resource"
      post: "/compute/v1/locations/global/firewallPolicies/{resource}/setIamPolicy"
    };
    option (google.api.method_signature) = "resource,global_organization_set_policy_request_resource";
  }

  // Returns permissions that a caller has on the specified resource.
  rpc TestIamPermissions(TestIamPermissionsFirewallPolicyRequest) returns (TestPermissionsResponse) {
    option (google.api.http) = {
      body: "test_permissions_request_resource"
      post: "/compute/v1/locations/global/firewallPolicies/{resource}/testIamPermissions"
    };
    option (google.api.method_signature) = "resource,test_permissions_request_resource";
  }

}

// The Firewalls API.
service Firewalls {
  option (google.api.default_host) =
    "compute.googleapis.com";

  option (google.api.oauth_scopes) =
    "https://www.googleapis.com/auth/compute,"
    "https://www.googleapis.com/auth/cloud-platform";

  // Deletes the specified firewall.
  rpc Delete(DeleteFirewallRequest) returns (Operation) {
    option (google.api.http) = {
      delete: "/compute/v1/projects/{project}/global/firewalls/{firewall}"
    };
    option (google.api.method_signature) = "project,firewall";
    option (google.cloud.operation_service) = "GlobalOperations";
  }

  // Returns the specified firewall.
  rpc Get(GetFirewallRequest) returns (Firewall) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/global/firewalls/{firewall}"
    };
    option (google.api.method_signature) = "project,firewall";
  }

  // Creates a firewall rule in the specified project using the data included in the request.
  rpc Insert(InsertFirewallRequest) returns (Operation) {
    option (google.api.http) = {
      body: "firewall_resource"
      post: "/compute/v1/projects/{project}/global/firewalls"
    };
    option (google.api.method_signature) = "project,firewall_resource";
    option (google.cloud.operation_service) = "GlobalOperations";
  }

  // Retrieves the list of firewall rules available to the specified project.
  rpc List(ListFirewallsRequest) returns (FirewallList) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/global/firewalls"
    };
    option (google.api.method_signature) = "project";
  }

  // Updates the specified firewall rule with the data included in the request. This method supports PATCH semantics and uses the JSON merge patch format and processing rules.
  rpc Patch(PatchFirewallRequest) returns (Operation) {
    option (google.api.http) = {
      body: "firewall_resource"
      patch: "/compute/v1/projects/{project}/global/firewalls/{firewall}"
    };
    option (google.api.method_signature) = "project,firewall,firewall_resource";
    option (google.cloud.operation_service) = "GlobalOperations";
  }

  // Updates the specified firewall rule with the data included in the request. Note that all fields will be updated if using PUT, even fields that are not specified. To update individual fields, please use PATCH instead.
  rpc Update(UpdateFirewallRequest) returns (Operation) {
    option (google.api.http) = {
      body: "firewall_resource"
      put: "/compute/v1/projects/{project}/global/firewalls/{firewall}"
    };
    option (google.api.method_signature) = "project,firewall,firewall_resource";
    option (google.cloud.operation_service) = "GlobalOperations";
  }

}

// The ForwardingRules API.
service ForwardingRules {
  option (google.api.default_host) =
    "compute.googleapis.com";

  option (google.api.oauth_scopes) =
    "https://www.googleapis.com/auth/compute,"
    "https://www.googleapis.com/auth/cloud-platform";

  // Retrieves an aggregated list of forwarding rules.
  rpc AggregatedList(AggregatedListForwardingRulesRequest) returns (ForwardingRuleAggregatedList) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/aggregated/forwardingRules"
    };
    option (google.api.method_signature) = "project";
  }

  // Deletes the specified ForwardingRule resource.
  rpc Delete(DeleteForwardingRuleRequest) returns (Operation) {
    option (google.api.http) = {
      delete: "/compute/v1/projects/{project}/regions/{region}/forwardingRules/{forwarding_rule}"
    };
    option (google.api.method_signature) = "project,region,forwarding_rule";
    option (google.cloud.operation_service) = "RegionOperations";
  }

  // Returns the specified ForwardingRule resource.
  rpc Get(GetForwardingRuleRequest) returns (ForwardingRule) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/regions/{region}/forwardingRules/{forwarding_rule}"
    };
    option (google.api.method_signature) = "project,region,forwarding_rule";
  }

  // Creates a ForwardingRule resource in the specified project and region using the data included in the request.
  rpc Insert(InsertForwardingRuleRequest) returns (Operation) {
    option (google.api.http) = {
      body: "forwarding_rule_resource"
      post: "/compute/v1/projects/{project}/regions/{region}/forwardingRules"
    };
    option (google.api.method_signature) = "project,region,forwarding_rule_resource";
    option (google.cloud.operation_service) = "RegionOperations";
  }

  // Retrieves a list of ForwardingRule resources available to the specified project and region.
  rpc List(ListForwardingRulesRequest) returns (ForwardingRuleList) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/regions/{region}/forwardingRules"
    };
    option (google.api.method_signature) = "project,region";
  }

  // Updates the specified forwarding rule with the data included in the request. This method supports PATCH semantics and uses the JSON merge patch format and processing rules. Currently, you can only patch the network_tier field.
  rpc Patch(PatchForwardingRuleRequest) returns (Operation) {
    option (google.api.http) = {
      body: "forwarding_rule_resource"
      patch: "/compute/v1/projects/{project}/regions/{region}/forwardingRules/{forwarding_rule}"
    };
    option (google.api.method_signature) = "project,region,forwarding_rule,forwarding_rule_resource";
    option (google.cloud.operation_service) = "RegionOperations";
  }

  // Sets the labels on the specified resource. To learn more about labels, read the Labeling Resources documentation.
  rpc SetLabels(SetLabelsForwardingRuleRequest) returns (Operation) {
    option (google.api.http) = {
      body: "region_set_labels_request_resource"
      post: "/compute/v1/projects/{project}/regions/{region}/forwardingRules/{resource}/setLabels"
    };
    option (google.api.method_signature) = "project,region,resource,region_set_labels_request_resource";
    option (google.cloud.operation_service) = "RegionOperations";
  }

  // Changes target URL for forwarding rule. The new target should be of the same type as the old target.
  rpc SetTarget(SetTargetForwardingRuleRequest) returns (Operation) {
    option (google.api.http) = {
      body: "target_reference_resource"
      post: "/compute/v1/projects/{project}/regions/{region}/forwardingRules/{forwarding_rule}/setTarget"
    };
    option (google.api.method_signature) = "project,region,forwarding_rule,target_reference_resource";
    option (google.cloud.operation_service) = "RegionOperations";
  }

}

// The GlobalAddresses API.
service GlobalAddresses {
  option (google.api.default_host) =
    "compute.googleapis.com";

  option (google.api.oauth_scopes) =
    "https://www.googleapis.com/auth/compute,"
    "https://www.googleapis.com/auth/cloud-platform";

  // Deletes the specified address resource.
  rpc Delete(DeleteGlobalAddressRequest) returns (Operation) {
    option (google.api.http) = {
      delete: "/compute/v1/projects/{project}/global/addresses/{address}"
    };
    option (google.api.method_signature) = "project,address";
    option (google.cloud.operation_service) = "GlobalOperations";
  }

  // Returns the specified address resource.
  rpc Get(GetGlobalAddressRequest) returns (Address) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/global/addresses/{address}"
    };
    option (google.api.method_signature) = "project,address";
  }

  // Creates an address resource in the specified project by using the data included in the request.
  rpc Insert(InsertGlobalAddressRequest) returns (Operation) {
    option (google.api.http) = {
      body: "address_resource"
      post: "/compute/v1/projects/{project}/global/addresses"
    };
    option (google.api.method_signature) = "project,address_resource";
    option (google.cloud.operation_service) = "GlobalOperations";
  }

  // Retrieves a list of global addresses.
  rpc List(ListGlobalAddressesRequest) returns (AddressList) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/global/addresses"
    };
    option (google.api.method_signature) = "project";
  }

  // Sets the labels on a GlobalAddress. To learn more about labels, read the Labeling Resources documentation.
  rpc SetLabels(SetLabelsGlobalAddressRequest) returns (Operation) {
    option (google.api.http) = {
      body: "global_set_labels_request_resource"
      post: "/compute/v1/projects/{project}/global/addresses/{resource}/setLabels"
    };
    option (google.api.method_signature) = "project,resource,global_set_labels_request_resource";
    option (google.cloud.operation_service) = "GlobalOperations";
  }

}

// The GlobalForwardingRules API.
service GlobalForwardingRules {
  option (google.api.default_host) =
    "compute.googleapis.com";

  option (google.api.oauth_scopes) =
    "https://www.googleapis.com/auth/compute,"
    "https://www.googleapis.com/auth/cloud-platform";

  // Deletes the specified GlobalForwardingRule resource.
  rpc Delete(DeleteGlobalForwardingRuleRequest) returns (Operation) {
    option (google.api.http) = {
      delete: "/compute/v1/projects/{project}/global/forwardingRules/{forwarding_rule}"
    };
    option (google.api.method_signature) = "project,forwarding_rule";
    option (google.cloud.operation_service) = "GlobalOperations";
  }

  // Returns the specified GlobalForwardingRule resource. Gets a list of available forwarding rules by making a list() request.
  rpc Get(GetGlobalForwardingRuleRequest) returns (ForwardingRule) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/global/forwardingRules/{forwarding_rule}"
    };
    option (google.api.method_signature) = "project,forwarding_rule";
  }

  // Creates a GlobalForwardingRule resource in the specified project using the data included in the request.
  rpc Insert(InsertGlobalForwardingRuleRequest) returns (Operation) {
    option (google.api.http) = {
      body: "forwarding_rule_resource"
      post: "/compute/v1/projects/{project}/global/forwardingRules"
    };
    option (google.api.method_signature) = "project,forwarding_rule_resource";
    option (google.cloud.operation_service) = "GlobalOperations";
  }

  // Retrieves a list of GlobalForwardingRule resources available to the specified project.
  rpc List(ListGlobalForwardingRulesRequest) returns (ForwardingRuleList) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/global/forwardingRules"
    };
    option (google.api.method_signature) = "project";
  }

  // Updates the specified forwarding rule with the data included in the request. This method supports PATCH semantics and uses the JSON merge patch format and processing rules. Currently, you can only patch the network_tier field.
  rpc Patch(PatchGlobalForwardingRuleRequest) returns (Operation) {
    option (google.api.http) = {
      body: "forwarding_rule_resource"
      patch: "/compute/v1/projects/{project}/global/forwardingRules/{forwarding_rule}"
    };
    option (google.api.method_signature) = "project,forwarding_rule,forwarding_rule_resource";
    option (google.cloud.operation_service) = "GlobalOperations";
  }

  // Sets the labels on the specified resource. To learn more about labels, read the Labeling resources documentation.
  rpc SetLabels(SetLabelsGlobalForwardingRuleRequest) returns (Operation) {
    option (google.api.http) = {
      body: "global_set_labels_request_resource"
      post: "/compute/v1/projects/{project}/global/forwardingRules/{resource}/setLabels"
    };
    option (google.api.method_signature) = "project,resource,global_set_labels_request_resource";
    option (google.cloud.operation_service) = "GlobalOperations";
  }

  // Changes target URL for the GlobalForwardingRule resource. The new target should be of the same type as the old target.
  rpc SetTarget(SetTargetGlobalForwardingRuleRequest) returns (Operation) {
    option (google.api.http) = {
      body: "target_reference_resource"
      post: "/compute/v1/projects/{project}/global/forwardingRules/{forwarding_rule}/setTarget"
    };
    option (google.api.method_signature) = "project,forwarding_rule,target_reference_resource";
    option (google.cloud.operation_service) = "GlobalOperations";
  }

}

// The GlobalNetworkEndpointGroups API.
service GlobalNetworkEndpointGroups {
  option (google.api.default_host) =
    "compute.googleapis.com";

  option (google.api.oauth_scopes) =
    "https://www.googleapis.com/auth/compute,"
    "https://www.googleapis.com/auth/cloud-platform";

  // Attach a network endpoint to the specified network endpoint group.
  rpc AttachNetworkEndpoints(AttachNetworkEndpointsGlobalNetworkEndpointGroupRequest) returns (Operation) {
    option (google.api.http) = {
      body: "global_network_endpoint_groups_attach_endpoints_request_resource"
      post: "/compute/v1/projects/{project}/global/networkEndpointGroups/{network_endpoint_group}/attachNetworkEndpoints"
    };
    option (google.api.method_signature) = "project,network_endpoint_group,global_network_endpoint_groups_attach_endpoints_request_resource";
    option (google.cloud.operation_service) = "GlobalOperations";
  }

  // Deletes the specified network endpoint group.Note that the NEG cannot be deleted if there are backend services referencing it.
  rpc Delete(DeleteGlobalNetworkEndpointGroupRequest) returns (Operation) {
    option (google.api.http) = {
      delete: "/compute/v1/projects/{project}/global/networkEndpointGroups/{network_endpoint_group}"
    };
    option (google.api.method_signature) = "project,network_endpoint_group";
    option (google.cloud.operation_service) = "GlobalOperations";
  }

  // Detach the network endpoint from the specified network endpoint group.
  rpc DetachNetworkEndpoints(DetachNetworkEndpointsGlobalNetworkEndpointGroupRequest) returns (Operation) {
    option (google.api.http) = {
      body: "global_network_endpoint_groups_detach_endpoints_request_resource"
      post: "/compute/v1/projects/{project}/global/networkEndpointGroups/{network_endpoint_group}/detachNetworkEndpoints"
    };
    option (google.api.method_signature) = "project,network_endpoint_group,global_network_endpoint_groups_detach_endpoints_request_resource";
    option (google.cloud.operation_service) = "GlobalOperations";
  }

  // Returns the specified network endpoint group.
  rpc Get(GetGlobalNetworkEndpointGroupRequest) returns (NetworkEndpointGroup) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/global/networkEndpointGroups/{network_endpoint_group}"
    };
    option (google.api.method_signature) = "project,network_endpoint_group";
  }

  // Creates a network endpoint group in the specified project using the parameters that are included in the request.
  rpc Insert(InsertGlobalNetworkEndpointGroupRequest) returns (Operation) {
    option (google.api.http) = {
      body: "network_endpoint_group_resource"
      post: "/compute/v1/projects/{project}/global/networkEndpointGroups"
    };
    option (google.api.method_signature) = "project,network_endpoint_group_resource";
    option (google.cloud.operation_service) = "GlobalOperations";
  }

  // Retrieves the list of network endpoint groups that are located in the specified project.
  rpc List(ListGlobalNetworkEndpointGroupsRequest) returns (NetworkEndpointGroupList) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/global/networkEndpointGroups"
    };
    option (google.api.method_signature) = "project";
  }

  // Lists the network endpoints in the specified network endpoint group.
  rpc ListNetworkEndpoints(ListNetworkEndpointsGlobalNetworkEndpointGroupsRequest) returns (NetworkEndpointGroupsListNetworkEndpoints) {
    option (google.api.http) = {
      post: "/compute/v1/projects/{project}/global/networkEndpointGroups/{network_endpoint_group}/listNetworkEndpoints"
    };
    option (google.api.method_signature) = "project,network_endpoint_group";
  }

}

// The GlobalOperations API.
service GlobalOperations {
  option (google.api.default_host) =
    "compute.googleapis.com";

  option (google.api.oauth_scopes) =
    "https://www.googleapis.com/auth/compute,"
    "https://www.googleapis.com/auth/cloud-platform";

  // Retrieves an aggregated list of all operations.
  rpc AggregatedList(AggregatedListGlobalOperationsRequest) returns (OperationAggregatedList) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/aggregated/operations"
    };
    option (google.api.method_signature) = "project";
  }

  // Deletes the specified Operations resource.
  rpc Delete(DeleteGlobalOperationRequest) returns (DeleteGlobalOperationResponse) {
    option (google.api.http) = {
      delete: "/compute/v1/projects/{project}/global/operations/{operation}"
    };
    option (google.api.method_signature) = "project,operation";
  }

  // Retrieves the specified Operations resource.
  rpc Get(GetGlobalOperationRequest) returns (Operation) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/global/operations/{operation}"
    };
    option (google.api.method_signature) = "project,operation";
    option (google.cloud.operation_polling_method) = true;
  }

  // Retrieves a list of Operation resources contained within the specified project.
  rpc List(ListGlobalOperationsRequest) returns (OperationList) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/global/operations"
    };
    option (google.api.method_signature) = "project";
  }

  // Waits for the specified Operation resource to return as `DONE` or for the request to approach the 2 minute deadline, and retrieves the specified Operation resource. This method differs from the `GET` method in that it waits for no more than the default deadline (2 minutes) and then returns the current state of the operation, which might be `DONE` or still in progress. This method is called on a best-effort basis. Specifically: - In uncommon cases, when the server is overloaded, the request might return before the default deadline is reached, or might return after zero seconds. - If the default deadline is reached, there is no guarantee that the operation is actually done when the method returns. Be prepared to retry if the operation is not `DONE`. 
  rpc Wait(WaitGlobalOperationRequest) returns (Operation) {
    option (google.api.http) = {
      post: "/compute/v1/projects/{project}/global/operations/{operation}/wait"
    };
    option (google.api.method_signature) = "project,operation";
  }

}

// The GlobalOrganizationOperations API.
service GlobalOrganizationOperations {
  option (google.api.default_host) =
    "compute.googleapis.com";

  option (google.api.oauth_scopes) =
    "https://www.googleapis.com/auth/compute,"
    "https://www.googleapis.com/auth/cloud-platform";

  // Deletes the specified Operations resource.
  rpc Delete(DeleteGlobalOrganizationOperationRequest) returns (DeleteGlobalOrganizationOperationResponse) {
    option (google.api.http) = {
      delete: "/compute/v1/locations/global/operations/{operation}"
    };
    option (google.api.method_signature) = "operation";
  }

  // Retrieves the specified Operations resource. Gets a list of operations by making a `list()` request.
  rpc Get(GetGlobalOrganizationOperationRequest) returns (Operation) {
    option (google.api.http) = {
      get: "/compute/v1/locations/global/operations/{operation}"
    };
    option (google.api.method_signature) = "operation";
    option (google.cloud.operation_polling_method) = true;
  }

  // Retrieves a list of Operation resources contained within the specified organization.
  rpc List(ListGlobalOrganizationOperationsRequest) returns (OperationList) {
    option (google.api.http) = {
      get: "/compute/v1/locations/global/operations"
    };
    option (google.api.method_signature) = "";
  }

}

// The GlobalPublicDelegatedPrefixes API.
service GlobalPublicDelegatedPrefixes {
  option (google.api.default_host) =
    "compute.googleapis.com";

  option (google.api.oauth_scopes) =
    "https://www.googleapis.com/auth/compute,"
    "https://www.googleapis.com/auth/cloud-platform";

  // Deletes the specified global PublicDelegatedPrefix.
  rpc Delete(DeleteGlobalPublicDelegatedPrefixeRequest) returns (Operation) {
    option (google.api.http) = {
      delete: "/compute/v1/projects/{project}/global/publicDelegatedPrefixes/{public_delegated_prefix}"
    };
    option (google.api.method_signature) = "project,public_delegated_prefix";
    option (google.cloud.operation_service) = "GlobalOperations";
  }

  // Returns the specified global PublicDelegatedPrefix resource.
  rpc Get(GetGlobalPublicDelegatedPrefixeRequest) returns (PublicDelegatedPrefix) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/global/publicDelegatedPrefixes/{public_delegated_prefix}"
    };
    option (google.api.method_signature) = "project,public_delegated_prefix";
  }

  // Creates a global PublicDelegatedPrefix in the specified project using the parameters that are included in the request.
  rpc Insert(InsertGlobalPublicDelegatedPrefixeRequest) returns (Operation) {
    option (google.api.http) = {
      body: "public_delegated_prefix_resource"
      post: "/compute/v1/projects/{project}/global/publicDelegatedPrefixes"
    };
    option (google.api.method_signature) = "project,public_delegated_prefix_resource";
    option (google.cloud.operation_service) = "GlobalOperations";
  }

  // Lists the global PublicDelegatedPrefixes for a project.
  rpc List(ListGlobalPublicDelegatedPrefixesRequest) returns (PublicDelegatedPrefixList) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/global/publicDelegatedPrefixes"
    };
    option (google.api.method_signature) = "project";
  }

  // Patches the specified global PublicDelegatedPrefix resource with the data included in the request. This method supports PATCH semantics and uses JSON merge patch format and processing rules.
  rpc Patch(PatchGlobalPublicDelegatedPrefixeRequest) returns (Operation) {
    option (google.api.http) = {
      body: "public_delegated_prefix_resource"
      patch: "/compute/v1/projects/{project}/global/publicDelegatedPrefixes/{public_delegated_prefix}"
    };
    option (google.api.method_signature) = "project,public_delegated_prefix,public_delegated_prefix_resource";
    option (google.cloud.operation_service) = "GlobalOperations";
  }

}

// The HealthChecks API.
service HealthChecks {
  option (google.api.default_host) =
    "compute.googleapis.com";

  option (google.api.oauth_scopes) =
    "https://www.googleapis.com/auth/compute,"
    "https://www.googleapis.com/auth/cloud-platform";

  // Retrieves the list of all HealthCheck resources, regional and global, available to the specified project.
  rpc AggregatedList(AggregatedListHealthChecksRequest) returns (HealthChecksAggregatedList) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/aggregated/healthChecks"
    };
    option (google.api.method_signature) = "project";
  }

  // Deletes the specified HealthCheck resource.
  rpc Delete(DeleteHealthCheckRequest) returns (Operation) {
    option (google.api.http) = {
      delete: "/compute/v1/projects/{project}/global/healthChecks/{health_check}"
    };
    option (google.api.method_signature) = "project,health_check";
    option (google.cloud.operation_service) = "GlobalOperations";
  }

  // Returns the specified HealthCheck resource.
  rpc Get(GetHealthCheckRequest) returns (HealthCheck) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/global/healthChecks/{health_check}"
    };
    option (google.api.method_signature) = "project,health_check";
  }

  // Creates a HealthCheck resource in the specified project using the data included in the request.
  rpc Insert(InsertHealthCheckRequest) returns (Operation) {
    option (google.api.http) = {
      body: "health_check_resource"
      post: "/compute/v1/projects/{project}/global/healthChecks"
    };
    option (google.api.method_signature) = "project,health_check_resource";
    option (google.cloud.operation_service) = "GlobalOperations";
  }

  // Retrieves the list of HealthCheck resources available to the specified project.
  rpc List(ListHealthChecksRequest) returns (HealthCheckList) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/global/healthChecks"
    };
    option (google.api.method_signature) = "project";
  }

  // Updates a HealthCheck resource in the specified project using the data included in the request. This method supports PATCH semantics and uses the JSON merge patch format and processing rules.
  rpc Patch(PatchHealthCheckRequest) returns (Operation) {
    option (google.api.http) = {
      body: "health_check_resource"
      patch: "/compute/v1/projects/{project}/global/healthChecks/{health_check}"
    };
    option (google.api.method_signature) = "project,health_check,health_check_resource";
    option (google.cloud.operation_service) = "GlobalOperations";
  }

  // Updates a HealthCheck resource in the specified project using the data included in the request.
  rpc Update(UpdateHealthCheckRequest) returns (Operation) {
    option (google.api.http) = {
      body: "health_check_resource"
      put: "/compute/v1/projects/{project}/global/healthChecks/{health_check}"
    };
    option (google.api.method_signature) = "project,health_check,health_check_resource";
    option (google.cloud.operation_service) = "GlobalOperations";
  }

}

// The ImageFamilyViews API.
service ImageFamilyViews {
  option (google.api.default_host) =
    "compute.googleapis.com";

  option (google.api.oauth_scopes) =
    "https://www.googleapis.com/auth/compute.readonly,"
    "https://www.googleapis.com/auth/compute,"
    "https://www.googleapis.com/auth/cloud-platform";

  // Returns the latest image that is part of an image family, is not deprecated and is rolled out in the specified zone.
  rpc Get(GetImageFamilyViewRequest) returns (ImageFamilyView) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/zones/{zone}/imageFamilyViews/{family}"
    };
    option (google.api.method_signature) = "project,zone,family";
  }

}

// The Images API.
service Images {
  option (google.api.default_host) =
    "compute.googleapis.com";

  option (google.api.oauth_scopes) =
    "https://www.googleapis.com/auth/compute,"
    "https://www.googleapis.com/auth/cloud-platform";

  // Deletes the specified image.
  rpc Delete(DeleteImageRequest) returns (Operation) {
    option (google.api.http) = {
      delete: "/compute/v1/projects/{project}/global/images/{image}"
    };
    option (google.api.method_signature) = "project,image";
    option (google.cloud.operation_service) = "GlobalOperations";
  }

  // Sets the deprecation status of an image. If an empty request body is given, clears the deprecation status instead.
  rpc Deprecate(DeprecateImageRequest) returns (Operation) {
    option (google.api.http) = {
      body: "deprecation_status_resource"
      post: "/compute/v1/projects/{project}/global/images/{image}/deprecate"
    };
    option (google.api.method_signature) = "project,image,deprecation_status_resource";
    option (google.cloud.operation_service) = "GlobalOperations";
  }

  // Returns the specified image.
  rpc Get(GetImageRequest) returns (Image) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/global/images/{image}"
    };
    option (google.api.method_signature) = "project,image";
  }

  // Returns the latest image that is part of an image family and is not deprecated. For more information on image families, see Public image families documentation.
  rpc GetFromFamily(GetFromFamilyImageRequest) returns (Image) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/global/images/family/{family}"
    };
    option (google.api.method_signature) = "project,family";
  }

  // Gets the access control policy for a resource. May be empty if no such policy or resource exists.
  rpc GetIamPolicy(GetIamPolicyImageRequest) returns (Policy) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/global/images/{resource}/getIamPolicy"
    };
    option (google.api.method_signature) = "project,resource";
  }

  // Creates an image in the specified project using the data included in the request.
  rpc Insert(InsertImageRequest) returns (Operation) {
    option (google.api.http) = {
      body: "image_resource"
      post: "/compute/v1/projects/{project}/global/images"
    };
    option (google.api.method_signature) = "project,image_resource";
    option (google.cloud.operation_service) = "GlobalOperations";
  }

  // Retrieves the list of custom images available to the specified project. Custom images are images you create that belong to your project. This method does not get any images that belong to other projects, including publicly-available images, like Debian 8. If you want to get a list of publicly-available images, use this method to make a request to the respective image project, such as debian-cloud or windows-cloud.
  rpc List(ListImagesRequest) returns (ImageList) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/global/images"
    };
    option (google.api.method_signature) = "project";
  }

  // Patches the specified image with the data included in the request. Only the following fields can be modified: family, description, deprecation status.
  rpc Patch(PatchImageRequest) returns (Operation) {
    option (google.api.http) = {
      body: "image_resource"
      patch: "/compute/v1/projects/{project}/global/images/{image}"
    };
    option (google.api.method_signature) = "project,image,image_resource";
    option (google.cloud.operation_service) = "GlobalOperations";
  }

  // Sets the access control policy on the specified resource. Replaces any existing policy.
  rpc SetIamPolicy(SetIamPolicyImageRequest) returns (Policy) {
    option (google.api.http) = {
      body: "global_set_policy_request_resource"
      post: "/compute/v1/projects/{project}/global/images/{resource}/setIamPolicy"
    };
    option (google.api.method_signature) = "project,resource,global_set_policy_request_resource";
  }

  // Sets the labels on an image. To learn more about labels, read the Labeling Resources documentation.
  rpc SetLabels(SetLabelsImageRequest) returns (Operation) {
    option (google.api.http) = {
      body: "global_set_labels_request_resource"
      post: "/compute/v1/projects/{project}/global/images/{resource}/setLabels"
    };
    option (google.api.method_signature) = "project,resource,global_set_labels_request_resource";
    option (google.cloud.operation_service) = "GlobalOperations";
  }

  // Returns permissions that a caller has on the specified resource.
  rpc TestIamPermissions(TestIamPermissionsImageRequest) returns (TestPermissionsResponse) {
    option (google.api.http) = {
      body: "test_permissions_request_resource"
      post: "/compute/v1/projects/{project}/global/images/{resource}/testIamPermissions"
    };
    option (google.api.method_signature) = "project,resource,test_permissions_request_resource";
  }

}

// The InstanceGroupManagers API.
service InstanceGroupManagers {
  option (google.api.default_host) =
    "compute.googleapis.com";

  option (google.api.oauth_scopes) =
    "https://www.googleapis.com/auth/compute,"
    "https://www.googleapis.com/auth/cloud-platform";

  // Flags the specified instances to be removed from the managed instance group. Abandoning an instance does not delete the instance, but it does remove the instance from any target pools that are applied by the managed instance group. This method reduces the targetSize of the managed instance group by the number of instances that you abandon. This operation is marked as DONE when the action is scheduled even if the instances have not yet been removed from the group. You must separately verify the status of the abandoning action with the listmanagedinstances method. If the group is part of a backend service that has enabled connection draining, it can take up to 60 seconds after the connection draining duration has elapsed before the VM instance is removed or deleted. You can specify a maximum of 1000 instances with this method per request.
  rpc AbandonInstances(AbandonInstancesInstanceGroupManagerRequest) returns (Operation) {
    option (google.api.http) = {
      body: "instance_group_managers_abandon_instances_request_resource"
      post: "/compute/v1/projects/{project}/zones/{zone}/instanceGroupManagers/{instance_group_manager}/abandonInstances"
    };
    option (google.api.method_signature) = "project,zone,instance_group_manager,instance_group_managers_abandon_instances_request_resource";
    option (google.cloud.operation_service) = "ZoneOperations";
  }

  // Retrieves the list of managed instance groups and groups them by zone.
  rpc AggregatedList(AggregatedListInstanceGroupManagersRequest) returns (InstanceGroupManagerAggregatedList) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/aggregated/instanceGroupManagers"
    };
    option (google.api.method_signature) = "project";
  }

  // Applies changes to selected instances on the managed instance group. This method can be used to apply new overrides and/or new versions.
  rpc ApplyUpdatesToInstances(ApplyUpdatesToInstancesInstanceGroupManagerRequest) returns (Operation) {
    option (google.api.http) = {
      body: "instance_group_managers_apply_updates_request_resource"
      post: "/compute/v1/projects/{project}/zones/{zone}/instanceGroupManagers/{instance_group_manager}/applyUpdatesToInstances"
    };
    option (google.api.method_signature) = "project,zone,instance_group_manager,instance_group_managers_apply_updates_request_resource";
    option (google.cloud.operation_service) = "ZoneOperations";
  }

  // Creates instances with per-instance configurations in this managed instance group. Instances are created using the current instance template. The create instances operation is marked DONE if the createInstances request is successful. The underlying actions take additional time. You must separately verify the status of the creating or actions with the listmanagedinstances method.
  rpc CreateInstances(CreateInstancesInstanceGroupManagerRequest) returns (Operation) {
    option (google.api.http) = {
      body: "instance_group_managers_create_instances_request_resource"
      post: "/compute/v1/projects/{project}/zones/{zone}/instanceGroupManagers/{instance_group_manager}/createInstances"
    };
    option (google.api.method_signature) = "project,zone,instance_group_manager,instance_group_managers_create_instances_request_resource";
    option (google.cloud.operation_service) = "ZoneOperations";
  }

  // Deletes the specified managed instance group and all of the instances in that group. Note that the instance group must not belong to a backend service. Read Deleting an instance group for more information.
  rpc Delete(DeleteInstanceGroupManagerRequest) returns (Operation) {
    option (google.api.http) = {
      delete: "/compute/v1/projects/{project}/zones/{zone}/instanceGroupManagers/{instance_group_manager}"
    };
    option (google.api.method_signature) = "project,zone,instance_group_manager";
    option (google.cloud.operation_service) = "ZoneOperations";
  }

  // Flags the specified instances in the managed instance group for immediate deletion. The instances are also removed from any target pools of which they were a member. This method reduces the targetSize of the managed instance group by the number of instances that you delete. This operation is marked as DONE when the action is scheduled even if the instances are still being deleted. You must separately verify the status of the deleting action with the listmanagedinstances method. If the group is part of a backend service that has enabled connection draining, it can take up to 60 seconds after the connection draining duration has elapsed before the VM instance is removed or deleted. You can specify a maximum of 1000 instances with this method per request.
  rpc DeleteInstances(DeleteInstancesInstanceGroupManagerRequest) returns (Operation) {
    option (google.api.http) = {
      body: "instance_group_managers_delete_instances_request_resource"
      post: "/compute/v1/projects/{project}/zones/{zone}/instanceGroupManagers/{instance_group_manager}/deleteInstances"
    };
    option (google.api.method_signature) = "project,zone,instance_group_manager,instance_group_managers_delete_instances_request_resource";
    option (google.cloud.operation_service) = "ZoneOperations";
  }

  // Deletes selected per-instance configurations for the managed instance group.
  rpc DeletePerInstanceConfigs(DeletePerInstanceConfigsInstanceGroupManagerRequest) returns (Operation) {
    option (google.api.http) = {
      body: "instance_group_managers_delete_per_instance_configs_req_resource"
      post: "/compute/v1/projects/{project}/zones/{zone}/instanceGroupManagers/{instance_group_manager}/deletePerInstanceConfigs"
    };
    option (google.api.method_signature) = "project,zone,instance_group_manager,instance_group_managers_delete_per_instance_configs_req_resource";
    option (google.cloud.operation_service) = "ZoneOperations";
  }

  // Returns all of the details about the specified managed instance group.
  rpc Get(GetInstanceGroupManagerRequest) returns (InstanceGroupManager) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/zones/{zone}/instanceGroupManagers/{instance_group_manager}"
    };
    option (google.api.method_signature) = "project,zone,instance_group_manager";
  }

  // Creates a managed instance group using the information that you specify in the request. After the group is created, instances in the group are created using the specified instance template. This operation is marked as DONE when the group is created even if the instances in the group have not yet been created. You must separately verify the status of the individual instances with the listmanagedinstances method. A managed instance group can have up to 1000 VM instances per group. Please contact Cloud Support if you need an increase in this limit.
  rpc Insert(InsertInstanceGroupManagerRequest) returns (Operation) {
    option (google.api.http) = {
      body: "instance_group_manager_resource"
      post: "/compute/v1/projects/{project}/zones/{zone}/instanceGroupManagers"
    };
    option (google.api.method_signature) = "project,zone,instance_group_manager_resource";
    option (google.cloud.operation_service) = "ZoneOperations";
  }

  // Retrieves a list of managed instance groups that are contained within the specified project and zone.
  rpc List(ListInstanceGroupManagersRequest) returns (InstanceGroupManagerList) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/zones/{zone}/instanceGroupManagers"
    };
    option (google.api.method_signature) = "project,zone";
  }

  // Lists all errors thrown by actions on instances for a given managed instance group. The filter and orderBy query parameters are not supported.
  rpc ListErrors(ListErrorsInstanceGroupManagersRequest) returns (InstanceGroupManagersListErrorsResponse) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/zones/{zone}/instanceGroupManagers/{instance_group_manager}/listErrors"
    };
    option (google.api.method_signature) = "project,zone,instance_group_manager";
  }

  // Lists all of the instances in the managed instance group. Each instance in the list has a currentAction, which indicates the action that the managed instance group is performing on the instance. For example, if the group is still creating an instance, the currentAction is CREATING. If a previous action failed, the list displays the errors for that failed action. The orderBy query parameter is not supported. The `pageToken` query parameter is supported only in the alpha and beta API and only if the group's `listManagedInstancesResults` field is set to `PAGINATED`.
  rpc ListManagedInstances(ListManagedInstancesInstanceGroupManagersRequest) returns (InstanceGroupManagersListManagedInstancesResponse) {
    option (google.api.http) = {
      post: "/compute/v1/projects/{project}/zones/{zone}/instanceGroupManagers/{instance_group_manager}/listManagedInstances"
    };
    option (google.api.method_signature) = "project,zone,instance_group_manager";
  }

  // Lists all of the per-instance configurations defined for the managed instance group. The orderBy query parameter is not supported.
  rpc ListPerInstanceConfigs(ListPerInstanceConfigsInstanceGroupManagersRequest) returns (InstanceGroupManagersListPerInstanceConfigsResp) {
    option (google.api.http) = {
      post: "/compute/v1/projects/{project}/zones/{zone}/instanceGroupManagers/{instance_group_manager}/listPerInstanceConfigs"
    };
    option (google.api.method_signature) = "project,zone,instance_group_manager";
  }

  // Updates a managed instance group using the information that you specify in the request. This operation is marked as DONE when the group is patched even if the instances in the group are still in the process of being patched. You must separately verify the status of the individual instances with the listManagedInstances method. This method supports PATCH semantics and uses the JSON merge patch format and processing rules. If you update your group to specify a new template or instance configuration, it's possible that your intended specification for each VM in the group is different from the current state of that VM. To learn how to apply an updated configuration to the VMs in a MIG, see Updating instances in a MIG.
  rpc Patch(PatchInstanceGroupManagerRequest) returns (Operation) {
    option (google.api.http) = {
      body: "instance_group_manager_resource"
      patch: "/compute/v1/projects/{project}/zones/{zone}/instanceGroupManagers/{instance_group_manager}"
    };
    option (google.api.method_signature) = "project,zone,instance_group_manager,instance_group_manager_resource";
    option (google.cloud.operation_service) = "ZoneOperations";
  }

  // Inserts or patches per-instance configurations for the managed instance group. perInstanceConfig.name serves as a key used to distinguish whether to perform insert or patch.
  rpc PatchPerInstanceConfigs(PatchPerInstanceConfigsInstanceGroupManagerRequest) returns (Operation) {
    option (google.api.http) = {
      body: "instance_group_managers_patch_per_instance_configs_req_resource"
      post: "/compute/v1/projects/{project}/zones/{zone}/instanceGroupManagers/{instance_group_manager}/patchPerInstanceConfigs"
    };
    option (google.api.method_signature) = "project,zone,instance_group_manager,instance_group_managers_patch_per_instance_configs_req_resource";
    option (google.cloud.operation_service) = "ZoneOperations";
  }

  // Flags the specified VM instances in the managed instance group to be immediately recreated. Each instance is recreated using the group's current configuration. This operation is marked as DONE when the flag is set even if the instances have not yet been recreated. You must separately verify the status of each instance by checking its currentAction field; for more information, see Checking the status of managed instances. If the group is part of a backend service that has enabled connection draining, it can take up to 60 seconds after the connection draining duration has elapsed before the VM instance is removed or deleted. You can specify a maximum of 1000 instances with this method per request.
  rpc RecreateInstances(RecreateInstancesInstanceGroupManagerRequest) returns (Operation) {
    option (google.api.http) = {
      body: "instance_group_managers_recreate_instances_request_resource"
      post: "/compute/v1/projects/{project}/zones/{zone}/instanceGroupManagers/{instance_group_manager}/recreateInstances"
    };
    option (google.api.method_signature) = "project,zone,instance_group_manager,instance_group_managers_recreate_instances_request_resource";
    option (google.cloud.operation_service) = "ZoneOperations";
  }

  // Resizes the managed instance group. If you increase the size, the group creates new instances using the current instance template. If you decrease the size, the group deletes instances. The resize operation is marked DONE when the resize actions are scheduled even if the group has not yet added or deleted any instances. You must separately verify the status of the creating or deleting actions with the listmanagedinstances method. When resizing down, the instance group arbitrarily chooses the order in which VMs are deleted. The group takes into account some VM attributes when making the selection including: + The status of the VM instance. + The health of the VM instance. + The instance template version the VM is based on. + For regional managed instance groups, the location of the VM instance. This list is subject to change. If the group is part of a backend service that has enabled connection draining, it can take up to 60 seconds after the connection draining duration has elapsed before the VM instance is removed or deleted.
  rpc Resize(ResizeInstanceGroupManagerRequest) returns (Operation) {
    option (google.api.http) = {
      post: "/compute/v1/projects/{project}/zones/{zone}/instanceGroupManagers/{instance_group_manager}/resize"
    };
    option (google.api.method_signature) = "project,zone,instance_group_manager,size";
    option (google.cloud.operation_service) = "ZoneOperations";
  }

  // Specifies the instance template to use when creating new instances in this group. The templates for existing instances in the group do not change unless you run recreateInstances, run applyUpdatesToInstances, or set the group's updatePolicy.type to PROACTIVE.
  rpc SetInstanceTemplate(SetInstanceTemplateInstanceGroupManagerRequest) returns (Operation) {
    option (google.api.http) = {
      body: "instance_group_managers_set_instance_template_request_resource"
      post: "/compute/v1/projects/{project}/zones/{zone}/instanceGroupManagers/{instance_group_manager}/setInstanceTemplate"
    };
    option (google.api.method_signature) = "project,zone,instance_group_manager,instance_group_managers_set_instance_template_request_resource";
    option (google.cloud.operation_service) = "ZoneOperations";
  }

  // Modifies the target pools to which all instances in this managed instance group are assigned. The target pools automatically apply to all of the instances in the managed instance group. This operation is marked DONE when you make the request even if the instances have not yet been added to their target pools. The change might take some time to apply to all of the instances in the group depending on the size of the group.
  rpc SetTargetPools(SetTargetPoolsInstanceGroupManagerRequest) returns (Operation) {
    option (google.api.http) = {
      body: "instance_group_managers_set_target_pools_request_resource"
      post: "/compute/v1/projects/{project}/zones/{zone}/instanceGroupManagers/{instance_group_manager}/setTargetPools"
    };
    option (google.api.method_signature) = "project,zone,instance_group_manager,instance_group_managers_set_target_pools_request_resource";
    option (google.cloud.operation_service) = "ZoneOperations";
  }

  // Inserts or updates per-instance configurations for the managed instance group. perInstanceConfig.name serves as a key used to distinguish whether to perform insert or patch.
  rpc UpdatePerInstanceConfigs(UpdatePerInstanceConfigsInstanceGroupManagerRequest) returns (Operation) {
    option (google.api.http) = {
      body: "instance_group_managers_update_per_instance_configs_req_resource"
      post: "/compute/v1/projects/{project}/zones/{zone}/instanceGroupManagers/{instance_group_manager}/updatePerInstanceConfigs"
    };
    option (google.api.method_signature) = "project,zone,instance_group_manager,instance_group_managers_update_per_instance_configs_req_resource";
    option (google.cloud.operation_service) = "ZoneOperations";
  }

}

// The InstanceGroups API.
service InstanceGroups {
  option (google.api.default_host) =
    "compute.googleapis.com";

  option (google.api.oauth_scopes) =
    "https://www.googleapis.com/auth/compute,"
    "https://www.googleapis.com/auth/cloud-platform";

  // Adds a list of instances to the specified instance group. All of the instances in the instance group must be in the same network/subnetwork. Read Adding instances for more information.
  rpc AddInstances(AddInstancesInstanceGroupRequest) returns (Operation) {
    option (google.api.http) = {
      body: "instance_groups_add_instances_request_resource"
      post: "/compute/v1/projects/{project}/zones/{zone}/instanceGroups/{instance_group}/addInstances"
    };
    option (google.api.method_signature) = "project,zone,instance_group,instance_groups_add_instances_request_resource";
    option (google.cloud.operation_service) = "ZoneOperations";
  }

  // Retrieves the list of instance groups and sorts them by zone.
  rpc AggregatedList(AggregatedListInstanceGroupsRequest) returns (InstanceGroupAggregatedList) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/aggregated/instanceGroups"
    };
    option (google.api.method_signature) = "project";
  }

  // Deletes the specified instance group. The instances in the group are not deleted. Note that instance group must not belong to a backend service. Read Deleting an instance group for more information.
  rpc Delete(DeleteInstanceGroupRequest) returns (Operation) {
    option (google.api.http) = {
      delete: "/compute/v1/projects/{project}/zones/{zone}/instanceGroups/{instance_group}"
    };
    option (google.api.method_signature) = "project,zone,instance_group";
    option (google.cloud.operation_service) = "ZoneOperations";
  }

  // Returns the specified zonal instance group. Get a list of available zonal instance groups by making a list() request. For managed instance groups, use the instanceGroupManagers or regionInstanceGroupManagers methods instead.
  rpc Get(GetInstanceGroupRequest) returns (InstanceGroup) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/zones/{zone}/instanceGroups/{instance_group}"
    };
    option (google.api.method_signature) = "project,zone,instance_group";
  }

  // Creates an instance group in the specified project using the parameters that are included in the request.
  rpc Insert(InsertInstanceGroupRequest) returns (Operation) {
    option (google.api.http) = {
      body: "instance_group_resource"
      post: "/compute/v1/projects/{project}/zones/{zone}/instanceGroups"
    };
    option (google.api.method_signature) = "project,zone,instance_group_resource";
    option (google.cloud.operation_service) = "ZoneOperations";
  }

  // Retrieves the list of zonal instance group resources contained within the specified zone. For managed instance groups, use the instanceGroupManagers or regionInstanceGroupManagers methods instead.
  rpc List(ListInstanceGroupsRequest) returns (InstanceGroupList) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/zones/{zone}/instanceGroups"
    };
    option (google.api.method_signature) = "project,zone";
  }

  // Lists the instances in the specified instance group. The orderBy query parameter is not supported. The filter query parameter is supported, but only for expressions that use `eq` (equal) or `ne` (not equal) operators.
  rpc ListInstances(ListInstancesInstanceGroupsRequest) returns (InstanceGroupsListInstances) {
    option (google.api.http) = {
      body: "instance_groups_list_instances_request_resource"
      post: "/compute/v1/projects/{project}/zones/{zone}/instanceGroups/{instance_group}/listInstances"
    };
    option (google.api.method_signature) = "project,zone,instance_group,instance_groups_list_instances_request_resource";
  }

  // Removes one or more instances from the specified instance group, but does not delete those instances. If the group is part of a backend service that has enabled connection draining, it can take up to 60 seconds after the connection draining duration before the VM instance is removed or deleted.
  rpc RemoveInstances(RemoveInstancesInstanceGroupRequest) returns (Operation) {
    option (google.api.http) = {
      body: "instance_groups_remove_instances_request_resource"
      post: "/compute/v1/projects/{project}/zones/{zone}/instanceGroups/{instance_group}/removeInstances"
    };
    option (google.api.method_signature) = "project,zone,instance_group,instance_groups_remove_instances_request_resource";
    option (google.cloud.operation_service) = "ZoneOperations";
  }

  // Sets the named ports for the specified instance group.
  rpc SetNamedPorts(SetNamedPortsInstanceGroupRequest) returns (Operation) {
    option (google.api.http) = {
      body: "instance_groups_set_named_ports_request_resource"
      post: "/compute/v1/projects/{project}/zones/{zone}/instanceGroups/{instance_group}/setNamedPorts"
    };
    option (google.api.method_signature) = "project,zone,instance_group,instance_groups_set_named_ports_request_resource";
    option (google.cloud.operation_service) = "ZoneOperations";
  }

}

// The InstanceTemplates API.
service InstanceTemplates {
  option (google.api.default_host) =
    "compute.googleapis.com";

  option (google.api.oauth_scopes) =
    "https://www.googleapis.com/auth/compute,"
    "https://www.googleapis.com/auth/cloud-platform";

  // Retrieves the list of all InstanceTemplates resources, regional and global, available to the specified project.
  rpc AggregatedList(AggregatedListInstanceTemplatesRequest) returns (InstanceTemplateAggregatedList) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/aggregated/instanceTemplates"
    };
    option (google.api.method_signature) = "project";
  }

  // Deletes the specified instance template. Deleting an instance template is permanent and cannot be undone. It is not possible to delete templates that are already in use by a managed instance group.
  rpc Delete(DeleteInstanceTemplateRequest) returns (Operation) {
    option (google.api.http) = {
      delete: "/compute/v1/projects/{project}/global/instanceTemplates/{instance_template}"
    };
    option (google.api.method_signature) = "project,instance_template";
    option (google.cloud.operation_service) = "GlobalOperations";
  }

  // Returns the specified instance template.
  rpc Get(GetInstanceTemplateRequest) returns (InstanceTemplate) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/global/instanceTemplates/{instance_template}"
    };
    option (google.api.method_signature) = "project,instance_template";
  }

  // Gets the access control policy for a resource. May be empty if no such policy or resource exists.
  rpc GetIamPolicy(GetIamPolicyInstanceTemplateRequest) returns (Policy) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/global/instanceTemplates/{resource}/getIamPolicy"
    };
    option (google.api.method_signature) = "project,resource";
  }

  // Creates an instance template in the specified project using the data that is included in the request. If you are creating a new template to update an existing instance group, your new instance template must use the same network or, if applicable, the same subnetwork as the original template.
  rpc Insert(InsertInstanceTemplateRequest) returns (Operation) {
    option (google.api.http) = {
      body: "instance_template_resource"
      post: "/compute/v1/projects/{project}/global/instanceTemplates"
    };
    option (google.api.method_signature) = "project,instance_template_resource";
    option (google.cloud.operation_service) = "GlobalOperations";
  }

  // Retrieves a list of instance templates that are contained within the specified project.
  rpc List(ListInstanceTemplatesRequest) returns (InstanceTemplateList) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/global/instanceTemplates"
    };
    option (google.api.method_signature) = "project";
  }

  // Sets the access control policy on the specified resource. Replaces any existing policy.
  rpc SetIamPolicy(SetIamPolicyInstanceTemplateRequest) returns (Policy) {
    option (google.api.http) = {
      body: "global_set_policy_request_resource"
      post: "/compute/v1/projects/{project}/global/instanceTemplates/{resource}/setIamPolicy"
    };
    option (google.api.method_signature) = "project,resource,global_set_policy_request_resource";
  }

  // Returns permissions that a caller has on the specified resource.
  rpc TestIamPermissions(TestIamPermissionsInstanceTemplateRequest) returns (TestPermissionsResponse) {
    option (google.api.http) = {
      body: "test_permissions_request_resource"
      post: "/compute/v1/projects/{project}/global/instanceTemplates/{resource}/testIamPermissions"
    };
    option (google.api.method_signature) = "project,resource,test_permissions_request_resource";
  }

}

// The Instances API.
service Instances {
  option (google.api.default_host) =
    "compute.googleapis.com";

  option (google.api.oauth_scopes) =
    "https://www.googleapis.com/auth/compute,"
    "https://www.googleapis.com/auth/cloud-platform";

  // Adds an access config to an instance's network interface.
  rpc AddAccessConfig(AddAccessConfigInstanceRequest) returns (Operation) {
    option (google.api.http) = {
      body: "access_config_resource"
      post: "/compute/v1/projects/{project}/zones/{zone}/instances/{instance}/addAccessConfig"
    };
    option (google.api.method_signature) = "project,zone,instance,network_interface,access_config_resource";
    option (google.cloud.operation_service) = "ZoneOperations";
  }

  // Adds existing resource policies to an instance. You can only add one policy right now which will be applied to this instance for scheduling live migrations.
  rpc AddResourcePolicies(AddResourcePoliciesInstanceRequest) returns (Operation) {
    option (google.api.http) = {
      body: "instances_add_resource_policies_request_resource"
      post: "/compute/v1/projects/{project}/zones/{zone}/instances/{instance}/addResourcePolicies"
    };
    option (google.api.method_signature) = "project,zone,instance,instances_add_resource_policies_request_resource";
    option (google.cloud.operation_service) = "ZoneOperations";
  }

  // Retrieves an aggregated list of all of the instances in your project across all regions and zones. The performance of this method degrades when a filter is specified on a project that has a very large number of instances.
  rpc AggregatedList(AggregatedListInstancesRequest) returns (InstanceAggregatedList) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/aggregated/instances"
    };
    option (google.api.method_signature) = "project";
  }

  // Attaches an existing Disk resource to an instance. You must first create the disk before you can attach it. It is not possible to create and attach a disk at the same time. For more information, read Adding a persistent disk to your instance.
  rpc AttachDisk(AttachDiskInstanceRequest) returns (Operation) {
    option (google.api.http) = {
      body: "attached_disk_resource"
      post: "/compute/v1/projects/{project}/zones/{zone}/instances/{instance}/attachDisk"
    };
    option (google.api.method_signature) = "project,zone,instance,attached_disk_resource";
    option (google.cloud.operation_service) = "ZoneOperations";
  }

  // Creates multiple instances. Count specifies the number of instances to create. For more information, see About bulk creation of VMs.
  rpc BulkInsert(BulkInsertInstanceRequest) returns (Operation) {
    option (google.api.http) = {
      body: "bulk_insert_instance_resource_resource"
      post: "/compute/v1/projects/{project}/zones/{zone}/instances/bulkInsert"
    };
    option (google.api.method_signature) = "project,zone,bulk_insert_instance_resource_resource";
    option (google.cloud.operation_service) = "ZoneOperations";
  }

  // Deletes the specified Instance resource. For more information, see Deleting an instance.
  rpc Delete(DeleteInstanceRequest) returns (Operation) {
    option (google.api.http) = {
      delete: "/compute/v1/projects/{project}/zones/{zone}/instances/{instance}"
    };
    option (google.api.method_signature) = "project,zone,instance";
    option (google.cloud.operation_service) = "ZoneOperations";
  }

  // Deletes an access config from an instance's network interface.
  rpc DeleteAccessConfig(DeleteAccessConfigInstanceRequest) returns (Operation) {
    option (google.api.http) = {
      post: "/compute/v1/projects/{project}/zones/{zone}/instances/{instance}/deleteAccessConfig"
    };
    option (google.api.method_signature) = "project,zone,instance,access_config,network_interface";
    option (google.cloud.operation_service) = "ZoneOperations";
  }

  // Detaches a disk from an instance.
  rpc DetachDisk(DetachDiskInstanceRequest) returns (Operation) {
    option (google.api.http) = {
      post: "/compute/v1/projects/{project}/zones/{zone}/instances/{instance}/detachDisk"
    };
    option (google.api.method_signature) = "project,zone,instance,device_name";
    option (google.cloud.operation_service) = "ZoneOperations";
  }

  // Returns the specified Instance resource.
  rpc Get(GetInstanceRequest) returns (Instance) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/zones/{zone}/instances/{instance}"
    };
    option (google.api.method_signature) = "project,zone,instance";
  }

  // Returns effective firewalls applied to an interface of the instance.
  rpc GetEffectiveFirewalls(GetEffectiveFirewallsInstanceRequest) returns (InstancesGetEffectiveFirewallsResponse) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/zones/{zone}/instances/{instance}/getEffectiveFirewalls"
    };
    option (google.api.method_signature) = "project,zone,instance,network_interface";
  }

  // Returns the specified guest attributes entry.
  rpc GetGuestAttributes(GetGuestAttributesInstanceRequest) returns (GuestAttributes) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/zones/{zone}/instances/{instance}/getGuestAttributes"
    };
    option (google.api.method_signature) = "project,zone,instance";
  }

  // Gets the access control policy for a resource. May be empty if no such policy or resource exists.
  rpc GetIamPolicy(GetIamPolicyInstanceRequest) returns (Policy) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/zones/{zone}/instances/{resource}/getIamPolicy"
    };
    option (google.api.method_signature) = "project,zone,resource";
  }

  // Returns the screenshot from the specified instance.
  rpc GetScreenshot(GetScreenshotInstanceRequest) returns (Screenshot) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/zones/{zone}/instances/{instance}/screenshot"
    };
    option (google.api.method_signature) = "project,zone,instance";
  }

  // Returns the last 1 MB of serial port output from the specified instance.
  rpc GetSerialPortOutput(GetSerialPortOutputInstanceRequest) returns (SerialPortOutput) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/zones/{zone}/instances/{instance}/serialPort"
    };
    option (google.api.method_signature) = "project,zone,instance";
  }

  // Returns the Shielded Instance Identity of an instance
  rpc GetShieldedInstanceIdentity(GetShieldedInstanceIdentityInstanceRequest) returns (ShieldedInstanceIdentity) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/zones/{zone}/instances/{instance}/getShieldedInstanceIdentity"
    };
    option (google.api.method_signature) = "project,zone,instance";
  }

  // Creates an instance resource in the specified project using the data included in the request.
  rpc Insert(InsertInstanceRequest) returns (Operation) {
    option (google.api.http) = {
      body: "instance_resource"
      post: "/compute/v1/projects/{project}/zones/{zone}/instances"
    };
    option (google.api.method_signature) = "project,zone,instance_resource";
    option (google.cloud.operation_service) = "ZoneOperations";
  }

  // Retrieves the list of instances contained within the specified zone.
  rpc List(ListInstancesRequest) returns (InstanceList) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/zones/{zone}/instances"
    };
    option (google.api.method_signature) = "project,zone";
  }

  // Retrieves a list of resources that refer to the VM instance specified in the request. For example, if the VM instance is part of a managed or unmanaged instance group, the referrers list includes the instance group. For more information, read Viewing referrers to VM instances.
  rpc ListReferrers(ListReferrersInstancesRequest) returns (InstanceListReferrers) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/zones/{zone}/instances/{instance}/referrers"
    };
    option (google.api.method_signature) = "project,zone,instance";
  }

  // Removes resource policies from an instance.
  rpc RemoveResourcePolicies(RemoveResourcePoliciesInstanceRequest) returns (Operation) {
    option (google.api.http) = {
      body: "instances_remove_resource_policies_request_resource"
      post: "/compute/v1/projects/{project}/zones/{zone}/instances/{instance}/removeResourcePolicies"
    };
    option (google.api.method_signature) = "project,zone,instance,instances_remove_resource_policies_request_resource";
    option (google.cloud.operation_service) = "ZoneOperations";
  }

  // Performs a reset on the instance. This is a hard reset. The VM does not do a graceful shutdown. For more information, see Resetting an instance.
  rpc Reset(ResetInstanceRequest) returns (Operation) {
    option (google.api.http) = {
      post: "/compute/v1/projects/{project}/zones/{zone}/instances/{instance}/reset"
    };
    option (google.api.method_signature) = "project,zone,instance";
    option (google.cloud.operation_service) = "ZoneOperations";
  }

  // Resumes an instance that was suspended using the instances().suspend method.
  rpc Resume(ResumeInstanceRequest) returns (Operation) {
    option (google.api.http) = {
      post: "/compute/v1/projects/{project}/zones/{zone}/instances/{instance}/resume"
    };
    option (google.api.method_signature) = "project,zone,instance";
    option (google.cloud.operation_service) = "ZoneOperations";
  }

  // Sends diagnostic interrupt to the instance.
  rpc SendDiagnosticInterrupt(SendDiagnosticInterruptInstanceRequest) returns (SendDiagnosticInterruptInstanceResponse) {
    option (google.api.http) = {
      post: "/compute/v1/projects/{project}/zones/{zone}/instances/{instance}/sendDiagnosticInterrupt"
    };
    option (google.api.method_signature) = "project,zone,instance";
  }

  // Sets deletion protection on the instance.
  rpc SetDeletionProtection(SetDeletionProtectionInstanceRequest) returns (Operation) {
    option (google.api.http) = {
      post: "/compute/v1/projects/{project}/zones/{zone}/instances/{resource}/setDeletionProtection"
    };
    option (google.api.method_signature) = "project,zone,resource";
    option (google.cloud.operation_service) = "ZoneOperations";
  }

  // Sets the auto-delete flag for a disk attached to an instance.
  rpc SetDiskAutoDelete(SetDiskAutoDeleteInstanceRequest) returns (Operation) {
    option (google.api.http) = {
      post: "/compute/v1/projects/{project}/zones/{zone}/instances/{instance}/setDiskAutoDelete"
    };
    option (google.api.method_signature) = "project,zone,instance,auto_delete,device_name";
    option (google.cloud.operation_service) = "ZoneOperations";
  }

  // Sets the access control policy on the specified resource. Replaces any existing policy.
  rpc SetIamPolicy(SetIamPolicyInstanceRequest) returns (Policy) {
    option (google.api.http) = {
      body: "zone_set_policy_request_resource"
      post: "/compute/v1/projects/{project}/zones/{zone}/instances/{resource}/setIamPolicy"
    };
    option (google.api.method_signature) = "project,zone,resource,zone_set_policy_request_resource";
  }

  // Sets labels on an instance. To learn more about labels, read the Labeling Resources documentation.
  rpc SetLabels(SetLabelsInstanceRequest) returns (Operation) {
    option (google.api.http) = {
      body: "instances_set_labels_request_resource"
      post: "/compute/v1/projects/{project}/zones/{zone}/instances/{instance}/setLabels"
    };
    option (google.api.method_signature) = "project,zone,instance,instances_set_labels_request_resource";
    option (google.cloud.operation_service) = "ZoneOperations";
  }

  // Changes the number and/or type of accelerator for a stopped instance to the values specified in the request.
  rpc SetMachineResources(SetMachineResourcesInstanceRequest) returns (Operation) {
    option (google.api.http) = {
      body: "instances_set_machine_resources_request_resource"
      post: "/compute/v1/projects/{project}/zones/{zone}/instances/{instance}/setMachineResources"
    };
    option (google.api.method_signature) = "project,zone,instance,instances_set_machine_resources_request_resource";
    option (google.cloud.operation_service) = "ZoneOperations";
  }

  // Changes the machine type for a stopped instance to the machine type specified in the request.
  rpc SetMachineType(SetMachineTypeInstanceRequest) returns (Operation) {
    option (google.api.http) = {
      body: "instances_set_machine_type_request_resource"
      post: "/compute/v1/projects/{project}/zones/{zone}/instances/{instance}/setMachineType"
    };
    option (google.api.method_signature) = "project,zone,instance,instances_set_machine_type_request_resource";
    option (google.cloud.operation_service) = "ZoneOperations";
  }

  // Sets metadata for the specified instance to the data included in the request.
  rpc SetMetadata(SetMetadataInstanceRequest) returns (Operation) {
    option (google.api.http) = {
      body: "metadata_resource"
      post: "/compute/v1/projects/{project}/zones/{zone}/instances/{instance}/setMetadata"
    };
    option (google.api.method_signature) = "project,zone,instance,metadata_resource";
    option (google.cloud.operation_service) = "ZoneOperations";
  }

  // Changes the minimum CPU platform that this instance should use. This method can only be called on a stopped instance. For more information, read Specifying a Minimum CPU Platform.
  rpc SetMinCpuPlatform(SetMinCpuPlatformInstanceRequest) returns (Operation) {
    option (google.api.http) = {
      body: "instances_set_min_cpu_platform_request_resource"
      post: "/compute/v1/projects/{project}/zones/{zone}/instances/{instance}/setMinCpuPlatform"
    };
    option (google.api.method_signature) = "project,zone,instance,instances_set_min_cpu_platform_request_resource";
    option (google.cloud.operation_service) = "ZoneOperations";
  }

  // Sets name of an instance.
  rpc SetName(SetNameInstanceRequest) returns (Operation) {
    option (google.api.http) = {
      body: "instances_set_name_request_resource"
      post: "/compute/v1/projects/{project}/zones/{zone}/instances/{instance}/setName"
    };
    option (google.api.method_signature) = "project,zone,instance,instances_set_name_request_resource";
    option (google.cloud.operation_service) = "ZoneOperations";
  }

  // Sets an instance's scheduling options. You can only call this method on a stopped instance, that is, a VM instance that is in a `TERMINATED` state. See Instance Life Cycle for more information on the possible instance states. For more information about setting scheduling options for a VM, see Set VM host maintenance policy.
  rpc SetScheduling(SetSchedulingInstanceRequest) returns (Operation) {
    option (google.api.http) = {
      body: "scheduling_resource"
      post: "/compute/v1/projects/{project}/zones/{zone}/instances/{instance}/setScheduling"
    };
    option (google.api.method_signature) = "project,zone,instance,scheduling_resource";
    option (google.cloud.operation_service) = "ZoneOperations";
  }

  // Sets the service account on the instance. For more information, read Changing the service account and access scopes for an instance.
  rpc SetServiceAccount(SetServiceAccountInstanceRequest) returns (Operation) {
    option (google.api.http) = {
      body: "instances_set_service_account_request_resource"
      post: "/compute/v1/projects/{project}/zones/{zone}/instances/{instance}/setServiceAccount"
    };
    option (google.api.method_signature) = "project,zone,instance,instances_set_service_account_request_resource";
    option (google.cloud.operation_service) = "ZoneOperations";
  }

  // Sets the Shielded Instance integrity policy for an instance. You can only use this method on a running instance. This method supports PATCH semantics and uses the JSON merge patch format and processing rules.
  rpc SetShieldedInstanceIntegrityPolicy(SetShieldedInstanceIntegrityPolicyInstanceRequest) returns (Operation) {
    option (google.api.http) = {
      body: "shielded_instance_integrity_policy_resource"
      patch: "/compute/v1/projects/{project}/zones/{zone}/instances/{instance}/setShieldedInstanceIntegrityPolicy"
    };
    option (google.api.method_signature) = "project,zone,instance,shielded_instance_integrity_policy_resource";
    option (google.cloud.operation_service) = "ZoneOperations";
  }

  // Sets network tags for the specified instance to the data included in the request.
  rpc SetTags(SetTagsInstanceRequest) returns (Operation) {
    option (google.api.http) = {
      body: "tags_resource"
      post: "/compute/v1/projects/{project}/zones/{zone}/instances/{instance}/setTags"
    };
    option (google.api.method_signature) = "project,zone,instance,tags_resource";
    option (google.cloud.operation_service) = "ZoneOperations";
  }

  // Simulates a host maintenance event on a VM. For more information, see Simulate a host maintenance event.
  rpc SimulateMaintenanceEvent(SimulateMaintenanceEventInstanceRequest) returns (Operation) {
    option (google.api.http) = {
      post: "/compute/v1/projects/{project}/zones/{zone}/instances/{instance}/simulateMaintenanceEvent"
    };
    option (google.api.method_signature) = "project,zone,instance";
    option (google.cloud.operation_service) = "ZoneOperations";
  }

  // Starts an instance that was stopped using the instances().stop method. For more information, see Restart an instance.
  rpc Start(StartInstanceRequest) returns (Operation) {
    option (google.api.http) = {
      post: "/compute/v1/projects/{project}/zones/{zone}/instances/{instance}/start"
    };
    option (google.api.method_signature) = "project,zone,instance";
    option (google.cloud.operation_service) = "ZoneOperations";
  }

  // Starts an instance that was stopped using the instances().stop method. For more information, see Restart an instance.
  rpc StartWithEncryptionKey(StartWithEncryptionKeyInstanceRequest) returns (Operation) {
    option (google.api.http) = {
      body: "instances_start_with_encryption_key_request_resource"
      post: "/compute/v1/projects/{project}/zones/{zone}/instances/{instance}/startWithEncryptionKey"
    };
    option (google.api.method_signature) = "project,zone,instance,instances_start_with_encryption_key_request_resource";
    option (google.cloud.operation_service) = "ZoneOperations";
  }

  // Stops a running instance, shutting it down cleanly, and allows you to restart the instance at a later time. Stopped instances do not incur VM usage charges while they are stopped. However, resources that the VM is using, such as persistent disks and static IP addresses, will continue to be charged until they are deleted. For more information, see Stopping an instance.
  rpc Stop(StopInstanceRequest) returns (Operation) {
    option (google.api.http) = {
      post: "/compute/v1/projects/{project}/zones/{zone}/instances/{instance}/stop"
    };
    option (google.api.method_signature) = "project,zone,instance";
    option (google.cloud.operation_service) = "ZoneOperations";
  }

  // This method suspends a running instance, saving its state to persistent storage, and allows you to resume the instance at a later time. Suspended instances have no compute costs (cores or RAM), and incur only storage charges for the saved VM memory and localSSD data. Any charged resources the virtual machine was using, such as persistent disks and static IP addresses, will continue to be charged while the instance is suspended. For more information, see Suspending and resuming an instance.
  rpc Suspend(SuspendInstanceRequest) returns (Operation) {
    option (google.api.http) = {
      post: "/compute/v1/projects/{project}/zones/{zone}/instances/{instance}/suspend"
    };
    option (google.api.method_signature) = "project,zone,instance";
    option (google.cloud.operation_service) = "ZoneOperations";
  }

  // Returns permissions that a caller has on the specified resource.
  rpc TestIamPermissions(TestIamPermissionsInstanceRequest) returns (TestPermissionsResponse) {
    option (google.api.http) = {
      body: "test_permissions_request_resource"
      post: "/compute/v1/projects/{project}/zones/{zone}/instances/{resource}/testIamPermissions"
    };
    option (google.api.method_signature) = "project,zone,resource,test_permissions_request_resource";
  }

  // Updates an instance only if the necessary resources are available. This method can update only a specific set of instance properties. See Updating a running instance for a list of updatable instance properties.
  rpc Update(UpdateInstanceRequest) returns (Operation) {
    option (google.api.http) = {
      body: "instance_resource"
      put: "/compute/v1/projects/{project}/zones/{zone}/instances/{instance}"
    };
    option (google.api.method_signature) = "project,zone,instance,instance_resource";
    option (google.cloud.operation_service) = "ZoneOperations";
  }

  // Updates the specified access config from an instance's network interface with the data included in the request. This method supports PATCH semantics and uses the JSON merge patch format and processing rules.
  rpc UpdateAccessConfig(UpdateAccessConfigInstanceRequest) returns (Operation) {
    option (google.api.http) = {
      body: "access_config_resource"
      post: "/compute/v1/projects/{project}/zones/{zone}/instances/{instance}/updateAccessConfig"
    };
    option (google.api.method_signature) = "project,zone,instance,network_interface,access_config_resource";
    option (google.cloud.operation_service) = "ZoneOperations";
  }

  // Updates the Display config for a VM instance. You can only use this method on a stopped VM instance. This method supports PATCH semantics and uses the JSON merge patch format and processing rules.
  rpc UpdateDisplayDevice(UpdateDisplayDeviceInstanceRequest) returns (Operation) {
    option (google.api.http) = {
      body: "display_device_resource"
      patch: "/compute/v1/projects/{project}/zones/{zone}/instances/{instance}/updateDisplayDevice"
    };
    option (google.api.method_signature) = "project,zone,instance,display_device_resource";
    option (google.cloud.operation_service) = "ZoneOperations";
  }

  // Updates an instance's network interface. This method can only update an interface's alias IP range and attached network. See Modifying alias IP ranges for an existing instance for instructions on changing alias IP ranges. See Migrating a VM between networks for instructions on migrating an interface. This method follows PATCH semantics.
  rpc UpdateNetworkInterface(UpdateNetworkInterfaceInstanceRequest) returns (Operation) {
    option (google.api.http) = {
      body: "network_interface_resource"
      patch: "/compute/v1/projects/{project}/zones/{zone}/instances/{instance}/updateNetworkInterface"
    };
    option (google.api.method_signature) = "project,zone,instance,network_interface,network_interface_resource";
    option (google.cloud.operation_service) = "ZoneOperations";
  }

  // Updates the Shielded Instance config for an instance. You can only use this method on a stopped instance. This method supports PATCH semantics and uses the JSON merge patch format and processing rules.
  rpc UpdateShieldedInstanceConfig(UpdateShieldedInstanceConfigInstanceRequest) returns (Operation) {
    option (google.api.http) = {
      body: "shielded_instance_config_resource"
      patch: "/compute/v1/projects/{project}/zones/{zone}/instances/{instance}/updateShieldedInstanceConfig"
    };
    option (google.api.method_signature) = "project,zone,instance,shielded_instance_config_resource";
    option (google.cloud.operation_service) = "ZoneOperations";
  }

}

// The InterconnectAttachments API.
service InterconnectAttachments {
  option (google.api.default_host) =
    "compute.googleapis.com";

  option (google.api.oauth_scopes) =
    "https://www.googleapis.com/auth/compute,"
    "https://www.googleapis.com/auth/cloud-platform";

  // Retrieves an aggregated list of interconnect attachments.
  rpc AggregatedList(AggregatedListInterconnectAttachmentsRequest) returns (InterconnectAttachmentAggregatedList) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/aggregated/interconnectAttachments"
    };
    option (google.api.method_signature) = "project";
  }

  // Deletes the specified interconnect attachment.
  rpc Delete(DeleteInterconnectAttachmentRequest) returns (Operation) {
    option (google.api.http) = {
      delete: "/compute/v1/projects/{project}/regions/{region}/interconnectAttachments/{interconnect_attachment}"
    };
    option (google.api.method_signature) = "project,region,interconnect_attachment";
    option (google.cloud.operation_service) = "RegionOperations";
  }

  // Returns the specified interconnect attachment.
  rpc Get(GetInterconnectAttachmentRequest) returns (InterconnectAttachment) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/regions/{region}/interconnectAttachments/{interconnect_attachment}"
    };
    option (google.api.method_signature) = "project,region,interconnect_attachment";
  }

  // Creates an InterconnectAttachment in the specified project using the data included in the request.
  rpc Insert(InsertInterconnectAttachmentRequest) returns (Operation) {
    option (google.api.http) = {
      body: "interconnect_attachment_resource"
      post: "/compute/v1/projects/{project}/regions/{region}/interconnectAttachments"
    };
    option (google.api.method_signature) = "project,region,interconnect_attachment_resource";
    option (google.cloud.operation_service) = "RegionOperations";
  }

  // Retrieves the list of interconnect attachments contained within the specified region.
  rpc List(ListInterconnectAttachmentsRequest) returns (InterconnectAttachmentList) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/regions/{region}/interconnectAttachments"
    };
    option (google.api.method_signature) = "project,region";
  }

  // Updates the specified interconnect attachment with the data included in the request. This method supports PATCH semantics and uses the JSON merge patch format and processing rules.
  rpc Patch(PatchInterconnectAttachmentRequest) returns (Operation) {
    option (google.api.http) = {
      body: "interconnect_attachment_resource"
      patch: "/compute/v1/projects/{project}/regions/{region}/interconnectAttachments/{interconnect_attachment}"
    };
    option (google.api.method_signature) = "project,region,interconnect_attachment,interconnect_attachment_resource";
    option (google.cloud.operation_service) = "RegionOperations";
  }

  // Sets the labels on an InterconnectAttachment. To learn more about labels, read the Labeling Resources documentation.
  rpc SetLabels(SetLabelsInterconnectAttachmentRequest) returns (Operation) {
    option (google.api.http) = {
      body: "region_set_labels_request_resource"
      post: "/compute/v1/projects/{project}/regions/{region}/interconnectAttachments/{resource}/setLabels"
    };
    option (google.api.method_signature) = "project,region,resource,region_set_labels_request_resource";
    option (google.cloud.operation_service) = "RegionOperations";
  }

}

// The InterconnectLocations API.
service InterconnectLocations {
  option (google.api.default_host) =
    "compute.googleapis.com";

  option (google.api.oauth_scopes) =
    "https://www.googleapis.com/auth/compute.readonly,"
    "https://www.googleapis.com/auth/compute,"
    "https://www.googleapis.com/auth/cloud-platform";

  // Returns the details for the specified interconnect location. Gets a list of available interconnect locations by making a list() request.
  rpc Get(GetInterconnectLocationRequest) returns (InterconnectLocation) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/global/interconnectLocations/{interconnect_location}"
    };
    option (google.api.method_signature) = "project,interconnect_location";
  }

  // Retrieves the list of interconnect locations available to the specified project.
  rpc List(ListInterconnectLocationsRequest) returns (InterconnectLocationList) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/global/interconnectLocations"
    };
    option (google.api.method_signature) = "project";
  }

}

// The Interconnects API.
service Interconnects {
  option (google.api.default_host) =
    "compute.googleapis.com";

  option (google.api.oauth_scopes) =
    "https://www.googleapis.com/auth/compute,"
    "https://www.googleapis.com/auth/cloud-platform";

  // Deletes the specified Interconnect.
  rpc Delete(DeleteInterconnectRequest) returns (Operation) {
    option (google.api.http) = {
      delete: "/compute/v1/projects/{project}/global/interconnects/{interconnect}"
    };
    option (google.api.method_signature) = "project,interconnect";
    option (google.cloud.operation_service) = "GlobalOperations";
  }

  // Returns the specified Interconnect. Get a list of available Interconnects by making a list() request.
  rpc Get(GetInterconnectRequest) returns (Interconnect) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/global/interconnects/{interconnect}"
    };
    option (google.api.method_signature) = "project,interconnect";
  }

  // Returns the interconnectDiagnostics for the specified Interconnect.
  rpc GetDiagnostics(GetDiagnosticsInterconnectRequest) returns (InterconnectsGetDiagnosticsResponse) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/global/interconnects/{interconnect}/getDiagnostics"
    };
    option (google.api.method_signature) = "project,interconnect";
  }

  // Creates an Interconnect in the specified project using the data included in the request.
  rpc Insert(InsertInterconnectRequest) returns (Operation) {
    option (google.api.http) = {
      body: "interconnect_resource"
      post: "/compute/v1/projects/{project}/global/interconnects"
    };
    option (google.api.method_signature) = "project,interconnect_resource";
    option (google.cloud.operation_service) = "GlobalOperations";
  }

  // Retrieves the list of Interconnects available to the specified project.
  rpc List(ListInterconnectsRequest) returns (InterconnectList) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/global/interconnects"
    };
    option (google.api.method_signature) = "project";
  }

  // Updates the specified Interconnect with the data included in the request. This method supports PATCH semantics and uses the JSON merge patch format and processing rules.
  rpc Patch(PatchInterconnectRequest) returns (Operation) {
    option (google.api.http) = {
      body: "interconnect_resource"
      patch: "/compute/v1/projects/{project}/global/interconnects/{interconnect}"
    };
    option (google.api.method_signature) = "project,interconnect,interconnect_resource";
    option (google.cloud.operation_service) = "GlobalOperations";
  }

  // Sets the labels on an Interconnect. To learn more about labels, read the Labeling Resources documentation.
  rpc SetLabels(SetLabelsInterconnectRequest) returns (Operation) {
    option (google.api.http) = {
      body: "global_set_labels_request_resource"
      post: "/compute/v1/projects/{project}/global/interconnects/{resource}/setLabels"
    };
    option (google.api.method_signature) = "project,resource,global_set_labels_request_resource";
    option (google.cloud.operation_service) = "GlobalOperations";
  }

}

// The LicenseCodes API.
service LicenseCodes {
  option (google.api.default_host) =
    "compute.googleapis.com";

  option (google.api.oauth_scopes) =
    "https://www.googleapis.com/auth/compute.readonly,"
    "https://www.googleapis.com/auth/compute,"
    "https://www.googleapis.com/auth/cloud-platform";

  // Return a specified license code. License codes are mirrored across all projects that have permissions to read the License Code. *Caution* This resource is intended for use only by third-party partners who are creating Cloud Marketplace images. 
  rpc Get(GetLicenseCodeRequest) returns (LicenseCode) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/global/licenseCodes/{license_code}"
    };
    option (google.api.method_signature) = "project,license_code";
  }

  // Returns permissions that a caller has on the specified resource. *Caution* This resource is intended for use only by third-party partners who are creating Cloud Marketplace images. 
  rpc TestIamPermissions(TestIamPermissionsLicenseCodeRequest) returns (TestPermissionsResponse) {
    option (google.api.http) = {
      body: "test_permissions_request_resource"
      post: "/compute/v1/projects/{project}/global/licenseCodes/{resource}/testIamPermissions"
    };
    option (google.api.method_signature) = "project,resource,test_permissions_request_resource";
  }

}

// The Licenses API.
service Licenses {
  option (google.api.default_host) =
    "compute.googleapis.com";

  option (google.api.oauth_scopes) =
    "https://www.googleapis.com/auth/compute,"
    "https://www.googleapis.com/auth/cloud-platform";

  // Deletes the specified license. *Caution* This resource is intended for use only by third-party partners who are creating Cloud Marketplace images. 
  rpc Delete(DeleteLicenseRequest) returns (Operation) {
    option (google.api.http) = {
      delete: "/compute/v1/projects/{project}/global/licenses/{license}"
    };
    option (google.api.method_signature) = "project,license";
    option (google.cloud.operation_service) = "GlobalOperations";
  }

  // Returns the specified License resource. *Caution* This resource is intended for use only by third-party partners who are creating Cloud Marketplace images. 
  rpc Get(GetLicenseRequest) returns (License) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/global/licenses/{license}"
    };
    option (google.api.method_signature) = "project,license";
  }

  // Gets the access control policy for a resource. May be empty if no such policy or resource exists. *Caution* This resource is intended for use only by third-party partners who are creating Cloud Marketplace images. 
  rpc GetIamPolicy(GetIamPolicyLicenseRequest) returns (Policy) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/global/licenses/{resource}/getIamPolicy"
    };
    option (google.api.method_signature) = "project,resource";
  }

  // Create a License resource in the specified project. *Caution* This resource is intended for use only by third-party partners who are creating Cloud Marketplace images. 
  rpc Insert(InsertLicenseRequest) returns (Operation) {
    option (google.api.http) = {
      body: "license_resource"
      post: "/compute/v1/projects/{project}/global/licenses"
    };
    option (google.api.method_signature) = "project,license_resource";
    option (google.cloud.operation_service) = "GlobalOperations";
  }

  // Retrieves the list of licenses available in the specified project. This method does not get any licenses that belong to other projects, including licenses attached to publicly-available images, like Debian 9. If you want to get a list of publicly-available licenses, use this method to make a request to the respective image project, such as debian-cloud or windows-cloud. *Caution* This resource is intended for use only by third-party partners who are creating Cloud Marketplace images. 
  rpc List(ListLicensesRequest) returns (LicensesListResponse) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/global/licenses"
    };
    option (google.api.method_signature) = "project";
  }

  // Sets the access control policy on the specified resource. Replaces any existing policy. *Caution* This resource is intended for use only by third-party partners who are creating Cloud Marketplace images. 
  rpc SetIamPolicy(SetIamPolicyLicenseRequest) returns (Policy) {
    option (google.api.http) = {
      body: "global_set_policy_request_resource"
      post: "/compute/v1/projects/{project}/global/licenses/{resource}/setIamPolicy"
    };
    option (google.api.method_signature) = "project,resource,global_set_policy_request_resource";
  }

  // Returns permissions that a caller has on the specified resource. *Caution* This resource is intended for use only by third-party partners who are creating Cloud Marketplace images. 
  rpc TestIamPermissions(TestIamPermissionsLicenseRequest) returns (TestPermissionsResponse) {
    option (google.api.http) = {
      body: "test_permissions_request_resource"
      post: "/compute/v1/projects/{project}/global/licenses/{resource}/testIamPermissions"
    };
    option (google.api.method_signature) = "project,resource,test_permissions_request_resource";
  }

}

// The MachineImages API.
service MachineImages {
  option (google.api.default_host) =
    "compute.googleapis.com";

  option (google.api.oauth_scopes) =
    "https://www.googleapis.com/auth/compute,"
    "https://www.googleapis.com/auth/cloud-platform";

  // Deletes the specified machine image. Deleting a machine image is permanent and cannot be undone.
  rpc Delete(DeleteMachineImageRequest) returns (Operation) {
    option (google.api.http) = {
      delete: "/compute/v1/projects/{project}/global/machineImages/{machine_image}"
    };
    option (google.api.method_signature) = "project,machine_image";
    option (google.cloud.operation_service) = "GlobalOperations";
  }

  // Returns the specified machine image.
  rpc Get(GetMachineImageRequest) returns (MachineImage) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/global/machineImages/{machine_image}"
    };
    option (google.api.method_signature) = "project,machine_image";
  }

  // Gets the access control policy for a resource. May be empty if no such policy or resource exists.
  rpc GetIamPolicy(GetIamPolicyMachineImageRequest) returns (Policy) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/global/machineImages/{resource}/getIamPolicy"
    };
    option (google.api.method_signature) = "project,resource";
  }

  // Creates a machine image in the specified project using the data that is included in the request. If you are creating a new machine image to update an existing instance, your new machine image should use the same network or, if applicable, the same subnetwork as the original instance.
  rpc Insert(InsertMachineImageRequest) returns (Operation) {
    option (google.api.http) = {
      body: "machine_image_resource"
      post: "/compute/v1/projects/{project}/global/machineImages"
    };
    option (google.api.method_signature) = "project,machine_image_resource";
    option (google.cloud.operation_service) = "GlobalOperations";
  }

  // Retrieves a list of machine images that are contained within the specified project.
  rpc List(ListMachineImagesRequest) returns (MachineImageList) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/global/machineImages"
    };
    option (google.api.method_signature) = "project";
  }

  // Sets the access control policy on the specified resource. Replaces any existing policy.
  rpc SetIamPolicy(SetIamPolicyMachineImageRequest) returns (Policy) {
    option (google.api.http) = {
      body: "global_set_policy_request_resource"
      post: "/compute/v1/projects/{project}/global/machineImages/{resource}/setIamPolicy"
    };
    option (google.api.method_signature) = "project,resource,global_set_policy_request_resource";
  }

  // Returns permissions that a caller has on the specified resource.
  rpc TestIamPermissions(TestIamPermissionsMachineImageRequest) returns (TestPermissionsResponse) {
    option (google.api.http) = {
      body: "test_permissions_request_resource"
      post: "/compute/v1/projects/{project}/global/machineImages/{resource}/testIamPermissions"
    };
    option (google.api.method_signature) = "project,resource,test_permissions_request_resource";
  }

}

// The MachineTypes API.
service MachineTypes {
  option (google.api.default_host) =
    "compute.googleapis.com";

  option (google.api.oauth_scopes) =
    "https://www.googleapis.com/auth/compute.readonly,"
    "https://www.googleapis.com/auth/compute,"
    "https://www.googleapis.com/auth/cloud-platform";

  // Retrieves an aggregated list of machine types.
  rpc AggregatedList(AggregatedListMachineTypesRequest) returns (MachineTypeAggregatedList) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/aggregated/machineTypes"
    };
    option (google.api.method_signature) = "project";
  }

  // Returns the specified machine type.
  rpc Get(GetMachineTypeRequest) returns (MachineType) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/zones/{zone}/machineTypes/{machine_type}"
    };
    option (google.api.method_signature) = "project,zone,machine_type";
  }

  // Retrieves a list of machine types available to the specified project.
  rpc List(ListMachineTypesRequest) returns (MachineTypeList) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/zones/{zone}/machineTypes"
    };
    option (google.api.method_signature) = "project,zone";
  }

}

// The NetworkAttachments API.
service NetworkAttachments {
  option (google.api.default_host) =
    "compute.googleapis.com";

  option (google.api.oauth_scopes) =
    "https://www.googleapis.com/auth/compute,"
    "https://www.googleapis.com/auth/cloud-platform";

  // Retrieves the list of all NetworkAttachment resources, regional and global, available to the specified project.
  rpc AggregatedList(AggregatedListNetworkAttachmentsRequest) returns (NetworkAttachmentAggregatedList) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/aggregated/networkAttachments"
    };
    option (google.api.method_signature) = "project";
  }

  // Deletes the specified NetworkAttachment in the given scope
  rpc Delete(DeleteNetworkAttachmentRequest) returns (Operation) {
    option (google.api.http) = {
      delete: "/compute/v1/projects/{project}/regions/{region}/networkAttachments/{network_attachment}"
    };
    option (google.api.method_signature) = "project,region,network_attachment";
    option (google.cloud.operation_service) = "RegionOperations";
  }

  // Returns the specified NetworkAttachment resource in the given scope.
  rpc Get(GetNetworkAttachmentRequest) returns (NetworkAttachment) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/regions/{region}/networkAttachments/{network_attachment}"
    };
    option (google.api.method_signature) = "project,region,network_attachment";
  }

  // Gets the access control policy for a resource. May be empty if no such policy or resource exists.
  rpc GetIamPolicy(GetIamPolicyNetworkAttachmentRequest) returns (Policy) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/regions/{region}/networkAttachments/{resource}/getIamPolicy"
    };
    option (google.api.method_signature) = "project,region,resource";
  }

  // Creates a NetworkAttachment in the specified project in the given scope using the parameters that are included in the request.
  rpc Insert(InsertNetworkAttachmentRequest) returns (Operation) {
    option (google.api.http) = {
      body: "network_attachment_resource"
      post: "/compute/v1/projects/{project}/regions/{region}/networkAttachments"
    };
    option (google.api.method_signature) = "project,region,network_attachment_resource";
    option (google.cloud.operation_service) = "RegionOperations";
  }

  // Lists the NetworkAttachments for a project in the given scope.
  rpc List(ListNetworkAttachmentsRequest) returns (NetworkAttachmentList) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/regions/{region}/networkAttachments"
    };
    option (google.api.method_signature) = "project,region";
  }

  // Sets the access control policy on the specified resource. Replaces any existing policy.
  rpc SetIamPolicy(SetIamPolicyNetworkAttachmentRequest) returns (Policy) {
    option (google.api.http) = {
      body: "region_set_policy_request_resource"
      post: "/compute/v1/projects/{project}/regions/{region}/networkAttachments/{resource}/setIamPolicy"
    };
    option (google.api.method_signature) = "project,region,resource,region_set_policy_request_resource";
  }

  // Returns permissions that a caller has on the specified resource.
  rpc TestIamPermissions(TestIamPermissionsNetworkAttachmentRequest) returns (TestPermissionsResponse) {
    option (google.api.http) = {
      body: "test_permissions_request_resource"
      post: "/compute/v1/projects/{project}/regions/{region}/networkAttachments/{resource}/testIamPermissions"
    };
    option (google.api.method_signature) = "project,region,resource,test_permissions_request_resource";
  }

}

// The NetworkEdgeSecurityServices API.
service NetworkEdgeSecurityServices {
  option (google.api.default_host) =
    "compute.googleapis.com";

  option (google.api.oauth_scopes) =
    "https://www.googleapis.com/auth/compute,"
    "https://www.googleapis.com/auth/cloud-platform";

  // Retrieves the list of all NetworkEdgeSecurityService resources available to the specified project.
  rpc AggregatedList(AggregatedListNetworkEdgeSecurityServicesRequest) returns (NetworkEdgeSecurityServiceAggregatedList) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/aggregated/networkEdgeSecurityServices"
    };
    option (google.api.method_signature) = "project";
  }

  // Deletes the specified service.
  rpc Delete(DeleteNetworkEdgeSecurityServiceRequest) returns (Operation) {
    option (google.api.http) = {
      delete: "/compute/v1/projects/{project}/regions/{region}/networkEdgeSecurityServices/{network_edge_security_service}"
    };
    option (google.api.method_signature) = "project,region,network_edge_security_service";
    option (google.cloud.operation_service) = "RegionOperations";
  }

  // Gets a specified NetworkEdgeSecurityService.
  rpc Get(GetNetworkEdgeSecurityServiceRequest) returns (NetworkEdgeSecurityService) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/regions/{region}/networkEdgeSecurityServices/{network_edge_security_service}"
    };
    option (google.api.method_signature) = "project,region,network_edge_security_service";
  }

  // Creates a new service in the specified project using the data included in the request.
  rpc Insert(InsertNetworkEdgeSecurityServiceRequest) returns (Operation) {
    option (google.api.http) = {
      body: "network_edge_security_service_resource"
      post: "/compute/v1/projects/{project}/regions/{region}/networkEdgeSecurityServices"
    };
    option (google.api.method_signature) = "project,region,network_edge_security_service_resource";
    option (google.cloud.operation_service) = "RegionOperations";
  }

  // Patches the specified policy with the data included in the request.
  rpc Patch(PatchNetworkEdgeSecurityServiceRequest) returns (Operation) {
    option (google.api.http) = {
      body: "network_edge_security_service_resource"
      patch: "/compute/v1/projects/{project}/regions/{region}/networkEdgeSecurityServices/{network_edge_security_service}"
    };
    option (google.api.method_signature) = "project,region,network_edge_security_service,network_edge_security_service_resource";
    option (google.cloud.operation_service) = "RegionOperations";
  }

}

// The NetworkEndpointGroups API.
service NetworkEndpointGroups {
  option (google.api.default_host) =
    "compute.googleapis.com";

  option (google.api.oauth_scopes) =
    "https://www.googleapis.com/auth/compute,"
    "https://www.googleapis.com/auth/cloud-platform";

  // Retrieves the list of network endpoint groups and sorts them by zone.
  rpc AggregatedList(AggregatedListNetworkEndpointGroupsRequest) returns (NetworkEndpointGroupAggregatedList) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/aggregated/networkEndpointGroups"
    };
    option (google.api.method_signature) = "project";
  }

  // Attach a list of network endpoints to the specified network endpoint group.
  rpc AttachNetworkEndpoints(AttachNetworkEndpointsNetworkEndpointGroupRequest) returns (Operation) {
    option (google.api.http) = {
      body: "network_endpoint_groups_attach_endpoints_request_resource"
      post: "/compute/v1/projects/{project}/zones/{zone}/networkEndpointGroups/{network_endpoint_group}/attachNetworkEndpoints"
    };
    option (google.api.method_signature) = "project,zone,network_endpoint_group,network_endpoint_groups_attach_endpoints_request_resource";
    option (google.cloud.operation_service) = "ZoneOperations";
  }

  // Deletes the specified network endpoint group. The network endpoints in the NEG and the VM instances they belong to are not terminated when the NEG is deleted. Note that the NEG cannot be deleted if there are backend services referencing it.
  rpc Delete(DeleteNetworkEndpointGroupRequest) returns (Operation) {
    option (google.api.http) = {
      delete: "/compute/v1/projects/{project}/zones/{zone}/networkEndpointGroups/{network_endpoint_group}"
    };
    option (google.api.method_signature) = "project,zone,network_endpoint_group";
    option (google.cloud.operation_service) = "ZoneOperations";
  }

  // Detach a list of network endpoints from the specified network endpoint group.
  rpc DetachNetworkEndpoints(DetachNetworkEndpointsNetworkEndpointGroupRequest) returns (Operation) {
    option (google.api.http) = {
      body: "network_endpoint_groups_detach_endpoints_request_resource"
      post: "/compute/v1/projects/{project}/zones/{zone}/networkEndpointGroups/{network_endpoint_group}/detachNetworkEndpoints"
    };
    option (google.api.method_signature) = "project,zone,network_endpoint_group,network_endpoint_groups_detach_endpoints_request_resource";
    option (google.cloud.operation_service) = "ZoneOperations";
  }

  // Returns the specified network endpoint group.
  rpc Get(GetNetworkEndpointGroupRequest) returns (NetworkEndpointGroup) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/zones/{zone}/networkEndpointGroups/{network_endpoint_group}"
    };
    option (google.api.method_signature) = "project,zone,network_endpoint_group";
  }

  // Creates a network endpoint group in the specified project using the parameters that are included in the request.
  rpc Insert(InsertNetworkEndpointGroupRequest) returns (Operation) {
    option (google.api.http) = {
      body: "network_endpoint_group_resource"
      post: "/compute/v1/projects/{project}/zones/{zone}/networkEndpointGroups"
    };
    option (google.api.method_signature) = "project,zone,network_endpoint_group_resource";
    option (google.cloud.operation_service) = "ZoneOperations";
  }

  // Retrieves the list of network endpoint groups that are located in the specified project and zone.
  rpc List(ListNetworkEndpointGroupsRequest) returns (NetworkEndpointGroupList) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/zones/{zone}/networkEndpointGroups"
    };
    option (google.api.method_signature) = "project,zone";
  }

  // Lists the network endpoints in the specified network endpoint group.
  rpc ListNetworkEndpoints(ListNetworkEndpointsNetworkEndpointGroupsRequest) returns (NetworkEndpointGroupsListNetworkEndpoints) {
    option (google.api.http) = {
      body: "network_endpoint_groups_list_endpoints_request_resource"
      post: "/compute/v1/projects/{project}/zones/{zone}/networkEndpointGroups/{network_endpoint_group}/listNetworkEndpoints"
    };
    option (google.api.method_signature) = "project,zone,network_endpoint_group,network_endpoint_groups_list_endpoints_request_resource";
  }

  // Returns permissions that a caller has on the specified resource.
  rpc TestIamPermissions(TestIamPermissionsNetworkEndpointGroupRequest) returns (TestPermissionsResponse) {
    option (google.api.http) = {
      body: "test_permissions_request_resource"
      post: "/compute/v1/projects/{project}/zones/{zone}/networkEndpointGroups/{resource}/testIamPermissions"
    };
    option (google.api.method_signature) = "project,zone,resource,test_permissions_request_resource";
  }

}

// The NetworkFirewallPolicies API.
service NetworkFirewallPolicies {
  option (google.api.default_host) =
    "compute.googleapis.com";

  option (google.api.oauth_scopes) =
    "https://www.googleapis.com/auth/compute,"
    "https://www.googleapis.com/auth/cloud-platform";

  // Inserts an association for the specified firewall policy.
  rpc AddAssociation(AddAssociationNetworkFirewallPolicyRequest) returns (Operation) {
    option (google.api.http) = {
      body: "firewall_policy_association_resource"
      post: "/compute/v1/projects/{project}/global/firewallPolicies/{firewall_policy}/addAssociation"
    };
    option (google.api.method_signature) = "project,firewall_policy,firewall_policy_association_resource";
    option (google.cloud.operation_service) = "GlobalOperations";
  }

  // Inserts a rule into a firewall policy.
  rpc AddRule(AddRuleNetworkFirewallPolicyRequest) returns (Operation) {
    option (google.api.http) = {
      body: "firewall_policy_rule_resource"
      post: "/compute/v1/projects/{project}/global/firewallPolicies/{firewall_policy}/addRule"
    };
    option (google.api.method_signature) = "project,firewall_policy,firewall_policy_rule_resource";
    option (google.cloud.operation_service) = "GlobalOperations";
  }

  // Copies rules to the specified firewall policy.
  rpc CloneRules(CloneRulesNetworkFirewallPolicyRequest) returns (Operation) {
    option (google.api.http) = {
      post: "/compute/v1/projects/{project}/global/firewallPolicies/{firewall_policy}/cloneRules"
    };
    option (google.api.method_signature) = "project,firewall_policy";
    option (google.cloud.operation_service) = "GlobalOperations";
  }

  // Deletes the specified policy.
  rpc Delete(DeleteNetworkFirewallPolicyRequest) returns (Operation) {
    option (google.api.http) = {
      delete: "/compute/v1/projects/{project}/global/firewallPolicies/{firewall_policy}"
    };
    option (google.api.method_signature) = "project,firewall_policy";
    option (google.cloud.operation_service) = "GlobalOperations";
  }

  // Returns the specified network firewall policy.
  rpc Get(GetNetworkFirewallPolicyRequest) returns (FirewallPolicy) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/global/firewallPolicies/{firewall_policy}"
    };
    option (google.api.method_signature) = "project,firewall_policy";
  }

  // Gets an association with the specified name.
  rpc GetAssociation(GetAssociationNetworkFirewallPolicyRequest) returns (FirewallPolicyAssociation) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/global/firewallPolicies/{firewall_policy}/getAssociation"
    };
    option (google.api.method_signature) = "project,firewall_policy";
  }

  // Gets the access control policy for a resource. May be empty if no such policy or resource exists.
  rpc GetIamPolicy(GetIamPolicyNetworkFirewallPolicyRequest) returns (Policy) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/global/firewallPolicies/{resource}/getIamPolicy"
    };
    option (google.api.method_signature) = "project,resource";
  }

  // Gets a rule of the specified priority.
  rpc GetRule(GetRuleNetworkFirewallPolicyRequest) returns (FirewallPolicyRule) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/global/firewallPolicies/{firewall_policy}/getRule"
    };
    option (google.api.method_signature) = "project,firewall_policy";
  }

  // Creates a new policy in the specified project using the data included in the request.
  rpc Insert(InsertNetworkFirewallPolicyRequest) returns (Operation) {
    option (google.api.http) = {
      body: "firewall_policy_resource"
      post: "/compute/v1/projects/{project}/global/firewallPolicies"
    };
    option (google.api.method_signature) = "project,firewall_policy_resource";
    option (google.cloud.operation_service) = "GlobalOperations";
  }

  // Lists all the policies that have been configured for the specified project.
  rpc List(ListNetworkFirewallPoliciesRequest) returns (FirewallPolicyList) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/global/firewallPolicies"
    };
    option (google.api.method_signature) = "project";
  }

  // Patches the specified policy with the data included in the request.
  rpc Patch(PatchNetworkFirewallPolicyRequest) returns (Operation) {
    option (google.api.http) = {
      body: "firewall_policy_resource"
      patch: "/compute/v1/projects/{project}/global/firewallPolicies/{firewall_policy}"
    };
    option (google.api.method_signature) = "project,firewall_policy,firewall_policy_resource";
    option (google.cloud.operation_service) = "GlobalOperations";
  }

  // Patches a rule of the specified priority.
  rpc PatchRule(PatchRuleNetworkFirewallPolicyRequest) returns (Operation) {
    option (google.api.http) = {
      body: "firewall_policy_rule_resource"
      post: "/compute/v1/projects/{project}/global/firewallPolicies/{firewall_policy}/patchRule"
    };
    option (google.api.method_signature) = "project,firewall_policy,firewall_policy_rule_resource";
    option (google.cloud.operation_service) = "GlobalOperations";
  }

  // Removes an association for the specified firewall policy.
  rpc RemoveAssociation(RemoveAssociationNetworkFirewallPolicyRequest) returns (Operation) {
    option (google.api.http) = {
      post: "/compute/v1/projects/{project}/global/firewallPolicies/{firewall_policy}/removeAssociation"
    };
    option (google.api.method_signature) = "project,firewall_policy";
    option (google.cloud.operation_service) = "GlobalOperations";
  }

  // Deletes a rule of the specified priority.
  rpc RemoveRule(RemoveRuleNetworkFirewallPolicyRequest) returns (Operation) {
    option (google.api.http) = {
      post: "/compute/v1/projects/{project}/global/firewallPolicies/{firewall_policy}/removeRule"
    };
    option (google.api.method_signature) = "project,firewall_policy";
    option (google.cloud.operation_service) = "GlobalOperations";
  }

  // Sets the access control policy on the specified resource. Replaces any existing policy.
  rpc SetIamPolicy(SetIamPolicyNetworkFirewallPolicyRequest) returns (Policy) {
    option (google.api.http) = {
      body: "global_set_policy_request_resource"
      post: "/compute/v1/projects/{project}/global/firewallPolicies/{resource}/setIamPolicy"
    };
    option (google.api.method_signature) = "project,resource,global_set_policy_request_resource";
  }

  // Returns permissions that a caller has on the specified resource.
  rpc TestIamPermissions(TestIamPermissionsNetworkFirewallPolicyRequest) returns (TestPermissionsResponse) {
    option (google.api.http) = {
      body: "test_permissions_request_resource"
      post: "/compute/v1/projects/{project}/global/firewallPolicies/{resource}/testIamPermissions"
    };
    option (google.api.method_signature) = "project,resource,test_permissions_request_resource";
  }

}

// The Networks API.
service Networks {
  option (google.api.default_host) =
    "compute.googleapis.com";

  option (google.api.oauth_scopes) =
    "https://www.googleapis.com/auth/compute,"
    "https://www.googleapis.com/auth/cloud-platform";

  // Adds a peering to the specified network.
  rpc AddPeering(AddPeeringNetworkRequest) returns (Operation) {
    option (google.api.http) = {
      body: "networks_add_peering_request_resource"
      post: "/compute/v1/projects/{project}/global/networks/{network}/addPeering"
    };
    option (google.api.method_signature) = "project,network,networks_add_peering_request_resource";
    option (google.cloud.operation_service) = "GlobalOperations";
  }

  // Deletes the specified network.
  rpc Delete(DeleteNetworkRequest) returns (Operation) {
    option (google.api.http) = {
      delete: "/compute/v1/projects/{project}/global/networks/{network}"
    };
    option (google.api.method_signature) = "project,network";
    option (google.cloud.operation_service) = "GlobalOperations";
  }

  // Returns the specified network.
  rpc Get(GetNetworkRequest) returns (Network) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/global/networks/{network}"
    };
    option (google.api.method_signature) = "project,network";
  }

  // Returns the effective firewalls on a given network.
  rpc GetEffectiveFirewalls(GetEffectiveFirewallsNetworkRequest) returns (NetworksGetEffectiveFirewallsResponse) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/global/networks/{network}/getEffectiveFirewalls"
    };
    option (google.api.method_signature) = "project,network";
  }

  // Creates a network in the specified project using the data included in the request.
  rpc Insert(InsertNetworkRequest) returns (Operation) {
    option (google.api.http) = {
      body: "network_resource"
      post: "/compute/v1/projects/{project}/global/networks"
    };
    option (google.api.method_signature) = "project,network_resource";
    option (google.cloud.operation_service) = "GlobalOperations";
  }

  // Retrieves the list of networks available to the specified project.
  rpc List(ListNetworksRequest) returns (NetworkList) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/global/networks"
    };
    option (google.api.method_signature) = "project";
  }

  // Lists the peering routes exchanged over peering connection.
  rpc ListPeeringRoutes(ListPeeringRoutesNetworksRequest) returns (ExchangedPeeringRoutesList) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/global/networks/{network}/listPeeringRoutes"
    };
    option (google.api.method_signature) = "project,network";
  }

  // Patches the specified network with the data included in the request. Only the following fields can be modified: routingConfig.routingMode.
  rpc Patch(PatchNetworkRequest) returns (Operation) {
    option (google.api.http) = {
      body: "network_resource"
      patch: "/compute/v1/projects/{project}/global/networks/{network}"
    };
    option (google.api.method_signature) = "project,network,network_resource";
    option (google.cloud.operation_service) = "GlobalOperations";
  }

  // Removes a peering from the specified network.
  rpc RemovePeering(RemovePeeringNetworkRequest) returns (Operation) {
    option (google.api.http) = {
      body: "networks_remove_peering_request_resource"
      post: "/compute/v1/projects/{project}/global/networks/{network}/removePeering"
    };
    option (google.api.method_signature) = "project,network,networks_remove_peering_request_resource";
    option (google.cloud.operation_service) = "GlobalOperations";
  }

  // Switches the network mode from auto subnet mode to custom subnet mode.
  rpc SwitchToCustomMode(SwitchToCustomModeNetworkRequest) returns (Operation) {
    option (google.api.http) = {
      post: "/compute/v1/projects/{project}/global/networks/{network}/switchToCustomMode"
    };
    option (google.api.method_signature) = "project,network";
    option (google.cloud.operation_service) = "GlobalOperations";
  }

  // Updates the specified network peering with the data included in the request. You can only modify the NetworkPeering.export_custom_routes field and the NetworkPeering.import_custom_routes field.
  rpc UpdatePeering(UpdatePeeringNetworkRequest) returns (Operation) {
    option (google.api.http) = {
      body: "networks_update_peering_request_resource"
      patch: "/compute/v1/projects/{project}/global/networks/{network}/updatePeering"
    };
    option (google.api.method_signature) = "project,network,networks_update_peering_request_resource";
    option (google.cloud.operation_service) = "GlobalOperations";
  }

}

// The NodeGroups API.
service NodeGroups {
  option (google.api.default_host) =
    "compute.googleapis.com";

  option (google.api.oauth_scopes) =
    "https://www.googleapis.com/auth/compute,"
    "https://www.googleapis.com/auth/cloud-platform";

  // Adds specified number of nodes to the node group.
  rpc AddNodes(AddNodesNodeGroupRequest) returns (Operation) {
    option (google.api.http) = {
      body: "node_groups_add_nodes_request_resource"
      post: "/compute/v1/projects/{project}/zones/{zone}/nodeGroups/{node_group}/addNodes"
    };
    option (google.api.method_signature) = "project,zone,node_group,node_groups_add_nodes_request_resource";
    option (google.cloud.operation_service) = "ZoneOperations";
  }

  // Retrieves an aggregated list of node groups. Note: use nodeGroups.listNodes for more details about each group.
  rpc AggregatedList(AggregatedListNodeGroupsRequest) returns (NodeGroupAggregatedList) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/aggregated/nodeGroups"
    };
    option (google.api.method_signature) = "project";
  }

  // Deletes the specified NodeGroup resource.
  rpc Delete(DeleteNodeGroupRequest) returns (Operation) {
    option (google.api.http) = {
      delete: "/compute/v1/projects/{project}/zones/{zone}/nodeGroups/{node_group}"
    };
    option (google.api.method_signature) = "project,zone,node_group";
    option (google.cloud.operation_service) = "ZoneOperations";
  }

  // Deletes specified nodes from the node group.
  rpc DeleteNodes(DeleteNodesNodeGroupRequest) returns (Operation) {
    option (google.api.http) = {
      body: "node_groups_delete_nodes_request_resource"
      post: "/compute/v1/projects/{project}/zones/{zone}/nodeGroups/{node_group}/deleteNodes"
    };
    option (google.api.method_signature) = "project,zone,node_group,node_groups_delete_nodes_request_resource";
    option (google.cloud.operation_service) = "ZoneOperations";
  }

  // Returns the specified NodeGroup. Get a list of available NodeGroups by making a list() request. Note: the "nodes" field should not be used. Use nodeGroups.listNodes instead.
  rpc Get(GetNodeGroupRequest) returns (NodeGroup) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/zones/{zone}/nodeGroups/{node_group}"
    };
    option (google.api.method_signature) = "project,zone,node_group";
  }

  // Gets the access control policy for a resource. May be empty if no such policy or resource exists.
  rpc GetIamPolicy(GetIamPolicyNodeGroupRequest) returns (Policy) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/zones/{zone}/nodeGroups/{resource}/getIamPolicy"
    };
    option (google.api.method_signature) = "project,zone,resource";
  }

  // Creates a NodeGroup resource in the specified project using the data included in the request.
  rpc Insert(InsertNodeGroupRequest) returns (Operation) {
    option (google.api.http) = {
      body: "node_group_resource"
      post: "/compute/v1/projects/{project}/zones/{zone}/nodeGroups"
    };
    option (google.api.method_signature) = "project,zone,initial_node_count,node_group_resource";
    option (google.cloud.operation_service) = "ZoneOperations";
  }

  // Retrieves a list of node groups available to the specified project. Note: use nodeGroups.listNodes for more details about each group.
  rpc List(ListNodeGroupsRequest) returns (NodeGroupList) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/zones/{zone}/nodeGroups"
    };
    option (google.api.method_signature) = "project,zone";
  }

  // Lists nodes in the node group.
  rpc ListNodes(ListNodesNodeGroupsRequest) returns (NodeGroupsListNodes) {
    option (google.api.http) = {
      post: "/compute/v1/projects/{project}/zones/{zone}/nodeGroups/{node_group}/listNodes"
    };
    option (google.api.method_signature) = "project,zone,node_group";
  }

  // Updates the specified node group.
  rpc Patch(PatchNodeGroupRequest) returns (Operation) {
    option (google.api.http) = {
      body: "node_group_resource"
      patch: "/compute/v1/projects/{project}/zones/{zone}/nodeGroups/{node_group}"
    };
    option (google.api.method_signature) = "project,zone,node_group,node_group_resource";
    option (google.cloud.operation_service) = "ZoneOperations";
  }

  // Sets the access control policy on the specified resource. Replaces any existing policy.
  rpc SetIamPolicy(SetIamPolicyNodeGroupRequest) returns (Policy) {
    option (google.api.http) = {
      body: "zone_set_policy_request_resource"
      post: "/compute/v1/projects/{project}/zones/{zone}/nodeGroups/{resource}/setIamPolicy"
    };
    option (google.api.method_signature) = "project,zone,resource,zone_set_policy_request_resource";
  }

  // Updates the node template of the node group.
  rpc SetNodeTemplate(SetNodeTemplateNodeGroupRequest) returns (Operation) {
    option (google.api.http) = {
      body: "node_groups_set_node_template_request_resource"
      post: "/compute/v1/projects/{project}/zones/{zone}/nodeGroups/{node_group}/setNodeTemplate"
    };
    option (google.api.method_signature) = "project,zone,node_group,node_groups_set_node_template_request_resource";
    option (google.cloud.operation_service) = "ZoneOperations";
  }

  // Simulates maintenance event on specified nodes from the node group.
  rpc SimulateMaintenanceEvent(SimulateMaintenanceEventNodeGroupRequest) returns (Operation) {
    option (google.api.http) = {
      body: "node_groups_simulate_maintenance_event_request_resource"
      post: "/compute/v1/projects/{project}/zones/{zone}/nodeGroups/{node_group}/simulateMaintenanceEvent"
    };
    option (google.api.method_signature) = "project,zone,node_group,node_groups_simulate_maintenance_event_request_resource";
    option (google.cloud.operation_service) = "ZoneOperations";
  }

  // Returns permissions that a caller has on the specified resource.
  rpc TestIamPermissions(TestIamPermissionsNodeGroupRequest) returns (TestPermissionsResponse) {
    option (google.api.http) = {
      body: "test_permissions_request_resource"
      post: "/compute/v1/projects/{project}/zones/{zone}/nodeGroups/{resource}/testIamPermissions"
    };
    option (google.api.method_signature) = "project,zone,resource,test_permissions_request_resource";
  }

}

// The NodeTemplates API.
service NodeTemplates {
  option (google.api.default_host) =
    "compute.googleapis.com";

  option (google.api.oauth_scopes) =
    "https://www.googleapis.com/auth/compute,"
    "https://www.googleapis.com/auth/cloud-platform";

  // Retrieves an aggregated list of node templates.
  rpc AggregatedList(AggregatedListNodeTemplatesRequest) returns (NodeTemplateAggregatedList) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/aggregated/nodeTemplates"
    };
    option (google.api.method_signature) = "project";
  }

  // Deletes the specified NodeTemplate resource.
  rpc Delete(DeleteNodeTemplateRequest) returns (Operation) {
    option (google.api.http) = {
      delete: "/compute/v1/projects/{project}/regions/{region}/nodeTemplates/{node_template}"
    };
    option (google.api.method_signature) = "project,region,node_template";
    option (google.cloud.operation_service) = "RegionOperations";
  }

  // Returns the specified node template.
  rpc Get(GetNodeTemplateRequest) returns (NodeTemplate) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/regions/{region}/nodeTemplates/{node_template}"
    };
    option (google.api.method_signature) = "project,region,node_template";
  }

  // Gets the access control policy for a resource. May be empty if no such policy or resource exists.
  rpc GetIamPolicy(GetIamPolicyNodeTemplateRequest) returns (Policy) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/regions/{region}/nodeTemplates/{resource}/getIamPolicy"
    };
    option (google.api.method_signature) = "project,region,resource";
  }

  // Creates a NodeTemplate resource in the specified project using the data included in the request.
  rpc Insert(InsertNodeTemplateRequest) returns (Operation) {
    option (google.api.http) = {
      body: "node_template_resource"
      post: "/compute/v1/projects/{project}/regions/{region}/nodeTemplates"
    };
    option (google.api.method_signature) = "project,region,node_template_resource";
    option (google.cloud.operation_service) = "RegionOperations";
  }

  // Retrieves a list of node templates available to the specified project.
  rpc List(ListNodeTemplatesRequest) returns (NodeTemplateList) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/regions/{region}/nodeTemplates"
    };
    option (google.api.method_signature) = "project,region";
  }

  // Sets the access control policy on the specified resource. Replaces any existing policy.
  rpc SetIamPolicy(SetIamPolicyNodeTemplateRequest) returns (Policy) {
    option (google.api.http) = {
      body: "region_set_policy_request_resource"
      post: "/compute/v1/projects/{project}/regions/{region}/nodeTemplates/{resource}/setIamPolicy"
    };
    option (google.api.method_signature) = "project,region,resource,region_set_policy_request_resource";
  }

  // Returns permissions that a caller has on the specified resource.
  rpc TestIamPermissions(TestIamPermissionsNodeTemplateRequest) returns (TestPermissionsResponse) {
    option (google.api.http) = {
      body: "test_permissions_request_resource"
      post: "/compute/v1/projects/{project}/regions/{region}/nodeTemplates/{resource}/testIamPermissions"
    };
    option (google.api.method_signature) = "project,region,resource,test_permissions_request_resource";
  }

}

// The NodeTypes API.
service NodeTypes {
  option (google.api.default_host) =
    "compute.googleapis.com";

  option (google.api.oauth_scopes) =
    "https://www.googleapis.com/auth/compute.readonly,"
    "https://www.googleapis.com/auth/compute,"
    "https://www.googleapis.com/auth/cloud-platform";

  // Retrieves an aggregated list of node types.
  rpc AggregatedList(AggregatedListNodeTypesRequest) returns (NodeTypeAggregatedList) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/aggregated/nodeTypes"
    };
    option (google.api.method_signature) = "project";
  }

  // Returns the specified node type.
  rpc Get(GetNodeTypeRequest) returns (NodeType) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/zones/{zone}/nodeTypes/{node_type}"
    };
    option (google.api.method_signature) = "project,zone,node_type";
  }

  // Retrieves a list of node types available to the specified project.
  rpc List(ListNodeTypesRequest) returns (NodeTypeList) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/zones/{zone}/nodeTypes"
    };
    option (google.api.method_signature) = "project,zone";
  }

}

// The PacketMirrorings API.
service PacketMirrorings {
  option (google.api.default_host) =
    "compute.googleapis.com";

  option (google.api.oauth_scopes) =
    "https://www.googleapis.com/auth/compute,"
    "https://www.googleapis.com/auth/cloud-platform";

  // Retrieves an aggregated list of packetMirrorings.
  rpc AggregatedList(AggregatedListPacketMirroringsRequest) returns (PacketMirroringAggregatedList) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/aggregated/packetMirrorings"
    };
    option (google.api.method_signature) = "project";
  }

  // Deletes the specified PacketMirroring resource.
  rpc Delete(DeletePacketMirroringRequest) returns (Operation) {
    option (google.api.http) = {
      delete: "/compute/v1/projects/{project}/regions/{region}/packetMirrorings/{packet_mirroring}"
    };
    option (google.api.method_signature) = "project,region,packet_mirroring";
    option (google.cloud.operation_service) = "RegionOperations";
  }

  // Returns the specified PacketMirroring resource.
  rpc Get(GetPacketMirroringRequest) returns (PacketMirroring) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/regions/{region}/packetMirrorings/{packet_mirroring}"
    };
    option (google.api.method_signature) = "project,region,packet_mirroring";
  }

  // Creates a PacketMirroring resource in the specified project and region using the data included in the request.
  rpc Insert(InsertPacketMirroringRequest) returns (Operation) {
    option (google.api.http) = {
      body: "packet_mirroring_resource"
      post: "/compute/v1/projects/{project}/regions/{region}/packetMirrorings"
    };
    option (google.api.method_signature) = "project,region,packet_mirroring_resource";
    option (google.cloud.operation_service) = "RegionOperations";
  }

  // Retrieves a list of PacketMirroring resources available to the specified project and region.
  rpc List(ListPacketMirroringsRequest) returns (PacketMirroringList) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/regions/{region}/packetMirrorings"
    };
    option (google.api.method_signature) = "project,region";
  }

  // Patches the specified PacketMirroring resource with the data included in the request. This method supports PATCH semantics and uses JSON merge patch format and processing rules.
  rpc Patch(PatchPacketMirroringRequest) returns (Operation) {
    option (google.api.http) = {
      body: "packet_mirroring_resource"
      patch: "/compute/v1/projects/{project}/regions/{region}/packetMirrorings/{packet_mirroring}"
    };
    option (google.api.method_signature) = "project,region,packet_mirroring,packet_mirroring_resource";
    option (google.cloud.operation_service) = "RegionOperations";
  }

  // Returns permissions that a caller has on the specified resource.
  rpc TestIamPermissions(TestIamPermissionsPacketMirroringRequest) returns (TestPermissionsResponse) {
    option (google.api.http) = {
      body: "test_permissions_request_resource"
      post: "/compute/v1/projects/{project}/regions/{region}/packetMirrorings/{resource}/testIamPermissions"
    };
    option (google.api.method_signature) = "project,region,resource,test_permissions_request_resource";
  }

}

// The Projects API.
service Projects {
  option (google.api.default_host) =
    "compute.googleapis.com";

  option (google.api.oauth_scopes) =
    "https://www.googleapis.com/auth/compute,"
    "https://www.googleapis.com/auth/cloud-platform";

  // Disable this project as a shared VPC host project.
  rpc DisableXpnHost(DisableXpnHostProjectRequest) returns (Operation) {
    option (google.api.http) = {
      post: "/compute/v1/projects/{project}/disableXpnHost"
    };
    option (google.api.method_signature) = "project";
    option (google.cloud.operation_service) = "GlobalOperations";
  }

  // Disable a service resource (also known as service project) associated with this host project.
  rpc DisableXpnResource(DisableXpnResourceProjectRequest) returns (Operation) {
    option (google.api.http) = {
      body: "projects_disable_xpn_resource_request_resource"
      post: "/compute/v1/projects/{project}/disableXpnResource"
    };
    option (google.api.method_signature) = "project,projects_disable_xpn_resource_request_resource";
    option (google.cloud.operation_service) = "GlobalOperations";
  }

  // Enable this project as a shared VPC host project.
  rpc EnableXpnHost(EnableXpnHostProjectRequest) returns (Operation) {
    option (google.api.http) = {
      post: "/compute/v1/projects/{project}/enableXpnHost"
    };
    option (google.api.method_signature) = "project";
    option (google.cloud.operation_service) = "GlobalOperations";
  }

  // Enable service resource (a.k.a service project) for a host project, so that subnets in the host project can be used by instances in the service project.
  rpc EnableXpnResource(EnableXpnResourceProjectRequest) returns (Operation) {
    option (google.api.http) = {
      body: "projects_enable_xpn_resource_request_resource"
      post: "/compute/v1/projects/{project}/enableXpnResource"
    };
    option (google.api.method_signature) = "project,projects_enable_xpn_resource_request_resource";
    option (google.cloud.operation_service) = "GlobalOperations";
  }

  // Returns the specified Project resource. To decrease latency for this method, you can optionally omit any unneeded information from the response by using a field mask. This practice is especially recommended for unused quota information (the `quotas` field). To exclude one or more fields, set your request's `fields` query parameter to only include the fields you need. For example, to only include the `id` and `selfLink` fields, add the query parameter `?fields=id,selfLink` to your request.
  rpc Get(GetProjectRequest) returns (Project) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}"
    };
    option (google.api.method_signature) = "project";
  }

  // Gets the shared VPC host project that this project links to. May be empty if no link exists.
  rpc GetXpnHost(GetXpnHostProjectRequest) returns (Project) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/getXpnHost"
    };
    option (google.api.method_signature) = "project";
  }

  // Gets service resources (a.k.a service project) associated with this host project.
  rpc GetXpnResources(GetXpnResourcesProjectsRequest) returns (ProjectsGetXpnResources) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/getXpnResources"
    };
    option (google.api.method_signature) = "project";
  }

  // Lists all shared VPC host projects visible to the user in an organization.
  rpc ListXpnHosts(ListXpnHostsProjectsRequest) returns (XpnHostList) {
    option (google.api.http) = {
      body: "projects_list_xpn_hosts_request_resource"
      post: "/compute/v1/projects/{project}/listXpnHosts"
    };
    option (google.api.method_signature) = "project,projects_list_xpn_hosts_request_resource";
  }

  // Moves a persistent disk from one zone to another.
  rpc MoveDisk(MoveDiskProjectRequest) returns (Operation) {
    option (google.api.http) = {
      body: "disk_move_request_resource"
      post: "/compute/v1/projects/{project}/moveDisk"
    };
    option (google.api.method_signature) = "project,disk_move_request_resource";
    option (google.cloud.operation_service) = "GlobalOperations";
  }

  // Moves an instance and its attached persistent disks from one zone to another. *Note*: Moving VMs or disks by using this method might cause unexpected behavior. For more information, see the [known issue](/compute/docs/troubleshooting/known-issues#moving_vms_or_disks_using_the_moveinstance_api_or_the_causes_unexpected_behavior).
  rpc MoveInstance(MoveInstanceProjectRequest) returns (Operation) {
    option (google.api.http) = {
      body: "instance_move_request_resource"
      post: "/compute/v1/projects/{project}/moveInstance"
    };
    option (google.api.method_signature) = "project,instance_move_request_resource";
    option (google.cloud.operation_service) = "GlobalOperations";
  }

  // Sets metadata common to all instances within the specified project using the data included in the request.
  rpc SetCommonInstanceMetadata(SetCommonInstanceMetadataProjectRequest) returns (Operation) {
    option (google.api.http) = {
      body: "metadata_resource"
      post: "/compute/v1/projects/{project}/setCommonInstanceMetadata"
    };
    option (google.api.method_signature) = "project,metadata_resource";
    option (google.cloud.operation_service) = "GlobalOperations";
  }

  // Sets the default network tier of the project. The default network tier is used when an address/forwardingRule/instance is created without specifying the network tier field.
  rpc SetDefaultNetworkTier(SetDefaultNetworkTierProjectRequest) returns (Operation) {
    option (google.api.http) = {
      body: "projects_set_default_network_tier_request_resource"
      post: "/compute/v1/projects/{project}/setDefaultNetworkTier"
    };
    option (google.api.method_signature) = "project,projects_set_default_network_tier_request_resource";
    option (google.cloud.operation_service) = "GlobalOperations";
  }

  // Enables the usage export feature and sets the usage export bucket where reports are stored. If you provide an empty request body using this method, the usage export feature will be disabled.
  rpc SetUsageExportBucket(SetUsageExportBucketProjectRequest) returns (Operation) {
    option (google.api.http) = {
      body: "usage_export_location_resource"
      post: "/compute/v1/projects/{project}/setUsageExportBucket"
    };
    option (google.api.method_signature) = "project,usage_export_location_resource";
    option (google.cloud.operation_service) = "GlobalOperations";
  }

}

// The PublicAdvertisedPrefixes API.
service PublicAdvertisedPrefixes {
  option (google.api.default_host) =
    "compute.googleapis.com";

  option (google.api.oauth_scopes) =
    "https://www.googleapis.com/auth/compute,"
    "https://www.googleapis.com/auth/cloud-platform";

  // Deletes the specified PublicAdvertisedPrefix
  rpc Delete(DeletePublicAdvertisedPrefixeRequest) returns (Operation) {
    option (google.api.http) = {
      delete: "/compute/v1/projects/{project}/global/publicAdvertisedPrefixes/{public_advertised_prefix}"
    };
    option (google.api.method_signature) = "project,public_advertised_prefix";
    option (google.cloud.operation_service) = "GlobalOperations";
  }

  // Returns the specified PublicAdvertisedPrefix resource.
  rpc Get(GetPublicAdvertisedPrefixeRequest) returns (PublicAdvertisedPrefix) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/global/publicAdvertisedPrefixes/{public_advertised_prefix}"
    };
    option (google.api.method_signature) = "project,public_advertised_prefix";
  }

  // Creates a PublicAdvertisedPrefix in the specified project using the parameters that are included in the request.
  rpc Insert(InsertPublicAdvertisedPrefixeRequest) returns (Operation) {
    option (google.api.http) = {
      body: "public_advertised_prefix_resource"
      post: "/compute/v1/projects/{project}/global/publicAdvertisedPrefixes"
    };
    option (google.api.method_signature) = "project,public_advertised_prefix_resource";
    option (google.cloud.operation_service) = "GlobalOperations";
  }

  // Lists the PublicAdvertisedPrefixes for a project.
  rpc List(ListPublicAdvertisedPrefixesRequest) returns (PublicAdvertisedPrefixList) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/global/publicAdvertisedPrefixes"
    };
    option (google.api.method_signature) = "project";
  }

  // Patches the specified Router resource with the data included in the request. This method supports PATCH semantics and uses JSON merge patch format and processing rules.
  rpc Patch(PatchPublicAdvertisedPrefixeRequest) returns (Operation) {
    option (google.api.http) = {
      body: "public_advertised_prefix_resource"
      patch: "/compute/v1/projects/{project}/global/publicAdvertisedPrefixes/{public_advertised_prefix}"
    };
    option (google.api.method_signature) = "project,public_advertised_prefix,public_advertised_prefix_resource";
    option (google.cloud.operation_service) = "GlobalOperations";
  }

}

// The PublicDelegatedPrefixes API.
service PublicDelegatedPrefixes {
  option (google.api.default_host) =
    "compute.googleapis.com";

  option (google.api.oauth_scopes) =
    "https://www.googleapis.com/auth/compute,"
    "https://www.googleapis.com/auth/cloud-platform";

  // Lists all PublicDelegatedPrefix resources owned by the specific project across all scopes.
  rpc AggregatedList(AggregatedListPublicDelegatedPrefixesRequest) returns (PublicDelegatedPrefixAggregatedList) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/aggregated/publicDelegatedPrefixes"
    };
    option (google.api.method_signature) = "project";
  }

  // Deletes the specified PublicDelegatedPrefix in the given region.
  rpc Delete(DeletePublicDelegatedPrefixeRequest) returns (Operation) {
    option (google.api.http) = {
      delete: "/compute/v1/projects/{project}/regions/{region}/publicDelegatedPrefixes/{public_delegated_prefix}"
    };
    option (google.api.method_signature) = "project,region,public_delegated_prefix";
    option (google.cloud.operation_service) = "RegionOperations";
  }

  // Returns the specified PublicDelegatedPrefix resource in the given region.
  rpc Get(GetPublicDelegatedPrefixeRequest) returns (PublicDelegatedPrefix) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/regions/{region}/publicDelegatedPrefixes/{public_delegated_prefix}"
    };
    option (google.api.method_signature) = "project,region,public_delegated_prefix";
  }

  // Creates a PublicDelegatedPrefix in the specified project in the given region using the parameters that are included in the request.
  rpc Insert(InsertPublicDelegatedPrefixeRequest) returns (Operation) {
    option (google.api.http) = {
      body: "public_delegated_prefix_resource"
      post: "/compute/v1/projects/{project}/regions/{region}/publicDelegatedPrefixes"
    };
    option (google.api.method_signature) = "project,region,public_delegated_prefix_resource";
    option (google.cloud.operation_service) = "RegionOperations";
  }

  // Lists the PublicDelegatedPrefixes for a project in the given region.
  rpc List(ListPublicDelegatedPrefixesRequest) returns (PublicDelegatedPrefixList) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/regions/{region}/publicDelegatedPrefixes"
    };
    option (google.api.method_signature) = "project,region";
  }

  // Patches the specified PublicDelegatedPrefix resource with the data included in the request. This method supports PATCH semantics and uses JSON merge patch format and processing rules.
  rpc Patch(PatchPublicDelegatedPrefixeRequest) returns (Operation) {
    option (google.api.http) = {
      body: "public_delegated_prefix_resource"
      patch: "/compute/v1/projects/{project}/regions/{region}/publicDelegatedPrefixes/{public_delegated_prefix}"
    };
    option (google.api.method_signature) = "project,region,public_delegated_prefix,public_delegated_prefix_resource";
    option (google.cloud.operation_service) = "RegionOperations";
  }

}

// The RegionAutoscalers API.
service RegionAutoscalers {
  option (google.api.default_host) =
    "compute.googleapis.com";

  option (google.api.oauth_scopes) =
    "https://www.googleapis.com/auth/compute,"
    "https://www.googleapis.com/auth/cloud-platform";

  // Deletes the specified autoscaler.
  rpc Delete(DeleteRegionAutoscalerRequest) returns (Operation) {
    option (google.api.http) = {
      delete: "/compute/v1/projects/{project}/regions/{region}/autoscalers/{autoscaler}"
    };
    option (google.api.method_signature) = "project,region,autoscaler";
    option (google.cloud.operation_service) = "RegionOperations";
  }

  // Returns the specified autoscaler.
  rpc Get(GetRegionAutoscalerRequest) returns (Autoscaler) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/regions/{region}/autoscalers/{autoscaler}"
    };
    option (google.api.method_signature) = "project,region,autoscaler";
  }

  // Creates an autoscaler in the specified project using the data included in the request.
  rpc Insert(InsertRegionAutoscalerRequest) returns (Operation) {
    option (google.api.http) = {
      body: "autoscaler_resource"
      post: "/compute/v1/projects/{project}/regions/{region}/autoscalers"
    };
    option (google.api.method_signature) = "project,region,autoscaler_resource";
    option (google.cloud.operation_service) = "RegionOperations";
  }

  // Retrieves a list of autoscalers contained within the specified region.
  rpc List(ListRegionAutoscalersRequest) returns (RegionAutoscalerList) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/regions/{region}/autoscalers"
    };
    option (google.api.method_signature) = "project,region";
  }

  // Updates an autoscaler in the specified project using the data included in the request. This method supports PATCH semantics and uses the JSON merge patch format and processing rules.
  rpc Patch(PatchRegionAutoscalerRequest) returns (Operation) {
    option (google.api.http) = {
      body: "autoscaler_resource"
      patch: "/compute/v1/projects/{project}/regions/{region}/autoscalers"
    };
    option (google.api.method_signature) = "project,region,autoscaler_resource";
    option (google.cloud.operation_service) = "RegionOperations";
  }

  // Updates an autoscaler in the specified project using the data included in the request.
  rpc Update(UpdateRegionAutoscalerRequest) returns (Operation) {
    option (google.api.http) = {
      body: "autoscaler_resource"
      put: "/compute/v1/projects/{project}/regions/{region}/autoscalers"
    };
    option (google.api.method_signature) = "project,region,autoscaler_resource";
    option (google.cloud.operation_service) = "RegionOperations";
  }

}

// The RegionBackendServices API.
service RegionBackendServices {
  option (google.api.default_host) =
    "compute.googleapis.com";

  option (google.api.oauth_scopes) =
    "https://www.googleapis.com/auth/compute,"
    "https://www.googleapis.com/auth/cloud-platform";

  // Deletes the specified regional BackendService resource.
  rpc Delete(DeleteRegionBackendServiceRequest) returns (Operation) {
    option (google.api.http) = {
      delete: "/compute/v1/projects/{project}/regions/{region}/backendServices/{backend_service}"
    };
    option (google.api.method_signature) = "project,region,backend_service";
    option (google.cloud.operation_service) = "RegionOperations";
  }

  // Returns the specified regional BackendService resource.
  rpc Get(GetRegionBackendServiceRequest) returns (BackendService) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/regions/{region}/backendServices/{backend_service}"
    };
    option (google.api.method_signature) = "project,region,backend_service";
  }

  // Gets the most recent health check results for this regional BackendService.
  rpc GetHealth(GetHealthRegionBackendServiceRequest) returns (BackendServiceGroupHealth) {
    option (google.api.http) = {
      body: "resource_group_reference_resource"
      post: "/compute/v1/projects/{project}/regions/{region}/backendServices/{backend_service}/getHealth"
    };
    option (google.api.method_signature) = "project,region,backend_service,resource_group_reference_resource";
  }

  // Gets the access control policy for a resource. May be empty if no such policy or resource exists.
  rpc GetIamPolicy(GetIamPolicyRegionBackendServiceRequest) returns (Policy) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/regions/{region}/backendServices/{resource}/getIamPolicy"
    };
    option (google.api.method_signature) = "project,region,resource";
  }

  // Creates a regional BackendService resource in the specified project using the data included in the request. For more information, see Backend services overview.
  rpc Insert(InsertRegionBackendServiceRequest) returns (Operation) {
    option (google.api.http) = {
      body: "backend_service_resource"
      post: "/compute/v1/projects/{project}/regions/{region}/backendServices"
    };
    option (google.api.method_signature) = "project,region,backend_service_resource";
    option (google.cloud.operation_service) = "RegionOperations";
  }

  // Retrieves the list of regional BackendService resources available to the specified project in the given region.
  rpc List(ListRegionBackendServicesRequest) returns (BackendServiceList) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/regions/{region}/backendServices"
    };
    option (google.api.method_signature) = "project,region";
  }

  // Updates the specified regional BackendService resource with the data included in the request. For more information, see Understanding backend services This method supports PATCH semantics and uses the JSON merge patch format and processing rules.
  rpc Patch(PatchRegionBackendServiceRequest) returns (Operation) {
    option (google.api.http) = {
      body: "backend_service_resource"
      patch: "/compute/v1/projects/{project}/regions/{region}/backendServices/{backend_service}"
    };
    option (google.api.method_signature) = "project,region,backend_service,backend_service_resource";
    option (google.cloud.operation_service) = "RegionOperations";
  }

  // Sets the access control policy on the specified resource. Replaces any existing policy.
  rpc SetIamPolicy(SetIamPolicyRegionBackendServiceRequest) returns (Policy) {
    option (google.api.http) = {
      body: "region_set_policy_request_resource"
      post: "/compute/v1/projects/{project}/regions/{region}/backendServices/{resource}/setIamPolicy"
    };
    option (google.api.method_signature) = "project,region,resource,region_set_policy_request_resource";
  }

  // Updates the specified regional BackendService resource with the data included in the request. For more information, see Backend services overview .
  rpc Update(UpdateRegionBackendServiceRequest) returns (Operation) {
    option (google.api.http) = {
      body: "backend_service_resource"
      put: "/compute/v1/projects/{project}/regions/{region}/backendServices/{backend_service}"
    };
    option (google.api.method_signature) = "project,region,backend_service,backend_service_resource";
    option (google.cloud.operation_service) = "RegionOperations";
  }

}

// The RegionCommitments API.
service RegionCommitments {
  option (google.api.default_host) =
    "compute.googleapis.com";

  option (google.api.oauth_scopes) =
    "https://www.googleapis.com/auth/compute,"
    "https://www.googleapis.com/auth/cloud-platform";

  // Retrieves an aggregated list of commitments by region.
  rpc AggregatedList(AggregatedListRegionCommitmentsRequest) returns (CommitmentAggregatedList) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/aggregated/commitments"
    };
    option (google.api.method_signature) = "project";
  }

  // Returns the specified commitment resource.
  rpc Get(GetRegionCommitmentRequest) returns (Commitment) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/regions/{region}/commitments/{commitment}"
    };
    option (google.api.method_signature) = "project,region,commitment";
  }

  // Creates a commitment in the specified project using the data included in the request.
  rpc Insert(InsertRegionCommitmentRequest) returns (Operation) {
    option (google.api.http) = {
      body: "commitment_resource"
      post: "/compute/v1/projects/{project}/regions/{region}/commitments"
    };
    option (google.api.method_signature) = "project,region,commitment_resource";
    option (google.cloud.operation_service) = "RegionOperations";
  }

  // Retrieves a list of commitments contained within the specified region.
  rpc List(ListRegionCommitmentsRequest) returns (CommitmentList) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/regions/{region}/commitments"
    };
    option (google.api.method_signature) = "project,region";
  }

  // Updates the specified commitment with the data included in the request. Update is performed only on selected fields included as part of update-mask. Only the following fields can be modified: auto_renew.
  rpc Update(UpdateRegionCommitmentRequest) returns (Operation) {
    option (google.api.http) = {
      body: "commitment_resource"
      patch: "/compute/v1/projects/{project}/regions/{region}/commitments/{commitment}"
    };
    option (google.api.method_signature) = "project,region,commitment,commitment_resource";
    option (google.cloud.operation_service) = "RegionOperations";
  }

}

// The RegionDiskTypes API.
service RegionDiskTypes {
  option (google.api.default_host) =
    "compute.googleapis.com";

  option (google.api.oauth_scopes) =
    "https://www.googleapis.com/auth/compute.readonly,"
    "https://www.googleapis.com/auth/compute,"
    "https://www.googleapis.com/auth/cloud-platform";

  // Returns the specified regional disk type.
  rpc Get(GetRegionDiskTypeRequest) returns (DiskType) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/regions/{region}/diskTypes/{disk_type}"
    };
    option (google.api.method_signature) = "project,region,disk_type";
  }

  // Retrieves a list of regional disk types available to the specified project.
  rpc List(ListRegionDiskTypesRequest) returns (RegionDiskTypeList) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/regions/{region}/diskTypes"
    };
    option (google.api.method_signature) = "project,region";
  }

}

// The RegionDisks API.
service RegionDisks {
  option (google.api.default_host) =
    "compute.googleapis.com";

  option (google.api.oauth_scopes) =
    "https://www.googleapis.com/auth/compute,"
    "https://www.googleapis.com/auth/cloud-platform";

  // Adds existing resource policies to a regional disk. You can only add one policy which will be applied to this disk for scheduling snapshot creation.
  rpc AddResourcePolicies(AddResourcePoliciesRegionDiskRequest) returns (Operation) {
    option (google.api.http) = {
      body: "region_disks_add_resource_policies_request_resource"
      post: "/compute/v1/projects/{project}/regions/{region}/disks/{disk}/addResourcePolicies"
    };
    option (google.api.method_signature) = "project,region,disk,region_disks_add_resource_policies_request_resource";
    option (google.cloud.operation_service) = "RegionOperations";
  }

  // Creates a snapshot of a specified persistent disk. For regular snapshot creation, consider using snapshots.insert instead, as that method supports more features, such as creating snapshots in a project different from the source disk project.
  rpc CreateSnapshot(CreateSnapshotRegionDiskRequest) returns (Operation) {
    option (google.api.http) = {
      body: "snapshot_resource"
      post: "/compute/v1/projects/{project}/regions/{region}/disks/{disk}/createSnapshot"
    };
    option (google.api.method_signature) = "project,region,disk,snapshot_resource";
    option (google.cloud.operation_service) = "RegionOperations";
  }

  // Deletes the specified regional persistent disk. Deleting a regional disk removes all the replicas of its data permanently and is irreversible. However, deleting a disk does not delete any snapshots previously made from the disk. You must separately delete snapshots.
  rpc Delete(DeleteRegionDiskRequest) returns (Operation) {
    option (google.api.http) = {
      delete: "/compute/v1/projects/{project}/regions/{region}/disks/{disk}"
    };
    option (google.api.method_signature) = "project,region,disk";
    option (google.cloud.operation_service) = "RegionOperations";
  }

  // Returns a specified regional persistent disk.
  rpc Get(GetRegionDiskRequest) returns (Disk) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/regions/{region}/disks/{disk}"
    };
    option (google.api.method_signature) = "project,region,disk";
  }

  // Gets the access control policy for a resource. May be empty if no such policy or resource exists.
  rpc GetIamPolicy(GetIamPolicyRegionDiskRequest) returns (Policy) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/regions/{region}/disks/{resource}/getIamPolicy"
    };
    option (google.api.method_signature) = "project,region,resource";
  }

  // Creates a persistent regional disk in the specified project using the data included in the request.
  rpc Insert(InsertRegionDiskRequest) returns (Operation) {
    option (google.api.http) = {
      body: "disk_resource"
      post: "/compute/v1/projects/{project}/regions/{region}/disks"
    };
    option (google.api.method_signature) = "project,region,disk_resource";
    option (google.cloud.operation_service) = "RegionOperations";
  }

  // Retrieves the list of persistent disks contained within the specified region.
  rpc List(ListRegionDisksRequest) returns (DiskList) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/regions/{region}/disks"
    };
    option (google.api.method_signature) = "project,region";
  }

  // Removes resource policies from a regional disk.
  rpc RemoveResourcePolicies(RemoveResourcePoliciesRegionDiskRequest) returns (Operation) {
    option (google.api.http) = {
      body: "region_disks_remove_resource_policies_request_resource"
      post: "/compute/v1/projects/{project}/regions/{region}/disks/{disk}/removeResourcePolicies"
    };
    option (google.api.method_signature) = "project,region,disk,region_disks_remove_resource_policies_request_resource";
    option (google.cloud.operation_service) = "RegionOperations";
  }

  // Resizes the specified regional persistent disk.
  rpc Resize(ResizeRegionDiskRequest) returns (Operation) {
    option (google.api.http) = {
      body: "region_disks_resize_request_resource"
      post: "/compute/v1/projects/{project}/regions/{region}/disks/{disk}/resize"
    };
    option (google.api.method_signature) = "project,region,disk,region_disks_resize_request_resource";
    option (google.cloud.operation_service) = "RegionOperations";
  }

  // Sets the access control policy on the specified resource. Replaces any existing policy.
  rpc SetIamPolicy(SetIamPolicyRegionDiskRequest) returns (Policy) {
    option (google.api.http) = {
      body: "region_set_policy_request_resource"
      post: "/compute/v1/projects/{project}/regions/{region}/disks/{resource}/setIamPolicy"
    };
    option (google.api.method_signature) = "project,region,resource,region_set_policy_request_resource";
  }

  // Sets the labels on the target regional disk.
  rpc SetLabels(SetLabelsRegionDiskRequest) returns (Operation) {
    option (google.api.http) = {
      body: "region_set_labels_request_resource"
      post: "/compute/v1/projects/{project}/regions/{region}/disks/{resource}/setLabels"
    };
    option (google.api.method_signature) = "project,region,resource,region_set_labels_request_resource";
    option (google.cloud.operation_service) = "RegionOperations";
  }

  // Returns permissions that a caller has on the specified resource.
  rpc TestIamPermissions(TestIamPermissionsRegionDiskRequest) returns (TestPermissionsResponse) {
    option (google.api.http) = {
      body: "test_permissions_request_resource"
      post: "/compute/v1/projects/{project}/regions/{region}/disks/{resource}/testIamPermissions"
    };
    option (google.api.method_signature) = "project,region,resource,test_permissions_request_resource";
  }

  // Update the specified disk with the data included in the request. Update is performed only on selected fields included as part of update-mask. Only the following fields can be modified: user_license.
  rpc Update(UpdateRegionDiskRequest) returns (Operation) {
    option (google.api.http) = {
      body: "disk_resource"
      patch: "/compute/v1/projects/{project}/regions/{region}/disks/{disk}"
    };
    option (google.api.method_signature) = "project,region,disk,disk_resource";
    option (google.cloud.operation_service) = "RegionOperations";
  }

}

// The RegionHealthCheckServices API.
service RegionHealthCheckServices {
  option (google.api.default_host) =
    "compute.googleapis.com";

  option (google.api.oauth_scopes) =
    "https://www.googleapis.com/auth/compute,"
    "https://www.googleapis.com/auth/cloud-platform";

  // Deletes the specified regional HealthCheckService.
  rpc Delete(DeleteRegionHealthCheckServiceRequest) returns (Operation) {
    option (google.api.http) = {
      delete: "/compute/v1/projects/{project}/regions/{region}/healthCheckServices/{health_check_service}"
    };
    option (google.api.method_signature) = "project,region,health_check_service";
    option (google.cloud.operation_service) = "RegionOperations";
  }

  // Returns the specified regional HealthCheckService resource.
  rpc Get(GetRegionHealthCheckServiceRequest) returns (HealthCheckService) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/regions/{region}/healthCheckServices/{health_check_service}"
    };
    option (google.api.method_signature) = "project,region,health_check_service";
  }

  // Creates a regional HealthCheckService resource in the specified project and region using the data included in the request.
  rpc Insert(InsertRegionHealthCheckServiceRequest) returns (Operation) {
    option (google.api.http) = {
      body: "health_check_service_resource"
      post: "/compute/v1/projects/{project}/regions/{region}/healthCheckServices"
    };
    option (google.api.method_signature) = "project,region,health_check_service_resource";
    option (google.cloud.operation_service) = "RegionOperations";
  }

  // Lists all the HealthCheckService resources that have been configured for the specified project in the given region.
  rpc List(ListRegionHealthCheckServicesRequest) returns (HealthCheckServicesList) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/regions/{region}/healthCheckServices"
    };
    option (google.api.method_signature) = "project,region";
  }

  // Updates the specified regional HealthCheckService resource with the data included in the request. This method supports PATCH semantics and uses the JSON merge patch format and processing rules.
  rpc Patch(PatchRegionHealthCheckServiceRequest) returns (Operation) {
    option (google.api.http) = {
      body: "health_check_service_resource"
      patch: "/compute/v1/projects/{project}/regions/{region}/healthCheckServices/{health_check_service}"
    };
    option (google.api.method_signature) = "project,region,health_check_service,health_check_service_resource";
    option (google.cloud.operation_service) = "RegionOperations";
  }

}

// The RegionHealthChecks API.
service RegionHealthChecks {
  option (google.api.default_host) =
    "compute.googleapis.com";

  option (google.api.oauth_scopes) =
    "https://www.googleapis.com/auth/compute,"
    "https://www.googleapis.com/auth/cloud-platform";

  // Deletes the specified HealthCheck resource.
  rpc Delete(DeleteRegionHealthCheckRequest) returns (Operation) {
    option (google.api.http) = {
      delete: "/compute/v1/projects/{project}/regions/{region}/healthChecks/{health_check}"
    };
    option (google.api.method_signature) = "project,region,health_check";
    option (google.cloud.operation_service) = "RegionOperations";
  }

  // Returns the specified HealthCheck resource.
  rpc Get(GetRegionHealthCheckRequest) returns (HealthCheck) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/regions/{region}/healthChecks/{health_check}"
    };
    option (google.api.method_signature) = "project,region,health_check";
  }

  // Creates a HealthCheck resource in the specified project using the data included in the request.
  rpc Insert(InsertRegionHealthCheckRequest) returns (Operation) {
    option (google.api.http) = {
      body: "health_check_resource"
      post: "/compute/v1/projects/{project}/regions/{region}/healthChecks"
    };
    option (google.api.method_signature) = "project,region,health_check_resource";
    option (google.cloud.operation_service) = "RegionOperations";
  }

  // Retrieves the list of HealthCheck resources available to the specified project.
  rpc List(ListRegionHealthChecksRequest) returns (HealthCheckList) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/regions/{region}/healthChecks"
    };
    option (google.api.method_signature) = "project,region";
  }

  // Updates a HealthCheck resource in the specified project using the data included in the request. This method supports PATCH semantics and uses the JSON merge patch format and processing rules.
  rpc Patch(PatchRegionHealthCheckRequest) returns (Operation) {
    option (google.api.http) = {
      body: "health_check_resource"
      patch: "/compute/v1/projects/{project}/regions/{region}/healthChecks/{health_check}"
    };
    option (google.api.method_signature) = "project,region,health_check,health_check_resource";
    option (google.cloud.operation_service) = "RegionOperations";
  }

  // Updates a HealthCheck resource in the specified project using the data included in the request.
  rpc Update(UpdateRegionHealthCheckRequest) returns (Operation) {
    option (google.api.http) = {
      body: "health_check_resource"
      put: "/compute/v1/projects/{project}/regions/{region}/healthChecks/{health_check}"
    };
    option (google.api.method_signature) = "project,region,health_check,health_check_resource";
    option (google.cloud.operation_service) = "RegionOperations";
  }

}

// The RegionInstanceGroupManagers API.
service RegionInstanceGroupManagers {
  option (google.api.default_host) =
    "compute.googleapis.com";

  option (google.api.oauth_scopes) =
    "https://www.googleapis.com/auth/compute,"
    "https://www.googleapis.com/auth/cloud-platform";

  // Flags the specified instances to be immediately removed from the managed instance group. Abandoning an instance does not delete the instance, but it does remove the instance from any target pools that are applied by the managed instance group. This method reduces the targetSize of the managed instance group by the number of instances that you abandon. This operation is marked as DONE when the action is scheduled even if the instances have not yet been removed from the group. You must separately verify the status of the abandoning action with the listmanagedinstances method. If the group is part of a backend service that has enabled connection draining, it can take up to 60 seconds after the connection draining duration has elapsed before the VM instance is removed or deleted. You can specify a maximum of 1000 instances with this method per request.
  rpc AbandonInstances(AbandonInstancesRegionInstanceGroupManagerRequest) returns (Operation) {
    option (google.api.http) = {
      body: "region_instance_group_managers_abandon_instances_request_resource"
      post: "/compute/v1/projects/{project}/regions/{region}/instanceGroupManagers/{instance_group_manager}/abandonInstances"
    };
    option (google.api.method_signature) = "project,region,instance_group_manager,region_instance_group_managers_abandon_instances_request_resource";
    option (google.cloud.operation_service) = "RegionOperations";
  }

  // Apply updates to selected instances the managed instance group.
  rpc ApplyUpdatesToInstances(ApplyUpdatesToInstancesRegionInstanceGroupManagerRequest) returns (Operation) {
    option (google.api.http) = {
      body: "region_instance_group_managers_apply_updates_request_resource"
      post: "/compute/v1/projects/{project}/regions/{region}/instanceGroupManagers/{instance_group_manager}/applyUpdatesToInstances"
    };
    option (google.api.method_signature) = "project,region,instance_group_manager,region_instance_group_managers_apply_updates_request_resource";
    option (google.cloud.operation_service) = "RegionOperations";
  }

  // Creates instances with per-instance configurations in this regional managed instance group. Instances are created using the current instance template. The create instances operation is marked DONE if the createInstances request is successful. The underlying actions take additional time. You must separately verify the status of the creating or actions with the listmanagedinstances method.
  rpc CreateInstances(CreateInstancesRegionInstanceGroupManagerRequest) returns (Operation) {
    option (google.api.http) = {
      body: "region_instance_group_managers_create_instances_request_resource"
      post: "/compute/v1/projects/{project}/regions/{region}/instanceGroupManagers/{instance_group_manager}/createInstances"
    };
    option (google.api.method_signature) = "project,region,instance_group_manager,region_instance_group_managers_create_instances_request_resource";
    option (google.cloud.operation_service) = "RegionOperations";
  }

  // Deletes the specified managed instance group and all of the instances in that group.
  rpc Delete(DeleteRegionInstanceGroupManagerRequest) returns (Operation) {
    option (google.api.http) = {
      delete: "/compute/v1/projects/{project}/regions/{region}/instanceGroupManagers/{instance_group_manager}"
    };
    option (google.api.method_signature) = "project,region,instance_group_manager";
    option (google.cloud.operation_service) = "RegionOperations";
  }

  // Flags the specified instances in the managed instance group to be immediately deleted. The instances are also removed from any target pools of which they were a member. This method reduces the targetSize of the managed instance group by the number of instances that you delete. The deleteInstances operation is marked DONE if the deleteInstances request is successful. The underlying actions take additional time. You must separately verify the status of the deleting action with the listmanagedinstances method. If the group is part of a backend service that has enabled connection draining, it can take up to 60 seconds after the connection draining duration has elapsed before the VM instance is removed or deleted. You can specify a maximum of 1000 instances with this method per request.
  rpc DeleteInstances(DeleteInstancesRegionInstanceGroupManagerRequest) returns (Operation) {
    option (google.api.http) = {
      body: "region_instance_group_managers_delete_instances_request_resource"
      post: "/compute/v1/projects/{project}/regions/{region}/instanceGroupManagers/{instance_group_manager}/deleteInstances"
    };
    option (google.api.method_signature) = "project,region,instance_group_manager,region_instance_group_managers_delete_instances_request_resource";
    option (google.cloud.operation_service) = "RegionOperations";
  }

  // Deletes selected per-instance configurations for the managed instance group.
  rpc DeletePerInstanceConfigs(DeletePerInstanceConfigsRegionInstanceGroupManagerRequest) returns (Operation) {
    option (google.api.http) = {
      body: "region_instance_group_manager_delete_instance_config_req_resource"
      post: "/compute/v1/projects/{project}/regions/{region}/instanceGroupManagers/{instance_group_manager}/deletePerInstanceConfigs"
    };
    option (google.api.method_signature) = "project,region,instance_group_manager,region_instance_group_manager_delete_instance_config_req_resource";
    option (google.cloud.operation_service) = "RegionOperations";
  }

  // Returns all of the details about the specified managed instance group.
  rpc Get(GetRegionInstanceGroupManagerRequest) returns (InstanceGroupManager) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/regions/{region}/instanceGroupManagers/{instance_group_manager}"
    };
    option (google.api.method_signature) = "project,region,instance_group_manager";
  }

  // Creates a managed instance group using the information that you specify in the request. After the group is created, instances in the group are created using the specified instance template. This operation is marked as DONE when the group is created even if the instances in the group have not yet been created. You must separately verify the status of the individual instances with the listmanagedinstances method. A regional managed instance group can contain up to 2000 instances.
  rpc Insert(InsertRegionInstanceGroupManagerRequest) returns (Operation) {
    option (google.api.http) = {
      body: "instance_group_manager_resource"
      post: "/compute/v1/projects/{project}/regions/{region}/instanceGroupManagers"
    };
    option (google.api.method_signature) = "project,region,instance_group_manager_resource";
    option (google.cloud.operation_service) = "RegionOperations";
  }

  // Retrieves the list of managed instance groups that are contained within the specified region.
  rpc List(ListRegionInstanceGroupManagersRequest) returns (RegionInstanceGroupManagerList) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/regions/{region}/instanceGroupManagers"
    };
    option (google.api.method_signature) = "project,region";
  }

  // Lists all errors thrown by actions on instances for a given regional managed instance group. The filter and orderBy query parameters are not supported.
  rpc ListErrors(ListErrorsRegionInstanceGroupManagersRequest) returns (RegionInstanceGroupManagersListErrorsResponse) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/regions/{region}/instanceGroupManagers/{instance_group_manager}/listErrors"
    };
    option (google.api.method_signature) = "project,region,instance_group_manager";
  }

  // Lists the instances in the managed instance group and instances that are scheduled to be created. The list includes any current actions that the group has scheduled for its instances. The orderBy query parameter is not supported. The `pageToken` query parameter is supported only in the alpha and beta API and only if the group's `listManagedInstancesResults` field is set to `PAGINATED`.
  rpc ListManagedInstances(ListManagedInstancesRegionInstanceGroupManagersRequest) returns (RegionInstanceGroupManagersListInstancesResponse) {
    option (google.api.http) = {
      post: "/compute/v1/projects/{project}/regions/{region}/instanceGroupManagers/{instance_group_manager}/listManagedInstances"
    };
    option (google.api.method_signature) = "project,region,instance_group_manager";
  }

  // Lists all of the per-instance configurations defined for the managed instance group. The orderBy query parameter is not supported.
  rpc ListPerInstanceConfigs(ListPerInstanceConfigsRegionInstanceGroupManagersRequest) returns (RegionInstanceGroupManagersListInstanceConfigsResp) {
    option (google.api.http) = {
      post: "/compute/v1/projects/{project}/regions/{region}/instanceGroupManagers/{instance_group_manager}/listPerInstanceConfigs"
    };
    option (google.api.method_signature) = "project,region,instance_group_manager";
  }

  // Updates a managed instance group using the information that you specify in the request. This operation is marked as DONE when the group is patched even if the instances in the group are still in the process of being patched. You must separately verify the status of the individual instances with the listmanagedinstances method. This method supports PATCH semantics and uses the JSON merge patch format and processing rules. If you update your group to specify a new template or instance configuration, it's possible that your intended specification for each VM in the group is different from the current state of that VM. To learn how to apply an updated configuration to the VMs in a MIG, see Updating instances in a MIG.
  rpc Patch(PatchRegionInstanceGroupManagerRequest) returns (Operation) {
    option (google.api.http) = {
      body: "instance_group_manager_resource"
      patch: "/compute/v1/projects/{project}/regions/{region}/instanceGroupManagers/{instance_group_manager}"
    };
    option (google.api.method_signature) = "project,region,instance_group_manager,instance_group_manager_resource";
    option (google.cloud.operation_service) = "RegionOperations";
  }

  // Inserts or patches per-instance configurations for the managed instance group. perInstanceConfig.name serves as a key used to distinguish whether to perform insert or patch.
  rpc PatchPerInstanceConfigs(PatchPerInstanceConfigsRegionInstanceGroupManagerRequest) returns (Operation) {
    option (google.api.http) = {
      body: "region_instance_group_manager_patch_instance_config_req_resource"
      post: "/compute/v1/projects/{project}/regions/{region}/instanceGroupManagers/{instance_group_manager}/patchPerInstanceConfigs"
    };
    option (google.api.method_signature) = "project,region,instance_group_manager,region_instance_group_manager_patch_instance_config_req_resource";
    option (google.cloud.operation_service) = "RegionOperations";
  }

  // Flags the specified VM instances in the managed instance group to be immediately recreated. Each instance is recreated using the group's current configuration. This operation is marked as DONE when the flag is set even if the instances have not yet been recreated. You must separately verify the status of each instance by checking its currentAction field; for more information, see Checking the status of managed instances. If the group is part of a backend service that has enabled connection draining, it can take up to 60 seconds after the connection draining duration has elapsed before the VM instance is removed or deleted. You can specify a maximum of 1000 instances with this method per request.
  rpc RecreateInstances(RecreateInstancesRegionInstanceGroupManagerRequest) returns (Operation) {
    option (google.api.http) = {
      body: "region_instance_group_managers_recreate_request_resource"
      post: "/compute/v1/projects/{project}/regions/{region}/instanceGroupManagers/{instance_group_manager}/recreateInstances"
    };
    option (google.api.method_signature) = "project,region,instance_group_manager,region_instance_group_managers_recreate_request_resource";
    option (google.cloud.operation_service) = "RegionOperations";
  }

  // Changes the intended size of the managed instance group. If you increase the size, the group creates new instances using the current instance template. If you decrease the size, the group deletes one or more instances. The resize operation is marked DONE if the resize request is successful. The underlying actions take additional time. You must separately verify the status of the creating or deleting actions with the listmanagedinstances method. If the group is part of a backend service that has enabled connection draining, it can take up to 60 seconds after the connection draining duration has elapsed before the VM instance is removed or deleted.
  rpc Resize(ResizeRegionInstanceGroupManagerRequest) returns (Operation) {
    option (google.api.http) = {
      post: "/compute/v1/projects/{project}/regions/{region}/instanceGroupManagers/{instance_group_manager}/resize"
    };
    option (google.api.method_signature) = "project,region,instance_group_manager,size";
    option (google.cloud.operation_service) = "RegionOperations";
  }

  // Sets the instance template to use when creating new instances or recreating instances in this group. Existing instances are not affected.
  rpc SetInstanceTemplate(SetInstanceTemplateRegionInstanceGroupManagerRequest) returns (Operation) {
    option (google.api.http) = {
      body: "region_instance_group_managers_set_template_request_resource"
      post: "/compute/v1/projects/{project}/regions/{region}/instanceGroupManagers/{instance_group_manager}/setInstanceTemplate"
    };
    option (google.api.method_signature) = "project,region,instance_group_manager,region_instance_group_managers_set_template_request_resource";
    option (google.cloud.operation_service) = "RegionOperations";
  }

  // Modifies the target pools to which all new instances in this group are assigned. Existing instances in the group are not affected.
  rpc SetTargetPools(SetTargetPoolsRegionInstanceGroupManagerRequest) returns (Operation) {
    option (google.api.http) = {
      body: "region_instance_group_managers_set_target_pools_request_resource"
      post: "/compute/v1/projects/{project}/regions/{region}/instanceGroupManagers/{instance_group_manager}/setTargetPools"
    };
    option (google.api.method_signature) = "project,region,instance_group_manager,region_instance_group_managers_set_target_pools_request_resource";
    option (google.cloud.operation_service) = "RegionOperations";
  }

  // Inserts or updates per-instance configurations for the managed instance group. perInstanceConfig.name serves as a key used to distinguish whether to perform insert or patch.
  rpc UpdatePerInstanceConfigs(UpdatePerInstanceConfigsRegionInstanceGroupManagerRequest) returns (Operation) {
    option (google.api.http) = {
      body: "region_instance_group_manager_update_instance_config_req_resource"
      post: "/compute/v1/projects/{project}/regions/{region}/instanceGroupManagers/{instance_group_manager}/updatePerInstanceConfigs"
    };
    option (google.api.method_signature) = "project,region,instance_group_manager,region_instance_group_manager_update_instance_config_req_resource";
    option (google.cloud.operation_service) = "RegionOperations";
  }

}

// The RegionInstanceGroups API.
service RegionInstanceGroups {
  option (google.api.default_host) =
    "compute.googleapis.com";

  option (google.api.oauth_scopes) =
    "https://www.googleapis.com/auth/compute,"
    "https://www.googleapis.com/auth/cloud-platform";

  // Returns the specified instance group resource.
  rpc Get(GetRegionInstanceGroupRequest) returns (InstanceGroup) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/regions/{region}/instanceGroups/{instance_group}"
    };
    option (google.api.method_signature) = "project,region,instance_group";
  }

  // Retrieves the list of instance group resources contained within the specified region.
  rpc List(ListRegionInstanceGroupsRequest) returns (RegionInstanceGroupList) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/regions/{region}/instanceGroups"
    };
    option (google.api.method_signature) = "project,region";
  }

  // Lists the instances in the specified instance group and displays information about the named ports. Depending on the specified options, this method can list all instances or only the instances that are running. The orderBy query parameter is not supported.
  rpc ListInstances(ListInstancesRegionInstanceGroupsRequest) returns (RegionInstanceGroupsListInstances) {
    option (google.api.http) = {
      body: "region_instance_groups_list_instances_request_resource"
      post: "/compute/v1/projects/{project}/regions/{region}/instanceGroups/{instance_group}/listInstances"
    };
    option (google.api.method_signature) = "project,region,instance_group,region_instance_groups_list_instances_request_resource";
  }

  // Sets the named ports for the specified regional instance group.
  rpc SetNamedPorts(SetNamedPortsRegionInstanceGroupRequest) returns (Operation) {
    option (google.api.http) = {
      body: "region_instance_groups_set_named_ports_request_resource"
      post: "/compute/v1/projects/{project}/regions/{region}/instanceGroups/{instance_group}/setNamedPorts"
    };
    option (google.api.method_signature) = "project,region,instance_group,region_instance_groups_set_named_ports_request_resource";
    option (google.cloud.operation_service) = "RegionOperations";
  }

}

// The RegionInstanceTemplates API.
service RegionInstanceTemplates {
  option (google.api.default_host) =
    "compute.googleapis.com";

  option (google.api.oauth_scopes) =
    "https://www.googleapis.com/auth/compute,"
    "https://www.googleapis.com/auth/cloud-platform";

  // Deletes the specified instance template. Deleting an instance template is permanent and cannot be undone.
  rpc Delete(DeleteRegionInstanceTemplateRequest) returns (Operation) {
    option (google.api.http) = {
      delete: "/compute/v1/projects/{project}/regions/{region}/instanceTemplates/{instance_template}"
    };
    option (google.api.method_signature) = "project,region,instance_template";
    option (google.cloud.operation_service) = "RegionOperations";
  }

  // Returns the specified instance template.
  rpc Get(GetRegionInstanceTemplateRequest) returns (InstanceTemplate) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/regions/{region}/instanceTemplates/{instance_template}"
    };
    option (google.api.method_signature) = "project,region,instance_template";
  }

  // Creates an instance template in the specified project and region using the global instance template whose URL is included in the request.
  rpc Insert(InsertRegionInstanceTemplateRequest) returns (Operation) {
    option (google.api.http) = {
      body: "instance_template_resource"
      post: "/compute/v1/projects/{project}/regions/{region}/instanceTemplates"
    };
    option (google.api.method_signature) = "project,region,instance_template_resource";
    option (google.cloud.operation_service) = "RegionOperations";
  }

  // Retrieves a list of instance templates that are contained within the specified project and region.
  rpc List(ListRegionInstanceTemplatesRequest) returns (InstanceTemplateList) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/regions/{region}/instanceTemplates"
    };
    option (google.api.method_signature) = "project,region";
  }

}

// The RegionInstances API.
service RegionInstances {
  option (google.api.default_host) =
    "compute.googleapis.com";

  option (google.api.oauth_scopes) =
    "https://www.googleapis.com/auth/compute,"
    "https://www.googleapis.com/auth/cloud-platform";

  // Creates multiple instances in a given region. Count specifies the number of instances to create.
  rpc BulkInsert(BulkInsertRegionInstanceRequest) returns (Operation) {
    option (google.api.http) = {
      body: "bulk_insert_instance_resource_resource"
      post: "/compute/v1/projects/{project}/regions/{region}/instances/bulkInsert"
    };
    option (google.api.method_signature) = "project,region,bulk_insert_instance_resource_resource";
    option (google.cloud.operation_service) = "RegionOperations";
  }

}

// The RegionNetworkEndpointGroups API.
service RegionNetworkEndpointGroups {
  option (google.api.default_host) =
    "compute.googleapis.com";

  option (google.api.oauth_scopes) =
    "https://www.googleapis.com/auth/compute,"
    "https://www.googleapis.com/auth/cloud-platform";

  // Deletes the specified network endpoint group. Note that the NEG cannot be deleted if it is configured as a backend of a backend service.
  rpc Delete(DeleteRegionNetworkEndpointGroupRequest) returns (Operation) {
    option (google.api.http) = {
      delete: "/compute/v1/projects/{project}/regions/{region}/networkEndpointGroups/{network_endpoint_group}"
    };
    option (google.api.method_signature) = "project,region,network_endpoint_group";
    option (google.cloud.operation_service) = "RegionOperations";
  }

  // Returns the specified network endpoint group.
  rpc Get(GetRegionNetworkEndpointGroupRequest) returns (NetworkEndpointGroup) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/regions/{region}/networkEndpointGroups/{network_endpoint_group}"
    };
    option (google.api.method_signature) = "project,region,network_endpoint_group";
  }

  // Creates a network endpoint group in the specified project using the parameters that are included in the request.
  rpc Insert(InsertRegionNetworkEndpointGroupRequest) returns (Operation) {
    option (google.api.http) = {
      body: "network_endpoint_group_resource"
      post: "/compute/v1/projects/{project}/regions/{region}/networkEndpointGroups"
    };
    option (google.api.method_signature) = "project,region,network_endpoint_group_resource";
    option (google.cloud.operation_service) = "RegionOperations";
  }

  // Retrieves the list of regional network endpoint groups available to the specified project in the given region.
  rpc List(ListRegionNetworkEndpointGroupsRequest) returns (NetworkEndpointGroupList) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/regions/{region}/networkEndpointGroups"
    };
    option (google.api.method_signature) = "project,region";
  }

}

// The RegionNetworkFirewallPolicies API.
service RegionNetworkFirewallPolicies {
  option (google.api.default_host) =
    "compute.googleapis.com";

  option (google.api.oauth_scopes) =
    "https://www.googleapis.com/auth/compute,"
    "https://www.googleapis.com/auth/cloud-platform";

  // Inserts an association for the specified network firewall policy.
  rpc AddAssociation(AddAssociationRegionNetworkFirewallPolicyRequest) returns (Operation) {
    option (google.api.http) = {
      body: "firewall_policy_association_resource"
      post: "/compute/v1/projects/{project}/regions/{region}/firewallPolicies/{firewall_policy}/addAssociation"
    };
    option (google.api.method_signature) = "project,region,firewall_policy,firewall_policy_association_resource";
    option (google.cloud.operation_service) = "RegionOperations";
  }

  // Inserts a rule into a network firewall policy.
  rpc AddRule(AddRuleRegionNetworkFirewallPolicyRequest) returns (Operation) {
    option (google.api.http) = {
      body: "firewall_policy_rule_resource"
      post: "/compute/v1/projects/{project}/regions/{region}/firewallPolicies/{firewall_policy}/addRule"
    };
    option (google.api.method_signature) = "project,region,firewall_policy,firewall_policy_rule_resource";
    option (google.cloud.operation_service) = "RegionOperations";
  }

  // Copies rules to the specified network firewall policy.
  rpc CloneRules(CloneRulesRegionNetworkFirewallPolicyRequest) returns (Operation) {
    option (google.api.http) = {
      post: "/compute/v1/projects/{project}/regions/{region}/firewallPolicies/{firewall_policy}/cloneRules"
    };
    option (google.api.method_signature) = "project,region,firewall_policy";
    option (google.cloud.operation_service) = "RegionOperations";
  }

  // Deletes the specified network firewall policy.
  rpc Delete(DeleteRegionNetworkFirewallPolicyRequest) returns (Operation) {
    option (google.api.http) = {
      delete: "/compute/v1/projects/{project}/regions/{region}/firewallPolicies/{firewall_policy}"
    };
    option (google.api.method_signature) = "project,region,firewall_policy";
    option (google.cloud.operation_service) = "RegionOperations";
  }

  // Returns the specified network firewall policy.
  rpc Get(GetRegionNetworkFirewallPolicyRequest) returns (FirewallPolicy) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/regions/{region}/firewallPolicies/{firewall_policy}"
    };
    option (google.api.method_signature) = "project,region,firewall_policy";
  }

  // Gets an association with the specified name.
  rpc GetAssociation(GetAssociationRegionNetworkFirewallPolicyRequest) returns (FirewallPolicyAssociation) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/regions/{region}/firewallPolicies/{firewall_policy}/getAssociation"
    };
    option (google.api.method_signature) = "project,region,firewall_policy";
  }

  // Returns the effective firewalls on a given network.
  rpc GetEffectiveFirewalls(GetEffectiveFirewallsRegionNetworkFirewallPolicyRequest) returns (RegionNetworkFirewallPoliciesGetEffectiveFirewallsResponse) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/regions/{region}/firewallPolicies/getEffectiveFirewalls"
    };
    option (google.api.method_signature) = "project,region,network";
  }

  // Gets the access control policy for a resource. May be empty if no such policy or resource exists.
  rpc GetIamPolicy(GetIamPolicyRegionNetworkFirewallPolicyRequest) returns (Policy) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/regions/{region}/firewallPolicies/{resource}/getIamPolicy"
    };
    option (google.api.method_signature) = "project,region,resource";
  }

  // Gets a rule of the specified priority.
  rpc GetRule(GetRuleRegionNetworkFirewallPolicyRequest) returns (FirewallPolicyRule) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/regions/{region}/firewallPolicies/{firewall_policy}/getRule"
    };
    option (google.api.method_signature) = "project,region,firewall_policy";
  }

  // Creates a new network firewall policy in the specified project and region.
  rpc Insert(InsertRegionNetworkFirewallPolicyRequest) returns (Operation) {
    option (google.api.http) = {
      body: "firewall_policy_resource"
      post: "/compute/v1/projects/{project}/regions/{region}/firewallPolicies"
    };
    option (google.api.method_signature) = "project,region,firewall_policy_resource";
    option (google.cloud.operation_service) = "RegionOperations";
  }

  // Lists all the network firewall policies that have been configured for the specified project in the given region.
  rpc List(ListRegionNetworkFirewallPoliciesRequest) returns (FirewallPolicyList) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/regions/{region}/firewallPolicies"
    };
    option (google.api.method_signature) = "project,region";
  }

  // Patches the specified network firewall policy.
  rpc Patch(PatchRegionNetworkFirewallPolicyRequest) returns (Operation) {
    option (google.api.http) = {
      body: "firewall_policy_resource"
      patch: "/compute/v1/projects/{project}/regions/{region}/firewallPolicies/{firewall_policy}"
    };
    option (google.api.method_signature) = "project,region,firewall_policy,firewall_policy_resource";
    option (google.cloud.operation_service) = "RegionOperations";
  }

  // Patches a rule of the specified priority.
  rpc PatchRule(PatchRuleRegionNetworkFirewallPolicyRequest) returns (Operation) {
    option (google.api.http) = {
      body: "firewall_policy_rule_resource"
      post: "/compute/v1/projects/{project}/regions/{region}/firewallPolicies/{firewall_policy}/patchRule"
    };
    option (google.api.method_signature) = "project,region,firewall_policy,firewall_policy_rule_resource";
    option (google.cloud.operation_service) = "RegionOperations";
  }

  // Removes an association for the specified network firewall policy.
  rpc RemoveAssociation(RemoveAssociationRegionNetworkFirewallPolicyRequest) returns (Operation) {
    option (google.api.http) = {
      post: "/compute/v1/projects/{project}/regions/{region}/firewallPolicies/{firewall_policy}/removeAssociation"
    };
    option (google.api.method_signature) = "project,region,firewall_policy";
    option (google.cloud.operation_service) = "RegionOperations";
  }

  // Deletes a rule of the specified priority.
  rpc RemoveRule(RemoveRuleRegionNetworkFirewallPolicyRequest) returns (Operation) {
    option (google.api.http) = {
      post: "/compute/v1/projects/{project}/regions/{region}/firewallPolicies/{firewall_policy}/removeRule"
    };
    option (google.api.method_signature) = "project,region,firewall_policy";
    option (google.cloud.operation_service) = "RegionOperations";
  }

  // Sets the access control policy on the specified resource. Replaces any existing policy.
  rpc SetIamPolicy(SetIamPolicyRegionNetworkFirewallPolicyRequest) returns (Policy) {
    option (google.api.http) = {
      body: "region_set_policy_request_resource"
      post: "/compute/v1/projects/{project}/regions/{region}/firewallPolicies/{resource}/setIamPolicy"
    };
    option (google.api.method_signature) = "project,region,resource,region_set_policy_request_resource";
  }

  // Returns permissions that a caller has on the specified resource.
  rpc TestIamPermissions(TestIamPermissionsRegionNetworkFirewallPolicyRequest) returns (TestPermissionsResponse) {
    option (google.api.http) = {
      body: "test_permissions_request_resource"
      post: "/compute/v1/projects/{project}/regions/{region}/firewallPolicies/{resource}/testIamPermissions"
    };
    option (google.api.method_signature) = "project,region,resource,test_permissions_request_resource";
  }

}

// The RegionNotificationEndpoints API.
service RegionNotificationEndpoints {
  option (google.api.default_host) =
    "compute.googleapis.com";

  option (google.api.oauth_scopes) =
    "https://www.googleapis.com/auth/compute,"
    "https://www.googleapis.com/auth/cloud-platform";

  // Deletes the specified NotificationEndpoint in the given region
  rpc Delete(DeleteRegionNotificationEndpointRequest) returns (Operation) {
    option (google.api.http) = {
      delete: "/compute/v1/projects/{project}/regions/{region}/notificationEndpoints/{notification_endpoint}"
    };
    option (google.api.method_signature) = "project,region,notification_endpoint";
    option (google.cloud.operation_service) = "RegionOperations";
  }

  // Returns the specified NotificationEndpoint resource in the given region.
  rpc Get(GetRegionNotificationEndpointRequest) returns (NotificationEndpoint) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/regions/{region}/notificationEndpoints/{notification_endpoint}"
    };
    option (google.api.method_signature) = "project,region,notification_endpoint";
  }

  // Create a NotificationEndpoint in the specified project in the given region using the parameters that are included in the request.
  rpc Insert(InsertRegionNotificationEndpointRequest) returns (Operation) {
    option (google.api.http) = {
      body: "notification_endpoint_resource"
      post: "/compute/v1/projects/{project}/regions/{region}/notificationEndpoints"
    };
    option (google.api.method_signature) = "project,region,notification_endpoint_resource";
    option (google.cloud.operation_service) = "RegionOperations";
  }

  // Lists the NotificationEndpoints for a project in the given region.
  rpc List(ListRegionNotificationEndpointsRequest) returns (NotificationEndpointList) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/regions/{region}/notificationEndpoints"
    };
    option (google.api.method_signature) = "project,region";
  }

}

// The RegionOperations API.
service RegionOperations {
  option (google.api.default_host) =
    "compute.googleapis.com";

  option (google.api.oauth_scopes) =
    "https://www.googleapis.com/auth/compute,"
    "https://www.googleapis.com/auth/cloud-platform";

  // Deletes the specified region-specific Operations resource.
  rpc Delete(DeleteRegionOperationRequest) returns (DeleteRegionOperationResponse) {
    option (google.api.http) = {
      delete: "/compute/v1/projects/{project}/regions/{region}/operations/{operation}"
    };
    option (google.api.method_signature) = "project,region,operation";
  }

  // Retrieves the specified region-specific Operations resource.
  rpc Get(GetRegionOperationRequest) returns (Operation) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/regions/{region}/operations/{operation}"
    };
    option (google.api.method_signature) = "project,region,operation";
    option (google.cloud.operation_polling_method) = true;
  }

  // Retrieves a list of Operation resources contained within the specified region.
  rpc List(ListRegionOperationsRequest) returns (OperationList) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/regions/{region}/operations"
    };
    option (google.api.method_signature) = "project,region";
  }

  // Waits for the specified Operation resource to return as `DONE` or for the request to approach the 2 minute deadline, and retrieves the specified Operation resource. This method differs from the `GET` method in that it waits for no more than the default deadline (2 minutes) and then returns the current state of the operation, which might be `DONE` or still in progress. This method is called on a best-effort basis. Specifically: - In uncommon cases, when the server is overloaded, the request might return before the default deadline is reached, or might return after zero seconds. - If the default deadline is reached, there is no guarantee that the operation is actually done when the method returns. Be prepared to retry if the operation is not `DONE`. 
  rpc Wait(WaitRegionOperationRequest) returns (Operation) {
    option (google.api.http) = {
      post: "/compute/v1/projects/{project}/regions/{region}/operations/{operation}/wait"
    };
    option (google.api.method_signature) = "project,region,operation";
  }

}

// The RegionSecurityPolicies API.
service RegionSecurityPolicies {
  option (google.api.default_host) =
    "compute.googleapis.com";

  option (google.api.oauth_scopes) =
    "https://www.googleapis.com/auth/compute,"
    "https://www.googleapis.com/auth/cloud-platform";

  // Deletes the specified policy.
  rpc Delete(DeleteRegionSecurityPolicyRequest) returns (Operation) {
    option (google.api.http) = {
      delete: "/compute/v1/projects/{project}/regions/{region}/securityPolicies/{security_policy}"
    };
    option (google.api.method_signature) = "project,region,security_policy";
    option (google.cloud.operation_service) = "RegionOperations";
  }

  // List all of the ordered rules present in a single specified policy.
  rpc Get(GetRegionSecurityPolicyRequest) returns (SecurityPolicy) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/regions/{region}/securityPolicies/{security_policy}"
    };
    option (google.api.method_signature) = "project,region,security_policy";
  }

  // Creates a new policy in the specified project using the data included in the request.
  rpc Insert(InsertRegionSecurityPolicyRequest) returns (Operation) {
    option (google.api.http) = {
      body: "security_policy_resource"
      post: "/compute/v1/projects/{project}/regions/{region}/securityPolicies"
    };
    option (google.api.method_signature) = "project,region,security_policy_resource";
    option (google.cloud.operation_service) = "RegionOperations";
  }

  // List all the policies that have been configured for the specified project and region.
  rpc List(ListRegionSecurityPoliciesRequest) returns (SecurityPolicyList) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/regions/{region}/securityPolicies"
    };
    option (google.api.method_signature) = "project,region";
  }

  // Patches the specified policy with the data included in the request. To clear fields in the rule, leave the fields empty and specify them in the updateMask. This cannot be used to be update the rules in the policy. Please use the per rule methods like addRule, patchRule, and removeRule instead.
  rpc Patch(PatchRegionSecurityPolicyRequest) returns (Operation) {
    option (google.api.http) = {
      body: "security_policy_resource"
      patch: "/compute/v1/projects/{project}/regions/{region}/securityPolicies/{security_policy}"
    };
    option (google.api.method_signature) = "project,region,security_policy,security_policy_resource";
    option (google.cloud.operation_service) = "RegionOperations";
  }

}

// The RegionSslCertificates API.
service RegionSslCertificates {
  option (google.api.default_host) =
    "compute.googleapis.com";

  option (google.api.oauth_scopes) =
    "https://www.googleapis.com/auth/compute,"
    "https://www.googleapis.com/auth/cloud-platform";

  // Deletes the specified SslCertificate resource in the region.
  rpc Delete(DeleteRegionSslCertificateRequest) returns (Operation) {
    option (google.api.http) = {
      delete: "/compute/v1/projects/{project}/regions/{region}/sslCertificates/{ssl_certificate}"
    };
    option (google.api.method_signature) = "project,region,ssl_certificate";
    option (google.cloud.operation_service) = "RegionOperations";
  }

  // Returns the specified SslCertificate resource in the specified region. Get a list of available SSL certificates by making a list() request.
  rpc Get(GetRegionSslCertificateRequest) returns (SslCertificate) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/regions/{region}/sslCertificates/{ssl_certificate}"
    };
    option (google.api.method_signature) = "project,region,ssl_certificate";
  }

  // Creates a SslCertificate resource in the specified project and region using the data included in the request
  rpc Insert(InsertRegionSslCertificateRequest) returns (Operation) {
    option (google.api.http) = {
      body: "ssl_certificate_resource"
      post: "/compute/v1/projects/{project}/regions/{region}/sslCertificates"
    };
    option (google.api.method_signature) = "project,region,ssl_certificate_resource";
    option (google.cloud.operation_service) = "RegionOperations";
  }

  // Retrieves the list of SslCertificate resources available to the specified project in the specified region.
  rpc List(ListRegionSslCertificatesRequest) returns (SslCertificateList) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/regions/{region}/sslCertificates"
    };
    option (google.api.method_signature) = "project,region";
  }

}

// The RegionSslPolicies API.
service RegionSslPolicies {
  option (google.api.default_host) =
    "compute.googleapis.com";

  option (google.api.oauth_scopes) =
    "https://www.googleapis.com/auth/compute,"
    "https://www.googleapis.com/auth/cloud-platform";

  // Deletes the specified SSL policy. The SSL policy resource can be deleted only if it is not in use by any TargetHttpsProxy or TargetSslProxy resources.
  rpc Delete(DeleteRegionSslPolicyRequest) returns (Operation) {
    option (google.api.http) = {
      delete: "/compute/v1/projects/{project}/regions/{region}/sslPolicies/{ssl_policy}"
    };
    option (google.api.method_signature) = "project,region,ssl_policy";
    option (google.cloud.operation_service) = "RegionOperations";
  }

  // Lists all of the ordered rules present in a single specified policy.
  rpc Get(GetRegionSslPolicyRequest) returns (SslPolicy) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/regions/{region}/sslPolicies/{ssl_policy}"
    };
    option (google.api.method_signature) = "project,region,ssl_policy";
  }

  // Creates a new policy in the specified project and region using the data included in the request.
  rpc Insert(InsertRegionSslPolicyRequest) returns (Operation) {
    option (google.api.http) = {
      body: "ssl_policy_resource"
      post: "/compute/v1/projects/{project}/regions/{region}/sslPolicies"
    };
    option (google.api.method_signature) = "project,region,ssl_policy_resource";
    option (google.cloud.operation_service) = "RegionOperations";
  }

  // Lists all the SSL policies that have been configured for the specified project and region.
  rpc List(ListRegionSslPoliciesRequest) returns (SslPoliciesList) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/regions/{region}/sslPolicies"
    };
    option (google.api.method_signature) = "project,region";
  }

  // Lists all features that can be specified in the SSL policy when using custom profile.
  rpc ListAvailableFeatures(ListAvailableFeaturesRegionSslPoliciesRequest) returns (SslPoliciesListAvailableFeaturesResponse) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/regions/{region}/sslPolicies/listAvailableFeatures"
    };
    option (google.api.method_signature) = "project,region";
  }

  // Patches the specified SSL policy with the data included in the request.
  rpc Patch(PatchRegionSslPolicyRequest) returns (Operation) {
    option (google.api.http) = {
      body: "ssl_policy_resource"
      patch: "/compute/v1/projects/{project}/regions/{region}/sslPolicies/{ssl_policy}"
    };
    option (google.api.method_signature) = "project,region,ssl_policy,ssl_policy_resource";
    option (google.cloud.operation_service) = "RegionOperations";
  }

}

// The RegionTargetHttpProxies API.
service RegionTargetHttpProxies {
  option (google.api.default_host) =
    "compute.googleapis.com";

  option (google.api.oauth_scopes) =
    "https://www.googleapis.com/auth/compute,"
    "https://www.googleapis.com/auth/cloud-platform";

  // Deletes the specified TargetHttpProxy resource.
  rpc Delete(DeleteRegionTargetHttpProxyRequest) returns (Operation) {
    option (google.api.http) = {
      delete: "/compute/v1/projects/{project}/regions/{region}/targetHttpProxies/{target_http_proxy}"
    };
    option (google.api.method_signature) = "project,region,target_http_proxy";
    option (google.cloud.operation_service) = "RegionOperations";
  }

  // Returns the specified TargetHttpProxy resource in the specified region.
  rpc Get(GetRegionTargetHttpProxyRequest) returns (TargetHttpProxy) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/regions/{region}/targetHttpProxies/{target_http_proxy}"
    };
    option (google.api.method_signature) = "project,region,target_http_proxy";
  }

  // Creates a TargetHttpProxy resource in the specified project and region using the data included in the request.
  rpc Insert(InsertRegionTargetHttpProxyRequest) returns (Operation) {
    option (google.api.http) = {
      body: "target_http_proxy_resource"
      post: "/compute/v1/projects/{project}/regions/{region}/targetHttpProxies"
    };
    option (google.api.method_signature) = "project,region,target_http_proxy_resource";
    option (google.cloud.operation_service) = "RegionOperations";
  }

  // Retrieves the list of TargetHttpProxy resources available to the specified project in the specified region.
  rpc List(ListRegionTargetHttpProxiesRequest) returns (TargetHttpProxyList) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/regions/{region}/targetHttpProxies"
    };
    option (google.api.method_signature) = "project,region";
  }

  // Changes the URL map for TargetHttpProxy.
  rpc SetUrlMap(SetUrlMapRegionTargetHttpProxyRequest) returns (Operation) {
    option (google.api.http) = {
      body: "url_map_reference_resource"
      post: "/compute/v1/projects/{project}/regions/{region}/targetHttpProxies/{target_http_proxy}/setUrlMap"
    };
    option (google.api.method_signature) = "project,region,target_http_proxy,url_map_reference_resource";
    option (google.cloud.operation_service) = "RegionOperations";
  }

}

// The RegionTargetHttpsProxies API.
service RegionTargetHttpsProxies {
  option (google.api.default_host) =
    "compute.googleapis.com";

  option (google.api.oauth_scopes) =
    "https://www.googleapis.com/auth/compute,"
    "https://www.googleapis.com/auth/cloud-platform";

  // Deletes the specified TargetHttpsProxy resource.
  rpc Delete(DeleteRegionTargetHttpsProxyRequest) returns (Operation) {
    option (google.api.http) = {
      delete: "/compute/v1/projects/{project}/regions/{region}/targetHttpsProxies/{target_https_proxy}"
    };
    option (google.api.method_signature) = "project,region,target_https_proxy";
    option (google.cloud.operation_service) = "RegionOperations";
  }

  // Returns the specified TargetHttpsProxy resource in the specified region.
  rpc Get(GetRegionTargetHttpsProxyRequest) returns (TargetHttpsProxy) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/regions/{region}/targetHttpsProxies/{target_https_proxy}"
    };
    option (google.api.method_signature) = "project,region,target_https_proxy";
  }

  // Creates a TargetHttpsProxy resource in the specified project and region using the data included in the request.
  rpc Insert(InsertRegionTargetHttpsProxyRequest) returns (Operation) {
    option (google.api.http) = {
      body: "target_https_proxy_resource"
      post: "/compute/v1/projects/{project}/regions/{region}/targetHttpsProxies"
    };
    option (google.api.method_signature) = "project,region,target_https_proxy_resource";
    option (google.cloud.operation_service) = "RegionOperations";
  }

  // Retrieves the list of TargetHttpsProxy resources available to the specified project in the specified region.
  rpc List(ListRegionTargetHttpsProxiesRequest) returns (TargetHttpsProxyList) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/regions/{region}/targetHttpsProxies"
    };
    option (google.api.method_signature) = "project,region";
  }

  // Patches the specified regional TargetHttpsProxy resource with the data included in the request. This method supports PATCH semantics and uses JSON merge patch format and processing rules.
  rpc Patch(PatchRegionTargetHttpsProxyRequest) returns (Operation) {
    option (google.api.http) = {
      body: "target_https_proxy_resource"
      patch: "/compute/v1/projects/{project}/regions/{region}/targetHttpsProxies/{target_https_proxy}"
    };
    option (google.api.method_signature) = "project,region,target_https_proxy,target_https_proxy_resource";
    option (google.cloud.operation_service) = "RegionOperations";
  }

  // Replaces SslCertificates for TargetHttpsProxy.
  rpc SetSslCertificates(SetSslCertificatesRegionTargetHttpsProxyRequest) returns (Operation) {
    option (google.api.http) = {
      body: "region_target_https_proxies_set_ssl_certificates_request_resource"
      post: "/compute/v1/projects/{project}/regions/{region}/targetHttpsProxies/{target_https_proxy}/setSslCertificates"
    };
    option (google.api.method_signature) = "project,region,target_https_proxy,region_target_https_proxies_set_ssl_certificates_request_resource";
    option (google.cloud.operation_service) = "RegionOperations";
  }

  // Changes the URL map for TargetHttpsProxy.
  rpc SetUrlMap(SetUrlMapRegionTargetHttpsProxyRequest) returns (Operation) {
    option (google.api.http) = {
      body: "url_map_reference_resource"
      post: "/compute/v1/projects/{project}/regions/{region}/targetHttpsProxies/{target_https_proxy}/setUrlMap"
    };
    option (google.api.method_signature) = "project,region,target_https_proxy,url_map_reference_resource";
    option (google.cloud.operation_service) = "RegionOperations";
  }

}

// The RegionTargetTcpProxies API.
service RegionTargetTcpProxies {
  option (google.api.default_host) =
    "compute.googleapis.com";

  option (google.api.oauth_scopes) =
    "https://www.googleapis.com/auth/compute,"
    "https://www.googleapis.com/auth/cloud-platform";

  // Deletes the specified TargetTcpProxy resource.
  rpc Delete(DeleteRegionTargetTcpProxyRequest) returns (Operation) {
    option (google.api.http) = {
      delete: "/compute/v1/projects/{project}/regions/{region}/targetTcpProxies/{target_tcp_proxy}"
    };
    option (google.api.method_signature) = "project,region,target_tcp_proxy";
    option (google.cloud.operation_service) = "RegionOperations";
  }

  // Returns the specified TargetTcpProxy resource.
  rpc Get(GetRegionTargetTcpProxyRequest) returns (TargetTcpProxy) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/regions/{region}/targetTcpProxies/{target_tcp_proxy}"
    };
    option (google.api.method_signature) = "project,region,target_tcp_proxy";
  }

  // Creates a TargetTcpProxy resource in the specified project and region using the data included in the request.
  rpc Insert(InsertRegionTargetTcpProxyRequest) returns (Operation) {
    option (google.api.http) = {
      body: "target_tcp_proxy_resource"
      post: "/compute/v1/projects/{project}/regions/{region}/targetTcpProxies"
    };
    option (google.api.method_signature) = "project,region,target_tcp_proxy_resource";
    option (google.cloud.operation_service) = "RegionOperations";
  }

  // Retrieves a list of TargetTcpProxy resources available to the specified project in a given region.
  rpc List(ListRegionTargetTcpProxiesRequest) returns (TargetTcpProxyList) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/regions/{region}/targetTcpProxies"
    };
    option (google.api.method_signature) = "project,region";
  }

}

// The RegionUrlMaps API.
service RegionUrlMaps {
  option (google.api.default_host) =
    "compute.googleapis.com";

  option (google.api.oauth_scopes) =
    "https://www.googleapis.com/auth/compute,"
    "https://www.googleapis.com/auth/cloud-platform";

  // Deletes the specified UrlMap resource.
  rpc Delete(DeleteRegionUrlMapRequest) returns (Operation) {
    option (google.api.http) = {
      delete: "/compute/v1/projects/{project}/regions/{region}/urlMaps/{url_map}"
    };
    option (google.api.method_signature) = "project,region,url_map";
    option (google.cloud.operation_service) = "RegionOperations";
  }

  // Returns the specified UrlMap resource.
  rpc Get(GetRegionUrlMapRequest) returns (UrlMap) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/regions/{region}/urlMaps/{url_map}"
    };
    option (google.api.method_signature) = "project,region,url_map";
  }

  // Creates a UrlMap resource in the specified project using the data included in the request.
  rpc Insert(InsertRegionUrlMapRequest) returns (Operation) {
    option (google.api.http) = {
      body: "url_map_resource"
      post: "/compute/v1/projects/{project}/regions/{region}/urlMaps"
    };
    option (google.api.method_signature) = "project,region,url_map_resource";
    option (google.cloud.operation_service) = "RegionOperations";
  }

  // Retrieves the list of UrlMap resources available to the specified project in the specified region.
  rpc List(ListRegionUrlMapsRequest) returns (UrlMapList) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/regions/{region}/urlMaps"
    };
    option (google.api.method_signature) = "project,region";
  }

  // Patches the specified UrlMap resource with the data included in the request. This method supports PATCH semantics and uses JSON merge patch format and processing rules.
  rpc Patch(PatchRegionUrlMapRequest) returns (Operation) {
    option (google.api.http) = {
      body: "url_map_resource"
      patch: "/compute/v1/projects/{project}/regions/{region}/urlMaps/{url_map}"
    };
    option (google.api.method_signature) = "project,region,url_map,url_map_resource";
    option (google.cloud.operation_service) = "RegionOperations";
  }

  // Updates the specified UrlMap resource with the data included in the request.
  rpc Update(UpdateRegionUrlMapRequest) returns (Operation) {
    option (google.api.http) = {
      body: "url_map_resource"
      put: "/compute/v1/projects/{project}/regions/{region}/urlMaps/{url_map}"
    };
    option (google.api.method_signature) = "project,region,url_map,url_map_resource";
    option (google.cloud.operation_service) = "RegionOperations";
  }

  // Runs static validation for the UrlMap. In particular, the tests of the provided UrlMap will be run. Calling this method does NOT create the UrlMap.
  rpc Validate(ValidateRegionUrlMapRequest) returns (UrlMapsValidateResponse) {
    option (google.api.http) = {
      body: "region_url_maps_validate_request_resource"
      post: "/compute/v1/projects/{project}/regions/{region}/urlMaps/{url_map}/validate"
    };
    option (google.api.method_signature) = "project,region,url_map,region_url_maps_validate_request_resource";
  }

}

// The Regions API.
service Regions {
  option (google.api.default_host) =
    "compute.googleapis.com";

  option (google.api.oauth_scopes) =
    "https://www.googleapis.com/auth/compute.readonly,"
    "https://www.googleapis.com/auth/compute,"
    "https://www.googleapis.com/auth/cloud-platform";

  // Returns the specified Region resource. To decrease latency for this method, you can optionally omit any unneeded information from the response by using a field mask. This practice is especially recommended for unused quota information (the `quotas` field). To exclude one or more fields, set your request's `fields` query parameter to only include the fields you need. For example, to only include the `id` and `selfLink` fields, add the query parameter `?fields=id,selfLink` to your request.
  rpc Get(GetRegionRequest) returns (Region) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/regions/{region}"
    };
    option (google.api.method_signature) = "project,region";
  }

  // Retrieves the list of region resources available to the specified project. To decrease latency for this method, you can optionally omit any unneeded information from the response by using a field mask. This practice is especially recommended for unused quota information (the `items.quotas` field). To exclude one or more fields, set your request's `fields` query parameter to only include the fields you need. For example, to only include the `id` and `selfLink` fields, add the query parameter `?fields=id,selfLink` to your request.
  rpc List(ListRegionsRequest) returns (RegionList) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/regions"
    };
    option (google.api.method_signature) = "project";
  }

}

// The Reservations API.
service Reservations {
  option (google.api.default_host) =
    "compute.googleapis.com";

  option (google.api.oauth_scopes) =
    "https://www.googleapis.com/auth/compute,"
    "https://www.googleapis.com/auth/cloud-platform";

  // Retrieves an aggregated list of reservations.
  rpc AggregatedList(AggregatedListReservationsRequest) returns (ReservationAggregatedList) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/aggregated/reservations"
    };
    option (google.api.method_signature) = "project";
  }

  // Deletes the specified reservation.
  rpc Delete(DeleteReservationRequest) returns (Operation) {
    option (google.api.http) = {
      delete: "/compute/v1/projects/{project}/zones/{zone}/reservations/{reservation}"
    };
    option (google.api.method_signature) = "project,zone,reservation";
    option (google.cloud.operation_service) = "ZoneOperations";
  }

  // Retrieves information about the specified reservation.
  rpc Get(GetReservationRequest) returns (Reservation) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/zones/{zone}/reservations/{reservation}"
    };
    option (google.api.method_signature) = "project,zone,reservation";
  }

  // Gets the access control policy for a resource. May be empty if no such policy or resource exists.
  rpc GetIamPolicy(GetIamPolicyReservationRequest) returns (Policy) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/zones/{zone}/reservations/{resource}/getIamPolicy"
    };
    option (google.api.method_signature) = "project,zone,resource";
  }

  // Creates a new reservation. For more information, read Reserving zonal resources.
  rpc Insert(InsertReservationRequest) returns (Operation) {
    option (google.api.http) = {
      body: "reservation_resource"
      post: "/compute/v1/projects/{project}/zones/{zone}/reservations"
    };
    option (google.api.method_signature) = "project,zone,reservation_resource";
    option (google.cloud.operation_service) = "ZoneOperations";
  }

  // A list of all the reservations that have been configured for the specified project in specified zone.
  rpc List(ListReservationsRequest) returns (ReservationList) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/zones/{zone}/reservations"
    };
    option (google.api.method_signature) = "project,zone";
  }

  // Resizes the reservation (applicable to standalone reservations only). For more information, read Modifying reservations.
  rpc Resize(ResizeReservationRequest) returns (Operation) {
    option (google.api.http) = {
      body: "reservations_resize_request_resource"
      post: "/compute/v1/projects/{project}/zones/{zone}/reservations/{reservation}/resize"
    };
    option (google.api.method_signature) = "project,zone,reservation,reservations_resize_request_resource";
    option (google.cloud.operation_service) = "ZoneOperations";
  }

  // Sets the access control policy on the specified resource. Replaces any existing policy.
  rpc SetIamPolicy(SetIamPolicyReservationRequest) returns (Policy) {
    option (google.api.http) = {
      body: "zone_set_policy_request_resource"
      post: "/compute/v1/projects/{project}/zones/{zone}/reservations/{resource}/setIamPolicy"
    };
    option (google.api.method_signature) = "project,zone,resource,zone_set_policy_request_resource";
  }

  // Returns permissions that a caller has on the specified resource.
  rpc TestIamPermissions(TestIamPermissionsReservationRequest) returns (TestPermissionsResponse) {
    option (google.api.http) = {
      body: "test_permissions_request_resource"
      post: "/compute/v1/projects/{project}/zones/{zone}/reservations/{resource}/testIamPermissions"
    };
    option (google.api.method_signature) = "project,zone,resource,test_permissions_request_resource";
  }

  // Update share settings of the reservation.
  rpc Update(UpdateReservationRequest) returns (Operation) {
    option (google.api.http) = {
      body: "reservation_resource"
      patch: "/compute/v1/projects/{project}/zones/{zone}/reservations/{reservation}"
    };
    option (google.api.method_signature) = "project,zone,reservation,reservation_resource";
    option (google.cloud.operation_service) = "ZoneOperations";
  }

}

// The ResourcePolicies API.
service ResourcePolicies {
  option (google.api.default_host) =
    "compute.googleapis.com";

  option (google.api.oauth_scopes) =
    "https://www.googleapis.com/auth/compute,"
    "https://www.googleapis.com/auth/cloud-platform";

  // Retrieves an aggregated list of resource policies.
  rpc AggregatedList(AggregatedListResourcePoliciesRequest) returns (ResourcePolicyAggregatedList) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/aggregated/resourcePolicies"
    };
    option (google.api.method_signature) = "project";
  }

  // Deletes the specified resource policy.
  rpc Delete(DeleteResourcePolicyRequest) returns (Operation) {
    option (google.api.http) = {
      delete: "/compute/v1/projects/{project}/regions/{region}/resourcePolicies/{resource_policy}"
    };
    option (google.api.method_signature) = "project,region,resource_policy";
    option (google.cloud.operation_service) = "RegionOperations";
  }

  // Retrieves all information of the specified resource policy.
  rpc Get(GetResourcePolicyRequest) returns (ResourcePolicy) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/regions/{region}/resourcePolicies/{resource_policy}"
    };
    option (google.api.method_signature) = "project,region,resource_policy";
  }

  // Gets the access control policy for a resource. May be empty if no such policy or resource exists.
  rpc GetIamPolicy(GetIamPolicyResourcePolicyRequest) returns (Policy) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/regions/{region}/resourcePolicies/{resource}/getIamPolicy"
    };
    option (google.api.method_signature) = "project,region,resource";
  }

  // Creates a new resource policy.
  rpc Insert(InsertResourcePolicyRequest) returns (Operation) {
    option (google.api.http) = {
      body: "resource_policy_resource"
      post: "/compute/v1/projects/{project}/regions/{region}/resourcePolicies"
    };
    option (google.api.method_signature) = "project,region,resource_policy_resource";
    option (google.cloud.operation_service) = "RegionOperations";
  }

  // A list all the resource policies that have been configured for the specified project in specified region.
  rpc List(ListResourcePoliciesRequest) returns (ResourcePolicyList) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/regions/{region}/resourcePolicies"
    };
    option (google.api.method_signature) = "project,region";
  }

  // Sets the access control policy on the specified resource. Replaces any existing policy.
  rpc SetIamPolicy(SetIamPolicyResourcePolicyRequest) returns (Policy) {
    option (google.api.http) = {
      body: "region_set_policy_request_resource"
      post: "/compute/v1/projects/{project}/regions/{region}/resourcePolicies/{resource}/setIamPolicy"
    };
    option (google.api.method_signature) = "project,region,resource,region_set_policy_request_resource";
  }

  // Returns permissions that a caller has on the specified resource.
  rpc TestIamPermissions(TestIamPermissionsResourcePolicyRequest) returns (TestPermissionsResponse) {
    option (google.api.http) = {
      body: "test_permissions_request_resource"
      post: "/compute/v1/projects/{project}/regions/{region}/resourcePolicies/{resource}/testIamPermissions"
    };
    option (google.api.method_signature) = "project,region,resource,test_permissions_request_resource";
  }

}

// The Routers API.
service Routers {
  option (google.api.default_host) =
    "compute.googleapis.com";

  option (google.api.oauth_scopes) =
    "https://www.googleapis.com/auth/compute,"
    "https://www.googleapis.com/auth/cloud-platform";

  // Retrieves an aggregated list of routers.
  rpc AggregatedList(AggregatedListRoutersRequest) returns (RouterAggregatedList) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/aggregated/routers"
    };
    option (google.api.method_signature) = "project";
  }

  // Deletes the specified Router resource.
  rpc Delete(DeleteRouterRequest) returns (Operation) {
    option (google.api.http) = {
      delete: "/compute/v1/projects/{project}/regions/{region}/routers/{router}"
    };
    option (google.api.method_signature) = "project,region,router";
    option (google.cloud.operation_service) = "RegionOperations";
  }

  // Returns the specified Router resource.
  rpc Get(GetRouterRequest) returns (Router) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/regions/{region}/routers/{router}"
    };
    option (google.api.method_signature) = "project,region,router";
  }

  // Retrieves runtime Nat mapping information of VM endpoints.
  rpc GetNatMappingInfo(GetNatMappingInfoRoutersRequest) returns (VmEndpointNatMappingsList) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/regions/{region}/routers/{router}/getNatMappingInfo"
    };
    option (google.api.method_signature) = "project,region,router";
  }

  // Retrieves runtime information of the specified router.
  rpc GetRouterStatus(GetRouterStatusRouterRequest) returns (RouterStatusResponse) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/regions/{region}/routers/{router}/getRouterStatus"
    };
    option (google.api.method_signature) = "project,region,router";
  }

  // Creates a Router resource in the specified project and region using the data included in the request.
  rpc Insert(InsertRouterRequest) returns (Operation) {
    option (google.api.http) = {
      body: "router_resource"
      post: "/compute/v1/projects/{project}/regions/{region}/routers"
    };
    option (google.api.method_signature) = "project,region,router_resource";
    option (google.cloud.operation_service) = "RegionOperations";
  }

  // Retrieves a list of Router resources available to the specified project.
  rpc List(ListRoutersRequest) returns (RouterList) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/regions/{region}/routers"
    };
    option (google.api.method_signature) = "project,region";
  }

  // Patches the specified Router resource with the data included in the request. This method supports PATCH semantics and uses JSON merge patch format and processing rules.
  rpc Patch(PatchRouterRequest) returns (Operation) {
    option (google.api.http) = {
      body: "router_resource"
      patch: "/compute/v1/projects/{project}/regions/{region}/routers/{router}"
    };
    option (google.api.method_signature) = "project,region,router,router_resource";
    option (google.cloud.operation_service) = "RegionOperations";
  }

  // Preview fields auto-generated during router create and update operations. Calling this method does NOT create or update the router.
  rpc Preview(PreviewRouterRequest) returns (RoutersPreviewResponse) {
    option (google.api.http) = {
      body: "router_resource"
      post: "/compute/v1/projects/{project}/regions/{region}/routers/{router}/preview"
    };
    option (google.api.method_signature) = "project,region,router,router_resource";
  }

  // Updates the specified Router resource with the data included in the request. This method conforms to PUT semantics, which requests that the state of the target resource be created or replaced with the state defined by the representation enclosed in the request message payload.
  rpc Update(UpdateRouterRequest) returns (Operation) {
    option (google.api.http) = {
      body: "router_resource"
      put: "/compute/v1/projects/{project}/regions/{region}/routers/{router}"
    };
    option (google.api.method_signature) = "project,region,router,router_resource";
    option (google.cloud.operation_service) = "RegionOperations";
  }

}

// The Routes API.
service Routes {
  option (google.api.default_host) =
    "compute.googleapis.com";

  option (google.api.oauth_scopes) =
    "https://www.googleapis.com/auth/compute,"
    "https://www.googleapis.com/auth/cloud-platform";

  // Deletes the specified Route resource.
  rpc Delete(DeleteRouteRequest) returns (Operation) {
    option (google.api.http) = {
      delete: "/compute/v1/projects/{project}/global/routes/{route}"
    };
    option (google.api.method_signature) = "project,route";
    option (google.cloud.operation_service) = "GlobalOperations";
  }

  // Returns the specified Route resource.
  rpc Get(GetRouteRequest) returns (Route) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/global/routes/{route}"
    };
    option (google.api.method_signature) = "project,route";
  }

  // Creates a Route resource in the specified project using the data included in the request.
  rpc Insert(InsertRouteRequest) returns (Operation) {
    option (google.api.http) = {
      body: "route_resource"
      post: "/compute/v1/projects/{project}/global/routes"
    };
    option (google.api.method_signature) = "project,route_resource";
    option (google.cloud.operation_service) = "GlobalOperations";
  }

  // Retrieves the list of Route resources available to the specified project.
  rpc List(ListRoutesRequest) returns (RouteList) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/global/routes"
    };
    option (google.api.method_signature) = "project";
  }

}

// The SecurityPolicies API.
service SecurityPolicies {
  option (google.api.default_host) =
    "compute.googleapis.com";

  option (google.api.oauth_scopes) =
    "https://www.googleapis.com/auth/compute,"
    "https://www.googleapis.com/auth/cloud-platform";

  // Inserts a rule into a security policy.
  rpc AddRule(AddRuleSecurityPolicyRequest) returns (Operation) {
    option (google.api.http) = {
      body: "security_policy_rule_resource"
      post: "/compute/v1/projects/{project}/global/securityPolicies/{security_policy}/addRule"
    };
    option (google.api.method_signature) = "project,security_policy,security_policy_rule_resource";
    option (google.cloud.operation_service) = "GlobalOperations";
  }

  // Retrieves the list of all SecurityPolicy resources, regional and global, available to the specified project.
  rpc AggregatedList(AggregatedListSecurityPoliciesRequest) returns (SecurityPoliciesAggregatedList) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/aggregated/securityPolicies"
    };
    option (google.api.method_signature) = "project";
  }

  // Deletes the specified policy.
  rpc Delete(DeleteSecurityPolicyRequest) returns (Operation) {
    option (google.api.http) = {
      delete: "/compute/v1/projects/{project}/global/securityPolicies/{security_policy}"
    };
    option (google.api.method_signature) = "project,security_policy";
    option (google.cloud.operation_service) = "GlobalOperations";
  }

  // List all of the ordered rules present in a single specified policy.
  rpc Get(GetSecurityPolicyRequest) returns (SecurityPolicy) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/global/securityPolicies/{security_policy}"
    };
    option (google.api.method_signature) = "project,security_policy";
  }

  // Gets a rule at the specified priority.
  rpc GetRule(GetRuleSecurityPolicyRequest) returns (SecurityPolicyRule) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/global/securityPolicies/{security_policy}/getRule"
    };
    option (google.api.method_signature) = "project,security_policy";
  }

  // Creates a new policy in the specified project using the data included in the request.
  rpc Insert(InsertSecurityPolicyRequest) returns (Operation) {
    option (google.api.http) = {
      body: "security_policy_resource"
      post: "/compute/v1/projects/{project}/global/securityPolicies"
    };
    option (google.api.method_signature) = "project,security_policy_resource";
    option (google.cloud.operation_service) = "GlobalOperations";
  }

  // List all the policies that have been configured for the specified project.
  rpc List(ListSecurityPoliciesRequest) returns (SecurityPolicyList) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/global/securityPolicies"
    };
    option (google.api.method_signature) = "project";
  }

  // Gets the current list of preconfigured Web Application Firewall (WAF) expressions.
  rpc ListPreconfiguredExpressionSets(ListPreconfiguredExpressionSetsSecurityPoliciesRequest) returns (SecurityPoliciesListPreconfiguredExpressionSetsResponse) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/global/securityPolicies/listPreconfiguredExpressionSets"
    };
    option (google.api.method_signature) = "project";
  }

  // Patches the specified policy with the data included in the request. To clear fields in the rule, leave the fields empty and specify them in the updateMask. This cannot be used to be update the rules in the policy. Please use the per rule methods like addRule, patchRule, and removeRule instead.
  rpc Patch(PatchSecurityPolicyRequest) returns (Operation) {
    option (google.api.http) = {
      body: "security_policy_resource"
      patch: "/compute/v1/projects/{project}/global/securityPolicies/{security_policy}"
    };
    option (google.api.method_signature) = "project,security_policy,security_policy_resource";
    option (google.cloud.operation_service) = "GlobalOperations";
  }

  // Patches a rule at the specified priority.
  rpc PatchRule(PatchRuleSecurityPolicyRequest) returns (Operation) {
    option (google.api.http) = {
      body: "security_policy_rule_resource"
      post: "/compute/v1/projects/{project}/global/securityPolicies/{security_policy}/patchRule"
    };
    option (google.api.method_signature) = "project,security_policy,security_policy_rule_resource";
    option (google.cloud.operation_service) = "GlobalOperations";
  }

  // Deletes a rule at the specified priority.
  rpc RemoveRule(RemoveRuleSecurityPolicyRequest) returns (Operation) {
    option (google.api.http) = {
      post: "/compute/v1/projects/{project}/global/securityPolicies/{security_policy}/removeRule"
    };
    option (google.api.method_signature) = "project,security_policy";
    option (google.cloud.operation_service) = "GlobalOperations";
  }

  // Sets the labels on a security policy. To learn more about labels, read the Labeling Resources documentation.
  rpc SetLabels(SetLabelsSecurityPolicyRequest) returns (Operation) {
    option (google.api.http) = {
      body: "global_set_labels_request_resource"
      post: "/compute/v1/projects/{project}/global/securityPolicies/{resource}/setLabels"
    };
    option (google.api.method_signature) = "project,resource,global_set_labels_request_resource";
    option (google.cloud.operation_service) = "GlobalOperations";
  }

}

// The ServiceAttachments API.
service ServiceAttachments {
  option (google.api.default_host) =
    "compute.googleapis.com";

  option (google.api.oauth_scopes) =
    "https://www.googleapis.com/auth/compute,"
    "https://www.googleapis.com/auth/cloud-platform";

  // Retrieves the list of all ServiceAttachment resources, regional and global, available to the specified project.
  rpc AggregatedList(AggregatedListServiceAttachmentsRequest) returns (ServiceAttachmentAggregatedList) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/aggregated/serviceAttachments"
    };
    option (google.api.method_signature) = "project";
  }

  // Deletes the specified ServiceAttachment in the given scope
  rpc Delete(DeleteServiceAttachmentRequest) returns (Operation) {
    option (google.api.http) = {
      delete: "/compute/v1/projects/{project}/regions/{region}/serviceAttachments/{service_attachment}"
    };
    option (google.api.method_signature) = "project,region,service_attachment";
    option (google.cloud.operation_service) = "RegionOperations";
  }

  // Returns the specified ServiceAttachment resource in the given scope.
  rpc Get(GetServiceAttachmentRequest) returns (ServiceAttachment) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/regions/{region}/serviceAttachments/{service_attachment}"
    };
    option (google.api.method_signature) = "project,region,service_attachment";
  }

  // Gets the access control policy for a resource. May be empty if no such policy or resource exists.
  rpc GetIamPolicy(GetIamPolicyServiceAttachmentRequest) returns (Policy) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/regions/{region}/serviceAttachments/{resource}/getIamPolicy"
    };
    option (google.api.method_signature) = "project,region,resource";
  }

  // Creates a ServiceAttachment in the specified project in the given scope using the parameters that are included in the request.
  rpc Insert(InsertServiceAttachmentRequest) returns (Operation) {
    option (google.api.http) = {
      body: "service_attachment_resource"
      post: "/compute/v1/projects/{project}/regions/{region}/serviceAttachments"
    };
    option (google.api.method_signature) = "project,region,service_attachment_resource";
    option (google.cloud.operation_service) = "RegionOperations";
  }

  // Lists the ServiceAttachments for a project in the given scope.
  rpc List(ListServiceAttachmentsRequest) returns (ServiceAttachmentList) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/regions/{region}/serviceAttachments"
    };
    option (google.api.method_signature) = "project,region";
  }

  // Patches the specified ServiceAttachment resource with the data included in the request. This method supports PATCH semantics and uses JSON merge patch format and processing rules.
  rpc Patch(PatchServiceAttachmentRequest) returns (Operation) {
    option (google.api.http) = {
      body: "service_attachment_resource"
      patch: "/compute/v1/projects/{project}/regions/{region}/serviceAttachments/{service_attachment}"
    };
    option (google.api.method_signature) = "project,region,service_attachment,service_attachment_resource";
    option (google.cloud.operation_service) = "RegionOperations";
  }

  // Sets the access control policy on the specified resource. Replaces any existing policy.
  rpc SetIamPolicy(SetIamPolicyServiceAttachmentRequest) returns (Policy) {
    option (google.api.http) = {
      body: "region_set_policy_request_resource"
      post: "/compute/v1/projects/{project}/regions/{region}/serviceAttachments/{resource}/setIamPolicy"
    };
    option (google.api.method_signature) = "project,region,resource,region_set_policy_request_resource";
  }

  // Returns permissions that a caller has on the specified resource.
  rpc TestIamPermissions(TestIamPermissionsServiceAttachmentRequest) returns (TestPermissionsResponse) {
    option (google.api.http) = {
      body: "test_permissions_request_resource"
      post: "/compute/v1/projects/{project}/regions/{region}/serviceAttachments/{resource}/testIamPermissions"
    };
    option (google.api.method_signature) = "project,region,resource,test_permissions_request_resource";
  }

}

// The Snapshots API.
service Snapshots {
  option (google.api.default_host) =
    "compute.googleapis.com";

  option (google.api.oauth_scopes) =
    "https://www.googleapis.com/auth/compute,"
    "https://www.googleapis.com/auth/cloud-platform";

  // Deletes the specified Snapshot resource. Keep in mind that deleting a single snapshot might not necessarily delete all the data on that snapshot. If any data on the snapshot that is marked for deletion is needed for subsequent snapshots, the data will be moved to the next corresponding snapshot. For more information, see Deleting snapshots.
  rpc Delete(DeleteSnapshotRequest) returns (Operation) {
    option (google.api.http) = {
      delete: "/compute/v1/projects/{project}/global/snapshots/{snapshot}"
    };
    option (google.api.method_signature) = "project,snapshot";
    option (google.cloud.operation_service) = "GlobalOperations";
  }

  // Returns the specified Snapshot resource.
  rpc Get(GetSnapshotRequest) returns (Snapshot) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/global/snapshots/{snapshot}"
    };
    option (google.api.method_signature) = "project,snapshot";
  }

  // Gets the access control policy for a resource. May be empty if no such policy or resource exists.
  rpc GetIamPolicy(GetIamPolicySnapshotRequest) returns (Policy) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/global/snapshots/{resource}/getIamPolicy"
    };
    option (google.api.method_signature) = "project,resource";
  }

  // Creates a snapshot in the specified project using the data included in the request. For regular snapshot creation, consider using this method instead of disks.createSnapshot, as this method supports more features, such as creating snapshots in a project different from the source disk project.
  rpc Insert(InsertSnapshotRequest) returns (Operation) {
    option (google.api.http) = {
      body: "snapshot_resource"
      post: "/compute/v1/projects/{project}/global/snapshots"
    };
    option (google.api.method_signature) = "project,snapshot_resource";
    option (google.cloud.operation_service) = "GlobalOperations";
  }

  // Retrieves the list of Snapshot resources contained within the specified project.
  rpc List(ListSnapshotsRequest) returns (SnapshotList) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/global/snapshots"
    };
    option (google.api.method_signature) = "project";
  }

  // Sets the access control policy on the specified resource. Replaces any existing policy.
  rpc SetIamPolicy(SetIamPolicySnapshotRequest) returns (Policy) {
    option (google.api.http) = {
      body: "global_set_policy_request_resource"
      post: "/compute/v1/projects/{project}/global/snapshots/{resource}/setIamPolicy"
    };
    option (google.api.method_signature) = "project,resource,global_set_policy_request_resource";
  }

  // Sets the labels on a snapshot. To learn more about labels, read the Labeling Resources documentation.
  rpc SetLabels(SetLabelsSnapshotRequest) returns (Operation) {
    option (google.api.http) = {
      body: "global_set_labels_request_resource"
      post: "/compute/v1/projects/{project}/global/snapshots/{resource}/setLabels"
    };
    option (google.api.method_signature) = "project,resource,global_set_labels_request_resource";
    option (google.cloud.operation_service) = "GlobalOperations";
  }

  // Returns permissions that a caller has on the specified resource.
  rpc TestIamPermissions(TestIamPermissionsSnapshotRequest) returns (TestPermissionsResponse) {
    option (google.api.http) = {
      body: "test_permissions_request_resource"
      post: "/compute/v1/projects/{project}/global/snapshots/{resource}/testIamPermissions"
    };
    option (google.api.method_signature) = "project,resource,test_permissions_request_resource";
  }

}

// The SslCertificates API.
service SslCertificates {
  option (google.api.default_host) =
    "compute.googleapis.com";

  option (google.api.oauth_scopes) =
    "https://www.googleapis.com/auth/compute,"
    "https://www.googleapis.com/auth/cloud-platform";

  // Retrieves the list of all SslCertificate resources, regional and global, available to the specified project.
  rpc AggregatedList(AggregatedListSslCertificatesRequest) returns (SslCertificateAggregatedList) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/aggregated/sslCertificates"
    };
    option (google.api.method_signature) = "project";
  }

  // Deletes the specified SslCertificate resource.
  rpc Delete(DeleteSslCertificateRequest) returns (Operation) {
    option (google.api.http) = {
      delete: "/compute/v1/projects/{project}/global/sslCertificates/{ssl_certificate}"
    };
    option (google.api.method_signature) = "project,ssl_certificate";
    option (google.cloud.operation_service) = "GlobalOperations";
  }

  // Returns the specified SslCertificate resource.
  rpc Get(GetSslCertificateRequest) returns (SslCertificate) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/global/sslCertificates/{ssl_certificate}"
    };
    option (google.api.method_signature) = "project,ssl_certificate";
  }

  // Creates a SslCertificate resource in the specified project using the data included in the request.
  rpc Insert(InsertSslCertificateRequest) returns (Operation) {
    option (google.api.http) = {
      body: "ssl_certificate_resource"
      post: "/compute/v1/projects/{project}/global/sslCertificates"
    };
    option (google.api.method_signature) = "project,ssl_certificate_resource";
    option (google.cloud.operation_service) = "GlobalOperations";
  }

  // Retrieves the list of SslCertificate resources available to the specified project.
  rpc List(ListSslCertificatesRequest) returns (SslCertificateList) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/global/sslCertificates"
    };
    option (google.api.method_signature) = "project";
  }

}

// The SslPolicies API.
service SslPolicies {
  option (google.api.default_host) =
    "compute.googleapis.com";

  option (google.api.oauth_scopes) =
    "https://www.googleapis.com/auth/compute,"
    "https://www.googleapis.com/auth/cloud-platform";

  // Retrieves the list of all SslPolicy resources, regional and global, available to the specified project.
  rpc AggregatedList(AggregatedListSslPoliciesRequest) returns (SslPoliciesAggregatedList) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/aggregated/sslPolicies"
    };
    option (google.api.method_signature) = "project";
  }

  // Deletes the specified SSL policy. The SSL policy resource can be deleted only if it is not in use by any TargetHttpsProxy or TargetSslProxy resources.
  rpc Delete(DeleteSslPolicyRequest) returns (Operation) {
    option (google.api.http) = {
      delete: "/compute/v1/projects/{project}/global/sslPolicies/{ssl_policy}"
    };
    option (google.api.method_signature) = "project,ssl_policy";
    option (google.cloud.operation_service) = "GlobalOperations";
  }

  // Lists all of the ordered rules present in a single specified policy.
  rpc Get(GetSslPolicyRequest) returns (SslPolicy) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/global/sslPolicies/{ssl_policy}"
    };
    option (google.api.method_signature) = "project,ssl_policy";
  }

  // Returns the specified SSL policy resource.
  rpc Insert(InsertSslPolicyRequest) returns (Operation) {
    option (google.api.http) = {
      body: "ssl_policy_resource"
      post: "/compute/v1/projects/{project}/global/sslPolicies"
    };
    option (google.api.method_signature) = "project,ssl_policy_resource";
    option (google.cloud.operation_service) = "GlobalOperations";
  }

  // Lists all the SSL policies that have been configured for the specified project.
  rpc List(ListSslPoliciesRequest) returns (SslPoliciesList) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/global/sslPolicies"
    };
    option (google.api.method_signature) = "project";
  }

  // Lists all features that can be specified in the SSL policy when using custom profile.
  rpc ListAvailableFeatures(ListAvailableFeaturesSslPoliciesRequest) returns (SslPoliciesListAvailableFeaturesResponse) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/global/sslPolicies/listAvailableFeatures"
    };
    option (google.api.method_signature) = "project";
  }

  // Patches the specified SSL policy with the data included in the request.
  rpc Patch(PatchSslPolicyRequest) returns (Operation) {
    option (google.api.http) = {
      body: "ssl_policy_resource"
      patch: "/compute/v1/projects/{project}/global/sslPolicies/{ssl_policy}"
    };
    option (google.api.method_signature) = "project,ssl_policy,ssl_policy_resource";
    option (google.cloud.operation_service) = "GlobalOperations";
  }

}

// The Subnetworks API.
service Subnetworks {
  option (google.api.default_host) =
    "compute.googleapis.com";

  option (google.api.oauth_scopes) =
    "https://www.googleapis.com/auth/compute,"
    "https://www.googleapis.com/auth/cloud-platform";

  // Retrieves an aggregated list of subnetworks.
  rpc AggregatedList(AggregatedListSubnetworksRequest) returns (SubnetworkAggregatedList) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/aggregated/subnetworks"
    };
    option (google.api.method_signature) = "project";
  }

  // Deletes the specified subnetwork.
  rpc Delete(DeleteSubnetworkRequest) returns (Operation) {
    option (google.api.http) = {
      delete: "/compute/v1/projects/{project}/regions/{region}/subnetworks/{subnetwork}"
    };
    option (google.api.method_signature) = "project,region,subnetwork";
    option (google.cloud.operation_service) = "RegionOperations";
  }

  // Expands the IP CIDR range of the subnetwork to a specified value.
  rpc ExpandIpCidrRange(ExpandIpCidrRangeSubnetworkRequest) returns (Operation) {
    option (google.api.http) = {
      body: "subnetworks_expand_ip_cidr_range_request_resource"
      post: "/compute/v1/projects/{project}/regions/{region}/subnetworks/{subnetwork}/expandIpCidrRange"
    };
    option (google.api.method_signature) = "project,region,subnetwork,subnetworks_expand_ip_cidr_range_request_resource";
    option (google.cloud.operation_service) = "RegionOperations";
  }

  // Returns the specified subnetwork.
  rpc Get(GetSubnetworkRequest) returns (Subnetwork) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/regions/{region}/subnetworks/{subnetwork}"
    };
    option (google.api.method_signature) = "project,region,subnetwork";
  }

  // Gets the access control policy for a resource. May be empty if no such policy or resource exists.
  rpc GetIamPolicy(GetIamPolicySubnetworkRequest) returns (Policy) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/regions/{region}/subnetworks/{resource}/getIamPolicy"
    };
    option (google.api.method_signature) = "project,region,resource";
  }

  // Creates a subnetwork in the specified project using the data included in the request.
  rpc Insert(InsertSubnetworkRequest) returns (Operation) {
    option (google.api.http) = {
      body: "subnetwork_resource"
      post: "/compute/v1/projects/{project}/regions/{region}/subnetworks"
    };
    option (google.api.method_signature) = "project,region,subnetwork_resource";
    option (google.cloud.operation_service) = "RegionOperations";
  }

  // Retrieves a list of subnetworks available to the specified project.
  rpc List(ListSubnetworksRequest) returns (SubnetworkList) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/regions/{region}/subnetworks"
    };
    option (google.api.method_signature) = "project,region";
  }

  // Retrieves an aggregated list of all usable subnetworks in the project.
  rpc ListUsable(ListUsableSubnetworksRequest) returns (UsableSubnetworksAggregatedList) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/aggregated/subnetworks/listUsable"
    };
    option (google.api.method_signature) = "project";
  }

  // Patches the specified subnetwork with the data included in the request. Only certain fields can be updated with a patch request as indicated in the field descriptions. You must specify the current fingerprint of the subnetwork resource being patched.
  rpc Patch(PatchSubnetworkRequest) returns (Operation) {
    option (google.api.http) = {
      body: "subnetwork_resource"
      patch: "/compute/v1/projects/{project}/regions/{region}/subnetworks/{subnetwork}"
    };
    option (google.api.method_signature) = "project,region,subnetwork,subnetwork_resource";
    option (google.cloud.operation_service) = "RegionOperations";
  }

  // Sets the access control policy on the specified resource. Replaces any existing policy.
  rpc SetIamPolicy(SetIamPolicySubnetworkRequest) returns (Policy) {
    option (google.api.http) = {
      body: "region_set_policy_request_resource"
      post: "/compute/v1/projects/{project}/regions/{region}/subnetworks/{resource}/setIamPolicy"
    };
    option (google.api.method_signature) = "project,region,resource,region_set_policy_request_resource";
  }

  // Set whether VMs in this subnet can access Google services without assigning external IP addresses through Private Google Access.
  rpc SetPrivateIpGoogleAccess(SetPrivateIpGoogleAccessSubnetworkRequest) returns (Operation) {
    option (google.api.http) = {
      body: "subnetworks_set_private_ip_google_access_request_resource"
      post: "/compute/v1/projects/{project}/regions/{region}/subnetworks/{subnetwork}/setPrivateIpGoogleAccess"
    };
    option (google.api.method_signature) = "project,region,subnetwork,subnetworks_set_private_ip_google_access_request_resource";
    option (google.cloud.operation_service) = "RegionOperations";
  }

  // Returns permissions that a caller has on the specified resource.
  rpc TestIamPermissions(TestIamPermissionsSubnetworkRequest) returns (TestPermissionsResponse) {
    option (google.api.http) = {
      body: "test_permissions_request_resource"
      post: "/compute/v1/projects/{project}/regions/{region}/subnetworks/{resource}/testIamPermissions"
    };
    option (google.api.method_signature) = "project,region,resource,test_permissions_request_resource";
  }

}

// The TargetGrpcProxies API.
service TargetGrpcProxies {
  option (google.api.default_host) =
    "compute.googleapis.com";

  option (google.api.oauth_scopes) =
    "https://www.googleapis.com/auth/compute,"
    "https://www.googleapis.com/auth/cloud-platform";

  // Deletes the specified TargetGrpcProxy in the given scope
  rpc Delete(DeleteTargetGrpcProxyRequest) returns (Operation) {
    option (google.api.http) = {
      delete: "/compute/v1/projects/{project}/global/targetGrpcProxies/{target_grpc_proxy}"
    };
    option (google.api.method_signature) = "project,target_grpc_proxy";
    option (google.cloud.operation_service) = "GlobalOperations";
  }

  // Returns the specified TargetGrpcProxy resource in the given scope.
  rpc Get(GetTargetGrpcProxyRequest) returns (TargetGrpcProxy) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/global/targetGrpcProxies/{target_grpc_proxy}"
    };
    option (google.api.method_signature) = "project,target_grpc_proxy";
  }

  // Creates a TargetGrpcProxy in the specified project in the given scope using the parameters that are included in the request.
  rpc Insert(InsertTargetGrpcProxyRequest) returns (Operation) {
    option (google.api.http) = {
      body: "target_grpc_proxy_resource"
      post: "/compute/v1/projects/{project}/global/targetGrpcProxies"
    };
    option (google.api.method_signature) = "project,target_grpc_proxy_resource";
    option (google.cloud.operation_service) = "GlobalOperations";
  }

  // Lists the TargetGrpcProxies for a project in the given scope.
  rpc List(ListTargetGrpcProxiesRequest) returns (TargetGrpcProxyList) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/global/targetGrpcProxies"
    };
    option (google.api.method_signature) = "project";
  }

  // Patches the specified TargetGrpcProxy resource with the data included in the request. This method supports PATCH semantics and uses JSON merge patch format and processing rules.
  rpc Patch(PatchTargetGrpcProxyRequest) returns (Operation) {
    option (google.api.http) = {
      body: "target_grpc_proxy_resource"
      patch: "/compute/v1/projects/{project}/global/targetGrpcProxies/{target_grpc_proxy}"
    };
    option (google.api.method_signature) = "project,target_grpc_proxy,target_grpc_proxy_resource";
    option (google.cloud.operation_service) = "GlobalOperations";
  }

}

// The TargetHttpProxies API.
service TargetHttpProxies {
  option (google.api.default_host) =
    "compute.googleapis.com";

  option (google.api.oauth_scopes) =
    "https://www.googleapis.com/auth/compute,"
    "https://www.googleapis.com/auth/cloud-platform";

  // Retrieves the list of all TargetHttpProxy resources, regional and global, available to the specified project.
  rpc AggregatedList(AggregatedListTargetHttpProxiesRequest) returns (TargetHttpProxyAggregatedList) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/aggregated/targetHttpProxies"
    };
    option (google.api.method_signature) = "project";
  }

  // Deletes the specified TargetHttpProxy resource.
  rpc Delete(DeleteTargetHttpProxyRequest) returns (Operation) {
    option (google.api.http) = {
      delete: "/compute/v1/projects/{project}/global/targetHttpProxies/{target_http_proxy}"
    };
    option (google.api.method_signature) = "project,target_http_proxy";
    option (google.cloud.operation_service) = "GlobalOperations";
  }

  // Returns the specified TargetHttpProxy resource.
  rpc Get(GetTargetHttpProxyRequest) returns (TargetHttpProxy) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/global/targetHttpProxies/{target_http_proxy}"
    };
    option (google.api.method_signature) = "project,target_http_proxy";
  }

  // Creates a TargetHttpProxy resource in the specified project using the data included in the request.
  rpc Insert(InsertTargetHttpProxyRequest) returns (Operation) {
    option (google.api.http) = {
      body: "target_http_proxy_resource"
      post: "/compute/v1/projects/{project}/global/targetHttpProxies"
    };
    option (google.api.method_signature) = "project,target_http_proxy_resource";
    option (google.cloud.operation_service) = "GlobalOperations";
  }

  // Retrieves the list of TargetHttpProxy resources available to the specified project.
  rpc List(ListTargetHttpProxiesRequest) returns (TargetHttpProxyList) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/global/targetHttpProxies"
    };
    option (google.api.method_signature) = "project";
  }

  // Patches the specified TargetHttpProxy resource with the data included in the request. This method supports PATCH semantics and uses JSON merge patch format and processing rules.
  rpc Patch(PatchTargetHttpProxyRequest) returns (Operation) {
    option (google.api.http) = {
      body: "target_http_proxy_resource"
      patch: "/compute/v1/projects/{project}/global/targetHttpProxies/{target_http_proxy}"
    };
    option (google.api.method_signature) = "project,target_http_proxy,target_http_proxy_resource";
    option (google.cloud.operation_service) = "GlobalOperations";
  }

  // Changes the URL map for TargetHttpProxy.
  rpc SetUrlMap(SetUrlMapTargetHttpProxyRequest) returns (Operation) {
    option (google.api.http) = {
      body: "url_map_reference_resource"
      post: "/compute/v1/projects/{project}/targetHttpProxies/{target_http_proxy}/setUrlMap"
    };
    option (google.api.method_signature) = "project,target_http_proxy,url_map_reference_resource";
    option (google.cloud.operation_service) = "GlobalOperations";
  }

}

// The TargetHttpsProxies API.
service TargetHttpsProxies {
  option (google.api.default_host) =
    "compute.googleapis.com";

  option (google.api.oauth_scopes) =
    "https://www.googleapis.com/auth/compute,"
    "https://www.googleapis.com/auth/cloud-platform";

  // Retrieves the list of all TargetHttpsProxy resources, regional and global, available to the specified project.
  rpc AggregatedList(AggregatedListTargetHttpsProxiesRequest) returns (TargetHttpsProxyAggregatedList) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/aggregated/targetHttpsProxies"
    };
    option (google.api.method_signature) = "project";
  }

  // Deletes the specified TargetHttpsProxy resource.
  rpc Delete(DeleteTargetHttpsProxyRequest) returns (Operation) {
    option (google.api.http) = {
      delete: "/compute/v1/projects/{project}/global/targetHttpsProxies/{target_https_proxy}"
    };
    option (google.api.method_signature) = "project,target_https_proxy";
    option (google.cloud.operation_service) = "GlobalOperations";
  }

  // Returns the specified TargetHttpsProxy resource.
  rpc Get(GetTargetHttpsProxyRequest) returns (TargetHttpsProxy) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/global/targetHttpsProxies/{target_https_proxy}"
    };
    option (google.api.method_signature) = "project,target_https_proxy";
  }

  // Creates a TargetHttpsProxy resource in the specified project using the data included in the request.
  rpc Insert(InsertTargetHttpsProxyRequest) returns (Operation) {
    option (google.api.http) = {
      body: "target_https_proxy_resource"
      post: "/compute/v1/projects/{project}/global/targetHttpsProxies"
    };
    option (google.api.method_signature) = "project,target_https_proxy_resource";
    option (google.cloud.operation_service) = "GlobalOperations";
  }

  // Retrieves the list of TargetHttpsProxy resources available to the specified project.
  rpc List(ListTargetHttpsProxiesRequest) returns (TargetHttpsProxyList) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/global/targetHttpsProxies"
    };
    option (google.api.method_signature) = "project";
  }

  // Patches the specified TargetHttpsProxy resource with the data included in the request. This method supports PATCH semantics and uses JSON merge patch format and processing rules.
  rpc Patch(PatchTargetHttpsProxyRequest) returns (Operation) {
    option (google.api.http) = {
      body: "target_https_proxy_resource"
      patch: "/compute/v1/projects/{project}/global/targetHttpsProxies/{target_https_proxy}"
    };
    option (google.api.method_signature) = "project,target_https_proxy,target_https_proxy_resource";
    option (google.cloud.operation_service) = "GlobalOperations";
  }

  // Changes the Certificate Map for TargetHttpsProxy.
  rpc SetCertificateMap(SetCertificateMapTargetHttpsProxyRequest) returns (Operation) {
    option (google.api.http) = {
      body: "target_https_proxies_set_certificate_map_request_resource"
      post: "/compute/v1/projects/{project}/global/targetHttpsProxies/{target_https_proxy}/setCertificateMap"
    };
    option (google.api.method_signature) = "project,target_https_proxy,target_https_proxies_set_certificate_map_request_resource";
    option (google.cloud.operation_service) = "GlobalOperations";
  }

  // Sets the QUIC override policy for TargetHttpsProxy.
  rpc SetQuicOverride(SetQuicOverrideTargetHttpsProxyRequest) returns (Operation) {
    option (google.api.http) = {
      body: "target_https_proxies_set_quic_override_request_resource"
      post: "/compute/v1/projects/{project}/global/targetHttpsProxies/{target_https_proxy}/setQuicOverride"
    };
    option (google.api.method_signature) = "project,target_https_proxy,target_https_proxies_set_quic_override_request_resource";
    option (google.cloud.operation_service) = "GlobalOperations";
  }

  // Replaces SslCertificates for TargetHttpsProxy.
  rpc SetSslCertificates(SetSslCertificatesTargetHttpsProxyRequest) returns (Operation) {
    option (google.api.http) = {
      body: "target_https_proxies_set_ssl_certificates_request_resource"
      post: "/compute/v1/projects/{project}/targetHttpsProxies/{target_https_proxy}/setSslCertificates"
    };
    option (google.api.method_signature) = "project,target_https_proxy,target_https_proxies_set_ssl_certificates_request_resource";
    option (google.cloud.operation_service) = "GlobalOperations";
  }

  // Sets the SSL policy for TargetHttpsProxy. The SSL policy specifies the server-side support for SSL features. This affects connections between clients and the HTTPS proxy load balancer. They do not affect the connection between the load balancer and the backends.
  rpc SetSslPolicy(SetSslPolicyTargetHttpsProxyRequest) returns (Operation) {
    option (google.api.http) = {
      body: "ssl_policy_reference_resource"
      post: "/compute/v1/projects/{project}/global/targetHttpsProxies/{target_https_proxy}/setSslPolicy"
    };
    option (google.api.method_signature) = "project,target_https_proxy,ssl_policy_reference_resource";
    option (google.cloud.operation_service) = "GlobalOperations";
  }

  // Changes the URL map for TargetHttpsProxy.
  rpc SetUrlMap(SetUrlMapTargetHttpsProxyRequest) returns (Operation) {
    option (google.api.http) = {
      body: "url_map_reference_resource"
      post: "/compute/v1/projects/{project}/targetHttpsProxies/{target_https_proxy}/setUrlMap"
    };
    option (google.api.method_signature) = "project,target_https_proxy,url_map_reference_resource";
    option (google.cloud.operation_service) = "GlobalOperations";
  }

}

// The TargetInstances API.
service TargetInstances {
  option (google.api.default_host) =
    "compute.googleapis.com";

  option (google.api.oauth_scopes) =
    "https://www.googleapis.com/auth/compute,"
    "https://www.googleapis.com/auth/cloud-platform";

  // Retrieves an aggregated list of target instances.
  rpc AggregatedList(AggregatedListTargetInstancesRequest) returns (TargetInstanceAggregatedList) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/aggregated/targetInstances"
    };
    option (google.api.method_signature) = "project";
  }

  // Deletes the specified TargetInstance resource.
  rpc Delete(DeleteTargetInstanceRequest) returns (Operation) {
    option (google.api.http) = {
      delete: "/compute/v1/projects/{project}/zones/{zone}/targetInstances/{target_instance}"
    };
    option (google.api.method_signature) = "project,zone,target_instance";
    option (google.cloud.operation_service) = "ZoneOperations";
  }

  // Returns the specified TargetInstance resource.
  rpc Get(GetTargetInstanceRequest) returns (TargetInstance) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/zones/{zone}/targetInstances/{target_instance}"
    };
    option (google.api.method_signature) = "project,zone,target_instance";
  }

  // Creates a TargetInstance resource in the specified project and zone using the data included in the request.
  rpc Insert(InsertTargetInstanceRequest) returns (Operation) {
    option (google.api.http) = {
      body: "target_instance_resource"
      post: "/compute/v1/projects/{project}/zones/{zone}/targetInstances"
    };
    option (google.api.method_signature) = "project,zone,target_instance_resource";
    option (google.cloud.operation_service) = "ZoneOperations";
  }

  // Retrieves a list of TargetInstance resources available to the specified project and zone.
  rpc List(ListTargetInstancesRequest) returns (TargetInstanceList) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/zones/{zone}/targetInstances"
    };
    option (google.api.method_signature) = "project,zone";
  }

}

// The TargetPools API.
service TargetPools {
  option (google.api.default_host) =
    "compute.googleapis.com";

  option (google.api.oauth_scopes) =
    "https://www.googleapis.com/auth/compute,"
    "https://www.googleapis.com/auth/cloud-platform";

  // Adds health check URLs to a target pool.
  rpc AddHealthCheck(AddHealthCheckTargetPoolRequest) returns (Operation) {
    option (google.api.http) = {
      body: "target_pools_add_health_check_request_resource"
      post: "/compute/v1/projects/{project}/regions/{region}/targetPools/{target_pool}/addHealthCheck"
    };
    option (google.api.method_signature) = "project,region,target_pool,target_pools_add_health_check_request_resource";
    option (google.cloud.operation_service) = "RegionOperations";
  }

  // Adds an instance to a target pool.
  rpc AddInstance(AddInstanceTargetPoolRequest) returns (Operation) {
    option (google.api.http) = {
      body: "target_pools_add_instance_request_resource"
      post: "/compute/v1/projects/{project}/regions/{region}/targetPools/{target_pool}/addInstance"
    };
    option (google.api.method_signature) = "project,region,target_pool,target_pools_add_instance_request_resource";
    option (google.cloud.operation_service) = "RegionOperations";
  }

  // Retrieves an aggregated list of target pools.
  rpc AggregatedList(AggregatedListTargetPoolsRequest) returns (TargetPoolAggregatedList) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/aggregated/targetPools"
    };
    option (google.api.method_signature) = "project";
  }

  // Deletes the specified target pool.
  rpc Delete(DeleteTargetPoolRequest) returns (Operation) {
    option (google.api.http) = {
      delete: "/compute/v1/projects/{project}/regions/{region}/targetPools/{target_pool}"
    };
    option (google.api.method_signature) = "project,region,target_pool";
    option (google.cloud.operation_service) = "RegionOperations";
  }

  // Returns the specified target pool.
  rpc Get(GetTargetPoolRequest) returns (TargetPool) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/regions/{region}/targetPools/{target_pool}"
    };
    option (google.api.method_signature) = "project,region,target_pool";
  }

  // Gets the most recent health check results for each IP for the instance that is referenced by the given target pool.
  rpc GetHealth(GetHealthTargetPoolRequest) returns (TargetPoolInstanceHealth) {
    option (google.api.http) = {
      body: "instance_reference_resource"
      post: "/compute/v1/projects/{project}/regions/{region}/targetPools/{target_pool}/getHealth"
    };
    option (google.api.method_signature) = "project,region,target_pool,instance_reference_resource";
  }

  // Creates a target pool in the specified project and region using the data included in the request.
  rpc Insert(InsertTargetPoolRequest) returns (Operation) {
    option (google.api.http) = {
      body: "target_pool_resource"
      post: "/compute/v1/projects/{project}/regions/{region}/targetPools"
    };
    option (google.api.method_signature) = "project,region,target_pool_resource";
    option (google.cloud.operation_service) = "RegionOperations";
  }

  // Retrieves a list of target pools available to the specified project and region.
  rpc List(ListTargetPoolsRequest) returns (TargetPoolList) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/regions/{region}/targetPools"
    };
    option (google.api.method_signature) = "project,region";
  }

  // Removes health check URL from a target pool.
  rpc RemoveHealthCheck(RemoveHealthCheckTargetPoolRequest) returns (Operation) {
    option (google.api.http) = {
      body: "target_pools_remove_health_check_request_resource"
      post: "/compute/v1/projects/{project}/regions/{region}/targetPools/{target_pool}/removeHealthCheck"
    };
    option (google.api.method_signature) = "project,region,target_pool,target_pools_remove_health_check_request_resource";
    option (google.cloud.operation_service) = "RegionOperations";
  }

  // Removes instance URL from a target pool.
  rpc RemoveInstance(RemoveInstanceTargetPoolRequest) returns (Operation) {
    option (google.api.http) = {
      body: "target_pools_remove_instance_request_resource"
      post: "/compute/v1/projects/{project}/regions/{region}/targetPools/{target_pool}/removeInstance"
    };
    option (google.api.method_signature) = "project,region,target_pool,target_pools_remove_instance_request_resource";
    option (google.cloud.operation_service) = "RegionOperations";
  }

  // Changes a backup target pool's configurations.
  rpc SetBackup(SetBackupTargetPoolRequest) returns (Operation) {
    option (google.api.http) = {
      body: "target_reference_resource"
      post: "/compute/v1/projects/{project}/regions/{region}/targetPools/{target_pool}/setBackup"
    };
    option (google.api.method_signature) = "project,region,target_pool,target_reference_resource";
    option (google.cloud.operation_service) = "RegionOperations";
  }

}

// The TargetSslProxies API.
service TargetSslProxies {
  option (google.api.default_host) =
    "compute.googleapis.com";

  option (google.api.oauth_scopes) =
    "https://www.googleapis.com/auth/compute,"
    "https://www.googleapis.com/auth/cloud-platform";

  // Deletes the specified TargetSslProxy resource.
  rpc Delete(DeleteTargetSslProxyRequest) returns (Operation) {
    option (google.api.http) = {
      delete: "/compute/v1/projects/{project}/global/targetSslProxies/{target_ssl_proxy}"
    };
    option (google.api.method_signature) = "project,target_ssl_proxy";
    option (google.cloud.operation_service) = "GlobalOperations";
  }

  // Returns the specified TargetSslProxy resource.
  rpc Get(GetTargetSslProxyRequest) returns (TargetSslProxy) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/global/targetSslProxies/{target_ssl_proxy}"
    };
    option (google.api.method_signature) = "project,target_ssl_proxy";
  }

  // Creates a TargetSslProxy resource in the specified project using the data included in the request.
  rpc Insert(InsertTargetSslProxyRequest) returns (Operation) {
    option (google.api.http) = {
      body: "target_ssl_proxy_resource"
      post: "/compute/v1/projects/{project}/global/targetSslProxies"
    };
    option (google.api.method_signature) = "project,target_ssl_proxy_resource";
    option (google.cloud.operation_service) = "GlobalOperations";
  }

  // Retrieves the list of TargetSslProxy resources available to the specified project.
  rpc List(ListTargetSslProxiesRequest) returns (TargetSslProxyList) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/global/targetSslProxies"
    };
    option (google.api.method_signature) = "project";
  }

  // Changes the BackendService for TargetSslProxy.
  rpc SetBackendService(SetBackendServiceTargetSslProxyRequest) returns (Operation) {
    option (google.api.http) = {
      body: "target_ssl_proxies_set_backend_service_request_resource"
      post: "/compute/v1/projects/{project}/global/targetSslProxies/{target_ssl_proxy}/setBackendService"
    };
    option (google.api.method_signature) = "project,target_ssl_proxy,target_ssl_proxies_set_backend_service_request_resource";
    option (google.cloud.operation_service) = "GlobalOperations";
  }

  // Changes the Certificate Map for TargetSslProxy.
  rpc SetCertificateMap(SetCertificateMapTargetSslProxyRequest) returns (Operation) {
    option (google.api.http) = {
      body: "target_ssl_proxies_set_certificate_map_request_resource"
      post: "/compute/v1/projects/{project}/global/targetSslProxies/{target_ssl_proxy}/setCertificateMap"
    };
    option (google.api.method_signature) = "project,target_ssl_proxy,target_ssl_proxies_set_certificate_map_request_resource";
    option (google.cloud.operation_service) = "GlobalOperations";
  }

  // Changes the ProxyHeaderType for TargetSslProxy.
  rpc SetProxyHeader(SetProxyHeaderTargetSslProxyRequest) returns (Operation) {
    option (google.api.http) = {
      body: "target_ssl_proxies_set_proxy_header_request_resource"
      post: "/compute/v1/projects/{project}/global/targetSslProxies/{target_ssl_proxy}/setProxyHeader"
    };
    option (google.api.method_signature) = "project,target_ssl_proxy,target_ssl_proxies_set_proxy_header_request_resource";
    option (google.cloud.operation_service) = "GlobalOperations";
  }

  // Changes SslCertificates for TargetSslProxy.
  rpc SetSslCertificates(SetSslCertificatesTargetSslProxyRequest) returns (Operation) {
    option (google.api.http) = {
      body: "target_ssl_proxies_set_ssl_certificates_request_resource"
      post: "/compute/v1/projects/{project}/global/targetSslProxies/{target_ssl_proxy}/setSslCertificates"
    };
    option (google.api.method_signature) = "project,target_ssl_proxy,target_ssl_proxies_set_ssl_certificates_request_resource";
    option (google.cloud.operation_service) = "GlobalOperations";
  }

  // Sets the SSL policy for TargetSslProxy. The SSL policy specifies the server-side support for SSL features. This affects connections between clients and the SSL proxy load balancer. They do not affect the connection between the load balancer and the backends.
  rpc SetSslPolicy(SetSslPolicyTargetSslProxyRequest) returns (Operation) {
    option (google.api.http) = {
      body: "ssl_policy_reference_resource"
      post: "/compute/v1/projects/{project}/global/targetSslProxies/{target_ssl_proxy}/setSslPolicy"
    };
    option (google.api.method_signature) = "project,target_ssl_proxy,ssl_policy_reference_resource";
    option (google.cloud.operation_service) = "GlobalOperations";
  }

}

// The TargetTcpProxies API.
service TargetTcpProxies {
  option (google.api.default_host) =
    "compute.googleapis.com";

  option (google.api.oauth_scopes) =
    "https://www.googleapis.com/auth/compute,"
    "https://www.googleapis.com/auth/cloud-platform";

  // Retrieves the list of all TargetTcpProxy resources, regional and global, available to the specified project.
  rpc AggregatedList(AggregatedListTargetTcpProxiesRequest) returns (TargetTcpProxyAggregatedList) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/aggregated/targetTcpProxies"
    };
    option (google.api.method_signature) = "project";
  }

  // Deletes the specified TargetTcpProxy resource.
  rpc Delete(DeleteTargetTcpProxyRequest) returns (Operation) {
    option (google.api.http) = {
      delete: "/compute/v1/projects/{project}/global/targetTcpProxies/{target_tcp_proxy}"
    };
    option (google.api.method_signature) = "project,target_tcp_proxy";
    option (google.cloud.operation_service) = "GlobalOperations";
  }

  // Returns the specified TargetTcpProxy resource.
  rpc Get(GetTargetTcpProxyRequest) returns (TargetTcpProxy) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/global/targetTcpProxies/{target_tcp_proxy}"
    };
    option (google.api.method_signature) = "project,target_tcp_proxy";
  }

  // Creates a TargetTcpProxy resource in the specified project using the data included in the request.
  rpc Insert(InsertTargetTcpProxyRequest) returns (Operation) {
    option (google.api.http) = {
      body: "target_tcp_proxy_resource"
      post: "/compute/v1/projects/{project}/global/targetTcpProxies"
    };
    option (google.api.method_signature) = "project,target_tcp_proxy_resource";
    option (google.cloud.operation_service) = "GlobalOperations";
  }

  // Retrieves the list of TargetTcpProxy resources available to the specified project.
  rpc List(ListTargetTcpProxiesRequest) returns (TargetTcpProxyList) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/global/targetTcpProxies"
    };
    option (google.api.method_signature) = "project";
  }

  // Changes the BackendService for TargetTcpProxy.
  rpc SetBackendService(SetBackendServiceTargetTcpProxyRequest) returns (Operation) {
    option (google.api.http) = {
      body: "target_tcp_proxies_set_backend_service_request_resource"
      post: "/compute/v1/projects/{project}/global/targetTcpProxies/{target_tcp_proxy}/setBackendService"
    };
    option (google.api.method_signature) = "project,target_tcp_proxy,target_tcp_proxies_set_backend_service_request_resource";
    option (google.cloud.operation_service) = "GlobalOperations";
  }

  // Changes the ProxyHeaderType for TargetTcpProxy.
  rpc SetProxyHeader(SetProxyHeaderTargetTcpProxyRequest) returns (Operation) {
    option (google.api.http) = {
      body: "target_tcp_proxies_set_proxy_header_request_resource"
      post: "/compute/v1/projects/{project}/global/targetTcpProxies/{target_tcp_proxy}/setProxyHeader"
    };
    option (google.api.method_signature) = "project,target_tcp_proxy,target_tcp_proxies_set_proxy_header_request_resource";
    option (google.cloud.operation_service) = "GlobalOperations";
  }

}

// The TargetVpnGateways API.
service TargetVpnGateways {
  option (google.api.default_host) =
    "compute.googleapis.com";

  option (google.api.oauth_scopes) =
    "https://www.googleapis.com/auth/compute,"
    "https://www.googleapis.com/auth/cloud-platform";

  // Retrieves an aggregated list of target VPN gateways.
  rpc AggregatedList(AggregatedListTargetVpnGatewaysRequest) returns (TargetVpnGatewayAggregatedList) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/aggregated/targetVpnGateways"
    };
    option (google.api.method_signature) = "project";
  }

  // Deletes the specified target VPN gateway.
  rpc Delete(DeleteTargetVpnGatewayRequest) returns (Operation) {
    option (google.api.http) = {
      delete: "/compute/v1/projects/{project}/regions/{region}/targetVpnGateways/{target_vpn_gateway}"
    };
    option (google.api.method_signature) = "project,region,target_vpn_gateway";
    option (google.cloud.operation_service) = "RegionOperations";
  }

  // Returns the specified target VPN gateway.
  rpc Get(GetTargetVpnGatewayRequest) returns (TargetVpnGateway) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/regions/{region}/targetVpnGateways/{target_vpn_gateway}"
    };
    option (google.api.method_signature) = "project,region,target_vpn_gateway";
  }

  // Creates a target VPN gateway in the specified project and region using the data included in the request.
  rpc Insert(InsertTargetVpnGatewayRequest) returns (Operation) {
    option (google.api.http) = {
      body: "target_vpn_gateway_resource"
      post: "/compute/v1/projects/{project}/regions/{region}/targetVpnGateways"
    };
    option (google.api.method_signature) = "project,region,target_vpn_gateway_resource";
    option (google.cloud.operation_service) = "RegionOperations";
  }

  // Retrieves a list of target VPN gateways available to the specified project and region.
  rpc List(ListTargetVpnGatewaysRequest) returns (TargetVpnGatewayList) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/regions/{region}/targetVpnGateways"
    };
    option (google.api.method_signature) = "project,region";
  }

  // Sets the labels on a TargetVpnGateway. To learn more about labels, read the Labeling Resources documentation.
  rpc SetLabels(SetLabelsTargetVpnGatewayRequest) returns (Operation) {
    option (google.api.http) = {
      body: "region_set_labels_request_resource"
      post: "/compute/v1/projects/{project}/regions/{region}/targetVpnGateways/{resource}/setLabels"
    };
    option (google.api.method_signature) = "project,region,resource,region_set_labels_request_resource";
    option (google.cloud.operation_service) = "RegionOperations";
  }

}

// The UrlMaps API.
service UrlMaps {
  option (google.api.default_host) =
    "compute.googleapis.com";

  option (google.api.oauth_scopes) =
    "https://www.googleapis.com/auth/compute,"
    "https://www.googleapis.com/auth/cloud-platform";

  // Retrieves the list of all UrlMap resources, regional and global, available to the specified project.
  rpc AggregatedList(AggregatedListUrlMapsRequest) returns (UrlMapsAggregatedList) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/aggregated/urlMaps"
    };
    option (google.api.method_signature) = "project";
  }

  // Deletes the specified UrlMap resource.
  rpc Delete(DeleteUrlMapRequest) returns (Operation) {
    option (google.api.http) = {
      delete: "/compute/v1/projects/{project}/global/urlMaps/{url_map}"
    };
    option (google.api.method_signature) = "project,url_map";
    option (google.cloud.operation_service) = "GlobalOperations";
  }

  // Returns the specified UrlMap resource.
  rpc Get(GetUrlMapRequest) returns (UrlMap) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/global/urlMaps/{url_map}"
    };
    option (google.api.method_signature) = "project,url_map";
  }

  // Creates a UrlMap resource in the specified project using the data included in the request.
  rpc Insert(InsertUrlMapRequest) returns (Operation) {
    option (google.api.http) = {
      body: "url_map_resource"
      post: "/compute/v1/projects/{project}/global/urlMaps"
    };
    option (google.api.method_signature) = "project,url_map_resource";
    option (google.cloud.operation_service) = "GlobalOperations";
  }

  // Initiates a cache invalidation operation, invalidating the specified path, scoped to the specified UrlMap. For more information, see [Invalidating cached content](/cdn/docs/invalidating-cached-content).
  rpc InvalidateCache(InvalidateCacheUrlMapRequest) returns (Operation) {
    option (google.api.http) = {
      body: "cache_invalidation_rule_resource"
      post: "/compute/v1/projects/{project}/global/urlMaps/{url_map}/invalidateCache"
    };
    option (google.api.method_signature) = "project,url_map,cache_invalidation_rule_resource";
    option (google.cloud.operation_service) = "GlobalOperations";
  }

  // Retrieves the list of UrlMap resources available to the specified project.
  rpc List(ListUrlMapsRequest) returns (UrlMapList) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/global/urlMaps"
    };
    option (google.api.method_signature) = "project";
  }

  // Patches the specified UrlMap resource with the data included in the request. This method supports PATCH semantics and uses the JSON merge patch format and processing rules.
  rpc Patch(PatchUrlMapRequest) returns (Operation) {
    option (google.api.http) = {
      body: "url_map_resource"
      patch: "/compute/v1/projects/{project}/global/urlMaps/{url_map}"
    };
    option (google.api.method_signature) = "project,url_map,url_map_resource";
    option (google.cloud.operation_service) = "GlobalOperations";
  }

  // Updates the specified UrlMap resource with the data included in the request.
  rpc Update(UpdateUrlMapRequest) returns (Operation) {
    option (google.api.http) = {
      body: "url_map_resource"
      put: "/compute/v1/projects/{project}/global/urlMaps/{url_map}"
    };
    option (google.api.method_signature) = "project,url_map,url_map_resource";
    option (google.cloud.operation_service) = "GlobalOperations";
  }

  // Runs static validation for the UrlMap. In particular, the tests of the provided UrlMap will be run. Calling this method does NOT create the UrlMap.
  rpc Validate(ValidateUrlMapRequest) returns (UrlMapsValidateResponse) {
    option (google.api.http) = {
      body: "url_maps_validate_request_resource"
      post: "/compute/v1/projects/{project}/global/urlMaps/{url_map}/validate"
    };
    option (google.api.method_signature) = "project,url_map,url_maps_validate_request_resource";
  }

}

// The VpnGateways API.
service VpnGateways {
  option (google.api.default_host) =
    "compute.googleapis.com";

  option (google.api.oauth_scopes) =
    "https://www.googleapis.com/auth/compute,"
    "https://www.googleapis.com/auth/cloud-platform";

  // Retrieves an aggregated list of VPN gateways.
  rpc AggregatedList(AggregatedListVpnGatewaysRequest) returns (VpnGatewayAggregatedList) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/aggregated/vpnGateways"
    };
    option (google.api.method_signature) = "project";
  }

  // Deletes the specified VPN gateway.
  rpc Delete(DeleteVpnGatewayRequest) returns (Operation) {
    option (google.api.http) = {
      delete: "/compute/v1/projects/{project}/regions/{region}/vpnGateways/{vpn_gateway}"
    };
    option (google.api.method_signature) = "project,region,vpn_gateway";
    option (google.cloud.operation_service) = "RegionOperations";
  }

  // Returns the specified VPN gateway.
  rpc Get(GetVpnGatewayRequest) returns (VpnGateway) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/regions/{region}/vpnGateways/{vpn_gateway}"
    };
    option (google.api.method_signature) = "project,region,vpn_gateway";
  }

  // Returns the status for the specified VPN gateway.
  rpc GetStatus(GetStatusVpnGatewayRequest) returns (VpnGatewaysGetStatusResponse) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/regions/{region}/vpnGateways/{vpn_gateway}/getStatus"
    };
    option (google.api.method_signature) = "project,region,vpn_gateway";
  }

  // Creates a VPN gateway in the specified project and region using the data included in the request.
  rpc Insert(InsertVpnGatewayRequest) returns (Operation) {
    option (google.api.http) = {
      body: "vpn_gateway_resource"
      post: "/compute/v1/projects/{project}/regions/{region}/vpnGateways"
    };
    option (google.api.method_signature) = "project,region,vpn_gateway_resource";
    option (google.cloud.operation_service) = "RegionOperations";
  }

  // Retrieves a list of VPN gateways available to the specified project and region.
  rpc List(ListVpnGatewaysRequest) returns (VpnGatewayList) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/regions/{region}/vpnGateways"
    };
    option (google.api.method_signature) = "project,region";
  }

  // Sets the labels on a VpnGateway. To learn more about labels, read the Labeling Resources documentation.
  rpc SetLabels(SetLabelsVpnGatewayRequest) returns (Operation) {
    option (google.api.http) = {
      body: "region_set_labels_request_resource"
      post: "/compute/v1/projects/{project}/regions/{region}/vpnGateways/{resource}/setLabels"
    };
    option (google.api.method_signature) = "project,region,resource,region_set_labels_request_resource";
    option (google.cloud.operation_service) = "RegionOperations";
  }

  // Returns permissions that a caller has on the specified resource.
  rpc TestIamPermissions(TestIamPermissionsVpnGatewayRequest) returns (TestPermissionsResponse) {
    option (google.api.http) = {
      body: "test_permissions_request_resource"
      post: "/compute/v1/projects/{project}/regions/{region}/vpnGateways/{resource}/testIamPermissions"
    };
    option (google.api.method_signature) = "project,region,resource,test_permissions_request_resource";
  }

}

// The VpnTunnels API.
service VpnTunnels {
  option (google.api.default_host) =
    "compute.googleapis.com";

  option (google.api.oauth_scopes) =
    "https://www.googleapis.com/auth/compute,"
    "https://www.googleapis.com/auth/cloud-platform";

  // Retrieves an aggregated list of VPN tunnels.
  rpc AggregatedList(AggregatedListVpnTunnelsRequest) returns (VpnTunnelAggregatedList) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/aggregated/vpnTunnels"
    };
    option (google.api.method_signature) = "project";
  }

  // Deletes the specified VpnTunnel resource.
  rpc Delete(DeleteVpnTunnelRequest) returns (Operation) {
    option (google.api.http) = {
      delete: "/compute/v1/projects/{project}/regions/{region}/vpnTunnels/{vpn_tunnel}"
    };
    option (google.api.method_signature) = "project,region,vpn_tunnel";
    option (google.cloud.operation_service) = "RegionOperations";
  }

  // Returns the specified VpnTunnel resource.
  rpc Get(GetVpnTunnelRequest) returns (VpnTunnel) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/regions/{region}/vpnTunnels/{vpn_tunnel}"
    };
    option (google.api.method_signature) = "project,region,vpn_tunnel";
  }

  // Creates a VpnTunnel resource in the specified project and region using the data included in the request.
  rpc Insert(InsertVpnTunnelRequest) returns (Operation) {
    option (google.api.http) = {
      body: "vpn_tunnel_resource"
      post: "/compute/v1/projects/{project}/regions/{region}/vpnTunnels"
    };
    option (google.api.method_signature) = "project,region,vpn_tunnel_resource";
    option (google.cloud.operation_service) = "RegionOperations";
  }

  // Retrieves a list of VpnTunnel resources contained in the specified project and region.
  rpc List(ListVpnTunnelsRequest) returns (VpnTunnelList) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/regions/{region}/vpnTunnels"
    };
    option (google.api.method_signature) = "project,region";
  }

  // Sets the labels on a VpnTunnel. To learn more about labels, read the Labeling Resources documentation.
  rpc SetLabels(SetLabelsVpnTunnelRequest) returns (Operation) {
    option (google.api.http) = {
      body: "region_set_labels_request_resource"
      post: "/compute/v1/projects/{project}/regions/{region}/vpnTunnels/{resource}/setLabels"
    };
    option (google.api.method_signature) = "project,region,resource,region_set_labels_request_resource";
    option (google.cloud.operation_service) = "RegionOperations";
  }

}

// The ZoneOperations API.
service ZoneOperations {
  option (google.api.default_host) =
    "compute.googleapis.com";

  option (google.api.oauth_scopes) =
    "https://www.googleapis.com/auth/compute,"
    "https://www.googleapis.com/auth/cloud-platform";

  // Deletes the specified zone-specific Operations resource.
  rpc Delete(DeleteZoneOperationRequest) returns (DeleteZoneOperationResponse) {
    option (google.api.http) = {
      delete: "/compute/v1/projects/{project}/zones/{zone}/operations/{operation}"
    };
    option (google.api.method_signature) = "project,zone,operation";
  }

  // Retrieves the specified zone-specific Operations resource.
  rpc Get(GetZoneOperationRequest) returns (Operation) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/zones/{zone}/operations/{operation}"
    };
    option (google.api.method_signature) = "project,zone,operation";
    option (google.cloud.operation_polling_method) = true;
  }

  // Retrieves a list of Operation resources contained within the specified zone.
  rpc List(ListZoneOperationsRequest) returns (OperationList) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/zones/{zone}/operations"
    };
    option (google.api.method_signature) = "project,zone";
  }

  // Waits for the specified Operation resource to return as `DONE` or for the request to approach the 2 minute deadline, and retrieves the specified Operation resource. This method waits for no more than the 2 minutes and then returns the current state of the operation, which might be `DONE` or still in progress. This method is called on a best-effort basis. Specifically: - In uncommon cases, when the server is overloaded, the request might return before the default deadline is reached, or might return after zero seconds. - If the default deadline is reached, there is no guarantee that the operation is actually done when the method returns. Be prepared to retry if the operation is not `DONE`. 
  rpc Wait(WaitZoneOperationRequest) returns (Operation) {
    option (google.api.http) = {
      post: "/compute/v1/projects/{project}/zones/{zone}/operations/{operation}/wait"
    };
    option (google.api.method_signature) = "project,zone,operation";
  }

}

// The Zones API.
service Zones {
  option (google.api.default_host) =
    "compute.googleapis.com";

  option (google.api.oauth_scopes) =
    "https://www.googleapis.com/auth/compute.readonly,"
    "https://www.googleapis.com/auth/compute,"
    "https://www.googleapis.com/auth/cloud-platform";

  // Returns the specified Zone resource.
  rpc Get(GetZoneRequest) returns (Zone) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/zones/{zone}"
    };
    option (google.api.method_signature) = "project,zone";
  }

  // Retrieves the list of Zone resources available to the specified project.
  rpc List(ListZonesRequest) returns (ZoneList) {
    option (google.api.http) = {
      get: "/compute/v1/projects/{project}/zones"
    };
    option (google.api.method_signature) = "project";
  }

}


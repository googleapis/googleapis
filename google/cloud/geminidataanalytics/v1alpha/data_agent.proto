// Copyright 2025 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package google.cloud.geminidataanalytics.v1alpha;

import "google/api/field_behavior.proto";
import "google/api/resource.proto";
import "google/cloud/geminidataanalytics/v1alpha/data_analytics_agent.proto";
import "google/protobuf/timestamp.proto";

option csharp_namespace = "Google.Cloud.GeminiDataAnalytics.V1Alpha";
option go_package = "cloud.google.com/go/geminidataanalytics/apiv1alpha/geminidataanalyticspb;geminidataanalyticspb";
option java_multiple_files = true;
option java_outer_classname = "DataAgentProto";
option java_package = "com.google.cloud.geminidataanalytics.v1alpha";
option php_namespace = "Google\\Cloud\\GeminiDataAnalytics\\V1alpha";
option ruby_package = "Google::Cloud::GeminiDataAnalytics::V1alpha";

// Message describing a DataAgent object.
message DataAgent {
  option (google.api.resource) = {
    type: "geminidataanalytics.googleapis.com/DataAgent"
    pattern: "projects/{project}/locations/{location}/dataAgents/{data_agent}"
    plural: "dataAgents"
    singular: "dataAgent"
  };

  // The type of the agent. Can be one of the following:
  // * Data analytics agent.
  // * Data engineering agent
  oneof type {
    // Data analytics agent.
    DataAnalyticsAgent data_analytics_agent = 101;
  }

  // Optional. Identifier. The unique resource name of a Agent.
  // Format:
  // `projects/{project}/locations/{location}/dataAgents/{data_agent_id}`
  // `{data_agent}` is the resource id and should be 63 characters or less and
  // must match the format described in
  // https://google.aip.dev/122#resource-id-segments
  //
  // Example: `projects/1234567890/locations/us-central1/dataAgents/my-agent`.
  string name = 1 [
    (google.api.field_behavior) = OPTIONAL,
    (google.api.field_behavior) = IDENTIFIER
  ];

  // Optional. User friendly display name.
  //
  // * Must be between 1-256 characters.
  string display_name = 3 [(google.api.field_behavior) = OPTIONAL];

  // Optional. Description of the agent.
  //
  // * Must be between 1-1024 characters.
  string description = 4 [(google.api.field_behavior) = OPTIONAL];

  // Optional. Labels to help users filter related agents.
  // E.g. "sales", "business", "etl", etc.
  // Note labels are only used for filtering and not for policies.
  // See https://cloud.google.com/resource-manager/docs/labels-overview for more
  // details on label usage.
  map<string, string> labels = 5 [(google.api.field_behavior) = OPTIONAL];

  // Output only. The time when the data agent was created.
  google.protobuf.Timestamp create_time = 7
      [(google.api.field_behavior) = OUTPUT_ONLY];

  // Output only. The time when the data agent was last updated.
  google.protobuf.Timestamp update_time = 8
      [(google.api.field_behavior) = OUTPUT_ONLY];

  // Output only. [Output only] The time the data agent was soft deleted.
  google.protobuf.Timestamp delete_time = 12
      [(google.api.field_behavior) = OUTPUT_ONLY];

  // Output only. Timestamp in UTC of when this data agent is considered
  // expired. This is *always* provided on output, regardless of what was sent
  // on input.
  google.protobuf.Timestamp purge_time = 13
      [(google.api.field_behavior) = OUTPUT_ONLY];
}

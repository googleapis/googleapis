// Copyright 2023 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package google.ads.googleads.v14.services;

import "google/ads/googleads/v14/enums/response_content_type.proto";
import "google/ads/googleads/v14/resources/campaign.proto";
import "google/api/annotations.proto";
import "google/api/client.proto";
import "google/api/field_behavior.proto";
import "google/api/resource.proto";
import "google/protobuf/field_mask.proto";
import "google/rpc/status.proto";

option csharp_namespace = "Google.Ads.GoogleAds.V14.Services";
option go_package = "google.golang.org/genproto/googleapis/ads/googleads/v14/services;services";
option java_multiple_files = true;
option java_outer_classname = "CampaignServiceProto";
option java_package = "com.google.ads.googleads.v14.services";
option objc_class_prefix = "GAA";
option php_namespace = "Google\\Ads\\GoogleAds\\V14\\Services";
option ruby_package = "Google::Ads::GoogleAds::V14::Services";

// Proto file describing the Campaign service.

// Service to manage campaigns.
service CampaignService {
  option (google.api.default_host) = "googleads.googleapis.com";
  option (google.api.oauth_scopes) = "https://www.googleapis.com/auth/adwords";

  // Creates, updates, or removes campaigns. Operation statuses are returned.
  //
  // List of thrown errors:
  //   [AdxError]()
  //   [AuthenticationError]()
  //   [AuthorizationError]()
  //   [BiddingError]()
  //   [BiddingStrategyError]()
  //   [CampaignBudgetError]()
  //   [CampaignError]()
  //   [ContextError]()
  //   [DatabaseError]()
  //   [DateError]()
  //   [DateRangeError]()
  //   [DistinctError]()
  //   [FieldError]()
  //   [FieldMaskError]()
  //   [HeaderError]()
  //   [IdError]()
  //   [InternalError]()
  //   [ListOperationError]()
  //   [MutateError]()
  //   [NewResourceCreationError]()
  //   [NotAllowlistedError]()
  //   [NotEmptyError]()
  //   [NullError]()
  //   [OperationAccessDeniedError]()
  //   [OperatorError]()
  //   [QuotaError]()
  //   [RangeError]()
  //   [RegionCodeError]()
  //   [RequestError]()
  //   [ResourceCountLimitExceededError]()
  //   [SettingError]()
  //   [SizeLimitError]()
  //   [StringFormatError]()
  //   [StringLengthError]()
  //   [UrlFieldError]()
  rpc MutateCampaigns(MutateCampaignsRequest)
      returns (MutateCampaignsResponse) {
    option (google.api.http) = {
      post: "/v14/customers/{customer_id=*}/campaigns:mutate"
      body: "*"
    };
    option (google.api.method_signature) = "customer_id,operations";
  }
}

// Request message for
// [CampaignService.MutateCampaigns][google.ads.googleads.v14.services.CampaignService.MutateCampaigns].
message MutateCampaignsRequest {
  // Required. The ID of the customer whose campaigns are being modified.
  string customer_id = 1 [(google.api.field_behavior) = REQUIRED];

  // Required. The list of operations to perform on individual campaigns.
  repeated CampaignOperation operations = 2
      [(google.api.field_behavior) = REQUIRED];

  // If true, successful operations will be carried out and invalid
  // operations will return errors. If false, all operations will be carried
  // out in one transaction if and only if they are all valid.
  // Default is false.
  bool partial_failure = 3;

  // If true, the request is validated but not executed. Only errors are
  // returned, not results.
  bool validate_only = 4;

  // The response content type setting. Determines whether the mutable resource
  // or just the resource name should be returned post mutation.
  google.ads.googleads.v14.enums.ResponseContentTypeEnum.ResponseContentType
      response_content_type = 5;
}

// A single operation (create, update, remove) on a campaign.
message CampaignOperation {
  // FieldMask that determines which resource fields are modified in an update.
  google.protobuf.FieldMask update_mask = 4;

  // The mutate operation.
  oneof operation {
    // Create operation: No resource name is expected for the new campaign.
    google.ads.googleads.v14.resources.Campaign create = 1;

    // Update operation: The campaign is expected to have a valid
    // resource name.
    google.ads.googleads.v14.resources.Campaign update = 2;

    // Remove operation: A resource name for the removed campaign is
    // expected, in this format:
    //
    // `customers/{customer_id}/campaigns/{campaign_id}`
    string remove = 3 [(google.api.resource_reference) = {
      type: "googleads.googleapis.com/Campaign"
    }];
  }
}

// Response message for campaign mutate.
message MutateCampaignsResponse {
  // Errors that pertain to operation failures in the partial failure mode.
  // Returned only when partial_failure = true and all errors occur inside the
  // operations. If any errors occur outside the operations (for example, auth
  // errors), we return an RPC level error.
  google.rpc.Status partial_failure_error = 3;

  // All results for the mutate.
  repeated MutateCampaignResult results = 2;
}

// The result for the campaign mutate.
message MutateCampaignResult {
  // Returned for successful operations.
  string resource_name = 1 [(google.api.resource_reference) = {
    type: "googleads.googleapis.com/Campaign"
  }];

  // The mutated campaign with only mutable fields after mutate. The field will
  // only be returned when response_content_type is set to "MUTABLE_RESOURCE".
  google.ads.googleads.v14.resources.Campaign campaign = 2;
}

// Copyright 2025 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/*eslint-disable block-scoped-var, id-length, no-control-regex, no-magic-numbers, no-prototype-builtins, no-redeclare, no-shadow, no-var, sort-vars*/
(function(global, factory) { /* global define, require, module */

    /* AMD */ if (typeof define === 'function' && define.amd)
        define(["protobufjs/minimal"], factory);

    /* CommonJS */ else if (typeof require === 'function' && typeof module === 'object' && module && module.exports)
        module.exports = factory(require("google-gax/build/src/protobuf").protobufMinimal);

})(this, function($protobuf) {
    "use strict";

    // Common aliases
    var $Reader = $protobuf.Reader, $Writer = $protobuf.Writer, $util = $protobuf.util;
    
    // Exported root namespace
    var $root = $protobuf.roots._google_cloud_speech_protos || ($protobuf.roots._google_cloud_speech_protos = {});
    
    $root.google = (function() {
    
        /**
         * Namespace google.
         * @exports google
         * @namespace
         */
        var google = {};
    
        google.cloud = (function() {
    
            /**
             * Namespace cloud.
             * @memberof google
             * @namespace
             */
            var cloud = {};
    
            cloud.speech = (function() {
    
                /**
                 * Namespace speech.
                 * @memberof google.cloud
                 * @namespace
                 */
                var speech = {};
    
                speech.v2 = (function() {
    
                    /**
                     * Namespace v2.
                     * @memberof google.cloud.speech
                     * @namespace
                     */
                    var v2 = {};
    
                    v2.Speech = (function() {
    
                        /**
                         * Constructs a new Speech service.
                         * @memberof google.cloud.speech.v2
                         * @classdesc Represents a Speech
                         * @extends $protobuf.rpc.Service
                         * @constructor
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         */
                        function Speech(rpcImpl, requestDelimited, responseDelimited) {
                            $protobuf.rpc.Service.call(this, rpcImpl, requestDelimited, responseDelimited);
                        }
    
                        (Speech.prototype = Object.create($protobuf.rpc.Service.prototype)).constructor = Speech;
    
                        /**
                         * Creates new Speech service using the specified rpc implementation.
                         * @function create
                         * @memberof google.cloud.speech.v2.Speech
                         * @static
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         * @returns {Speech} RPC service. Useful where requests and/or responses are streamed.
                         */
                        Speech.create = function create(rpcImpl, requestDelimited, responseDelimited) {
                            return new this(rpcImpl, requestDelimited, responseDelimited);
                        };
    
                        /**
                         * Callback as used by {@link google.cloud.speech.v2.Speech|createRecognizer}.
                         * @memberof google.cloud.speech.v2.Speech
                         * @typedef CreateRecognizerCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls CreateRecognizer.
                         * @function createRecognizer
                         * @memberof google.cloud.speech.v2.Speech
                         * @instance
                         * @param {google.cloud.speech.v2.ICreateRecognizerRequest} request CreateRecognizerRequest message or plain object
                         * @param {google.cloud.speech.v2.Speech.CreateRecognizerCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(Speech.prototype.createRecognizer = function createRecognizer(request, callback) {
                            return this.rpcCall(createRecognizer, $root.google.cloud.speech.v2.CreateRecognizerRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "CreateRecognizer" });
    
                        /**
                         * Calls CreateRecognizer.
                         * @function createRecognizer
                         * @memberof google.cloud.speech.v2.Speech
                         * @instance
                         * @param {google.cloud.speech.v2.ICreateRecognizerRequest} request CreateRecognizerRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.speech.v2.Speech|listRecognizers}.
                         * @memberof google.cloud.speech.v2.Speech
                         * @typedef ListRecognizersCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.speech.v2.ListRecognizersResponse} [response] ListRecognizersResponse
                         */
    
                        /**
                         * Calls ListRecognizers.
                         * @function listRecognizers
                         * @memberof google.cloud.speech.v2.Speech
                         * @instance
                         * @param {google.cloud.speech.v2.IListRecognizersRequest} request ListRecognizersRequest message or plain object
                         * @param {google.cloud.speech.v2.Speech.ListRecognizersCallback} callback Node-style callback called with the error, if any, and ListRecognizersResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(Speech.prototype.listRecognizers = function listRecognizers(request, callback) {
                            return this.rpcCall(listRecognizers, $root.google.cloud.speech.v2.ListRecognizersRequest, $root.google.cloud.speech.v2.ListRecognizersResponse, request, callback);
                        }, "name", { value: "ListRecognizers" });
    
                        /**
                         * Calls ListRecognizers.
                         * @function listRecognizers
                         * @memberof google.cloud.speech.v2.Speech
                         * @instance
                         * @param {google.cloud.speech.v2.IListRecognizersRequest} request ListRecognizersRequest message or plain object
                         * @returns {Promise<google.cloud.speech.v2.ListRecognizersResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.speech.v2.Speech|getRecognizer}.
                         * @memberof google.cloud.speech.v2.Speech
                         * @typedef GetRecognizerCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.speech.v2.Recognizer} [response] Recognizer
                         */
    
                        /**
                         * Calls GetRecognizer.
                         * @function getRecognizer
                         * @memberof google.cloud.speech.v2.Speech
                         * @instance
                         * @param {google.cloud.speech.v2.IGetRecognizerRequest} request GetRecognizerRequest message or plain object
                         * @param {google.cloud.speech.v2.Speech.GetRecognizerCallback} callback Node-style callback called with the error, if any, and Recognizer
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(Speech.prototype.getRecognizer = function getRecognizer(request, callback) {
                            return this.rpcCall(getRecognizer, $root.google.cloud.speech.v2.GetRecognizerRequest, $root.google.cloud.speech.v2.Recognizer, request, callback);
                        }, "name", { value: "GetRecognizer" });
    
                        /**
                         * Calls GetRecognizer.
                         * @function getRecognizer
                         * @memberof google.cloud.speech.v2.Speech
                         * @instance
                         * @param {google.cloud.speech.v2.IGetRecognizerRequest} request GetRecognizerRequest message or plain object
                         * @returns {Promise<google.cloud.speech.v2.Recognizer>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.speech.v2.Speech|updateRecognizer}.
                         * @memberof google.cloud.speech.v2.Speech
                         * @typedef UpdateRecognizerCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls UpdateRecognizer.
                         * @function updateRecognizer
                         * @memberof google.cloud.speech.v2.Speech
                         * @instance
                         * @param {google.cloud.speech.v2.IUpdateRecognizerRequest} request UpdateRecognizerRequest message or plain object
                         * @param {google.cloud.speech.v2.Speech.UpdateRecognizerCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(Speech.prototype.updateRecognizer = function updateRecognizer(request, callback) {
                            return this.rpcCall(updateRecognizer, $root.google.cloud.speech.v2.UpdateRecognizerRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "UpdateRecognizer" });
    
                        /**
                         * Calls UpdateRecognizer.
                         * @function updateRecognizer
                         * @memberof google.cloud.speech.v2.Speech
                         * @instance
                         * @param {google.cloud.speech.v2.IUpdateRecognizerRequest} request UpdateRecognizerRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.speech.v2.Speech|deleteRecognizer}.
                         * @memberof google.cloud.speech.v2.Speech
                         * @typedef DeleteRecognizerCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls DeleteRecognizer.
                         * @function deleteRecognizer
                         * @memberof google.cloud.speech.v2.Speech
                         * @instance
                         * @param {google.cloud.speech.v2.IDeleteRecognizerRequest} request DeleteRecognizerRequest message or plain object
                         * @param {google.cloud.speech.v2.Speech.DeleteRecognizerCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(Speech.prototype.deleteRecognizer = function deleteRecognizer(request, callback) {
                            return this.rpcCall(deleteRecognizer, $root.google.cloud.speech.v2.DeleteRecognizerRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "DeleteRecognizer" });
    
                        /**
                         * Calls DeleteRecognizer.
                         * @function deleteRecognizer
                         * @memberof google.cloud.speech.v2.Speech
                         * @instance
                         * @param {google.cloud.speech.v2.IDeleteRecognizerRequest} request DeleteRecognizerRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.speech.v2.Speech|undeleteRecognizer}.
                         * @memberof google.cloud.speech.v2.Speech
                         * @typedef UndeleteRecognizerCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls UndeleteRecognizer.
                         * @function undeleteRecognizer
                         * @memberof google.cloud.speech.v2.Speech
                         * @instance
                         * @param {google.cloud.speech.v2.IUndeleteRecognizerRequest} request UndeleteRecognizerRequest message or plain object
                         * @param {google.cloud.speech.v2.Speech.UndeleteRecognizerCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(Speech.prototype.undeleteRecognizer = function undeleteRecognizer(request, callback) {
                            return this.rpcCall(undeleteRecognizer, $root.google.cloud.speech.v2.UndeleteRecognizerRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "UndeleteRecognizer" });
    
                        /**
                         * Calls UndeleteRecognizer.
                         * @function undeleteRecognizer
                         * @memberof google.cloud.speech.v2.Speech
                         * @instance
                         * @param {google.cloud.speech.v2.IUndeleteRecognizerRequest} request UndeleteRecognizerRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.speech.v2.Speech|recognize}.
                         * @memberof google.cloud.speech.v2.Speech
                         * @typedef RecognizeCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.speech.v2.RecognizeResponse} [response] RecognizeResponse
                         */
    
                        /**
                         * Calls Recognize.
                         * @function recognize
                         * @memberof google.cloud.speech.v2.Speech
                         * @instance
                         * @param {google.cloud.speech.v2.IRecognizeRequest} request RecognizeRequest message or plain object
                         * @param {google.cloud.speech.v2.Speech.RecognizeCallback} callback Node-style callback called with the error, if any, and RecognizeResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(Speech.prototype.recognize = function recognize(request, callback) {
                            return this.rpcCall(recognize, $root.google.cloud.speech.v2.RecognizeRequest, $root.google.cloud.speech.v2.RecognizeResponse, request, callback);
                        }, "name", { value: "Recognize" });
    
                        /**
                         * Calls Recognize.
                         * @function recognize
                         * @memberof google.cloud.speech.v2.Speech
                         * @instance
                         * @param {google.cloud.speech.v2.IRecognizeRequest} request RecognizeRequest message or plain object
                         * @returns {Promise<google.cloud.speech.v2.RecognizeResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.speech.v2.Speech|streamingRecognize}.
                         * @memberof google.cloud.speech.v2.Speech
                         * @typedef StreamingRecognizeCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.speech.v2.StreamingRecognizeResponse} [response] StreamingRecognizeResponse
                         */
    
                        /**
                         * Calls StreamingRecognize.
                         * @function streamingRecognize
                         * @memberof google.cloud.speech.v2.Speech
                         * @instance
                         * @param {google.cloud.speech.v2.IStreamingRecognizeRequest} request StreamingRecognizeRequest message or plain object
                         * @param {google.cloud.speech.v2.Speech.StreamingRecognizeCallback} callback Node-style callback called with the error, if any, and StreamingRecognizeResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(Speech.prototype.streamingRecognize = function streamingRecognize(request, callback) {
                            return this.rpcCall(streamingRecognize, $root.google.cloud.speech.v2.StreamingRecognizeRequest, $root.google.cloud.speech.v2.StreamingRecognizeResponse, request, callback);
                        }, "name", { value: "StreamingRecognize" });
    
                        /**
                         * Calls StreamingRecognize.
                         * @function streamingRecognize
                         * @memberof google.cloud.speech.v2.Speech
                         * @instance
                         * @param {google.cloud.speech.v2.IStreamingRecognizeRequest} request StreamingRecognizeRequest message or plain object
                         * @returns {Promise<google.cloud.speech.v2.StreamingRecognizeResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.speech.v2.Speech|batchRecognize}.
                         * @memberof google.cloud.speech.v2.Speech
                         * @typedef BatchRecognizeCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls BatchRecognize.
                         * @function batchRecognize
                         * @memberof google.cloud.speech.v2.Speech
                         * @instance
                         * @param {google.cloud.speech.v2.IBatchRecognizeRequest} request BatchRecognizeRequest message or plain object
                         * @param {google.cloud.speech.v2.Speech.BatchRecognizeCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(Speech.prototype.batchRecognize = function batchRecognize(request, callback) {
                            return this.rpcCall(batchRecognize, $root.google.cloud.speech.v2.BatchRecognizeRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "BatchRecognize" });
    
                        /**
                         * Calls BatchRecognize.
                         * @function batchRecognize
                         * @memberof google.cloud.speech.v2.Speech
                         * @instance
                         * @param {google.cloud.speech.v2.IBatchRecognizeRequest} request BatchRecognizeRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.speech.v2.Speech|getConfig}.
                         * @memberof google.cloud.speech.v2.Speech
                         * @typedef GetConfigCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.speech.v2.Config} [response] Config
                         */
    
                        /**
                         * Calls GetConfig.
                         * @function getConfig
                         * @memberof google.cloud.speech.v2.Speech
                         * @instance
                         * @param {google.cloud.speech.v2.IGetConfigRequest} request GetConfigRequest message or plain object
                         * @param {google.cloud.speech.v2.Speech.GetConfigCallback} callback Node-style callback called with the error, if any, and Config
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(Speech.prototype.getConfig = function getConfig(request, callback) {
                            return this.rpcCall(getConfig, $root.google.cloud.speech.v2.GetConfigRequest, $root.google.cloud.speech.v2.Config, request, callback);
                        }, "name", { value: "GetConfig" });
    
                        /**
                         * Calls GetConfig.
                         * @function getConfig
                         * @memberof google.cloud.speech.v2.Speech
                         * @instance
                         * @param {google.cloud.speech.v2.IGetConfigRequest} request GetConfigRequest message or plain object
                         * @returns {Promise<google.cloud.speech.v2.Config>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.speech.v2.Speech|updateConfig}.
                         * @memberof google.cloud.speech.v2.Speech
                         * @typedef UpdateConfigCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.speech.v2.Config} [response] Config
                         */
    
                        /**
                         * Calls UpdateConfig.
                         * @function updateConfig
                         * @memberof google.cloud.speech.v2.Speech
                         * @instance
                         * @param {google.cloud.speech.v2.IUpdateConfigRequest} request UpdateConfigRequest message or plain object
                         * @param {google.cloud.speech.v2.Speech.UpdateConfigCallback} callback Node-style callback called with the error, if any, and Config
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(Speech.prototype.updateConfig = function updateConfig(request, callback) {
                            return this.rpcCall(updateConfig, $root.google.cloud.speech.v2.UpdateConfigRequest, $root.google.cloud.speech.v2.Config, request, callback);
                        }, "name", { value: "UpdateConfig" });
    
                        /**
                         * Calls UpdateConfig.
                         * @function updateConfig
                         * @memberof google.cloud.speech.v2.Speech
                         * @instance
                         * @param {google.cloud.speech.v2.IUpdateConfigRequest} request UpdateConfigRequest message or plain object
                         * @returns {Promise<google.cloud.speech.v2.Config>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.speech.v2.Speech|createCustomClass}.
                         * @memberof google.cloud.speech.v2.Speech
                         * @typedef CreateCustomClassCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls CreateCustomClass.
                         * @function createCustomClass
                         * @memberof google.cloud.speech.v2.Speech
                         * @instance
                         * @param {google.cloud.speech.v2.ICreateCustomClassRequest} request CreateCustomClassRequest message or plain object
                         * @param {google.cloud.speech.v2.Speech.CreateCustomClassCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(Speech.prototype.createCustomClass = function createCustomClass(request, callback) {
                            return this.rpcCall(createCustomClass, $root.google.cloud.speech.v2.CreateCustomClassRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "CreateCustomClass" });
    
                        /**
                         * Calls CreateCustomClass.
                         * @function createCustomClass
                         * @memberof google.cloud.speech.v2.Speech
                         * @instance
                         * @param {google.cloud.speech.v2.ICreateCustomClassRequest} request CreateCustomClassRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.speech.v2.Speech|listCustomClasses}.
                         * @memberof google.cloud.speech.v2.Speech
                         * @typedef ListCustomClassesCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.speech.v2.ListCustomClassesResponse} [response] ListCustomClassesResponse
                         */
    
                        /**
                         * Calls ListCustomClasses.
                         * @function listCustomClasses
                         * @memberof google.cloud.speech.v2.Speech
                         * @instance
                         * @param {google.cloud.speech.v2.IListCustomClassesRequest} request ListCustomClassesRequest message or plain object
                         * @param {google.cloud.speech.v2.Speech.ListCustomClassesCallback} callback Node-style callback called with the error, if any, and ListCustomClassesResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(Speech.prototype.listCustomClasses = function listCustomClasses(request, callback) {
                            return this.rpcCall(listCustomClasses, $root.google.cloud.speech.v2.ListCustomClassesRequest, $root.google.cloud.speech.v2.ListCustomClassesResponse, request, callback);
                        }, "name", { value: "ListCustomClasses" });
    
                        /**
                         * Calls ListCustomClasses.
                         * @function listCustomClasses
                         * @memberof google.cloud.speech.v2.Speech
                         * @instance
                         * @param {google.cloud.speech.v2.IListCustomClassesRequest} request ListCustomClassesRequest message or plain object
                         * @returns {Promise<google.cloud.speech.v2.ListCustomClassesResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.speech.v2.Speech|getCustomClass}.
                         * @memberof google.cloud.speech.v2.Speech
                         * @typedef GetCustomClassCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.speech.v2.CustomClass} [response] CustomClass
                         */
    
                        /**
                         * Calls GetCustomClass.
                         * @function getCustomClass
                         * @memberof google.cloud.speech.v2.Speech
                         * @instance
                         * @param {google.cloud.speech.v2.IGetCustomClassRequest} request GetCustomClassRequest message or plain object
                         * @param {google.cloud.speech.v2.Speech.GetCustomClassCallback} callback Node-style callback called with the error, if any, and CustomClass
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(Speech.prototype.getCustomClass = function getCustomClass(request, callback) {
                            return this.rpcCall(getCustomClass, $root.google.cloud.speech.v2.GetCustomClassRequest, $root.google.cloud.speech.v2.CustomClass, request, callback);
                        }, "name", { value: "GetCustomClass" });
    
                        /**
                         * Calls GetCustomClass.
                         * @function getCustomClass
                         * @memberof google.cloud.speech.v2.Speech
                         * @instance
                         * @param {google.cloud.speech.v2.IGetCustomClassRequest} request GetCustomClassRequest message or plain object
                         * @returns {Promise<google.cloud.speech.v2.CustomClass>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.speech.v2.Speech|updateCustomClass}.
                         * @memberof google.cloud.speech.v2.Speech
                         * @typedef UpdateCustomClassCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls UpdateCustomClass.
                         * @function updateCustomClass
                         * @memberof google.cloud.speech.v2.Speech
                         * @instance
                         * @param {google.cloud.speech.v2.IUpdateCustomClassRequest} request UpdateCustomClassRequest message or plain object
                         * @param {google.cloud.speech.v2.Speech.UpdateCustomClassCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(Speech.prototype.updateCustomClass = function updateCustomClass(request, callback) {
                            return this.rpcCall(updateCustomClass, $root.google.cloud.speech.v2.UpdateCustomClassRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "UpdateCustomClass" });
    
                        /**
                         * Calls UpdateCustomClass.
                         * @function updateCustomClass
                         * @memberof google.cloud.speech.v2.Speech
                         * @instance
                         * @param {google.cloud.speech.v2.IUpdateCustomClassRequest} request UpdateCustomClassRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.speech.v2.Speech|deleteCustomClass}.
                         * @memberof google.cloud.speech.v2.Speech
                         * @typedef DeleteCustomClassCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls DeleteCustomClass.
                         * @function deleteCustomClass
                         * @memberof google.cloud.speech.v2.Speech
                         * @instance
                         * @param {google.cloud.speech.v2.IDeleteCustomClassRequest} request DeleteCustomClassRequest message or plain object
                         * @param {google.cloud.speech.v2.Speech.DeleteCustomClassCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(Speech.prototype.deleteCustomClass = function deleteCustomClass(request, callback) {
                            return this.rpcCall(deleteCustomClass, $root.google.cloud.speech.v2.DeleteCustomClassRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "DeleteCustomClass" });
    
                        /**
                         * Calls DeleteCustomClass.
                         * @function deleteCustomClass
                         * @memberof google.cloud.speech.v2.Speech
                         * @instance
                         * @param {google.cloud.speech.v2.IDeleteCustomClassRequest} request DeleteCustomClassRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.speech.v2.Speech|undeleteCustomClass}.
                         * @memberof google.cloud.speech.v2.Speech
                         * @typedef UndeleteCustomClassCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls UndeleteCustomClass.
                         * @function undeleteCustomClass
                         * @memberof google.cloud.speech.v2.Speech
                         * @instance
                         * @param {google.cloud.speech.v2.IUndeleteCustomClassRequest} request UndeleteCustomClassRequest message or plain object
                         * @param {google.cloud.speech.v2.Speech.UndeleteCustomClassCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(Speech.prototype.undeleteCustomClass = function undeleteCustomClass(request, callback) {
                            return this.rpcCall(undeleteCustomClass, $root.google.cloud.speech.v2.UndeleteCustomClassRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "UndeleteCustomClass" });
    
                        /**
                         * Calls UndeleteCustomClass.
                         * @function undeleteCustomClass
                         * @memberof google.cloud.speech.v2.Speech
                         * @instance
                         * @param {google.cloud.speech.v2.IUndeleteCustomClassRequest} request UndeleteCustomClassRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.speech.v2.Speech|createPhraseSet}.
                         * @memberof google.cloud.speech.v2.Speech
                         * @typedef CreatePhraseSetCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls CreatePhraseSet.
                         * @function createPhraseSet
                         * @memberof google.cloud.speech.v2.Speech
                         * @instance
                         * @param {google.cloud.speech.v2.ICreatePhraseSetRequest} request CreatePhraseSetRequest message or plain object
                         * @param {google.cloud.speech.v2.Speech.CreatePhraseSetCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(Speech.prototype.createPhraseSet = function createPhraseSet(request, callback) {
                            return this.rpcCall(createPhraseSet, $root.google.cloud.speech.v2.CreatePhraseSetRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "CreatePhraseSet" });
    
                        /**
                         * Calls CreatePhraseSet.
                         * @function createPhraseSet
                         * @memberof google.cloud.speech.v2.Speech
                         * @instance
                         * @param {google.cloud.speech.v2.ICreatePhraseSetRequest} request CreatePhraseSetRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.speech.v2.Speech|listPhraseSets}.
                         * @memberof google.cloud.speech.v2.Speech
                         * @typedef ListPhraseSetsCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.speech.v2.ListPhraseSetsResponse} [response] ListPhraseSetsResponse
                         */
    
                        /**
                         * Calls ListPhraseSets.
                         * @function listPhraseSets
                         * @memberof google.cloud.speech.v2.Speech
                         * @instance
                         * @param {google.cloud.speech.v2.IListPhraseSetsRequest} request ListPhraseSetsRequest message or plain object
                         * @param {google.cloud.speech.v2.Speech.ListPhraseSetsCallback} callback Node-style callback called with the error, if any, and ListPhraseSetsResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(Speech.prototype.listPhraseSets = function listPhraseSets(request, callback) {
                            return this.rpcCall(listPhraseSets, $root.google.cloud.speech.v2.ListPhraseSetsRequest, $root.google.cloud.speech.v2.ListPhraseSetsResponse, request, callback);
                        }, "name", { value: "ListPhraseSets" });
    
                        /**
                         * Calls ListPhraseSets.
                         * @function listPhraseSets
                         * @memberof google.cloud.speech.v2.Speech
                         * @instance
                         * @param {google.cloud.speech.v2.IListPhraseSetsRequest} request ListPhraseSetsRequest message or plain object
                         * @returns {Promise<google.cloud.speech.v2.ListPhraseSetsResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.speech.v2.Speech|getPhraseSet}.
                         * @memberof google.cloud.speech.v2.Speech
                         * @typedef GetPhraseSetCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.speech.v2.PhraseSet} [response] PhraseSet
                         */
    
                        /**
                         * Calls GetPhraseSet.
                         * @function getPhraseSet
                         * @memberof google.cloud.speech.v2.Speech
                         * @instance
                         * @param {google.cloud.speech.v2.IGetPhraseSetRequest} request GetPhraseSetRequest message or plain object
                         * @param {google.cloud.speech.v2.Speech.GetPhraseSetCallback} callback Node-style callback called with the error, if any, and PhraseSet
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(Speech.prototype.getPhraseSet = function getPhraseSet(request, callback) {
                            return this.rpcCall(getPhraseSet, $root.google.cloud.speech.v2.GetPhraseSetRequest, $root.google.cloud.speech.v2.PhraseSet, request, callback);
                        }, "name", { value: "GetPhraseSet" });
    
                        /**
                         * Calls GetPhraseSet.
                         * @function getPhraseSet
                         * @memberof google.cloud.speech.v2.Speech
                         * @instance
                         * @param {google.cloud.speech.v2.IGetPhraseSetRequest} request GetPhraseSetRequest message or plain object
                         * @returns {Promise<google.cloud.speech.v2.PhraseSet>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.speech.v2.Speech|updatePhraseSet}.
                         * @memberof google.cloud.speech.v2.Speech
                         * @typedef UpdatePhraseSetCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls UpdatePhraseSet.
                         * @function updatePhraseSet
                         * @memberof google.cloud.speech.v2.Speech
                         * @instance
                         * @param {google.cloud.speech.v2.IUpdatePhraseSetRequest} request UpdatePhraseSetRequest message or plain object
                         * @param {google.cloud.speech.v2.Speech.UpdatePhraseSetCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(Speech.prototype.updatePhraseSet = function updatePhraseSet(request, callback) {
                            return this.rpcCall(updatePhraseSet, $root.google.cloud.speech.v2.UpdatePhraseSetRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "UpdatePhraseSet" });
    
                        /**
                         * Calls UpdatePhraseSet.
                         * @function updatePhraseSet
                         * @memberof google.cloud.speech.v2.Speech
                         * @instance
                         * @param {google.cloud.speech.v2.IUpdatePhraseSetRequest} request UpdatePhraseSetRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.speech.v2.Speech|deletePhraseSet}.
                         * @memberof google.cloud.speech.v2.Speech
                         * @typedef DeletePhraseSetCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls DeletePhraseSet.
                         * @function deletePhraseSet
                         * @memberof google.cloud.speech.v2.Speech
                         * @instance
                         * @param {google.cloud.speech.v2.IDeletePhraseSetRequest} request DeletePhraseSetRequest message or plain object
                         * @param {google.cloud.speech.v2.Speech.DeletePhraseSetCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(Speech.prototype.deletePhraseSet = function deletePhraseSet(request, callback) {
                            return this.rpcCall(deletePhraseSet, $root.google.cloud.speech.v2.DeletePhraseSetRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "DeletePhraseSet" });
    
                        /**
                         * Calls DeletePhraseSet.
                         * @function deletePhraseSet
                         * @memberof google.cloud.speech.v2.Speech
                         * @instance
                         * @param {google.cloud.speech.v2.IDeletePhraseSetRequest} request DeletePhraseSetRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.speech.v2.Speech|undeletePhraseSet}.
                         * @memberof google.cloud.speech.v2.Speech
                         * @typedef UndeletePhraseSetCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls UndeletePhraseSet.
                         * @function undeletePhraseSet
                         * @memberof google.cloud.speech.v2.Speech
                         * @instance
                         * @param {google.cloud.speech.v2.IUndeletePhraseSetRequest} request UndeletePhraseSetRequest message or plain object
                         * @param {google.cloud.speech.v2.Speech.UndeletePhraseSetCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(Speech.prototype.undeletePhraseSet = function undeletePhraseSet(request, callback) {
                            return this.rpcCall(undeletePhraseSet, $root.google.cloud.speech.v2.UndeletePhraseSetRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "UndeletePhraseSet" });
    
                        /**
                         * Calls UndeletePhraseSet.
                         * @function undeletePhraseSet
                         * @memberof google.cloud.speech.v2.Speech
                         * @instance
                         * @param {google.cloud.speech.v2.IUndeletePhraseSetRequest} request UndeletePhraseSetRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        return Speech;
                    })();
    
                    v2.CreateRecognizerRequest = (function() {
    
                        /**
                         * Properties of a CreateRecognizerRequest.
                         * @memberof google.cloud.speech.v2
                         * @interface ICreateRecognizerRequest
                         * @property {google.cloud.speech.v2.IRecognizer|null} [recognizer] CreateRecognizerRequest recognizer
                         * @property {boolean|null} [validateOnly] CreateRecognizerRequest validateOnly
                         * @property {string|null} [recognizerId] CreateRecognizerRequest recognizerId
                         * @property {string|null} [parent] CreateRecognizerRequest parent
                         */
    
                        /**
                         * Constructs a new CreateRecognizerRequest.
                         * @memberof google.cloud.speech.v2
                         * @classdesc Represents a CreateRecognizerRequest.
                         * @implements ICreateRecognizerRequest
                         * @constructor
                         * @param {google.cloud.speech.v2.ICreateRecognizerRequest=} [properties] Properties to set
                         */
                        function CreateRecognizerRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CreateRecognizerRequest recognizer.
                         * @member {google.cloud.speech.v2.IRecognizer|null|undefined} recognizer
                         * @memberof google.cloud.speech.v2.CreateRecognizerRequest
                         * @instance
                         */
                        CreateRecognizerRequest.prototype.recognizer = null;
    
                        /**
                         * CreateRecognizerRequest validateOnly.
                         * @member {boolean} validateOnly
                         * @memberof google.cloud.speech.v2.CreateRecognizerRequest
                         * @instance
                         */
                        CreateRecognizerRequest.prototype.validateOnly = false;
    
                        /**
                         * CreateRecognizerRequest recognizerId.
                         * @member {string} recognizerId
                         * @memberof google.cloud.speech.v2.CreateRecognizerRequest
                         * @instance
                         */
                        CreateRecognizerRequest.prototype.recognizerId = "";
    
                        /**
                         * CreateRecognizerRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.speech.v2.CreateRecognizerRequest
                         * @instance
                         */
                        CreateRecognizerRequest.prototype.parent = "";
    
                        /**
                         * Creates a new CreateRecognizerRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.speech.v2.CreateRecognizerRequest
                         * @static
                         * @param {google.cloud.speech.v2.ICreateRecognizerRequest=} [properties] Properties to set
                         * @returns {google.cloud.speech.v2.CreateRecognizerRequest} CreateRecognizerRequest instance
                         */
                        CreateRecognizerRequest.create = function create(properties) {
                            return new CreateRecognizerRequest(properties);
                        };
    
                        /**
                         * Encodes the specified CreateRecognizerRequest message. Does not implicitly {@link google.cloud.speech.v2.CreateRecognizerRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.speech.v2.CreateRecognizerRequest
                         * @static
                         * @param {google.cloud.speech.v2.ICreateRecognizerRequest} message CreateRecognizerRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateRecognizerRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.recognizer != null && Object.hasOwnProperty.call(message, "recognizer"))
                                $root.google.cloud.speech.v2.Recognizer.encode(message.recognizer, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.validateOnly != null && Object.hasOwnProperty.call(message, "validateOnly"))
                                writer.uint32(/* id 2, wireType 0 =*/16).bool(message.validateOnly);
                            if (message.recognizerId != null && Object.hasOwnProperty.call(message, "recognizerId"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.recognizerId);
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.parent);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CreateRecognizerRequest message, length delimited. Does not implicitly {@link google.cloud.speech.v2.CreateRecognizerRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.speech.v2.CreateRecognizerRequest
                         * @static
                         * @param {google.cloud.speech.v2.ICreateRecognizerRequest} message CreateRecognizerRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateRecognizerRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CreateRecognizerRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.speech.v2.CreateRecognizerRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.speech.v2.CreateRecognizerRequest} CreateRecognizerRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateRecognizerRequest.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.speech.v2.CreateRecognizerRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        message.recognizer = $root.google.cloud.speech.v2.Recognizer.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.validateOnly = reader.bool();
                                        break;
                                    }
                                case 3: {
                                        message.recognizerId = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CreateRecognizerRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.speech.v2.CreateRecognizerRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.speech.v2.CreateRecognizerRequest} CreateRecognizerRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateRecognizerRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CreateRecognizerRequest message.
                         * @function verify
                         * @memberof google.cloud.speech.v2.CreateRecognizerRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CreateRecognizerRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.recognizer != null && message.hasOwnProperty("recognizer")) {
                                var error = $root.google.cloud.speech.v2.Recognizer.verify(message.recognizer);
                                if (error)
                                    return "recognizer." + error;
                            }
                            if (message.validateOnly != null && message.hasOwnProperty("validateOnly"))
                                if (typeof message.validateOnly !== "boolean")
                                    return "validateOnly: boolean expected";
                            if (message.recognizerId != null && message.hasOwnProperty("recognizerId"))
                                if (!$util.isString(message.recognizerId))
                                    return "recognizerId: string expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a CreateRecognizerRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.speech.v2.CreateRecognizerRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.speech.v2.CreateRecognizerRequest} CreateRecognizerRequest
                         */
                        CreateRecognizerRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.speech.v2.CreateRecognizerRequest)
                                return object;
                            var message = new $root.google.cloud.speech.v2.CreateRecognizerRequest();
                            if (object.recognizer != null) {
                                if (typeof object.recognizer !== "object")
                                    throw TypeError(".google.cloud.speech.v2.CreateRecognizerRequest.recognizer: object expected");
                                message.recognizer = $root.google.cloud.speech.v2.Recognizer.fromObject(object.recognizer);
                            }
                            if (object.validateOnly != null)
                                message.validateOnly = Boolean(object.validateOnly);
                            if (object.recognizerId != null)
                                message.recognizerId = String(object.recognizerId);
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CreateRecognizerRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.speech.v2.CreateRecognizerRequest
                         * @static
                         * @param {google.cloud.speech.v2.CreateRecognizerRequest} message CreateRecognizerRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CreateRecognizerRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.recognizer = null;
                                object.validateOnly = false;
                                object.recognizerId = "";
                                object.parent = "";
                            }
                            if (message.recognizer != null && message.hasOwnProperty("recognizer"))
                                object.recognizer = $root.google.cloud.speech.v2.Recognizer.toObject(message.recognizer, options);
                            if (message.validateOnly != null && message.hasOwnProperty("validateOnly"))
                                object.validateOnly = message.validateOnly;
                            if (message.recognizerId != null && message.hasOwnProperty("recognizerId"))
                                object.recognizerId = message.recognizerId;
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            return object;
                        };
    
                        /**
                         * Converts this CreateRecognizerRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.speech.v2.CreateRecognizerRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CreateRecognizerRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for CreateRecognizerRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.speech.v2.CreateRecognizerRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        CreateRecognizerRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.speech.v2.CreateRecognizerRequest";
                        };
    
                        return CreateRecognizerRequest;
                    })();
    
                    v2.OperationMetadata = (function() {
    
                        /**
                         * Properties of an OperationMetadata.
                         * @memberof google.cloud.speech.v2
                         * @interface IOperationMetadata
                         * @property {google.protobuf.ITimestamp|null} [createTime] OperationMetadata createTime
                         * @property {google.protobuf.ITimestamp|null} [updateTime] OperationMetadata updateTime
                         * @property {string|null} [resource] OperationMetadata resource
                         * @property {string|null} [method] OperationMetadata method
                         * @property {string|null} [kmsKeyName] OperationMetadata kmsKeyName
                         * @property {string|null} [kmsKeyVersionName] OperationMetadata kmsKeyVersionName
                         * @property {google.cloud.speech.v2.IBatchRecognizeRequest|null} [batchRecognizeRequest] OperationMetadata batchRecognizeRequest
                         * @property {google.cloud.speech.v2.ICreateRecognizerRequest|null} [createRecognizerRequest] OperationMetadata createRecognizerRequest
                         * @property {google.cloud.speech.v2.IUpdateRecognizerRequest|null} [updateRecognizerRequest] OperationMetadata updateRecognizerRequest
                         * @property {google.cloud.speech.v2.IDeleteRecognizerRequest|null} [deleteRecognizerRequest] OperationMetadata deleteRecognizerRequest
                         * @property {google.cloud.speech.v2.IUndeleteRecognizerRequest|null} [undeleteRecognizerRequest] OperationMetadata undeleteRecognizerRequest
                         * @property {google.cloud.speech.v2.ICreateCustomClassRequest|null} [createCustomClassRequest] OperationMetadata createCustomClassRequest
                         * @property {google.cloud.speech.v2.IUpdateCustomClassRequest|null} [updateCustomClassRequest] OperationMetadata updateCustomClassRequest
                         * @property {google.cloud.speech.v2.IDeleteCustomClassRequest|null} [deleteCustomClassRequest] OperationMetadata deleteCustomClassRequest
                         * @property {google.cloud.speech.v2.IUndeleteCustomClassRequest|null} [undeleteCustomClassRequest] OperationMetadata undeleteCustomClassRequest
                         * @property {google.cloud.speech.v2.ICreatePhraseSetRequest|null} [createPhraseSetRequest] OperationMetadata createPhraseSetRequest
                         * @property {google.cloud.speech.v2.IUpdatePhraseSetRequest|null} [updatePhraseSetRequest] OperationMetadata updatePhraseSetRequest
                         * @property {google.cloud.speech.v2.IDeletePhraseSetRequest|null} [deletePhraseSetRequest] OperationMetadata deletePhraseSetRequest
                         * @property {google.cloud.speech.v2.IUndeletePhraseSetRequest|null} [undeletePhraseSetRequest] OperationMetadata undeletePhraseSetRequest
                         * @property {google.cloud.speech.v2.IUpdateConfigRequest|null} [updateConfigRequest] OperationMetadata updateConfigRequest
                         * @property {number|null} [progressPercent] OperationMetadata progressPercent
                         * @property {google.cloud.speech.v2.IBatchRecognizeMetadata|null} [batchRecognizeMetadata] OperationMetadata batchRecognizeMetadata
                         */
    
                        /**
                         * Constructs a new OperationMetadata.
                         * @memberof google.cloud.speech.v2
                         * @classdesc Represents an OperationMetadata.
                         * @implements IOperationMetadata
                         * @constructor
                         * @param {google.cloud.speech.v2.IOperationMetadata=} [properties] Properties to set
                         */
                        function OperationMetadata(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * OperationMetadata createTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} createTime
                         * @memberof google.cloud.speech.v2.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.createTime = null;
    
                        /**
                         * OperationMetadata updateTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} updateTime
                         * @memberof google.cloud.speech.v2.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.updateTime = null;
    
                        /**
                         * OperationMetadata resource.
                         * @member {string} resource
                         * @memberof google.cloud.speech.v2.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.resource = "";
    
                        /**
                         * OperationMetadata method.
                         * @member {string} method
                         * @memberof google.cloud.speech.v2.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.method = "";
    
                        /**
                         * OperationMetadata kmsKeyName.
                         * @member {string} kmsKeyName
                         * @memberof google.cloud.speech.v2.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.kmsKeyName = "";
    
                        /**
                         * OperationMetadata kmsKeyVersionName.
                         * @member {string} kmsKeyVersionName
                         * @memberof google.cloud.speech.v2.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.kmsKeyVersionName = "";
    
                        /**
                         * OperationMetadata batchRecognizeRequest.
                         * @member {google.cloud.speech.v2.IBatchRecognizeRequest|null|undefined} batchRecognizeRequest
                         * @memberof google.cloud.speech.v2.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.batchRecognizeRequest = null;
    
                        /**
                         * OperationMetadata createRecognizerRequest.
                         * @member {google.cloud.speech.v2.ICreateRecognizerRequest|null|undefined} createRecognizerRequest
                         * @memberof google.cloud.speech.v2.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.createRecognizerRequest = null;
    
                        /**
                         * OperationMetadata updateRecognizerRequest.
                         * @member {google.cloud.speech.v2.IUpdateRecognizerRequest|null|undefined} updateRecognizerRequest
                         * @memberof google.cloud.speech.v2.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.updateRecognizerRequest = null;
    
                        /**
                         * OperationMetadata deleteRecognizerRequest.
                         * @member {google.cloud.speech.v2.IDeleteRecognizerRequest|null|undefined} deleteRecognizerRequest
                         * @memberof google.cloud.speech.v2.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.deleteRecognizerRequest = null;
    
                        /**
                         * OperationMetadata undeleteRecognizerRequest.
                         * @member {google.cloud.speech.v2.IUndeleteRecognizerRequest|null|undefined} undeleteRecognizerRequest
                         * @memberof google.cloud.speech.v2.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.undeleteRecognizerRequest = null;
    
                        /**
                         * OperationMetadata createCustomClassRequest.
                         * @member {google.cloud.speech.v2.ICreateCustomClassRequest|null|undefined} createCustomClassRequest
                         * @memberof google.cloud.speech.v2.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.createCustomClassRequest = null;
    
                        /**
                         * OperationMetadata updateCustomClassRequest.
                         * @member {google.cloud.speech.v2.IUpdateCustomClassRequest|null|undefined} updateCustomClassRequest
                         * @memberof google.cloud.speech.v2.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.updateCustomClassRequest = null;
    
                        /**
                         * OperationMetadata deleteCustomClassRequest.
                         * @member {google.cloud.speech.v2.IDeleteCustomClassRequest|null|undefined} deleteCustomClassRequest
                         * @memberof google.cloud.speech.v2.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.deleteCustomClassRequest = null;
    
                        /**
                         * OperationMetadata undeleteCustomClassRequest.
                         * @member {google.cloud.speech.v2.IUndeleteCustomClassRequest|null|undefined} undeleteCustomClassRequest
                         * @memberof google.cloud.speech.v2.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.undeleteCustomClassRequest = null;
    
                        /**
                         * OperationMetadata createPhraseSetRequest.
                         * @member {google.cloud.speech.v2.ICreatePhraseSetRequest|null|undefined} createPhraseSetRequest
                         * @memberof google.cloud.speech.v2.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.createPhraseSetRequest = null;
    
                        /**
                         * OperationMetadata updatePhraseSetRequest.
                         * @member {google.cloud.speech.v2.IUpdatePhraseSetRequest|null|undefined} updatePhraseSetRequest
                         * @memberof google.cloud.speech.v2.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.updatePhraseSetRequest = null;
    
                        /**
                         * OperationMetadata deletePhraseSetRequest.
                         * @member {google.cloud.speech.v2.IDeletePhraseSetRequest|null|undefined} deletePhraseSetRequest
                         * @memberof google.cloud.speech.v2.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.deletePhraseSetRequest = null;
    
                        /**
                         * OperationMetadata undeletePhraseSetRequest.
                         * @member {google.cloud.speech.v2.IUndeletePhraseSetRequest|null|undefined} undeletePhraseSetRequest
                         * @memberof google.cloud.speech.v2.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.undeletePhraseSetRequest = null;
    
                        /**
                         * OperationMetadata updateConfigRequest.
                         * @member {google.cloud.speech.v2.IUpdateConfigRequest|null|undefined} updateConfigRequest
                         * @memberof google.cloud.speech.v2.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.updateConfigRequest = null;
    
                        /**
                         * OperationMetadata progressPercent.
                         * @member {number} progressPercent
                         * @memberof google.cloud.speech.v2.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.progressPercent = 0;
    
                        /**
                         * OperationMetadata batchRecognizeMetadata.
                         * @member {google.cloud.speech.v2.IBatchRecognizeMetadata|null|undefined} batchRecognizeMetadata
                         * @memberof google.cloud.speech.v2.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.batchRecognizeMetadata = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * OperationMetadata request.
                         * @member {"batchRecognizeRequest"|"createRecognizerRequest"|"updateRecognizerRequest"|"deleteRecognizerRequest"|"undeleteRecognizerRequest"|"createCustomClassRequest"|"updateCustomClassRequest"|"deleteCustomClassRequest"|"undeleteCustomClassRequest"|"createPhraseSetRequest"|"updatePhraseSetRequest"|"deletePhraseSetRequest"|"undeletePhraseSetRequest"|"updateConfigRequest"|undefined} request
                         * @memberof google.cloud.speech.v2.OperationMetadata
                         * @instance
                         */
                        Object.defineProperty(OperationMetadata.prototype, "request", {
                            get: $util.oneOfGetter($oneOfFields = ["batchRecognizeRequest", "createRecognizerRequest", "updateRecognizerRequest", "deleteRecognizerRequest", "undeleteRecognizerRequest", "createCustomClassRequest", "updateCustomClassRequest", "deleteCustomClassRequest", "undeleteCustomClassRequest", "createPhraseSetRequest", "updatePhraseSetRequest", "deletePhraseSetRequest", "undeletePhraseSetRequest", "updateConfigRequest"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * OperationMetadata metadata.
                         * @member {"batchRecognizeMetadata"|undefined} metadata
                         * @memberof google.cloud.speech.v2.OperationMetadata
                         * @instance
                         */
                        Object.defineProperty(OperationMetadata.prototype, "metadata", {
                            get: $util.oneOfGetter($oneOfFields = ["batchRecognizeMetadata"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new OperationMetadata instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.speech.v2.OperationMetadata
                         * @static
                         * @param {google.cloud.speech.v2.IOperationMetadata=} [properties] Properties to set
                         * @returns {google.cloud.speech.v2.OperationMetadata} OperationMetadata instance
                         */
                        OperationMetadata.create = function create(properties) {
                            return new OperationMetadata(properties);
                        };
    
                        /**
                         * Encodes the specified OperationMetadata message. Does not implicitly {@link google.cloud.speech.v2.OperationMetadata.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.speech.v2.OperationMetadata
                         * @static
                         * @param {google.cloud.speech.v2.IOperationMetadata} message OperationMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        OperationMetadata.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.createTime != null && Object.hasOwnProperty.call(message, "createTime"))
                                $root.google.protobuf.Timestamp.encode(message.createTime, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.updateTime != null && Object.hasOwnProperty.call(message, "updateTime"))
                                $root.google.protobuf.Timestamp.encode(message.updateTime, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.resource != null && Object.hasOwnProperty.call(message, "resource"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.resource);
                            if (message.method != null && Object.hasOwnProperty.call(message, "method"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.method);
                            if (message.kmsKeyName != null && Object.hasOwnProperty.call(message, "kmsKeyName"))
                                writer.uint32(/* id 6, wireType 2 =*/50).string(message.kmsKeyName);
                            if (message.kmsKeyVersionName != null && Object.hasOwnProperty.call(message, "kmsKeyVersionName"))
                                writer.uint32(/* id 7, wireType 2 =*/58).string(message.kmsKeyVersionName);
                            if (message.batchRecognizeRequest != null && Object.hasOwnProperty.call(message, "batchRecognizeRequest"))
                                $root.google.cloud.speech.v2.BatchRecognizeRequest.encode(message.batchRecognizeRequest, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                            if (message.createRecognizerRequest != null && Object.hasOwnProperty.call(message, "createRecognizerRequest"))
                                $root.google.cloud.speech.v2.CreateRecognizerRequest.encode(message.createRecognizerRequest, writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                            if (message.updateRecognizerRequest != null && Object.hasOwnProperty.call(message, "updateRecognizerRequest"))
                                $root.google.cloud.speech.v2.UpdateRecognizerRequest.encode(message.updateRecognizerRequest, writer.uint32(/* id 10, wireType 2 =*/82).fork()).ldelim();
                            if (message.deleteRecognizerRequest != null && Object.hasOwnProperty.call(message, "deleteRecognizerRequest"))
                                $root.google.cloud.speech.v2.DeleteRecognizerRequest.encode(message.deleteRecognizerRequest, writer.uint32(/* id 11, wireType 2 =*/90).fork()).ldelim();
                            if (message.undeleteRecognizerRequest != null && Object.hasOwnProperty.call(message, "undeleteRecognizerRequest"))
                                $root.google.cloud.speech.v2.UndeleteRecognizerRequest.encode(message.undeleteRecognizerRequest, writer.uint32(/* id 12, wireType 2 =*/98).fork()).ldelim();
                            if (message.createCustomClassRequest != null && Object.hasOwnProperty.call(message, "createCustomClassRequest"))
                                $root.google.cloud.speech.v2.CreateCustomClassRequest.encode(message.createCustomClassRequest, writer.uint32(/* id 13, wireType 2 =*/106).fork()).ldelim();
                            if (message.updateCustomClassRequest != null && Object.hasOwnProperty.call(message, "updateCustomClassRequest"))
                                $root.google.cloud.speech.v2.UpdateCustomClassRequest.encode(message.updateCustomClassRequest, writer.uint32(/* id 14, wireType 2 =*/114).fork()).ldelim();
                            if (message.deleteCustomClassRequest != null && Object.hasOwnProperty.call(message, "deleteCustomClassRequest"))
                                $root.google.cloud.speech.v2.DeleteCustomClassRequest.encode(message.deleteCustomClassRequest, writer.uint32(/* id 15, wireType 2 =*/122).fork()).ldelim();
                            if (message.undeleteCustomClassRequest != null && Object.hasOwnProperty.call(message, "undeleteCustomClassRequest"))
                                $root.google.cloud.speech.v2.UndeleteCustomClassRequest.encode(message.undeleteCustomClassRequest, writer.uint32(/* id 16, wireType 2 =*/130).fork()).ldelim();
                            if (message.createPhraseSetRequest != null && Object.hasOwnProperty.call(message, "createPhraseSetRequest"))
                                $root.google.cloud.speech.v2.CreatePhraseSetRequest.encode(message.createPhraseSetRequest, writer.uint32(/* id 17, wireType 2 =*/138).fork()).ldelim();
                            if (message.updatePhraseSetRequest != null && Object.hasOwnProperty.call(message, "updatePhraseSetRequest"))
                                $root.google.cloud.speech.v2.UpdatePhraseSetRequest.encode(message.updatePhraseSetRequest, writer.uint32(/* id 18, wireType 2 =*/146).fork()).ldelim();
                            if (message.deletePhraseSetRequest != null && Object.hasOwnProperty.call(message, "deletePhraseSetRequest"))
                                $root.google.cloud.speech.v2.DeletePhraseSetRequest.encode(message.deletePhraseSetRequest, writer.uint32(/* id 19, wireType 2 =*/154).fork()).ldelim();
                            if (message.undeletePhraseSetRequest != null && Object.hasOwnProperty.call(message, "undeletePhraseSetRequest"))
                                $root.google.cloud.speech.v2.UndeletePhraseSetRequest.encode(message.undeletePhraseSetRequest, writer.uint32(/* id 20, wireType 2 =*/162).fork()).ldelim();
                            if (message.updateConfigRequest != null && Object.hasOwnProperty.call(message, "updateConfigRequest"))
                                $root.google.cloud.speech.v2.UpdateConfigRequest.encode(message.updateConfigRequest, writer.uint32(/* id 21, wireType 2 =*/170).fork()).ldelim();
                            if (message.progressPercent != null && Object.hasOwnProperty.call(message, "progressPercent"))
                                writer.uint32(/* id 22, wireType 0 =*/176).int32(message.progressPercent);
                            if (message.batchRecognizeMetadata != null && Object.hasOwnProperty.call(message, "batchRecognizeMetadata"))
                                $root.google.cloud.speech.v2.BatchRecognizeMetadata.encode(message.batchRecognizeMetadata, writer.uint32(/* id 23, wireType 2 =*/186).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified OperationMetadata message, length delimited. Does not implicitly {@link google.cloud.speech.v2.OperationMetadata.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.speech.v2.OperationMetadata
                         * @static
                         * @param {google.cloud.speech.v2.IOperationMetadata} message OperationMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        OperationMetadata.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an OperationMetadata message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.speech.v2.OperationMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.speech.v2.OperationMetadata} OperationMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        OperationMetadata.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.speech.v2.OperationMetadata();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        message.createTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.updateTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.resource = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.method = reader.string();
                                        break;
                                    }
                                case 6: {
                                        message.kmsKeyName = reader.string();
                                        break;
                                    }
                                case 7: {
                                        message.kmsKeyVersionName = reader.string();
                                        break;
                                    }
                                case 8: {
                                        message.batchRecognizeRequest = $root.google.cloud.speech.v2.BatchRecognizeRequest.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 9: {
                                        message.createRecognizerRequest = $root.google.cloud.speech.v2.CreateRecognizerRequest.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 10: {
                                        message.updateRecognizerRequest = $root.google.cloud.speech.v2.UpdateRecognizerRequest.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 11: {
                                        message.deleteRecognizerRequest = $root.google.cloud.speech.v2.DeleteRecognizerRequest.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 12: {
                                        message.undeleteRecognizerRequest = $root.google.cloud.speech.v2.UndeleteRecognizerRequest.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 13: {
                                        message.createCustomClassRequest = $root.google.cloud.speech.v2.CreateCustomClassRequest.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 14: {
                                        message.updateCustomClassRequest = $root.google.cloud.speech.v2.UpdateCustomClassRequest.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 15: {
                                        message.deleteCustomClassRequest = $root.google.cloud.speech.v2.DeleteCustomClassRequest.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 16: {
                                        message.undeleteCustomClassRequest = $root.google.cloud.speech.v2.UndeleteCustomClassRequest.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 17: {
                                        message.createPhraseSetRequest = $root.google.cloud.speech.v2.CreatePhraseSetRequest.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 18: {
                                        message.updatePhraseSetRequest = $root.google.cloud.speech.v2.UpdatePhraseSetRequest.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 19: {
                                        message.deletePhraseSetRequest = $root.google.cloud.speech.v2.DeletePhraseSetRequest.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 20: {
                                        message.undeletePhraseSetRequest = $root.google.cloud.speech.v2.UndeletePhraseSetRequest.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 21: {
                                        message.updateConfigRequest = $root.google.cloud.speech.v2.UpdateConfigRequest.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 22: {
                                        message.progressPercent = reader.int32();
                                        break;
                                    }
                                case 23: {
                                        message.batchRecognizeMetadata = $root.google.cloud.speech.v2.BatchRecognizeMetadata.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an OperationMetadata message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.speech.v2.OperationMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.speech.v2.OperationMetadata} OperationMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        OperationMetadata.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an OperationMetadata message.
                         * @function verify
                         * @memberof google.cloud.speech.v2.OperationMetadata
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        OperationMetadata.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.createTime != null && message.hasOwnProperty("createTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.createTime);
                                if (error)
                                    return "createTime." + error;
                            }
                            if (message.updateTime != null && message.hasOwnProperty("updateTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.updateTime);
                                if (error)
                                    return "updateTime." + error;
                            }
                            if (message.resource != null && message.hasOwnProperty("resource"))
                                if (!$util.isString(message.resource))
                                    return "resource: string expected";
                            if (message.method != null && message.hasOwnProperty("method"))
                                if (!$util.isString(message.method))
                                    return "method: string expected";
                            if (message.kmsKeyName != null && message.hasOwnProperty("kmsKeyName"))
                                if (!$util.isString(message.kmsKeyName))
                                    return "kmsKeyName: string expected";
                            if (message.kmsKeyVersionName != null && message.hasOwnProperty("kmsKeyVersionName"))
                                if (!$util.isString(message.kmsKeyVersionName))
                                    return "kmsKeyVersionName: string expected";
                            if (message.batchRecognizeRequest != null && message.hasOwnProperty("batchRecognizeRequest")) {
                                properties.request = 1;
                                {
                                    var error = $root.google.cloud.speech.v2.BatchRecognizeRequest.verify(message.batchRecognizeRequest);
                                    if (error)
                                        return "batchRecognizeRequest." + error;
                                }
                            }
                            if (message.createRecognizerRequest != null && message.hasOwnProperty("createRecognizerRequest")) {
                                if (properties.request === 1)
                                    return "request: multiple values";
                                properties.request = 1;
                                {
                                    var error = $root.google.cloud.speech.v2.CreateRecognizerRequest.verify(message.createRecognizerRequest);
                                    if (error)
                                        return "createRecognizerRequest." + error;
                                }
                            }
                            if (message.updateRecognizerRequest != null && message.hasOwnProperty("updateRecognizerRequest")) {
                                if (properties.request === 1)
                                    return "request: multiple values";
                                properties.request = 1;
                                {
                                    var error = $root.google.cloud.speech.v2.UpdateRecognizerRequest.verify(message.updateRecognizerRequest);
                                    if (error)
                                        return "updateRecognizerRequest." + error;
                                }
                            }
                            if (message.deleteRecognizerRequest != null && message.hasOwnProperty("deleteRecognizerRequest")) {
                                if (properties.request === 1)
                                    return "request: multiple values";
                                properties.request = 1;
                                {
                                    var error = $root.google.cloud.speech.v2.DeleteRecognizerRequest.verify(message.deleteRecognizerRequest);
                                    if (error)
                                        return "deleteRecognizerRequest." + error;
                                }
                            }
                            if (message.undeleteRecognizerRequest != null && message.hasOwnProperty("undeleteRecognizerRequest")) {
                                if (properties.request === 1)
                                    return "request: multiple values";
                                properties.request = 1;
                                {
                                    var error = $root.google.cloud.speech.v2.UndeleteRecognizerRequest.verify(message.undeleteRecognizerRequest);
                                    if (error)
                                        return "undeleteRecognizerRequest." + error;
                                }
                            }
                            if (message.createCustomClassRequest != null && message.hasOwnProperty("createCustomClassRequest")) {
                                if (properties.request === 1)
                                    return "request: multiple values";
                                properties.request = 1;
                                {
                                    var error = $root.google.cloud.speech.v2.CreateCustomClassRequest.verify(message.createCustomClassRequest);
                                    if (error)
                                        return "createCustomClassRequest." + error;
                                }
                            }
                            if (message.updateCustomClassRequest != null && message.hasOwnProperty("updateCustomClassRequest")) {
                                if (properties.request === 1)
                                    return "request: multiple values";
                                properties.request = 1;
                                {
                                    var error = $root.google.cloud.speech.v2.UpdateCustomClassRequest.verify(message.updateCustomClassRequest);
                                    if (error)
                                        return "updateCustomClassRequest." + error;
                                }
                            }
                            if (message.deleteCustomClassRequest != null && message.hasOwnProperty("deleteCustomClassRequest")) {
                                if (properties.request === 1)
                                    return "request: multiple values";
                                properties.request = 1;
                                {
                                    var error = $root.google.cloud.speech.v2.DeleteCustomClassRequest.verify(message.deleteCustomClassRequest);
                                    if (error)
                                        return "deleteCustomClassRequest." + error;
                                }
                            }
                            if (message.undeleteCustomClassRequest != null && message.hasOwnProperty("undeleteCustomClassRequest")) {
                                if (properties.request === 1)
                                    return "request: multiple values";
                                properties.request = 1;
                                {
                                    var error = $root.google.cloud.speech.v2.UndeleteCustomClassRequest.verify(message.undeleteCustomClassRequest);
                                    if (error)
                                        return "undeleteCustomClassRequest." + error;
                                }
                            }
                            if (message.createPhraseSetRequest != null && message.hasOwnProperty("createPhraseSetRequest")) {
                                if (properties.request === 1)
                                    return "request: multiple values";
                                properties.request = 1;
                                {
                                    var error = $root.google.cloud.speech.v2.CreatePhraseSetRequest.verify(message.createPhraseSetRequest);
                                    if (error)
                                        return "createPhraseSetRequest." + error;
                                }
                            }
                            if (message.updatePhraseSetRequest != null && message.hasOwnProperty("updatePhraseSetRequest")) {
                                if (properties.request === 1)
                                    return "request: multiple values";
                                properties.request = 1;
                                {
                                    var error = $root.google.cloud.speech.v2.UpdatePhraseSetRequest.verify(message.updatePhraseSetRequest);
                                    if (error)
                                        return "updatePhraseSetRequest." + error;
                                }
                            }
                            if (message.deletePhraseSetRequest != null && message.hasOwnProperty("deletePhraseSetRequest")) {
                                if (properties.request === 1)
                                    return "request: multiple values";
                                properties.request = 1;
                                {
                                    var error = $root.google.cloud.speech.v2.DeletePhraseSetRequest.verify(message.deletePhraseSetRequest);
                                    if (error)
                                        return "deletePhraseSetRequest." + error;
                                }
                            }
                            if (message.undeletePhraseSetRequest != null && message.hasOwnProperty("undeletePhraseSetRequest")) {
                                if (properties.request === 1)
                                    return "request: multiple values";
                                properties.request = 1;
                                {
                                    var error = $root.google.cloud.speech.v2.UndeletePhraseSetRequest.verify(message.undeletePhraseSetRequest);
                                    if (error)
                                        return "undeletePhraseSetRequest." + error;
                                }
                            }
                            if (message.updateConfigRequest != null && message.hasOwnProperty("updateConfigRequest")) {
                                if (properties.request === 1)
                                    return "request: multiple values";
                                properties.request = 1;
                                {
                                    var error = $root.google.cloud.speech.v2.UpdateConfigRequest.verify(message.updateConfigRequest);
                                    if (error)
                                        return "updateConfigRequest." + error;
                                }
                            }
                            if (message.progressPercent != null && message.hasOwnProperty("progressPercent"))
                                if (!$util.isInteger(message.progressPercent))
                                    return "progressPercent: integer expected";
                            if (message.batchRecognizeMetadata != null && message.hasOwnProperty("batchRecognizeMetadata")) {
                                properties.metadata = 1;
                                {
                                    var error = $root.google.cloud.speech.v2.BatchRecognizeMetadata.verify(message.batchRecognizeMetadata);
                                    if (error)
                                        return "batchRecognizeMetadata." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates an OperationMetadata message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.speech.v2.OperationMetadata
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.speech.v2.OperationMetadata} OperationMetadata
                         */
                        OperationMetadata.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.speech.v2.OperationMetadata)
                                return object;
                            var message = new $root.google.cloud.speech.v2.OperationMetadata();
                            if (object.createTime != null) {
                                if (typeof object.createTime !== "object")
                                    throw TypeError(".google.cloud.speech.v2.OperationMetadata.createTime: object expected");
                                message.createTime = $root.google.protobuf.Timestamp.fromObject(object.createTime);
                            }
                            if (object.updateTime != null) {
                                if (typeof object.updateTime !== "object")
                                    throw TypeError(".google.cloud.speech.v2.OperationMetadata.updateTime: object expected");
                                message.updateTime = $root.google.protobuf.Timestamp.fromObject(object.updateTime);
                            }
                            if (object.resource != null)
                                message.resource = String(object.resource);
                            if (object.method != null)
                                message.method = String(object.method);
                            if (object.kmsKeyName != null)
                                message.kmsKeyName = String(object.kmsKeyName);
                            if (object.kmsKeyVersionName != null)
                                message.kmsKeyVersionName = String(object.kmsKeyVersionName);
                            if (object.batchRecognizeRequest != null) {
                                if (typeof object.batchRecognizeRequest !== "object")
                                    throw TypeError(".google.cloud.speech.v2.OperationMetadata.batchRecognizeRequest: object expected");
                                message.batchRecognizeRequest = $root.google.cloud.speech.v2.BatchRecognizeRequest.fromObject(object.batchRecognizeRequest);
                            }
                            if (object.createRecognizerRequest != null) {
                                if (typeof object.createRecognizerRequest !== "object")
                                    throw TypeError(".google.cloud.speech.v2.OperationMetadata.createRecognizerRequest: object expected");
                                message.createRecognizerRequest = $root.google.cloud.speech.v2.CreateRecognizerRequest.fromObject(object.createRecognizerRequest);
                            }
                            if (object.updateRecognizerRequest != null) {
                                if (typeof object.updateRecognizerRequest !== "object")
                                    throw TypeError(".google.cloud.speech.v2.OperationMetadata.updateRecognizerRequest: object expected");
                                message.updateRecognizerRequest = $root.google.cloud.speech.v2.UpdateRecognizerRequest.fromObject(object.updateRecognizerRequest);
                            }
                            if (object.deleteRecognizerRequest != null) {
                                if (typeof object.deleteRecognizerRequest !== "object")
                                    throw TypeError(".google.cloud.speech.v2.OperationMetadata.deleteRecognizerRequest: object expected");
                                message.deleteRecognizerRequest = $root.google.cloud.speech.v2.DeleteRecognizerRequest.fromObject(object.deleteRecognizerRequest);
                            }
                            if (object.undeleteRecognizerRequest != null) {
                                if (typeof object.undeleteRecognizerRequest !== "object")
                                    throw TypeError(".google.cloud.speech.v2.OperationMetadata.undeleteRecognizerRequest: object expected");
                                message.undeleteRecognizerRequest = $root.google.cloud.speech.v2.UndeleteRecognizerRequest.fromObject(object.undeleteRecognizerRequest);
                            }
                            if (object.createCustomClassRequest != null) {
                                if (typeof object.createCustomClassRequest !== "object")
                                    throw TypeError(".google.cloud.speech.v2.OperationMetadata.createCustomClassRequest: object expected");
                                message.createCustomClassRequest = $root.google.cloud.speech.v2.CreateCustomClassRequest.fromObject(object.createCustomClassRequest);
                            }
                            if (object.updateCustomClassRequest != null) {
                                if (typeof object.updateCustomClassRequest !== "object")
                                    throw TypeError(".google.cloud.speech.v2.OperationMetadata.updateCustomClassRequest: object expected");
                                message.updateCustomClassRequest = $root.google.cloud.speech.v2.UpdateCustomClassRequest.fromObject(object.updateCustomClassRequest);
                            }
                            if (object.deleteCustomClassRequest != null) {
                                if (typeof object.deleteCustomClassRequest !== "object")
                                    throw TypeError(".google.cloud.speech.v2.OperationMetadata.deleteCustomClassRequest: object expected");
                                message.deleteCustomClassRequest = $root.google.cloud.speech.v2.DeleteCustomClassRequest.fromObject(object.deleteCustomClassRequest);
                            }
                            if (object.undeleteCustomClassRequest != null) {
                                if (typeof object.undeleteCustomClassRequest !== "object")
                                    throw TypeError(".google.cloud.speech.v2.OperationMetadata.undeleteCustomClassRequest: object expected");
                                message.undeleteCustomClassRequest = $root.google.cloud.speech.v2.UndeleteCustomClassRequest.fromObject(object.undeleteCustomClassRequest);
                            }
                            if (object.createPhraseSetRequest != null) {
                                if (typeof object.createPhraseSetRequest !== "object")
                                    throw TypeError(".google.cloud.speech.v2.OperationMetadata.createPhraseSetRequest: object expected");
                                message.createPhraseSetRequest = $root.google.cloud.speech.v2.CreatePhraseSetRequest.fromObject(object.createPhraseSetRequest);
                            }
                            if (object.updatePhraseSetRequest != null) {
                                if (typeof object.updatePhraseSetRequest !== "object")
                                    throw TypeError(".google.cloud.speech.v2.OperationMetadata.updatePhraseSetRequest: object expected");
                                message.updatePhraseSetRequest = $root.google.cloud.speech.v2.UpdatePhraseSetRequest.fromObject(object.updatePhraseSetRequest);
                            }
                            if (object.deletePhraseSetRequest != null) {
                                if (typeof object.deletePhraseSetRequest !== "object")
                                    throw TypeError(".google.cloud.speech.v2.OperationMetadata.deletePhraseSetRequest: object expected");
                                message.deletePhraseSetRequest = $root.google.cloud.speech.v2.DeletePhraseSetRequest.fromObject(object.deletePhraseSetRequest);
                            }
                            if (object.undeletePhraseSetRequest != null) {
                                if (typeof object.undeletePhraseSetRequest !== "object")
                                    throw TypeError(".google.cloud.speech.v2.OperationMetadata.undeletePhraseSetRequest: object expected");
                                message.undeletePhraseSetRequest = $root.google.cloud.speech.v2.UndeletePhraseSetRequest.fromObject(object.undeletePhraseSetRequest);
                            }
                            if (object.updateConfigRequest != null) {
                                if (typeof object.updateConfigRequest !== "object")
                                    throw TypeError(".google.cloud.speech.v2.OperationMetadata.updateConfigRequest: object expected");
                                message.updateConfigRequest = $root.google.cloud.speech.v2.UpdateConfigRequest.fromObject(object.updateConfigRequest);
                            }
                            if (object.progressPercent != null)
                                message.progressPercent = object.progressPercent | 0;
                            if (object.batchRecognizeMetadata != null) {
                                if (typeof object.batchRecognizeMetadata !== "object")
                                    throw TypeError(".google.cloud.speech.v2.OperationMetadata.batchRecognizeMetadata: object expected");
                                message.batchRecognizeMetadata = $root.google.cloud.speech.v2.BatchRecognizeMetadata.fromObject(object.batchRecognizeMetadata);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an OperationMetadata message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.speech.v2.OperationMetadata
                         * @static
                         * @param {google.cloud.speech.v2.OperationMetadata} message OperationMetadata
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        OperationMetadata.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.createTime = null;
                                object.updateTime = null;
                                object.resource = "";
                                object.method = "";
                                object.kmsKeyName = "";
                                object.kmsKeyVersionName = "";
                                object.progressPercent = 0;
                            }
                            if (message.createTime != null && message.hasOwnProperty("createTime"))
                                object.createTime = $root.google.protobuf.Timestamp.toObject(message.createTime, options);
                            if (message.updateTime != null && message.hasOwnProperty("updateTime"))
                                object.updateTime = $root.google.protobuf.Timestamp.toObject(message.updateTime, options);
                            if (message.resource != null && message.hasOwnProperty("resource"))
                                object.resource = message.resource;
                            if (message.method != null && message.hasOwnProperty("method"))
                                object.method = message.method;
                            if (message.kmsKeyName != null && message.hasOwnProperty("kmsKeyName"))
                                object.kmsKeyName = message.kmsKeyName;
                            if (message.kmsKeyVersionName != null && message.hasOwnProperty("kmsKeyVersionName"))
                                object.kmsKeyVersionName = message.kmsKeyVersionName;
                            if (message.batchRecognizeRequest != null && message.hasOwnProperty("batchRecognizeRequest")) {
                                object.batchRecognizeRequest = $root.google.cloud.speech.v2.BatchRecognizeRequest.toObject(message.batchRecognizeRequest, options);
                                if (options.oneofs)
                                    object.request = "batchRecognizeRequest";
                            }
                            if (message.createRecognizerRequest != null && message.hasOwnProperty("createRecognizerRequest")) {
                                object.createRecognizerRequest = $root.google.cloud.speech.v2.CreateRecognizerRequest.toObject(message.createRecognizerRequest, options);
                                if (options.oneofs)
                                    object.request = "createRecognizerRequest";
                            }
                            if (message.updateRecognizerRequest != null && message.hasOwnProperty("updateRecognizerRequest")) {
                                object.updateRecognizerRequest = $root.google.cloud.speech.v2.UpdateRecognizerRequest.toObject(message.updateRecognizerRequest, options);
                                if (options.oneofs)
                                    object.request = "updateRecognizerRequest";
                            }
                            if (message.deleteRecognizerRequest != null && message.hasOwnProperty("deleteRecognizerRequest")) {
                                object.deleteRecognizerRequest = $root.google.cloud.speech.v2.DeleteRecognizerRequest.toObject(message.deleteRecognizerRequest, options);
                                if (options.oneofs)
                                    object.request = "deleteRecognizerRequest";
                            }
                            if (message.undeleteRecognizerRequest != null && message.hasOwnProperty("undeleteRecognizerRequest")) {
                                object.undeleteRecognizerRequest = $root.google.cloud.speech.v2.UndeleteRecognizerRequest.toObject(message.undeleteRecognizerRequest, options);
                                if (options.oneofs)
                                    object.request = "undeleteRecognizerRequest";
                            }
                            if (message.createCustomClassRequest != null && message.hasOwnProperty("createCustomClassRequest")) {
                                object.createCustomClassRequest = $root.google.cloud.speech.v2.CreateCustomClassRequest.toObject(message.createCustomClassRequest, options);
                                if (options.oneofs)
                                    object.request = "createCustomClassRequest";
                            }
                            if (message.updateCustomClassRequest != null && message.hasOwnProperty("updateCustomClassRequest")) {
                                object.updateCustomClassRequest = $root.google.cloud.speech.v2.UpdateCustomClassRequest.toObject(message.updateCustomClassRequest, options);
                                if (options.oneofs)
                                    object.request = "updateCustomClassRequest";
                            }
                            if (message.deleteCustomClassRequest != null && message.hasOwnProperty("deleteCustomClassRequest")) {
                                object.deleteCustomClassRequest = $root.google.cloud.speech.v2.DeleteCustomClassRequest.toObject(message.deleteCustomClassRequest, options);
                                if (options.oneofs)
                                    object.request = "deleteCustomClassRequest";
                            }
                            if (message.undeleteCustomClassRequest != null && message.hasOwnProperty("undeleteCustomClassRequest")) {
                                object.undeleteCustomClassRequest = $root.google.cloud.speech.v2.UndeleteCustomClassRequest.toObject(message.undeleteCustomClassRequest, options);
                                if (options.oneofs)
                                    object.request = "undeleteCustomClassRequest";
                            }
                            if (message.createPhraseSetRequest != null && message.hasOwnProperty("createPhraseSetRequest")) {
                                object.createPhraseSetRequest = $root.google.cloud.speech.v2.CreatePhraseSetRequest.toObject(message.createPhraseSetRequest, options);
                                if (options.oneofs)
                                    object.request = "createPhraseSetRequest";
                            }
                            if (message.updatePhraseSetRequest != null && message.hasOwnProperty("updatePhraseSetRequest")) {
                                object.updatePhraseSetRequest = $root.google.cloud.speech.v2.UpdatePhraseSetRequest.toObject(message.updatePhraseSetRequest, options);
                                if (options.oneofs)
                                    object.request = "updatePhraseSetRequest";
                            }
                            if (message.deletePhraseSetRequest != null && message.hasOwnProperty("deletePhraseSetRequest")) {
                                object.deletePhraseSetRequest = $root.google.cloud.speech.v2.DeletePhraseSetRequest.toObject(message.deletePhraseSetRequest, options);
                                if (options.oneofs)
                                    object.request = "deletePhraseSetRequest";
                            }
                            if (message.undeletePhraseSetRequest != null && message.hasOwnProperty("undeletePhraseSetRequest")) {
                                object.undeletePhraseSetRequest = $root.google.cloud.speech.v2.UndeletePhraseSetRequest.toObject(message.undeletePhraseSetRequest, options);
                                if (options.oneofs)
                                    object.request = "undeletePhraseSetRequest";
                            }
                            if (message.updateConfigRequest != null && message.hasOwnProperty("updateConfigRequest")) {
                                object.updateConfigRequest = $root.google.cloud.speech.v2.UpdateConfigRequest.toObject(message.updateConfigRequest, options);
                                if (options.oneofs)
                                    object.request = "updateConfigRequest";
                            }
                            if (message.progressPercent != null && message.hasOwnProperty("progressPercent"))
                                object.progressPercent = message.progressPercent;
                            if (message.batchRecognizeMetadata != null && message.hasOwnProperty("batchRecognizeMetadata")) {
                                object.batchRecognizeMetadata = $root.google.cloud.speech.v2.BatchRecognizeMetadata.toObject(message.batchRecognizeMetadata, options);
                                if (options.oneofs)
                                    object.metadata = "batchRecognizeMetadata";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this OperationMetadata to JSON.
                         * @function toJSON
                         * @memberof google.cloud.speech.v2.OperationMetadata
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        OperationMetadata.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for OperationMetadata
                         * @function getTypeUrl
                         * @memberof google.cloud.speech.v2.OperationMetadata
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        OperationMetadata.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.speech.v2.OperationMetadata";
                        };
    
                        return OperationMetadata;
                    })();
    
                    v2.ListRecognizersRequest = (function() {
    
                        /**
                         * Properties of a ListRecognizersRequest.
                         * @memberof google.cloud.speech.v2
                         * @interface IListRecognizersRequest
                         * @property {string|null} [parent] ListRecognizersRequest parent
                         * @property {number|null} [pageSize] ListRecognizersRequest pageSize
                         * @property {string|null} [pageToken] ListRecognizersRequest pageToken
                         * @property {boolean|null} [showDeleted] ListRecognizersRequest showDeleted
                         */
    
                        /**
                         * Constructs a new ListRecognizersRequest.
                         * @memberof google.cloud.speech.v2
                         * @classdesc Represents a ListRecognizersRequest.
                         * @implements IListRecognizersRequest
                         * @constructor
                         * @param {google.cloud.speech.v2.IListRecognizersRequest=} [properties] Properties to set
                         */
                        function ListRecognizersRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListRecognizersRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.speech.v2.ListRecognizersRequest
                         * @instance
                         */
                        ListRecognizersRequest.prototype.parent = "";
    
                        /**
                         * ListRecognizersRequest pageSize.
                         * @member {number} pageSize
                         * @memberof google.cloud.speech.v2.ListRecognizersRequest
                         * @instance
                         */
                        ListRecognizersRequest.prototype.pageSize = 0;
    
                        /**
                         * ListRecognizersRequest pageToken.
                         * @member {string} pageToken
                         * @memberof google.cloud.speech.v2.ListRecognizersRequest
                         * @instance
                         */
                        ListRecognizersRequest.prototype.pageToken = "";
    
                        /**
                         * ListRecognizersRequest showDeleted.
                         * @member {boolean} showDeleted
                         * @memberof google.cloud.speech.v2.ListRecognizersRequest
                         * @instance
                         */
                        ListRecognizersRequest.prototype.showDeleted = false;
    
                        /**
                         * Creates a new ListRecognizersRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.speech.v2.ListRecognizersRequest
                         * @static
                         * @param {google.cloud.speech.v2.IListRecognizersRequest=} [properties] Properties to set
                         * @returns {google.cloud.speech.v2.ListRecognizersRequest} ListRecognizersRequest instance
                         */
                        ListRecognizersRequest.create = function create(properties) {
                            return new ListRecognizersRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ListRecognizersRequest message. Does not implicitly {@link google.cloud.speech.v2.ListRecognizersRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.speech.v2.ListRecognizersRequest
                         * @static
                         * @param {google.cloud.speech.v2.IListRecognizersRequest} message ListRecognizersRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListRecognizersRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.pageSize != null && Object.hasOwnProperty.call(message, "pageSize"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.pageSize);
                            if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.pageToken);
                            if (message.showDeleted != null && Object.hasOwnProperty.call(message, "showDeleted"))
                                writer.uint32(/* id 4, wireType 0 =*/32).bool(message.showDeleted);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListRecognizersRequest message, length delimited. Does not implicitly {@link google.cloud.speech.v2.ListRecognizersRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.speech.v2.ListRecognizersRequest
                         * @static
                         * @param {google.cloud.speech.v2.IListRecognizersRequest} message ListRecognizersRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListRecognizersRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListRecognizersRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.speech.v2.ListRecognizersRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.speech.v2.ListRecognizersRequest} ListRecognizersRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListRecognizersRequest.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.speech.v2.ListRecognizersRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.pageSize = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        message.pageToken = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.showDeleted = reader.bool();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListRecognizersRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.speech.v2.ListRecognizersRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.speech.v2.ListRecognizersRequest} ListRecognizersRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListRecognizersRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListRecognizersRequest message.
                         * @function verify
                         * @memberof google.cloud.speech.v2.ListRecognizersRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListRecognizersRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                if (!$util.isInteger(message.pageSize))
                                    return "pageSize: integer expected";
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                if (!$util.isString(message.pageToken))
                                    return "pageToken: string expected";
                            if (message.showDeleted != null && message.hasOwnProperty("showDeleted"))
                                if (typeof message.showDeleted !== "boolean")
                                    return "showDeleted: boolean expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListRecognizersRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.speech.v2.ListRecognizersRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.speech.v2.ListRecognizersRequest} ListRecognizersRequest
                         */
                        ListRecognizersRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.speech.v2.ListRecognizersRequest)
                                return object;
                            var message = new $root.google.cloud.speech.v2.ListRecognizersRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.pageSize != null)
                                message.pageSize = object.pageSize | 0;
                            if (object.pageToken != null)
                                message.pageToken = String(object.pageToken);
                            if (object.showDeleted != null)
                                message.showDeleted = Boolean(object.showDeleted);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListRecognizersRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.speech.v2.ListRecognizersRequest
                         * @static
                         * @param {google.cloud.speech.v2.ListRecognizersRequest} message ListRecognizersRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListRecognizersRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.pageSize = 0;
                                object.pageToken = "";
                                object.showDeleted = false;
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                object.pageSize = message.pageSize;
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                object.pageToken = message.pageToken;
                            if (message.showDeleted != null && message.hasOwnProperty("showDeleted"))
                                object.showDeleted = message.showDeleted;
                            return object;
                        };
    
                        /**
                         * Converts this ListRecognizersRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.speech.v2.ListRecognizersRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListRecognizersRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListRecognizersRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.speech.v2.ListRecognizersRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListRecognizersRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.speech.v2.ListRecognizersRequest";
                        };
    
                        return ListRecognizersRequest;
                    })();
    
                    v2.ListRecognizersResponse = (function() {
    
                        /**
                         * Properties of a ListRecognizersResponse.
                         * @memberof google.cloud.speech.v2
                         * @interface IListRecognizersResponse
                         * @property {Array.<google.cloud.speech.v2.IRecognizer>|null} [recognizers] ListRecognizersResponse recognizers
                         * @property {string|null} [nextPageToken] ListRecognizersResponse nextPageToken
                         */
    
                        /**
                         * Constructs a new ListRecognizersResponse.
                         * @memberof google.cloud.speech.v2
                         * @classdesc Represents a ListRecognizersResponse.
                         * @implements IListRecognizersResponse
                         * @constructor
                         * @param {google.cloud.speech.v2.IListRecognizersResponse=} [properties] Properties to set
                         */
                        function ListRecognizersResponse(properties) {
                            this.recognizers = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListRecognizersResponse recognizers.
                         * @member {Array.<google.cloud.speech.v2.IRecognizer>} recognizers
                         * @memberof google.cloud.speech.v2.ListRecognizersResponse
                         * @instance
                         */
                        ListRecognizersResponse.prototype.recognizers = $util.emptyArray;
    
                        /**
                         * ListRecognizersResponse nextPageToken.
                         * @member {string} nextPageToken
                         * @memberof google.cloud.speech.v2.ListRecognizersResponse
                         * @instance
                         */
                        ListRecognizersResponse.prototype.nextPageToken = "";
    
                        /**
                         * Creates a new ListRecognizersResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.speech.v2.ListRecognizersResponse
                         * @static
                         * @param {google.cloud.speech.v2.IListRecognizersResponse=} [properties] Properties to set
                         * @returns {google.cloud.speech.v2.ListRecognizersResponse} ListRecognizersResponse instance
                         */
                        ListRecognizersResponse.create = function create(properties) {
                            return new ListRecognizersResponse(properties);
                        };
    
                        /**
                         * Encodes the specified ListRecognizersResponse message. Does not implicitly {@link google.cloud.speech.v2.ListRecognizersResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.speech.v2.ListRecognizersResponse
                         * @static
                         * @param {google.cloud.speech.v2.IListRecognizersResponse} message ListRecognizersResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListRecognizersResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.recognizers != null && message.recognizers.length)
                                for (var i = 0; i < message.recognizers.length; ++i)
                                    $root.google.cloud.speech.v2.Recognizer.encode(message.recognizers[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListRecognizersResponse message, length delimited. Does not implicitly {@link google.cloud.speech.v2.ListRecognizersResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.speech.v2.ListRecognizersResponse
                         * @static
                         * @param {google.cloud.speech.v2.IListRecognizersResponse} message ListRecognizersResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListRecognizersResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListRecognizersResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.speech.v2.ListRecognizersResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.speech.v2.ListRecognizersResponse} ListRecognizersResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListRecognizersResponse.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.speech.v2.ListRecognizersResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.recognizers && message.recognizers.length))
                                            message.recognizers = [];
                                        message.recognizers.push($root.google.cloud.speech.v2.Recognizer.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 2: {
                                        message.nextPageToken = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListRecognizersResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.speech.v2.ListRecognizersResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.speech.v2.ListRecognizersResponse} ListRecognizersResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListRecognizersResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListRecognizersResponse message.
                         * @function verify
                         * @memberof google.cloud.speech.v2.ListRecognizersResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListRecognizersResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.recognizers != null && message.hasOwnProperty("recognizers")) {
                                if (!Array.isArray(message.recognizers))
                                    return "recognizers: array expected";
                                for (var i = 0; i < message.recognizers.length; ++i) {
                                    var error = $root.google.cloud.speech.v2.Recognizer.verify(message.recognizers[i]);
                                    if (error)
                                        return "recognizers." + error;
                                }
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                if (!$util.isString(message.nextPageToken))
                                    return "nextPageToken: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListRecognizersResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.speech.v2.ListRecognizersResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.speech.v2.ListRecognizersResponse} ListRecognizersResponse
                         */
                        ListRecognizersResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.speech.v2.ListRecognizersResponse)
                                return object;
                            var message = new $root.google.cloud.speech.v2.ListRecognizersResponse();
                            if (object.recognizers) {
                                if (!Array.isArray(object.recognizers))
                                    throw TypeError(".google.cloud.speech.v2.ListRecognizersResponse.recognizers: array expected");
                                message.recognizers = [];
                                for (var i = 0; i < object.recognizers.length; ++i) {
                                    if (typeof object.recognizers[i] !== "object")
                                        throw TypeError(".google.cloud.speech.v2.ListRecognizersResponse.recognizers: object expected");
                                    message.recognizers[i] = $root.google.cloud.speech.v2.Recognizer.fromObject(object.recognizers[i]);
                                }
                            }
                            if (object.nextPageToken != null)
                                message.nextPageToken = String(object.nextPageToken);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListRecognizersResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.speech.v2.ListRecognizersResponse
                         * @static
                         * @param {google.cloud.speech.v2.ListRecognizersResponse} message ListRecognizersResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListRecognizersResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.recognizers = [];
                            if (options.defaults)
                                object.nextPageToken = "";
                            if (message.recognizers && message.recognizers.length) {
                                object.recognizers = [];
                                for (var j = 0; j < message.recognizers.length; ++j)
                                    object.recognizers[j] = $root.google.cloud.speech.v2.Recognizer.toObject(message.recognizers[j], options);
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                object.nextPageToken = message.nextPageToken;
                            return object;
                        };
    
                        /**
                         * Converts this ListRecognizersResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.speech.v2.ListRecognizersResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListRecognizersResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListRecognizersResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.speech.v2.ListRecognizersResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListRecognizersResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.speech.v2.ListRecognizersResponse";
                        };
    
                        return ListRecognizersResponse;
                    })();
    
                    v2.GetRecognizerRequest = (function() {
    
                        /**
                         * Properties of a GetRecognizerRequest.
                         * @memberof google.cloud.speech.v2
                         * @interface IGetRecognizerRequest
                         * @property {string|null} [name] GetRecognizerRequest name
                         */
    
                        /**
                         * Constructs a new GetRecognizerRequest.
                         * @memberof google.cloud.speech.v2
                         * @classdesc Represents a GetRecognizerRequest.
                         * @implements IGetRecognizerRequest
                         * @constructor
                         * @param {google.cloud.speech.v2.IGetRecognizerRequest=} [properties] Properties to set
                         */
                        function GetRecognizerRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GetRecognizerRequest name.
                         * @member {string} name
                         * @memberof google.cloud.speech.v2.GetRecognizerRequest
                         * @instance
                         */
                        GetRecognizerRequest.prototype.name = "";
    
                        /**
                         * Creates a new GetRecognizerRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.speech.v2.GetRecognizerRequest
                         * @static
                         * @param {google.cloud.speech.v2.IGetRecognizerRequest=} [properties] Properties to set
                         * @returns {google.cloud.speech.v2.GetRecognizerRequest} GetRecognizerRequest instance
                         */
                        GetRecognizerRequest.create = function create(properties) {
                            return new GetRecognizerRequest(properties);
                        };
    
                        /**
                         * Encodes the specified GetRecognizerRequest message. Does not implicitly {@link google.cloud.speech.v2.GetRecognizerRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.speech.v2.GetRecognizerRequest
                         * @static
                         * @param {google.cloud.speech.v2.IGetRecognizerRequest} message GetRecognizerRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetRecognizerRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GetRecognizerRequest message, length delimited. Does not implicitly {@link google.cloud.speech.v2.GetRecognizerRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.speech.v2.GetRecognizerRequest
                         * @static
                         * @param {google.cloud.speech.v2.IGetRecognizerRequest} message GetRecognizerRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetRecognizerRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GetRecognizerRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.speech.v2.GetRecognizerRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.speech.v2.GetRecognizerRequest} GetRecognizerRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetRecognizerRequest.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.speech.v2.GetRecognizerRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GetRecognizerRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.speech.v2.GetRecognizerRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.speech.v2.GetRecognizerRequest} GetRecognizerRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetRecognizerRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GetRecognizerRequest message.
                         * @function verify
                         * @memberof google.cloud.speech.v2.GetRecognizerRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GetRecognizerRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a GetRecognizerRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.speech.v2.GetRecognizerRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.speech.v2.GetRecognizerRequest} GetRecognizerRequest
                         */
                        GetRecognizerRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.speech.v2.GetRecognizerRequest)
                                return object;
                            var message = new $root.google.cloud.speech.v2.GetRecognizerRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GetRecognizerRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.speech.v2.GetRecognizerRequest
                         * @static
                         * @param {google.cloud.speech.v2.GetRecognizerRequest} message GetRecognizerRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GetRecognizerRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this GetRecognizerRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.speech.v2.GetRecognizerRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GetRecognizerRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GetRecognizerRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.speech.v2.GetRecognizerRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GetRecognizerRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.speech.v2.GetRecognizerRequest";
                        };
    
                        return GetRecognizerRequest;
                    })();
    
                    v2.UpdateRecognizerRequest = (function() {
    
                        /**
                         * Properties of an UpdateRecognizerRequest.
                         * @memberof google.cloud.speech.v2
                         * @interface IUpdateRecognizerRequest
                         * @property {google.cloud.speech.v2.IRecognizer|null} [recognizer] UpdateRecognizerRequest recognizer
                         * @property {google.protobuf.IFieldMask|null} [updateMask] UpdateRecognizerRequest updateMask
                         * @property {boolean|null} [validateOnly] UpdateRecognizerRequest validateOnly
                         */
    
                        /**
                         * Constructs a new UpdateRecognizerRequest.
                         * @memberof google.cloud.speech.v2
                         * @classdesc Represents an UpdateRecognizerRequest.
                         * @implements IUpdateRecognizerRequest
                         * @constructor
                         * @param {google.cloud.speech.v2.IUpdateRecognizerRequest=} [properties] Properties to set
                         */
                        function UpdateRecognizerRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * UpdateRecognizerRequest recognizer.
                         * @member {google.cloud.speech.v2.IRecognizer|null|undefined} recognizer
                         * @memberof google.cloud.speech.v2.UpdateRecognizerRequest
                         * @instance
                         */
                        UpdateRecognizerRequest.prototype.recognizer = null;
    
                        /**
                         * UpdateRecognizerRequest updateMask.
                         * @member {google.protobuf.IFieldMask|null|undefined} updateMask
                         * @memberof google.cloud.speech.v2.UpdateRecognizerRequest
                         * @instance
                         */
                        UpdateRecognizerRequest.prototype.updateMask = null;
    
                        /**
                         * UpdateRecognizerRequest validateOnly.
                         * @member {boolean} validateOnly
                         * @memberof google.cloud.speech.v2.UpdateRecognizerRequest
                         * @instance
                         */
                        UpdateRecognizerRequest.prototype.validateOnly = false;
    
                        /**
                         * Creates a new UpdateRecognizerRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.speech.v2.UpdateRecognizerRequest
                         * @static
                         * @param {google.cloud.speech.v2.IUpdateRecognizerRequest=} [properties] Properties to set
                         * @returns {google.cloud.speech.v2.UpdateRecognizerRequest} UpdateRecognizerRequest instance
                         */
                        UpdateRecognizerRequest.create = function create(properties) {
                            return new UpdateRecognizerRequest(properties);
                        };
    
                        /**
                         * Encodes the specified UpdateRecognizerRequest message. Does not implicitly {@link google.cloud.speech.v2.UpdateRecognizerRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.speech.v2.UpdateRecognizerRequest
                         * @static
                         * @param {google.cloud.speech.v2.IUpdateRecognizerRequest} message UpdateRecognizerRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateRecognizerRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.recognizer != null && Object.hasOwnProperty.call(message, "recognizer"))
                                $root.google.cloud.speech.v2.Recognizer.encode(message.recognizer, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.updateMask != null && Object.hasOwnProperty.call(message, "updateMask"))
                                $root.google.protobuf.FieldMask.encode(message.updateMask, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.validateOnly != null && Object.hasOwnProperty.call(message, "validateOnly"))
                                writer.uint32(/* id 4, wireType 0 =*/32).bool(message.validateOnly);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified UpdateRecognizerRequest message, length delimited. Does not implicitly {@link google.cloud.speech.v2.UpdateRecognizerRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.speech.v2.UpdateRecognizerRequest
                         * @static
                         * @param {google.cloud.speech.v2.IUpdateRecognizerRequest} message UpdateRecognizerRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateRecognizerRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an UpdateRecognizerRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.speech.v2.UpdateRecognizerRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.speech.v2.UpdateRecognizerRequest} UpdateRecognizerRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateRecognizerRequest.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.speech.v2.UpdateRecognizerRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        message.recognizer = $root.google.cloud.speech.v2.Recognizer.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.updateMask = $root.google.protobuf.FieldMask.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        message.validateOnly = reader.bool();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an UpdateRecognizerRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.speech.v2.UpdateRecognizerRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.speech.v2.UpdateRecognizerRequest} UpdateRecognizerRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateRecognizerRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an UpdateRecognizerRequest message.
                         * @function verify
                         * @memberof google.cloud.speech.v2.UpdateRecognizerRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        UpdateRecognizerRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.recognizer != null && message.hasOwnProperty("recognizer")) {
                                var error = $root.google.cloud.speech.v2.Recognizer.verify(message.recognizer);
                                if (error)
                                    return "recognizer." + error;
                            }
                            if (message.updateMask != null && message.hasOwnProperty("updateMask")) {
                                var error = $root.google.protobuf.FieldMask.verify(message.updateMask);
                                if (error)
                                    return "updateMask." + error;
                            }
                            if (message.validateOnly != null && message.hasOwnProperty("validateOnly"))
                                if (typeof message.validateOnly !== "boolean")
                                    return "validateOnly: boolean expected";
                            return null;
                        };
    
                        /**
                         * Creates an UpdateRecognizerRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.speech.v2.UpdateRecognizerRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.speech.v2.UpdateRecognizerRequest} UpdateRecognizerRequest
                         */
                        UpdateRecognizerRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.speech.v2.UpdateRecognizerRequest)
                                return object;
                            var message = new $root.google.cloud.speech.v2.UpdateRecognizerRequest();
                            if (object.recognizer != null) {
                                if (typeof object.recognizer !== "object")
                                    throw TypeError(".google.cloud.speech.v2.UpdateRecognizerRequest.recognizer: object expected");
                                message.recognizer = $root.google.cloud.speech.v2.Recognizer.fromObject(object.recognizer);
                            }
                            if (object.updateMask != null) {
                                if (typeof object.updateMask !== "object")
                                    throw TypeError(".google.cloud.speech.v2.UpdateRecognizerRequest.updateMask: object expected");
                                message.updateMask = $root.google.protobuf.FieldMask.fromObject(object.updateMask);
                            }
                            if (object.validateOnly != null)
                                message.validateOnly = Boolean(object.validateOnly);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an UpdateRecognizerRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.speech.v2.UpdateRecognizerRequest
                         * @static
                         * @param {google.cloud.speech.v2.UpdateRecognizerRequest} message UpdateRecognizerRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        UpdateRecognizerRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.recognizer = null;
                                object.updateMask = null;
                                object.validateOnly = false;
                            }
                            if (message.recognizer != null && message.hasOwnProperty("recognizer"))
                                object.recognizer = $root.google.cloud.speech.v2.Recognizer.toObject(message.recognizer, options);
                            if (message.updateMask != null && message.hasOwnProperty("updateMask"))
                                object.updateMask = $root.google.protobuf.FieldMask.toObject(message.updateMask, options);
                            if (message.validateOnly != null && message.hasOwnProperty("validateOnly"))
                                object.validateOnly = message.validateOnly;
                            return object;
                        };
    
                        /**
                         * Converts this UpdateRecognizerRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.speech.v2.UpdateRecognizerRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        UpdateRecognizerRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for UpdateRecognizerRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.speech.v2.UpdateRecognizerRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        UpdateRecognizerRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.speech.v2.UpdateRecognizerRequest";
                        };
    
                        return UpdateRecognizerRequest;
                    })();
    
                    v2.DeleteRecognizerRequest = (function() {
    
                        /**
                         * Properties of a DeleteRecognizerRequest.
                         * @memberof google.cloud.speech.v2
                         * @interface IDeleteRecognizerRequest
                         * @property {string|null} [name] DeleteRecognizerRequest name
                         * @property {boolean|null} [validateOnly] DeleteRecognizerRequest validateOnly
                         * @property {boolean|null} [allowMissing] DeleteRecognizerRequest allowMissing
                         * @property {string|null} [etag] DeleteRecognizerRequest etag
                         */
    
                        /**
                         * Constructs a new DeleteRecognizerRequest.
                         * @memberof google.cloud.speech.v2
                         * @classdesc Represents a DeleteRecognizerRequest.
                         * @implements IDeleteRecognizerRequest
                         * @constructor
                         * @param {google.cloud.speech.v2.IDeleteRecognizerRequest=} [properties] Properties to set
                         */
                        function DeleteRecognizerRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DeleteRecognizerRequest name.
                         * @member {string} name
                         * @memberof google.cloud.speech.v2.DeleteRecognizerRequest
                         * @instance
                         */
                        DeleteRecognizerRequest.prototype.name = "";
    
                        /**
                         * DeleteRecognizerRequest validateOnly.
                         * @member {boolean} validateOnly
                         * @memberof google.cloud.speech.v2.DeleteRecognizerRequest
                         * @instance
                         */
                        DeleteRecognizerRequest.prototype.validateOnly = false;
    
                        /**
                         * DeleteRecognizerRequest allowMissing.
                         * @member {boolean} allowMissing
                         * @memberof google.cloud.speech.v2.DeleteRecognizerRequest
                         * @instance
                         */
                        DeleteRecognizerRequest.prototype.allowMissing = false;
    
                        /**
                         * DeleteRecognizerRequest etag.
                         * @member {string} etag
                         * @memberof google.cloud.speech.v2.DeleteRecognizerRequest
                         * @instance
                         */
                        DeleteRecognizerRequest.prototype.etag = "";
    
                        /**
                         * Creates a new DeleteRecognizerRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.speech.v2.DeleteRecognizerRequest
                         * @static
                         * @param {google.cloud.speech.v2.IDeleteRecognizerRequest=} [properties] Properties to set
                         * @returns {google.cloud.speech.v2.DeleteRecognizerRequest} DeleteRecognizerRequest instance
                         */
                        DeleteRecognizerRequest.create = function create(properties) {
                            return new DeleteRecognizerRequest(properties);
                        };
    
                        /**
                         * Encodes the specified DeleteRecognizerRequest message. Does not implicitly {@link google.cloud.speech.v2.DeleteRecognizerRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.speech.v2.DeleteRecognizerRequest
                         * @static
                         * @param {google.cloud.speech.v2.IDeleteRecognizerRequest} message DeleteRecognizerRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteRecognizerRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.validateOnly != null && Object.hasOwnProperty.call(message, "validateOnly"))
                                writer.uint32(/* id 2, wireType 0 =*/16).bool(message.validateOnly);
                            if (message.etag != null && Object.hasOwnProperty.call(message, "etag"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.etag);
                            if (message.allowMissing != null && Object.hasOwnProperty.call(message, "allowMissing"))
                                writer.uint32(/* id 4, wireType 0 =*/32).bool(message.allowMissing);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DeleteRecognizerRequest message, length delimited. Does not implicitly {@link google.cloud.speech.v2.DeleteRecognizerRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.speech.v2.DeleteRecognizerRequest
                         * @static
                         * @param {google.cloud.speech.v2.IDeleteRecognizerRequest} message DeleteRecognizerRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteRecognizerRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DeleteRecognizerRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.speech.v2.DeleteRecognizerRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.speech.v2.DeleteRecognizerRequest} DeleteRecognizerRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteRecognizerRequest.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.speech.v2.DeleteRecognizerRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.validateOnly = reader.bool();
                                        break;
                                    }
                                case 4: {
                                        message.allowMissing = reader.bool();
                                        break;
                                    }
                                case 3: {
                                        message.etag = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DeleteRecognizerRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.speech.v2.DeleteRecognizerRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.speech.v2.DeleteRecognizerRequest} DeleteRecognizerRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteRecognizerRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DeleteRecognizerRequest message.
                         * @function verify
                         * @memberof google.cloud.speech.v2.DeleteRecognizerRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DeleteRecognizerRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.validateOnly != null && message.hasOwnProperty("validateOnly"))
                                if (typeof message.validateOnly !== "boolean")
                                    return "validateOnly: boolean expected";
                            if (message.allowMissing != null && message.hasOwnProperty("allowMissing"))
                                if (typeof message.allowMissing !== "boolean")
                                    return "allowMissing: boolean expected";
                            if (message.etag != null && message.hasOwnProperty("etag"))
                                if (!$util.isString(message.etag))
                                    return "etag: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a DeleteRecognizerRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.speech.v2.DeleteRecognizerRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.speech.v2.DeleteRecognizerRequest} DeleteRecognizerRequest
                         */
                        DeleteRecognizerRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.speech.v2.DeleteRecognizerRequest)
                                return object;
                            var message = new $root.google.cloud.speech.v2.DeleteRecognizerRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.validateOnly != null)
                                message.validateOnly = Boolean(object.validateOnly);
                            if (object.allowMissing != null)
                                message.allowMissing = Boolean(object.allowMissing);
                            if (object.etag != null)
                                message.etag = String(object.etag);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DeleteRecognizerRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.speech.v2.DeleteRecognizerRequest
                         * @static
                         * @param {google.cloud.speech.v2.DeleteRecognizerRequest} message DeleteRecognizerRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DeleteRecognizerRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.validateOnly = false;
                                object.etag = "";
                                object.allowMissing = false;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.validateOnly != null && message.hasOwnProperty("validateOnly"))
                                object.validateOnly = message.validateOnly;
                            if (message.etag != null && message.hasOwnProperty("etag"))
                                object.etag = message.etag;
                            if (message.allowMissing != null && message.hasOwnProperty("allowMissing"))
                                object.allowMissing = message.allowMissing;
                            return object;
                        };
    
                        /**
                         * Converts this DeleteRecognizerRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.speech.v2.DeleteRecognizerRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DeleteRecognizerRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for DeleteRecognizerRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.speech.v2.DeleteRecognizerRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        DeleteRecognizerRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.speech.v2.DeleteRecognizerRequest";
                        };
    
                        return DeleteRecognizerRequest;
                    })();
    
                    v2.UndeleteRecognizerRequest = (function() {
    
                        /**
                         * Properties of an UndeleteRecognizerRequest.
                         * @memberof google.cloud.speech.v2
                         * @interface IUndeleteRecognizerRequest
                         * @property {string|null} [name] UndeleteRecognizerRequest name
                         * @property {boolean|null} [validateOnly] UndeleteRecognizerRequest validateOnly
                         * @property {string|null} [etag] UndeleteRecognizerRequest etag
                         */
    
                        /**
                         * Constructs a new UndeleteRecognizerRequest.
                         * @memberof google.cloud.speech.v2
                         * @classdesc Represents an UndeleteRecognizerRequest.
                         * @implements IUndeleteRecognizerRequest
                         * @constructor
                         * @param {google.cloud.speech.v2.IUndeleteRecognizerRequest=} [properties] Properties to set
                         */
                        function UndeleteRecognizerRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * UndeleteRecognizerRequest name.
                         * @member {string} name
                         * @memberof google.cloud.speech.v2.UndeleteRecognizerRequest
                         * @instance
                         */
                        UndeleteRecognizerRequest.prototype.name = "";
    
                        /**
                         * UndeleteRecognizerRequest validateOnly.
                         * @member {boolean} validateOnly
                         * @memberof google.cloud.speech.v2.UndeleteRecognizerRequest
                         * @instance
                         */
                        UndeleteRecognizerRequest.prototype.validateOnly = false;
    
                        /**
                         * UndeleteRecognizerRequest etag.
                         * @member {string} etag
                         * @memberof google.cloud.speech.v2.UndeleteRecognizerRequest
                         * @instance
                         */
                        UndeleteRecognizerRequest.prototype.etag = "";
    
                        /**
                         * Creates a new UndeleteRecognizerRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.speech.v2.UndeleteRecognizerRequest
                         * @static
                         * @param {google.cloud.speech.v2.IUndeleteRecognizerRequest=} [properties] Properties to set
                         * @returns {google.cloud.speech.v2.UndeleteRecognizerRequest} UndeleteRecognizerRequest instance
                         */
                        UndeleteRecognizerRequest.create = function create(properties) {
                            return new UndeleteRecognizerRequest(properties);
                        };
    
                        /**
                         * Encodes the specified UndeleteRecognizerRequest message. Does not implicitly {@link google.cloud.speech.v2.UndeleteRecognizerRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.speech.v2.UndeleteRecognizerRequest
                         * @static
                         * @param {google.cloud.speech.v2.IUndeleteRecognizerRequest} message UndeleteRecognizerRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UndeleteRecognizerRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.validateOnly != null && Object.hasOwnProperty.call(message, "validateOnly"))
                                writer.uint32(/* id 3, wireType 0 =*/24).bool(message.validateOnly);
                            if (message.etag != null && Object.hasOwnProperty.call(message, "etag"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.etag);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified UndeleteRecognizerRequest message, length delimited. Does not implicitly {@link google.cloud.speech.v2.UndeleteRecognizerRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.speech.v2.UndeleteRecognizerRequest
                         * @static
                         * @param {google.cloud.speech.v2.IUndeleteRecognizerRequest} message UndeleteRecognizerRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UndeleteRecognizerRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an UndeleteRecognizerRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.speech.v2.UndeleteRecognizerRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.speech.v2.UndeleteRecognizerRequest} UndeleteRecognizerRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UndeleteRecognizerRequest.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.speech.v2.UndeleteRecognizerRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.validateOnly = reader.bool();
                                        break;
                                    }
                                case 4: {
                                        message.etag = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an UndeleteRecognizerRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.speech.v2.UndeleteRecognizerRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.speech.v2.UndeleteRecognizerRequest} UndeleteRecognizerRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UndeleteRecognizerRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an UndeleteRecognizerRequest message.
                         * @function verify
                         * @memberof google.cloud.speech.v2.UndeleteRecognizerRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        UndeleteRecognizerRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.validateOnly != null && message.hasOwnProperty("validateOnly"))
                                if (typeof message.validateOnly !== "boolean")
                                    return "validateOnly: boolean expected";
                            if (message.etag != null && message.hasOwnProperty("etag"))
                                if (!$util.isString(message.etag))
                                    return "etag: string expected";
                            return null;
                        };
    
                        /**
                         * Creates an UndeleteRecognizerRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.speech.v2.UndeleteRecognizerRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.speech.v2.UndeleteRecognizerRequest} UndeleteRecognizerRequest
                         */
                        UndeleteRecognizerRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.speech.v2.UndeleteRecognizerRequest)
                                return object;
                            var message = new $root.google.cloud.speech.v2.UndeleteRecognizerRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.validateOnly != null)
                                message.validateOnly = Boolean(object.validateOnly);
                            if (object.etag != null)
                                message.etag = String(object.etag);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an UndeleteRecognizerRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.speech.v2.UndeleteRecognizerRequest
                         * @static
                         * @param {google.cloud.speech.v2.UndeleteRecognizerRequest} message UndeleteRecognizerRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        UndeleteRecognizerRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.validateOnly = false;
                                object.etag = "";
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.validateOnly != null && message.hasOwnProperty("validateOnly"))
                                object.validateOnly = message.validateOnly;
                            if (message.etag != null && message.hasOwnProperty("etag"))
                                object.etag = message.etag;
                            return object;
                        };
    
                        /**
                         * Converts this UndeleteRecognizerRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.speech.v2.UndeleteRecognizerRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        UndeleteRecognizerRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for UndeleteRecognizerRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.speech.v2.UndeleteRecognizerRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        UndeleteRecognizerRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.speech.v2.UndeleteRecognizerRequest";
                        };
    
                        return UndeleteRecognizerRequest;
                    })();
    
                    v2.Recognizer = (function() {
    
                        /**
                         * Properties of a Recognizer.
                         * @memberof google.cloud.speech.v2
                         * @interface IRecognizer
                         * @property {string|null} [name] Recognizer name
                         * @property {string|null} [uid] Recognizer uid
                         * @property {string|null} [displayName] Recognizer displayName
                         * @property {string|null} [model] Recognizer model
                         * @property {Array.<string>|null} [languageCodes] Recognizer languageCodes
                         * @property {google.cloud.speech.v2.IRecognitionConfig|null} [defaultRecognitionConfig] Recognizer defaultRecognitionConfig
                         * @property {Object.<string,string>|null} [annotations] Recognizer annotations
                         * @property {google.cloud.speech.v2.Recognizer.State|null} [state] Recognizer state
                         * @property {google.protobuf.ITimestamp|null} [createTime] Recognizer createTime
                         * @property {google.protobuf.ITimestamp|null} [updateTime] Recognizer updateTime
                         * @property {google.protobuf.ITimestamp|null} [deleteTime] Recognizer deleteTime
                         * @property {google.protobuf.ITimestamp|null} [expireTime] Recognizer expireTime
                         * @property {string|null} [etag] Recognizer etag
                         * @property {boolean|null} [reconciling] Recognizer reconciling
                         * @property {string|null} [kmsKeyName] Recognizer kmsKeyName
                         * @property {string|null} [kmsKeyVersionName] Recognizer kmsKeyVersionName
                         */
    
                        /**
                         * Constructs a new Recognizer.
                         * @memberof google.cloud.speech.v2
                         * @classdesc Represents a Recognizer.
                         * @implements IRecognizer
                         * @constructor
                         * @param {google.cloud.speech.v2.IRecognizer=} [properties] Properties to set
                         */
                        function Recognizer(properties) {
                            this.languageCodes = [];
                            this.annotations = {};
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Recognizer name.
                         * @member {string} name
                         * @memberof google.cloud.speech.v2.Recognizer
                         * @instance
                         */
                        Recognizer.prototype.name = "";
    
                        /**
                         * Recognizer uid.
                         * @member {string} uid
                         * @memberof google.cloud.speech.v2.Recognizer
                         * @instance
                         */
                        Recognizer.prototype.uid = "";
    
                        /**
                         * Recognizer displayName.
                         * @member {string} displayName
                         * @memberof google.cloud.speech.v2.Recognizer
                         * @instance
                         */
                        Recognizer.prototype.displayName = "";
    
                        /**
                         * Recognizer model.
                         * @member {string} model
                         * @memberof google.cloud.speech.v2.Recognizer
                         * @instance
                         */
                        Recognizer.prototype.model = "";
    
                        /**
                         * Recognizer languageCodes.
                         * @member {Array.<string>} languageCodes
                         * @memberof google.cloud.speech.v2.Recognizer
                         * @instance
                         */
                        Recognizer.prototype.languageCodes = $util.emptyArray;
    
                        /**
                         * Recognizer defaultRecognitionConfig.
                         * @member {google.cloud.speech.v2.IRecognitionConfig|null|undefined} defaultRecognitionConfig
                         * @memberof google.cloud.speech.v2.Recognizer
                         * @instance
                         */
                        Recognizer.prototype.defaultRecognitionConfig = null;
    
                        /**
                         * Recognizer annotations.
                         * @member {Object.<string,string>} annotations
                         * @memberof google.cloud.speech.v2.Recognizer
                         * @instance
                         */
                        Recognizer.prototype.annotations = $util.emptyObject;
    
                        /**
                         * Recognizer state.
                         * @member {google.cloud.speech.v2.Recognizer.State} state
                         * @memberof google.cloud.speech.v2.Recognizer
                         * @instance
                         */
                        Recognizer.prototype.state = 0;
    
                        /**
                         * Recognizer createTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} createTime
                         * @memberof google.cloud.speech.v2.Recognizer
                         * @instance
                         */
                        Recognizer.prototype.createTime = null;
    
                        /**
                         * Recognizer updateTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} updateTime
                         * @memberof google.cloud.speech.v2.Recognizer
                         * @instance
                         */
                        Recognizer.prototype.updateTime = null;
    
                        /**
                         * Recognizer deleteTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} deleteTime
                         * @memberof google.cloud.speech.v2.Recognizer
                         * @instance
                         */
                        Recognizer.prototype.deleteTime = null;
    
                        /**
                         * Recognizer expireTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} expireTime
                         * @memberof google.cloud.speech.v2.Recognizer
                         * @instance
                         */
                        Recognizer.prototype.expireTime = null;
    
                        /**
                         * Recognizer etag.
                         * @member {string} etag
                         * @memberof google.cloud.speech.v2.Recognizer
                         * @instance
                         */
                        Recognizer.prototype.etag = "";
    
                        /**
                         * Recognizer reconciling.
                         * @member {boolean} reconciling
                         * @memberof google.cloud.speech.v2.Recognizer
                         * @instance
                         */
                        Recognizer.prototype.reconciling = false;
    
                        /**
                         * Recognizer kmsKeyName.
                         * @member {string} kmsKeyName
                         * @memberof google.cloud.speech.v2.Recognizer
                         * @instance
                         */
                        Recognizer.prototype.kmsKeyName = "";
    
                        /**
                         * Recognizer kmsKeyVersionName.
                         * @member {string} kmsKeyVersionName
                         * @memberof google.cloud.speech.v2.Recognizer
                         * @instance
                         */
                        Recognizer.prototype.kmsKeyVersionName = "";
    
                        /**
                         * Creates a new Recognizer instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.speech.v2.Recognizer
                         * @static
                         * @param {google.cloud.speech.v2.IRecognizer=} [properties] Properties to set
                         * @returns {google.cloud.speech.v2.Recognizer} Recognizer instance
                         */
                        Recognizer.create = function create(properties) {
                            return new Recognizer(properties);
                        };
    
                        /**
                         * Encodes the specified Recognizer message. Does not implicitly {@link google.cloud.speech.v2.Recognizer.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.speech.v2.Recognizer
                         * @static
                         * @param {google.cloud.speech.v2.IRecognizer} message Recognizer message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Recognizer.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.uid != null && Object.hasOwnProperty.call(message, "uid"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.uid);
                            if (message.displayName != null && Object.hasOwnProperty.call(message, "displayName"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.displayName);
                            if (message.model != null && Object.hasOwnProperty.call(message, "model"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.model);
                            if (message.defaultRecognitionConfig != null && Object.hasOwnProperty.call(message, "defaultRecognitionConfig"))
                                $root.google.cloud.speech.v2.RecognitionConfig.encode(message.defaultRecognitionConfig, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                            if (message.annotations != null && Object.hasOwnProperty.call(message, "annotations"))
                                for (var keys = Object.keys(message.annotations), i = 0; i < keys.length; ++i)
                                    writer.uint32(/* id 7, wireType 2 =*/58).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.annotations[keys[i]]).ldelim();
                            if (message.state != null && Object.hasOwnProperty.call(message, "state"))
                                writer.uint32(/* id 8, wireType 0 =*/64).int32(message.state);
                            if (message.createTime != null && Object.hasOwnProperty.call(message, "createTime"))
                                $root.google.protobuf.Timestamp.encode(message.createTime, writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                            if (message.updateTime != null && Object.hasOwnProperty.call(message, "updateTime"))
                                $root.google.protobuf.Timestamp.encode(message.updateTime, writer.uint32(/* id 10, wireType 2 =*/82).fork()).ldelim();
                            if (message.deleteTime != null && Object.hasOwnProperty.call(message, "deleteTime"))
                                $root.google.protobuf.Timestamp.encode(message.deleteTime, writer.uint32(/* id 11, wireType 2 =*/90).fork()).ldelim();
                            if (message.etag != null && Object.hasOwnProperty.call(message, "etag"))
                                writer.uint32(/* id 12, wireType 2 =*/98).string(message.etag);
                            if (message.reconciling != null && Object.hasOwnProperty.call(message, "reconciling"))
                                writer.uint32(/* id 13, wireType 0 =*/104).bool(message.reconciling);
                            if (message.expireTime != null && Object.hasOwnProperty.call(message, "expireTime"))
                                $root.google.protobuf.Timestamp.encode(message.expireTime, writer.uint32(/* id 14, wireType 2 =*/114).fork()).ldelim();
                            if (message.kmsKeyName != null && Object.hasOwnProperty.call(message, "kmsKeyName"))
                                writer.uint32(/* id 15, wireType 2 =*/122).string(message.kmsKeyName);
                            if (message.kmsKeyVersionName != null && Object.hasOwnProperty.call(message, "kmsKeyVersionName"))
                                writer.uint32(/* id 16, wireType 2 =*/130).string(message.kmsKeyVersionName);
                            if (message.languageCodes != null && message.languageCodes.length)
                                for (var i = 0; i < message.languageCodes.length; ++i)
                                    writer.uint32(/* id 17, wireType 2 =*/138).string(message.languageCodes[i]);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Recognizer message, length delimited. Does not implicitly {@link google.cloud.speech.v2.Recognizer.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.speech.v2.Recognizer
                         * @static
                         * @param {google.cloud.speech.v2.IRecognizer} message Recognizer message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Recognizer.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Recognizer message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.speech.v2.Recognizer
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.speech.v2.Recognizer} Recognizer
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Recognizer.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.speech.v2.Recognizer(), key, value;
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.uid = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.displayName = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.model = reader.string();
                                        break;
                                    }
                                case 17: {
                                        if (!(message.languageCodes && message.languageCodes.length))
                                            message.languageCodes = [];
                                        message.languageCodes.push(reader.string());
                                        break;
                                    }
                                case 6: {
                                        message.defaultRecognitionConfig = $root.google.cloud.speech.v2.RecognitionConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 7: {
                                        if (message.annotations === $util.emptyObject)
                                            message.annotations = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = "";
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = reader.string();
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.annotations[key] = value;
                                        break;
                                    }
                                case 8: {
                                        message.state = reader.int32();
                                        break;
                                    }
                                case 9: {
                                        message.createTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 10: {
                                        message.updateTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 11: {
                                        message.deleteTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 14: {
                                        message.expireTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 12: {
                                        message.etag = reader.string();
                                        break;
                                    }
                                case 13: {
                                        message.reconciling = reader.bool();
                                        break;
                                    }
                                case 15: {
                                        message.kmsKeyName = reader.string();
                                        break;
                                    }
                                case 16: {
                                        message.kmsKeyVersionName = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Recognizer message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.speech.v2.Recognizer
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.speech.v2.Recognizer} Recognizer
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Recognizer.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Recognizer message.
                         * @function verify
                         * @memberof google.cloud.speech.v2.Recognizer
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Recognizer.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.uid != null && message.hasOwnProperty("uid"))
                                if (!$util.isString(message.uid))
                                    return "uid: string expected";
                            if (message.displayName != null && message.hasOwnProperty("displayName"))
                                if (!$util.isString(message.displayName))
                                    return "displayName: string expected";
                            if (message.model != null && message.hasOwnProperty("model"))
                                if (!$util.isString(message.model))
                                    return "model: string expected";
                            if (message.languageCodes != null && message.hasOwnProperty("languageCodes")) {
                                if (!Array.isArray(message.languageCodes))
                                    return "languageCodes: array expected";
                                for (var i = 0; i < message.languageCodes.length; ++i)
                                    if (!$util.isString(message.languageCodes[i]))
                                        return "languageCodes: string[] expected";
                            }
                            if (message.defaultRecognitionConfig != null && message.hasOwnProperty("defaultRecognitionConfig")) {
                                var error = $root.google.cloud.speech.v2.RecognitionConfig.verify(message.defaultRecognitionConfig);
                                if (error)
                                    return "defaultRecognitionConfig." + error;
                            }
                            if (message.annotations != null && message.hasOwnProperty("annotations")) {
                                if (!$util.isObject(message.annotations))
                                    return "annotations: object expected";
                                var key = Object.keys(message.annotations);
                                for (var i = 0; i < key.length; ++i)
                                    if (!$util.isString(message.annotations[key[i]]))
                                        return "annotations: string{k:string} expected";
                            }
                            if (message.state != null && message.hasOwnProperty("state"))
                                switch (message.state) {
                                default:
                                    return "state: enum value expected";
                                case 0:
                                case 2:
                                case 4:
                                    break;
                                }
                            if (message.createTime != null && message.hasOwnProperty("createTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.createTime);
                                if (error)
                                    return "createTime." + error;
                            }
                            if (message.updateTime != null && message.hasOwnProperty("updateTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.updateTime);
                                if (error)
                                    return "updateTime." + error;
                            }
                            if (message.deleteTime != null && message.hasOwnProperty("deleteTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.deleteTime);
                                if (error)
                                    return "deleteTime." + error;
                            }
                            if (message.expireTime != null && message.hasOwnProperty("expireTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.expireTime);
                                if (error)
                                    return "expireTime." + error;
                            }
                            if (message.etag != null && message.hasOwnProperty("etag"))
                                if (!$util.isString(message.etag))
                                    return "etag: string expected";
                            if (message.reconciling != null && message.hasOwnProperty("reconciling"))
                                if (typeof message.reconciling !== "boolean")
                                    return "reconciling: boolean expected";
                            if (message.kmsKeyName != null && message.hasOwnProperty("kmsKeyName"))
                                if (!$util.isString(message.kmsKeyName))
                                    return "kmsKeyName: string expected";
                            if (message.kmsKeyVersionName != null && message.hasOwnProperty("kmsKeyVersionName"))
                                if (!$util.isString(message.kmsKeyVersionName))
                                    return "kmsKeyVersionName: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a Recognizer message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.speech.v2.Recognizer
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.speech.v2.Recognizer} Recognizer
                         */
                        Recognizer.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.speech.v2.Recognizer)
                                return object;
                            var message = new $root.google.cloud.speech.v2.Recognizer();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.uid != null)
                                message.uid = String(object.uid);
                            if (object.displayName != null)
                                message.displayName = String(object.displayName);
                            if (object.model != null)
                                message.model = String(object.model);
                            if (object.languageCodes) {
                                if (!Array.isArray(object.languageCodes))
                                    throw TypeError(".google.cloud.speech.v2.Recognizer.languageCodes: array expected");
                                message.languageCodes = [];
                                for (var i = 0; i < object.languageCodes.length; ++i)
                                    message.languageCodes[i] = String(object.languageCodes[i]);
                            }
                            if (object.defaultRecognitionConfig != null) {
                                if (typeof object.defaultRecognitionConfig !== "object")
                                    throw TypeError(".google.cloud.speech.v2.Recognizer.defaultRecognitionConfig: object expected");
                                message.defaultRecognitionConfig = $root.google.cloud.speech.v2.RecognitionConfig.fromObject(object.defaultRecognitionConfig);
                            }
                            if (object.annotations) {
                                if (typeof object.annotations !== "object")
                                    throw TypeError(".google.cloud.speech.v2.Recognizer.annotations: object expected");
                                message.annotations = {};
                                for (var keys = Object.keys(object.annotations), i = 0; i < keys.length; ++i)
                                    message.annotations[keys[i]] = String(object.annotations[keys[i]]);
                            }
                            switch (object.state) {
                            default:
                                if (typeof object.state === "number") {
                                    message.state = object.state;
                                    break;
                                }
                                break;
                            case "STATE_UNSPECIFIED":
                            case 0:
                                message.state = 0;
                                break;
                            case "ACTIVE":
                            case 2:
                                message.state = 2;
                                break;
                            case "DELETED":
                            case 4:
                                message.state = 4;
                                break;
                            }
                            if (object.createTime != null) {
                                if (typeof object.createTime !== "object")
                                    throw TypeError(".google.cloud.speech.v2.Recognizer.createTime: object expected");
                                message.createTime = $root.google.protobuf.Timestamp.fromObject(object.createTime);
                            }
                            if (object.updateTime != null) {
                                if (typeof object.updateTime !== "object")
                                    throw TypeError(".google.cloud.speech.v2.Recognizer.updateTime: object expected");
                                message.updateTime = $root.google.protobuf.Timestamp.fromObject(object.updateTime);
                            }
                            if (object.deleteTime != null) {
                                if (typeof object.deleteTime !== "object")
                                    throw TypeError(".google.cloud.speech.v2.Recognizer.deleteTime: object expected");
                                message.deleteTime = $root.google.protobuf.Timestamp.fromObject(object.deleteTime);
                            }
                            if (object.expireTime != null) {
                                if (typeof object.expireTime !== "object")
                                    throw TypeError(".google.cloud.speech.v2.Recognizer.expireTime: object expected");
                                message.expireTime = $root.google.protobuf.Timestamp.fromObject(object.expireTime);
                            }
                            if (object.etag != null)
                                message.etag = String(object.etag);
                            if (object.reconciling != null)
                                message.reconciling = Boolean(object.reconciling);
                            if (object.kmsKeyName != null)
                                message.kmsKeyName = String(object.kmsKeyName);
                            if (object.kmsKeyVersionName != null)
                                message.kmsKeyVersionName = String(object.kmsKeyVersionName);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Recognizer message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.speech.v2.Recognizer
                         * @static
                         * @param {google.cloud.speech.v2.Recognizer} message Recognizer
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Recognizer.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.languageCodes = [];
                            if (options.objects || options.defaults)
                                object.annotations = {};
                            if (options.defaults) {
                                object.name = "";
                                object.uid = "";
                                object.displayName = "";
                                object.model = "";
                                object.defaultRecognitionConfig = null;
                                object.state = options.enums === String ? "STATE_UNSPECIFIED" : 0;
                                object.createTime = null;
                                object.updateTime = null;
                                object.deleteTime = null;
                                object.etag = "";
                                object.reconciling = false;
                                object.expireTime = null;
                                object.kmsKeyName = "";
                                object.kmsKeyVersionName = "";
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.uid != null && message.hasOwnProperty("uid"))
                                object.uid = message.uid;
                            if (message.displayName != null && message.hasOwnProperty("displayName"))
                                object.displayName = message.displayName;
                            if (message.model != null && message.hasOwnProperty("model"))
                                object.model = message.model;
                            if (message.defaultRecognitionConfig != null && message.hasOwnProperty("defaultRecognitionConfig"))
                                object.defaultRecognitionConfig = $root.google.cloud.speech.v2.RecognitionConfig.toObject(message.defaultRecognitionConfig, options);
                            var keys2;
                            if (message.annotations && (keys2 = Object.keys(message.annotations)).length) {
                                object.annotations = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.annotations[keys2[j]] = message.annotations[keys2[j]];
                            }
                            if (message.state != null && message.hasOwnProperty("state"))
                                object.state = options.enums === String ? $root.google.cloud.speech.v2.Recognizer.State[message.state] === undefined ? message.state : $root.google.cloud.speech.v2.Recognizer.State[message.state] : message.state;
                            if (message.createTime != null && message.hasOwnProperty("createTime"))
                                object.createTime = $root.google.protobuf.Timestamp.toObject(message.createTime, options);
                            if (message.updateTime != null && message.hasOwnProperty("updateTime"))
                                object.updateTime = $root.google.protobuf.Timestamp.toObject(message.updateTime, options);
                            if (message.deleteTime != null && message.hasOwnProperty("deleteTime"))
                                object.deleteTime = $root.google.protobuf.Timestamp.toObject(message.deleteTime, options);
                            if (message.etag != null && message.hasOwnProperty("etag"))
                                object.etag = message.etag;
                            if (message.reconciling != null && message.hasOwnProperty("reconciling"))
                                object.reconciling = message.reconciling;
                            if (message.expireTime != null && message.hasOwnProperty("expireTime"))
                                object.expireTime = $root.google.protobuf.Timestamp.toObject(message.expireTime, options);
                            if (message.kmsKeyName != null && message.hasOwnProperty("kmsKeyName"))
                                object.kmsKeyName = message.kmsKeyName;
                            if (message.kmsKeyVersionName != null && message.hasOwnProperty("kmsKeyVersionName"))
                                object.kmsKeyVersionName = message.kmsKeyVersionName;
                            if (message.languageCodes && message.languageCodes.length) {
                                object.languageCodes = [];
                                for (var j = 0; j < message.languageCodes.length; ++j)
                                    object.languageCodes[j] = message.languageCodes[j];
                            }
                            return object;
                        };
    
                        /**
                         * Converts this Recognizer to JSON.
                         * @function toJSON
                         * @memberof google.cloud.speech.v2.Recognizer
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Recognizer.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Recognizer
                         * @function getTypeUrl
                         * @memberof google.cloud.speech.v2.Recognizer
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Recognizer.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.speech.v2.Recognizer";
                        };
    
                        /**
                         * State enum.
                         * @name google.cloud.speech.v2.Recognizer.State
                         * @enum {number}
                         * @property {number} STATE_UNSPECIFIED=0 STATE_UNSPECIFIED value
                         * @property {number} ACTIVE=2 ACTIVE value
                         * @property {number} DELETED=4 DELETED value
                         */
                        Recognizer.State = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "STATE_UNSPECIFIED"] = 0;
                            values[valuesById[2] = "ACTIVE"] = 2;
                            values[valuesById[4] = "DELETED"] = 4;
                            return values;
                        })();
    
                        return Recognizer;
                    })();
    
                    v2.AutoDetectDecodingConfig = (function() {
    
                        /**
                         * Properties of an AutoDetectDecodingConfig.
                         * @memberof google.cloud.speech.v2
                         * @interface IAutoDetectDecodingConfig
                         */
    
                        /**
                         * Constructs a new AutoDetectDecodingConfig.
                         * @memberof google.cloud.speech.v2
                         * @classdesc Represents an AutoDetectDecodingConfig.
                         * @implements IAutoDetectDecodingConfig
                         * @constructor
                         * @param {google.cloud.speech.v2.IAutoDetectDecodingConfig=} [properties] Properties to set
                         */
                        function AutoDetectDecodingConfig(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Creates a new AutoDetectDecodingConfig instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.speech.v2.AutoDetectDecodingConfig
                         * @static
                         * @param {google.cloud.speech.v2.IAutoDetectDecodingConfig=} [properties] Properties to set
                         * @returns {google.cloud.speech.v2.AutoDetectDecodingConfig} AutoDetectDecodingConfig instance
                         */
                        AutoDetectDecodingConfig.create = function create(properties) {
                            return new AutoDetectDecodingConfig(properties);
                        };
    
                        /**
                         * Encodes the specified AutoDetectDecodingConfig message. Does not implicitly {@link google.cloud.speech.v2.AutoDetectDecodingConfig.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.speech.v2.AutoDetectDecodingConfig
                         * @static
                         * @param {google.cloud.speech.v2.IAutoDetectDecodingConfig} message AutoDetectDecodingConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        AutoDetectDecodingConfig.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified AutoDetectDecodingConfig message, length delimited. Does not implicitly {@link google.cloud.speech.v2.AutoDetectDecodingConfig.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.speech.v2.AutoDetectDecodingConfig
                         * @static
                         * @param {google.cloud.speech.v2.IAutoDetectDecodingConfig} message AutoDetectDecodingConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        AutoDetectDecodingConfig.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an AutoDetectDecodingConfig message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.speech.v2.AutoDetectDecodingConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.speech.v2.AutoDetectDecodingConfig} AutoDetectDecodingConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        AutoDetectDecodingConfig.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.speech.v2.AutoDetectDecodingConfig();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an AutoDetectDecodingConfig message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.speech.v2.AutoDetectDecodingConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.speech.v2.AutoDetectDecodingConfig} AutoDetectDecodingConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        AutoDetectDecodingConfig.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an AutoDetectDecodingConfig message.
                         * @function verify
                         * @memberof google.cloud.speech.v2.AutoDetectDecodingConfig
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        AutoDetectDecodingConfig.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            return null;
                        };
    
                        /**
                         * Creates an AutoDetectDecodingConfig message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.speech.v2.AutoDetectDecodingConfig
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.speech.v2.AutoDetectDecodingConfig} AutoDetectDecodingConfig
                         */
                        AutoDetectDecodingConfig.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.speech.v2.AutoDetectDecodingConfig)
                                return object;
                            return new $root.google.cloud.speech.v2.AutoDetectDecodingConfig();
                        };
    
                        /**
                         * Creates a plain object from an AutoDetectDecodingConfig message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.speech.v2.AutoDetectDecodingConfig
                         * @static
                         * @param {google.cloud.speech.v2.AutoDetectDecodingConfig} message AutoDetectDecodingConfig
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        AutoDetectDecodingConfig.toObject = function toObject() {
                            return {};
                        };
    
                        /**
                         * Converts this AutoDetectDecodingConfig to JSON.
                         * @function toJSON
                         * @memberof google.cloud.speech.v2.AutoDetectDecodingConfig
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        AutoDetectDecodingConfig.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for AutoDetectDecodingConfig
                         * @function getTypeUrl
                         * @memberof google.cloud.speech.v2.AutoDetectDecodingConfig
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        AutoDetectDecodingConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.speech.v2.AutoDetectDecodingConfig";
                        };
    
                        return AutoDetectDecodingConfig;
                    })();
    
                    v2.ExplicitDecodingConfig = (function() {
    
                        /**
                         * Properties of an ExplicitDecodingConfig.
                         * @memberof google.cloud.speech.v2
                         * @interface IExplicitDecodingConfig
                         * @property {google.cloud.speech.v2.ExplicitDecodingConfig.AudioEncoding|null} [encoding] ExplicitDecodingConfig encoding
                         * @property {number|null} [sampleRateHertz] ExplicitDecodingConfig sampleRateHertz
                         * @property {number|null} [audioChannelCount] ExplicitDecodingConfig audioChannelCount
                         */
    
                        /**
                         * Constructs a new ExplicitDecodingConfig.
                         * @memberof google.cloud.speech.v2
                         * @classdesc Represents an ExplicitDecodingConfig.
                         * @implements IExplicitDecodingConfig
                         * @constructor
                         * @param {google.cloud.speech.v2.IExplicitDecodingConfig=} [properties] Properties to set
                         */
                        function ExplicitDecodingConfig(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ExplicitDecodingConfig encoding.
                         * @member {google.cloud.speech.v2.ExplicitDecodingConfig.AudioEncoding} encoding
                         * @memberof google.cloud.speech.v2.ExplicitDecodingConfig
                         * @instance
                         */
                        ExplicitDecodingConfig.prototype.encoding = 0;
    
                        /**
                         * ExplicitDecodingConfig sampleRateHertz.
                         * @member {number} sampleRateHertz
                         * @memberof google.cloud.speech.v2.ExplicitDecodingConfig
                         * @instance
                         */
                        ExplicitDecodingConfig.prototype.sampleRateHertz = 0;
    
                        /**
                         * ExplicitDecodingConfig audioChannelCount.
                         * @member {number} audioChannelCount
                         * @memberof google.cloud.speech.v2.ExplicitDecodingConfig
                         * @instance
                         */
                        ExplicitDecodingConfig.prototype.audioChannelCount = 0;
    
                        /**
                         * Creates a new ExplicitDecodingConfig instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.speech.v2.ExplicitDecodingConfig
                         * @static
                         * @param {google.cloud.speech.v2.IExplicitDecodingConfig=} [properties] Properties to set
                         * @returns {google.cloud.speech.v2.ExplicitDecodingConfig} ExplicitDecodingConfig instance
                         */
                        ExplicitDecodingConfig.create = function create(properties) {
                            return new ExplicitDecodingConfig(properties);
                        };
    
                        /**
                         * Encodes the specified ExplicitDecodingConfig message. Does not implicitly {@link google.cloud.speech.v2.ExplicitDecodingConfig.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.speech.v2.ExplicitDecodingConfig
                         * @static
                         * @param {google.cloud.speech.v2.IExplicitDecodingConfig} message ExplicitDecodingConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ExplicitDecodingConfig.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.encoding != null && Object.hasOwnProperty.call(message, "encoding"))
                                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.encoding);
                            if (message.sampleRateHertz != null && Object.hasOwnProperty.call(message, "sampleRateHertz"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.sampleRateHertz);
                            if (message.audioChannelCount != null && Object.hasOwnProperty.call(message, "audioChannelCount"))
                                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.audioChannelCount);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ExplicitDecodingConfig message, length delimited. Does not implicitly {@link google.cloud.speech.v2.ExplicitDecodingConfig.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.speech.v2.ExplicitDecodingConfig
                         * @static
                         * @param {google.cloud.speech.v2.IExplicitDecodingConfig} message ExplicitDecodingConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ExplicitDecodingConfig.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an ExplicitDecodingConfig message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.speech.v2.ExplicitDecodingConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.speech.v2.ExplicitDecodingConfig} ExplicitDecodingConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ExplicitDecodingConfig.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.speech.v2.ExplicitDecodingConfig();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        message.encoding = reader.int32();
                                        break;
                                    }
                                case 2: {
                                        message.sampleRateHertz = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        message.audioChannelCount = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an ExplicitDecodingConfig message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.speech.v2.ExplicitDecodingConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.speech.v2.ExplicitDecodingConfig} ExplicitDecodingConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ExplicitDecodingConfig.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an ExplicitDecodingConfig message.
                         * @function verify
                         * @memberof google.cloud.speech.v2.ExplicitDecodingConfig
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ExplicitDecodingConfig.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.encoding != null && message.hasOwnProperty("encoding"))
                                switch (message.encoding) {
                                default:
                                    return "encoding: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                case 5:
                                case 6:
                                case 7:
                                case 8:
                                case 9:
                                case 10:
                                case 11:
                                case 12:
                                    break;
                                }
                            if (message.sampleRateHertz != null && message.hasOwnProperty("sampleRateHertz"))
                                if (!$util.isInteger(message.sampleRateHertz))
                                    return "sampleRateHertz: integer expected";
                            if (message.audioChannelCount != null && message.hasOwnProperty("audioChannelCount"))
                                if (!$util.isInteger(message.audioChannelCount))
                                    return "audioChannelCount: integer expected";
                            return null;
                        };
    
                        /**
                         * Creates an ExplicitDecodingConfig message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.speech.v2.ExplicitDecodingConfig
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.speech.v2.ExplicitDecodingConfig} ExplicitDecodingConfig
                         */
                        ExplicitDecodingConfig.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.speech.v2.ExplicitDecodingConfig)
                                return object;
                            var message = new $root.google.cloud.speech.v2.ExplicitDecodingConfig();
                            switch (object.encoding) {
                            default:
                                if (typeof object.encoding === "number") {
                                    message.encoding = object.encoding;
                                    break;
                                }
                                break;
                            case "AUDIO_ENCODING_UNSPECIFIED":
                            case 0:
                                message.encoding = 0;
                                break;
                            case "LINEAR16":
                            case 1:
                                message.encoding = 1;
                                break;
                            case "MULAW":
                            case 2:
                                message.encoding = 2;
                                break;
                            case "ALAW":
                            case 3:
                                message.encoding = 3;
                                break;
                            case "AMR":
                            case 4:
                                message.encoding = 4;
                                break;
                            case "AMR_WB":
                            case 5:
                                message.encoding = 5;
                                break;
                            case "FLAC":
                            case 6:
                                message.encoding = 6;
                                break;
                            case "MP3":
                            case 7:
                                message.encoding = 7;
                                break;
                            case "OGG_OPUS":
                            case 8:
                                message.encoding = 8;
                                break;
                            case "WEBM_OPUS":
                            case 9:
                                message.encoding = 9;
                                break;
                            case "MP4_AAC":
                            case 10:
                                message.encoding = 10;
                                break;
                            case "M4A_AAC":
                            case 11:
                                message.encoding = 11;
                                break;
                            case "MOV_AAC":
                            case 12:
                                message.encoding = 12;
                                break;
                            }
                            if (object.sampleRateHertz != null)
                                message.sampleRateHertz = object.sampleRateHertz | 0;
                            if (object.audioChannelCount != null)
                                message.audioChannelCount = object.audioChannelCount | 0;
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an ExplicitDecodingConfig message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.speech.v2.ExplicitDecodingConfig
                         * @static
                         * @param {google.cloud.speech.v2.ExplicitDecodingConfig} message ExplicitDecodingConfig
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ExplicitDecodingConfig.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.encoding = options.enums === String ? "AUDIO_ENCODING_UNSPECIFIED" : 0;
                                object.sampleRateHertz = 0;
                                object.audioChannelCount = 0;
                            }
                            if (message.encoding != null && message.hasOwnProperty("encoding"))
                                object.encoding = options.enums === String ? $root.google.cloud.speech.v2.ExplicitDecodingConfig.AudioEncoding[message.encoding] === undefined ? message.encoding : $root.google.cloud.speech.v2.ExplicitDecodingConfig.AudioEncoding[message.encoding] : message.encoding;
                            if (message.sampleRateHertz != null && message.hasOwnProperty("sampleRateHertz"))
                                object.sampleRateHertz = message.sampleRateHertz;
                            if (message.audioChannelCount != null && message.hasOwnProperty("audioChannelCount"))
                                object.audioChannelCount = message.audioChannelCount;
                            return object;
                        };
    
                        /**
                         * Converts this ExplicitDecodingConfig to JSON.
                         * @function toJSON
                         * @memberof google.cloud.speech.v2.ExplicitDecodingConfig
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ExplicitDecodingConfig.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ExplicitDecodingConfig
                         * @function getTypeUrl
                         * @memberof google.cloud.speech.v2.ExplicitDecodingConfig
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ExplicitDecodingConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.speech.v2.ExplicitDecodingConfig";
                        };
    
                        /**
                         * AudioEncoding enum.
                         * @name google.cloud.speech.v2.ExplicitDecodingConfig.AudioEncoding
                         * @enum {number}
                         * @property {number} AUDIO_ENCODING_UNSPECIFIED=0 AUDIO_ENCODING_UNSPECIFIED value
                         * @property {number} LINEAR16=1 LINEAR16 value
                         * @property {number} MULAW=2 MULAW value
                         * @property {number} ALAW=3 ALAW value
                         * @property {number} AMR=4 AMR value
                         * @property {number} AMR_WB=5 AMR_WB value
                         * @property {number} FLAC=6 FLAC value
                         * @property {number} MP3=7 MP3 value
                         * @property {number} OGG_OPUS=8 OGG_OPUS value
                         * @property {number} WEBM_OPUS=9 WEBM_OPUS value
                         * @property {number} MP4_AAC=10 MP4_AAC value
                         * @property {number} M4A_AAC=11 M4A_AAC value
                         * @property {number} MOV_AAC=12 MOV_AAC value
                         */
                        ExplicitDecodingConfig.AudioEncoding = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "AUDIO_ENCODING_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "LINEAR16"] = 1;
                            values[valuesById[2] = "MULAW"] = 2;
                            values[valuesById[3] = "ALAW"] = 3;
                            values[valuesById[4] = "AMR"] = 4;
                            values[valuesById[5] = "AMR_WB"] = 5;
                            values[valuesById[6] = "FLAC"] = 6;
                            values[valuesById[7] = "MP3"] = 7;
                            values[valuesById[8] = "OGG_OPUS"] = 8;
                            values[valuesById[9] = "WEBM_OPUS"] = 9;
                            values[valuesById[10] = "MP4_AAC"] = 10;
                            values[valuesById[11] = "M4A_AAC"] = 11;
                            values[valuesById[12] = "MOV_AAC"] = 12;
                            return values;
                        })();
    
                        return ExplicitDecodingConfig;
                    })();
    
                    v2.SpeakerDiarizationConfig = (function() {
    
                        /**
                         * Properties of a SpeakerDiarizationConfig.
                         * @memberof google.cloud.speech.v2
                         * @interface ISpeakerDiarizationConfig
                         * @property {number|null} [minSpeakerCount] SpeakerDiarizationConfig minSpeakerCount
                         * @property {number|null} [maxSpeakerCount] SpeakerDiarizationConfig maxSpeakerCount
                         */
    
                        /**
                         * Constructs a new SpeakerDiarizationConfig.
                         * @memberof google.cloud.speech.v2
                         * @classdesc Represents a SpeakerDiarizationConfig.
                         * @implements ISpeakerDiarizationConfig
                         * @constructor
                         * @param {google.cloud.speech.v2.ISpeakerDiarizationConfig=} [properties] Properties to set
                         */
                        function SpeakerDiarizationConfig(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * SpeakerDiarizationConfig minSpeakerCount.
                         * @member {number} minSpeakerCount
                         * @memberof google.cloud.speech.v2.SpeakerDiarizationConfig
                         * @instance
                         */
                        SpeakerDiarizationConfig.prototype.minSpeakerCount = 0;
    
                        /**
                         * SpeakerDiarizationConfig maxSpeakerCount.
                         * @member {number} maxSpeakerCount
                         * @memberof google.cloud.speech.v2.SpeakerDiarizationConfig
                         * @instance
                         */
                        SpeakerDiarizationConfig.prototype.maxSpeakerCount = 0;
    
                        /**
                         * Creates a new SpeakerDiarizationConfig instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.speech.v2.SpeakerDiarizationConfig
                         * @static
                         * @param {google.cloud.speech.v2.ISpeakerDiarizationConfig=} [properties] Properties to set
                         * @returns {google.cloud.speech.v2.SpeakerDiarizationConfig} SpeakerDiarizationConfig instance
                         */
                        SpeakerDiarizationConfig.create = function create(properties) {
                            return new SpeakerDiarizationConfig(properties);
                        };
    
                        /**
                         * Encodes the specified SpeakerDiarizationConfig message. Does not implicitly {@link google.cloud.speech.v2.SpeakerDiarizationConfig.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.speech.v2.SpeakerDiarizationConfig
                         * @static
                         * @param {google.cloud.speech.v2.ISpeakerDiarizationConfig} message SpeakerDiarizationConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SpeakerDiarizationConfig.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.minSpeakerCount != null && Object.hasOwnProperty.call(message, "minSpeakerCount"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.minSpeakerCount);
                            if (message.maxSpeakerCount != null && Object.hasOwnProperty.call(message, "maxSpeakerCount"))
                                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.maxSpeakerCount);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified SpeakerDiarizationConfig message, length delimited. Does not implicitly {@link google.cloud.speech.v2.SpeakerDiarizationConfig.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.speech.v2.SpeakerDiarizationConfig
                         * @static
                         * @param {google.cloud.speech.v2.ISpeakerDiarizationConfig} message SpeakerDiarizationConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SpeakerDiarizationConfig.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a SpeakerDiarizationConfig message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.speech.v2.SpeakerDiarizationConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.speech.v2.SpeakerDiarizationConfig} SpeakerDiarizationConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SpeakerDiarizationConfig.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.speech.v2.SpeakerDiarizationConfig();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 2: {
                                        message.minSpeakerCount = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        message.maxSpeakerCount = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a SpeakerDiarizationConfig message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.speech.v2.SpeakerDiarizationConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.speech.v2.SpeakerDiarizationConfig} SpeakerDiarizationConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SpeakerDiarizationConfig.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a SpeakerDiarizationConfig message.
                         * @function verify
                         * @memberof google.cloud.speech.v2.SpeakerDiarizationConfig
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        SpeakerDiarizationConfig.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.minSpeakerCount != null && message.hasOwnProperty("minSpeakerCount"))
                                if (!$util.isInteger(message.minSpeakerCount))
                                    return "minSpeakerCount: integer expected";
                            if (message.maxSpeakerCount != null && message.hasOwnProperty("maxSpeakerCount"))
                                if (!$util.isInteger(message.maxSpeakerCount))
                                    return "maxSpeakerCount: integer expected";
                            return null;
                        };
    
                        /**
                         * Creates a SpeakerDiarizationConfig message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.speech.v2.SpeakerDiarizationConfig
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.speech.v2.SpeakerDiarizationConfig} SpeakerDiarizationConfig
                         */
                        SpeakerDiarizationConfig.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.speech.v2.SpeakerDiarizationConfig)
                                return object;
                            var message = new $root.google.cloud.speech.v2.SpeakerDiarizationConfig();
                            if (object.minSpeakerCount != null)
                                message.minSpeakerCount = object.minSpeakerCount | 0;
                            if (object.maxSpeakerCount != null)
                                message.maxSpeakerCount = object.maxSpeakerCount | 0;
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a SpeakerDiarizationConfig message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.speech.v2.SpeakerDiarizationConfig
                         * @static
                         * @param {google.cloud.speech.v2.SpeakerDiarizationConfig} message SpeakerDiarizationConfig
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        SpeakerDiarizationConfig.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.minSpeakerCount = 0;
                                object.maxSpeakerCount = 0;
                            }
                            if (message.minSpeakerCount != null && message.hasOwnProperty("minSpeakerCount"))
                                object.minSpeakerCount = message.minSpeakerCount;
                            if (message.maxSpeakerCount != null && message.hasOwnProperty("maxSpeakerCount"))
                                object.maxSpeakerCount = message.maxSpeakerCount;
                            return object;
                        };
    
                        /**
                         * Converts this SpeakerDiarizationConfig to JSON.
                         * @function toJSON
                         * @memberof google.cloud.speech.v2.SpeakerDiarizationConfig
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        SpeakerDiarizationConfig.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for SpeakerDiarizationConfig
                         * @function getTypeUrl
                         * @memberof google.cloud.speech.v2.SpeakerDiarizationConfig
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        SpeakerDiarizationConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.speech.v2.SpeakerDiarizationConfig";
                        };
    
                        return SpeakerDiarizationConfig;
                    })();
    
                    v2.RecognitionFeatures = (function() {
    
                        /**
                         * Properties of a RecognitionFeatures.
                         * @memberof google.cloud.speech.v2
                         * @interface IRecognitionFeatures
                         * @property {boolean|null} [profanityFilter] RecognitionFeatures profanityFilter
                         * @property {boolean|null} [enableWordTimeOffsets] RecognitionFeatures enableWordTimeOffsets
                         * @property {boolean|null} [enableWordConfidence] RecognitionFeatures enableWordConfidence
                         * @property {boolean|null} [enableAutomaticPunctuation] RecognitionFeatures enableAutomaticPunctuation
                         * @property {boolean|null} [enableSpokenPunctuation] RecognitionFeatures enableSpokenPunctuation
                         * @property {boolean|null} [enableSpokenEmojis] RecognitionFeatures enableSpokenEmojis
                         * @property {google.cloud.speech.v2.RecognitionFeatures.MultiChannelMode|null} [multiChannelMode] RecognitionFeatures multiChannelMode
                         * @property {google.cloud.speech.v2.ISpeakerDiarizationConfig|null} [diarizationConfig] RecognitionFeatures diarizationConfig
                         * @property {number|null} [maxAlternatives] RecognitionFeatures maxAlternatives
                         */
    
                        /**
                         * Constructs a new RecognitionFeatures.
                         * @memberof google.cloud.speech.v2
                         * @classdesc Represents a RecognitionFeatures.
                         * @implements IRecognitionFeatures
                         * @constructor
                         * @param {google.cloud.speech.v2.IRecognitionFeatures=} [properties] Properties to set
                         */
                        function RecognitionFeatures(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * RecognitionFeatures profanityFilter.
                         * @member {boolean} profanityFilter
                         * @memberof google.cloud.speech.v2.RecognitionFeatures
                         * @instance
                         */
                        RecognitionFeatures.prototype.profanityFilter = false;
    
                        /**
                         * RecognitionFeatures enableWordTimeOffsets.
                         * @member {boolean} enableWordTimeOffsets
                         * @memberof google.cloud.speech.v2.RecognitionFeatures
                         * @instance
                         */
                        RecognitionFeatures.prototype.enableWordTimeOffsets = false;
    
                        /**
                         * RecognitionFeatures enableWordConfidence.
                         * @member {boolean} enableWordConfidence
                         * @memberof google.cloud.speech.v2.RecognitionFeatures
                         * @instance
                         */
                        RecognitionFeatures.prototype.enableWordConfidence = false;
    
                        /**
                         * RecognitionFeatures enableAutomaticPunctuation.
                         * @member {boolean} enableAutomaticPunctuation
                         * @memberof google.cloud.speech.v2.RecognitionFeatures
                         * @instance
                         */
                        RecognitionFeatures.prototype.enableAutomaticPunctuation = false;
    
                        /**
                         * RecognitionFeatures enableSpokenPunctuation.
                         * @member {boolean} enableSpokenPunctuation
                         * @memberof google.cloud.speech.v2.RecognitionFeatures
                         * @instance
                         */
                        RecognitionFeatures.prototype.enableSpokenPunctuation = false;
    
                        /**
                         * RecognitionFeatures enableSpokenEmojis.
                         * @member {boolean} enableSpokenEmojis
                         * @memberof google.cloud.speech.v2.RecognitionFeatures
                         * @instance
                         */
                        RecognitionFeatures.prototype.enableSpokenEmojis = false;
    
                        /**
                         * RecognitionFeatures multiChannelMode.
                         * @member {google.cloud.speech.v2.RecognitionFeatures.MultiChannelMode} multiChannelMode
                         * @memberof google.cloud.speech.v2.RecognitionFeatures
                         * @instance
                         */
                        RecognitionFeatures.prototype.multiChannelMode = 0;
    
                        /**
                         * RecognitionFeatures diarizationConfig.
                         * @member {google.cloud.speech.v2.ISpeakerDiarizationConfig|null|undefined} diarizationConfig
                         * @memberof google.cloud.speech.v2.RecognitionFeatures
                         * @instance
                         */
                        RecognitionFeatures.prototype.diarizationConfig = null;
    
                        /**
                         * RecognitionFeatures maxAlternatives.
                         * @member {number} maxAlternatives
                         * @memberof google.cloud.speech.v2.RecognitionFeatures
                         * @instance
                         */
                        RecognitionFeatures.prototype.maxAlternatives = 0;
    
                        /**
                         * Creates a new RecognitionFeatures instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.speech.v2.RecognitionFeatures
                         * @static
                         * @param {google.cloud.speech.v2.IRecognitionFeatures=} [properties] Properties to set
                         * @returns {google.cloud.speech.v2.RecognitionFeatures} RecognitionFeatures instance
                         */
                        RecognitionFeatures.create = function create(properties) {
                            return new RecognitionFeatures(properties);
                        };
    
                        /**
                         * Encodes the specified RecognitionFeatures message. Does not implicitly {@link google.cloud.speech.v2.RecognitionFeatures.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.speech.v2.RecognitionFeatures
                         * @static
                         * @param {google.cloud.speech.v2.IRecognitionFeatures} message RecognitionFeatures message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RecognitionFeatures.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.profanityFilter != null && Object.hasOwnProperty.call(message, "profanityFilter"))
                                writer.uint32(/* id 1, wireType 0 =*/8).bool(message.profanityFilter);
                            if (message.enableWordTimeOffsets != null && Object.hasOwnProperty.call(message, "enableWordTimeOffsets"))
                                writer.uint32(/* id 2, wireType 0 =*/16).bool(message.enableWordTimeOffsets);
                            if (message.enableWordConfidence != null && Object.hasOwnProperty.call(message, "enableWordConfidence"))
                                writer.uint32(/* id 3, wireType 0 =*/24).bool(message.enableWordConfidence);
                            if (message.enableAutomaticPunctuation != null && Object.hasOwnProperty.call(message, "enableAutomaticPunctuation"))
                                writer.uint32(/* id 4, wireType 0 =*/32).bool(message.enableAutomaticPunctuation);
                            if (message.diarizationConfig != null && Object.hasOwnProperty.call(message, "diarizationConfig"))
                                $root.google.cloud.speech.v2.SpeakerDiarizationConfig.encode(message.diarizationConfig, writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                            if (message.enableSpokenPunctuation != null && Object.hasOwnProperty.call(message, "enableSpokenPunctuation"))
                                writer.uint32(/* id 14, wireType 0 =*/112).bool(message.enableSpokenPunctuation);
                            if (message.enableSpokenEmojis != null && Object.hasOwnProperty.call(message, "enableSpokenEmojis"))
                                writer.uint32(/* id 15, wireType 0 =*/120).bool(message.enableSpokenEmojis);
                            if (message.maxAlternatives != null && Object.hasOwnProperty.call(message, "maxAlternatives"))
                                writer.uint32(/* id 16, wireType 0 =*/128).int32(message.maxAlternatives);
                            if (message.multiChannelMode != null && Object.hasOwnProperty.call(message, "multiChannelMode"))
                                writer.uint32(/* id 17, wireType 0 =*/136).int32(message.multiChannelMode);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified RecognitionFeatures message, length delimited. Does not implicitly {@link google.cloud.speech.v2.RecognitionFeatures.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.speech.v2.RecognitionFeatures
                         * @static
                         * @param {google.cloud.speech.v2.IRecognitionFeatures} message RecognitionFeatures message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RecognitionFeatures.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a RecognitionFeatures message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.speech.v2.RecognitionFeatures
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.speech.v2.RecognitionFeatures} RecognitionFeatures
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RecognitionFeatures.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.speech.v2.RecognitionFeatures();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        message.profanityFilter = reader.bool();
                                        break;
                                    }
                                case 2: {
                                        message.enableWordTimeOffsets = reader.bool();
                                        break;
                                    }
                                case 3: {
                                        message.enableWordConfidence = reader.bool();
                                        break;
                                    }
                                case 4: {
                                        message.enableAutomaticPunctuation = reader.bool();
                                        break;
                                    }
                                case 14: {
                                        message.enableSpokenPunctuation = reader.bool();
                                        break;
                                    }
                                case 15: {
                                        message.enableSpokenEmojis = reader.bool();
                                        break;
                                    }
                                case 17: {
                                        message.multiChannelMode = reader.int32();
                                        break;
                                    }
                                case 9: {
                                        message.diarizationConfig = $root.google.cloud.speech.v2.SpeakerDiarizationConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 16: {
                                        message.maxAlternatives = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a RecognitionFeatures message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.speech.v2.RecognitionFeatures
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.speech.v2.RecognitionFeatures} RecognitionFeatures
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RecognitionFeatures.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a RecognitionFeatures message.
                         * @function verify
                         * @memberof google.cloud.speech.v2.RecognitionFeatures
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        RecognitionFeatures.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.profanityFilter != null && message.hasOwnProperty("profanityFilter"))
                                if (typeof message.profanityFilter !== "boolean")
                                    return "profanityFilter: boolean expected";
                            if (message.enableWordTimeOffsets != null && message.hasOwnProperty("enableWordTimeOffsets"))
                                if (typeof message.enableWordTimeOffsets !== "boolean")
                                    return "enableWordTimeOffsets: boolean expected";
                            if (message.enableWordConfidence != null && message.hasOwnProperty("enableWordConfidence"))
                                if (typeof message.enableWordConfidence !== "boolean")
                                    return "enableWordConfidence: boolean expected";
                            if (message.enableAutomaticPunctuation != null && message.hasOwnProperty("enableAutomaticPunctuation"))
                                if (typeof message.enableAutomaticPunctuation !== "boolean")
                                    return "enableAutomaticPunctuation: boolean expected";
                            if (message.enableSpokenPunctuation != null && message.hasOwnProperty("enableSpokenPunctuation"))
                                if (typeof message.enableSpokenPunctuation !== "boolean")
                                    return "enableSpokenPunctuation: boolean expected";
                            if (message.enableSpokenEmojis != null && message.hasOwnProperty("enableSpokenEmojis"))
                                if (typeof message.enableSpokenEmojis !== "boolean")
                                    return "enableSpokenEmojis: boolean expected";
                            if (message.multiChannelMode != null && message.hasOwnProperty("multiChannelMode"))
                                switch (message.multiChannelMode) {
                                default:
                                    return "multiChannelMode: enum value expected";
                                case 0:
                                case 1:
                                    break;
                                }
                            if (message.diarizationConfig != null && message.hasOwnProperty("diarizationConfig")) {
                                var error = $root.google.cloud.speech.v2.SpeakerDiarizationConfig.verify(message.diarizationConfig);
                                if (error)
                                    return "diarizationConfig." + error;
                            }
                            if (message.maxAlternatives != null && message.hasOwnProperty("maxAlternatives"))
                                if (!$util.isInteger(message.maxAlternatives))
                                    return "maxAlternatives: integer expected";
                            return null;
                        };
    
                        /**
                         * Creates a RecognitionFeatures message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.speech.v2.RecognitionFeatures
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.speech.v2.RecognitionFeatures} RecognitionFeatures
                         */
                        RecognitionFeatures.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.speech.v2.RecognitionFeatures)
                                return object;
                            var message = new $root.google.cloud.speech.v2.RecognitionFeatures();
                            if (object.profanityFilter != null)
                                message.profanityFilter = Boolean(object.profanityFilter);
                            if (object.enableWordTimeOffsets != null)
                                message.enableWordTimeOffsets = Boolean(object.enableWordTimeOffsets);
                            if (object.enableWordConfidence != null)
                                message.enableWordConfidence = Boolean(object.enableWordConfidence);
                            if (object.enableAutomaticPunctuation != null)
                                message.enableAutomaticPunctuation = Boolean(object.enableAutomaticPunctuation);
                            if (object.enableSpokenPunctuation != null)
                                message.enableSpokenPunctuation = Boolean(object.enableSpokenPunctuation);
                            if (object.enableSpokenEmojis != null)
                                message.enableSpokenEmojis = Boolean(object.enableSpokenEmojis);
                            switch (object.multiChannelMode) {
                            default:
                                if (typeof object.multiChannelMode === "number") {
                                    message.multiChannelMode = object.multiChannelMode;
                                    break;
                                }
                                break;
                            case "MULTI_CHANNEL_MODE_UNSPECIFIED":
                            case 0:
                                message.multiChannelMode = 0;
                                break;
                            case "SEPARATE_RECOGNITION_PER_CHANNEL":
                            case 1:
                                message.multiChannelMode = 1;
                                break;
                            }
                            if (object.diarizationConfig != null) {
                                if (typeof object.diarizationConfig !== "object")
                                    throw TypeError(".google.cloud.speech.v2.RecognitionFeatures.diarizationConfig: object expected");
                                message.diarizationConfig = $root.google.cloud.speech.v2.SpeakerDiarizationConfig.fromObject(object.diarizationConfig);
                            }
                            if (object.maxAlternatives != null)
                                message.maxAlternatives = object.maxAlternatives | 0;
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a RecognitionFeatures message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.speech.v2.RecognitionFeatures
                         * @static
                         * @param {google.cloud.speech.v2.RecognitionFeatures} message RecognitionFeatures
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        RecognitionFeatures.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.profanityFilter = false;
                                object.enableWordTimeOffsets = false;
                                object.enableWordConfidence = false;
                                object.enableAutomaticPunctuation = false;
                                object.diarizationConfig = null;
                                object.enableSpokenPunctuation = false;
                                object.enableSpokenEmojis = false;
                                object.maxAlternatives = 0;
                                object.multiChannelMode = options.enums === String ? "MULTI_CHANNEL_MODE_UNSPECIFIED" : 0;
                            }
                            if (message.profanityFilter != null && message.hasOwnProperty("profanityFilter"))
                                object.profanityFilter = message.profanityFilter;
                            if (message.enableWordTimeOffsets != null && message.hasOwnProperty("enableWordTimeOffsets"))
                                object.enableWordTimeOffsets = message.enableWordTimeOffsets;
                            if (message.enableWordConfidence != null && message.hasOwnProperty("enableWordConfidence"))
                                object.enableWordConfidence = message.enableWordConfidence;
                            if (message.enableAutomaticPunctuation != null && message.hasOwnProperty("enableAutomaticPunctuation"))
                                object.enableAutomaticPunctuation = message.enableAutomaticPunctuation;
                            if (message.diarizationConfig != null && message.hasOwnProperty("diarizationConfig"))
                                object.diarizationConfig = $root.google.cloud.speech.v2.SpeakerDiarizationConfig.toObject(message.diarizationConfig, options);
                            if (message.enableSpokenPunctuation != null && message.hasOwnProperty("enableSpokenPunctuation"))
                                object.enableSpokenPunctuation = message.enableSpokenPunctuation;
                            if (message.enableSpokenEmojis != null && message.hasOwnProperty("enableSpokenEmojis"))
                                object.enableSpokenEmojis = message.enableSpokenEmojis;
                            if (message.maxAlternatives != null && message.hasOwnProperty("maxAlternatives"))
                                object.maxAlternatives = message.maxAlternatives;
                            if (message.multiChannelMode != null && message.hasOwnProperty("multiChannelMode"))
                                object.multiChannelMode = options.enums === String ? $root.google.cloud.speech.v2.RecognitionFeatures.MultiChannelMode[message.multiChannelMode] === undefined ? message.multiChannelMode : $root.google.cloud.speech.v2.RecognitionFeatures.MultiChannelMode[message.multiChannelMode] : message.multiChannelMode;
                            return object;
                        };
    
                        /**
                         * Converts this RecognitionFeatures to JSON.
                         * @function toJSON
                         * @memberof google.cloud.speech.v2.RecognitionFeatures
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        RecognitionFeatures.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for RecognitionFeatures
                         * @function getTypeUrl
                         * @memberof google.cloud.speech.v2.RecognitionFeatures
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        RecognitionFeatures.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.speech.v2.RecognitionFeatures";
                        };
    
                        /**
                         * MultiChannelMode enum.
                         * @name google.cloud.speech.v2.RecognitionFeatures.MultiChannelMode
                         * @enum {number}
                         * @property {number} MULTI_CHANNEL_MODE_UNSPECIFIED=0 MULTI_CHANNEL_MODE_UNSPECIFIED value
                         * @property {number} SEPARATE_RECOGNITION_PER_CHANNEL=1 SEPARATE_RECOGNITION_PER_CHANNEL value
                         */
                        RecognitionFeatures.MultiChannelMode = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "MULTI_CHANNEL_MODE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "SEPARATE_RECOGNITION_PER_CHANNEL"] = 1;
                            return values;
                        })();
    
                        return RecognitionFeatures;
                    })();
    
                    v2.TranscriptNormalization = (function() {
    
                        /**
                         * Properties of a TranscriptNormalization.
                         * @memberof google.cloud.speech.v2
                         * @interface ITranscriptNormalization
                         * @property {Array.<google.cloud.speech.v2.TranscriptNormalization.IEntry>|null} [entries] TranscriptNormalization entries
                         */
    
                        /**
                         * Constructs a new TranscriptNormalization.
                         * @memberof google.cloud.speech.v2
                         * @classdesc Represents a TranscriptNormalization.
                         * @implements ITranscriptNormalization
                         * @constructor
                         * @param {google.cloud.speech.v2.ITranscriptNormalization=} [properties] Properties to set
                         */
                        function TranscriptNormalization(properties) {
                            this.entries = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * TranscriptNormalization entries.
                         * @member {Array.<google.cloud.speech.v2.TranscriptNormalization.IEntry>} entries
                         * @memberof google.cloud.speech.v2.TranscriptNormalization
                         * @instance
                         */
                        TranscriptNormalization.prototype.entries = $util.emptyArray;
    
                        /**
                         * Creates a new TranscriptNormalization instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.speech.v2.TranscriptNormalization
                         * @static
                         * @param {google.cloud.speech.v2.ITranscriptNormalization=} [properties] Properties to set
                         * @returns {google.cloud.speech.v2.TranscriptNormalization} TranscriptNormalization instance
                         */
                        TranscriptNormalization.create = function create(properties) {
                            return new TranscriptNormalization(properties);
                        };
    
                        /**
                         * Encodes the specified TranscriptNormalization message. Does not implicitly {@link google.cloud.speech.v2.TranscriptNormalization.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.speech.v2.TranscriptNormalization
                         * @static
                         * @param {google.cloud.speech.v2.ITranscriptNormalization} message TranscriptNormalization message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        TranscriptNormalization.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.entries != null && message.entries.length)
                                for (var i = 0; i < message.entries.length; ++i)
                                    $root.google.cloud.speech.v2.TranscriptNormalization.Entry.encode(message.entries[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified TranscriptNormalization message, length delimited. Does not implicitly {@link google.cloud.speech.v2.TranscriptNormalization.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.speech.v2.TranscriptNormalization
                         * @static
                         * @param {google.cloud.speech.v2.ITranscriptNormalization} message TranscriptNormalization message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        TranscriptNormalization.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a TranscriptNormalization message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.speech.v2.TranscriptNormalization
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.speech.v2.TranscriptNormalization} TranscriptNormalization
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        TranscriptNormalization.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.speech.v2.TranscriptNormalization();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.entries && message.entries.length))
                                            message.entries = [];
                                        message.entries.push($root.google.cloud.speech.v2.TranscriptNormalization.Entry.decode(reader, reader.uint32()));
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a TranscriptNormalization message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.speech.v2.TranscriptNormalization
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.speech.v2.TranscriptNormalization} TranscriptNormalization
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        TranscriptNormalization.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a TranscriptNormalization message.
                         * @function verify
                         * @memberof google.cloud.speech.v2.TranscriptNormalization
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        TranscriptNormalization.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.entries != null && message.hasOwnProperty("entries")) {
                                if (!Array.isArray(message.entries))
                                    return "entries: array expected";
                                for (var i = 0; i < message.entries.length; ++i) {
                                    var error = $root.google.cloud.speech.v2.TranscriptNormalization.Entry.verify(message.entries[i]);
                                    if (error)
                                        return "entries." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a TranscriptNormalization message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.speech.v2.TranscriptNormalization
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.speech.v2.TranscriptNormalization} TranscriptNormalization
                         */
                        TranscriptNormalization.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.speech.v2.TranscriptNormalization)
                                return object;
                            var message = new $root.google.cloud.speech.v2.TranscriptNormalization();
                            if (object.entries) {
                                if (!Array.isArray(object.entries))
                                    throw TypeError(".google.cloud.speech.v2.TranscriptNormalization.entries: array expected");
                                message.entries = [];
                                for (var i = 0; i < object.entries.length; ++i) {
                                    if (typeof object.entries[i] !== "object")
                                        throw TypeError(".google.cloud.speech.v2.TranscriptNormalization.entries: object expected");
                                    message.entries[i] = $root.google.cloud.speech.v2.TranscriptNormalization.Entry.fromObject(object.entries[i]);
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a TranscriptNormalization message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.speech.v2.TranscriptNormalization
                         * @static
                         * @param {google.cloud.speech.v2.TranscriptNormalization} message TranscriptNormalization
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        TranscriptNormalization.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.entries = [];
                            if (message.entries && message.entries.length) {
                                object.entries = [];
                                for (var j = 0; j < message.entries.length; ++j)
                                    object.entries[j] = $root.google.cloud.speech.v2.TranscriptNormalization.Entry.toObject(message.entries[j], options);
                            }
                            return object;
                        };
    
                        /**
                         * Converts this TranscriptNormalization to JSON.
                         * @function toJSON
                         * @memberof google.cloud.speech.v2.TranscriptNormalization
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        TranscriptNormalization.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for TranscriptNormalization
                         * @function getTypeUrl
                         * @memberof google.cloud.speech.v2.TranscriptNormalization
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        TranscriptNormalization.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.speech.v2.TranscriptNormalization";
                        };
    
                        TranscriptNormalization.Entry = (function() {
    
                            /**
                             * Properties of an Entry.
                             * @memberof google.cloud.speech.v2.TranscriptNormalization
                             * @interface IEntry
                             * @property {string|null} [search] Entry search
                             * @property {string|null} [replace] Entry replace
                             * @property {boolean|null} [caseSensitive] Entry caseSensitive
                             */
    
                            /**
                             * Constructs a new Entry.
                             * @memberof google.cloud.speech.v2.TranscriptNormalization
                             * @classdesc Represents an Entry.
                             * @implements IEntry
                             * @constructor
                             * @param {google.cloud.speech.v2.TranscriptNormalization.IEntry=} [properties] Properties to set
                             */
                            function Entry(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * Entry search.
                             * @member {string} search
                             * @memberof google.cloud.speech.v2.TranscriptNormalization.Entry
                             * @instance
                             */
                            Entry.prototype.search = "";
    
                            /**
                             * Entry replace.
                             * @member {string} replace
                             * @memberof google.cloud.speech.v2.TranscriptNormalization.Entry
                             * @instance
                             */
                            Entry.prototype.replace = "";
    
                            /**
                             * Entry caseSensitive.
                             * @member {boolean} caseSensitive
                             * @memberof google.cloud.speech.v2.TranscriptNormalization.Entry
                             * @instance
                             */
                            Entry.prototype.caseSensitive = false;
    
                            /**
                             * Creates a new Entry instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.speech.v2.TranscriptNormalization.Entry
                             * @static
                             * @param {google.cloud.speech.v2.TranscriptNormalization.IEntry=} [properties] Properties to set
                             * @returns {google.cloud.speech.v2.TranscriptNormalization.Entry} Entry instance
                             */
                            Entry.create = function create(properties) {
                                return new Entry(properties);
                            };
    
                            /**
                             * Encodes the specified Entry message. Does not implicitly {@link google.cloud.speech.v2.TranscriptNormalization.Entry.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.speech.v2.TranscriptNormalization.Entry
                             * @static
                             * @param {google.cloud.speech.v2.TranscriptNormalization.IEntry} message Entry message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            Entry.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.search != null && Object.hasOwnProperty.call(message, "search"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.search);
                                if (message.replace != null && Object.hasOwnProperty.call(message, "replace"))
                                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.replace);
                                if (message.caseSensitive != null && Object.hasOwnProperty.call(message, "caseSensitive"))
                                    writer.uint32(/* id 3, wireType 0 =*/24).bool(message.caseSensitive);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified Entry message, length delimited. Does not implicitly {@link google.cloud.speech.v2.TranscriptNormalization.Entry.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.speech.v2.TranscriptNormalization.Entry
                             * @static
                             * @param {google.cloud.speech.v2.TranscriptNormalization.IEntry} message Entry message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            Entry.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes an Entry message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.speech.v2.TranscriptNormalization.Entry
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.speech.v2.TranscriptNormalization.Entry} Entry
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            Entry.decode = function decode(reader, length, error) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.speech.v2.TranscriptNormalization.Entry();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    if (tag === error)
                                        break;
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.search = reader.string();
                                            break;
                                        }
                                    case 2: {
                                            message.replace = reader.string();
                                            break;
                                        }
                                    case 3: {
                                            message.caseSensitive = reader.bool();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes an Entry message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.speech.v2.TranscriptNormalization.Entry
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.speech.v2.TranscriptNormalization.Entry} Entry
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            Entry.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies an Entry message.
                             * @function verify
                             * @memberof google.cloud.speech.v2.TranscriptNormalization.Entry
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            Entry.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.search != null && message.hasOwnProperty("search"))
                                    if (!$util.isString(message.search))
                                        return "search: string expected";
                                if (message.replace != null && message.hasOwnProperty("replace"))
                                    if (!$util.isString(message.replace))
                                        return "replace: string expected";
                                if (message.caseSensitive != null && message.hasOwnProperty("caseSensitive"))
                                    if (typeof message.caseSensitive !== "boolean")
                                        return "caseSensitive: boolean expected";
                                return null;
                            };
    
                            /**
                             * Creates an Entry message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.speech.v2.TranscriptNormalization.Entry
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.speech.v2.TranscriptNormalization.Entry} Entry
                             */
                            Entry.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.speech.v2.TranscriptNormalization.Entry)
                                    return object;
                                var message = new $root.google.cloud.speech.v2.TranscriptNormalization.Entry();
                                if (object.search != null)
                                    message.search = String(object.search);
                                if (object.replace != null)
                                    message.replace = String(object.replace);
                                if (object.caseSensitive != null)
                                    message.caseSensitive = Boolean(object.caseSensitive);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from an Entry message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.speech.v2.TranscriptNormalization.Entry
                             * @static
                             * @param {google.cloud.speech.v2.TranscriptNormalization.Entry} message Entry
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            Entry.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.search = "";
                                    object.replace = "";
                                    object.caseSensitive = false;
                                }
                                if (message.search != null && message.hasOwnProperty("search"))
                                    object.search = message.search;
                                if (message.replace != null && message.hasOwnProperty("replace"))
                                    object.replace = message.replace;
                                if (message.caseSensitive != null && message.hasOwnProperty("caseSensitive"))
                                    object.caseSensitive = message.caseSensitive;
                                return object;
                            };
    
                            /**
                             * Converts this Entry to JSON.
                             * @function toJSON
                             * @memberof google.cloud.speech.v2.TranscriptNormalization.Entry
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            Entry.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for Entry
                             * @function getTypeUrl
                             * @memberof google.cloud.speech.v2.TranscriptNormalization.Entry
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            Entry.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.speech.v2.TranscriptNormalization.Entry";
                            };
    
                            return Entry;
                        })();
    
                        return TranscriptNormalization;
                    })();
    
                    v2.TranslationConfig = (function() {
    
                        /**
                         * Properties of a TranslationConfig.
                         * @memberof google.cloud.speech.v2
                         * @interface ITranslationConfig
                         * @property {string|null} [targetLanguage] TranslationConfig targetLanguage
                         */
    
                        /**
                         * Constructs a new TranslationConfig.
                         * @memberof google.cloud.speech.v2
                         * @classdesc Represents a TranslationConfig.
                         * @implements ITranslationConfig
                         * @constructor
                         * @param {google.cloud.speech.v2.ITranslationConfig=} [properties] Properties to set
                         */
                        function TranslationConfig(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * TranslationConfig targetLanguage.
                         * @member {string} targetLanguage
                         * @memberof google.cloud.speech.v2.TranslationConfig
                         * @instance
                         */
                        TranslationConfig.prototype.targetLanguage = "";
    
                        /**
                         * Creates a new TranslationConfig instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.speech.v2.TranslationConfig
                         * @static
                         * @param {google.cloud.speech.v2.ITranslationConfig=} [properties] Properties to set
                         * @returns {google.cloud.speech.v2.TranslationConfig} TranslationConfig instance
                         */
                        TranslationConfig.create = function create(properties) {
                            return new TranslationConfig(properties);
                        };
    
                        /**
                         * Encodes the specified TranslationConfig message. Does not implicitly {@link google.cloud.speech.v2.TranslationConfig.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.speech.v2.TranslationConfig
                         * @static
                         * @param {google.cloud.speech.v2.ITranslationConfig} message TranslationConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        TranslationConfig.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.targetLanguage != null && Object.hasOwnProperty.call(message, "targetLanguage"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.targetLanguage);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified TranslationConfig message, length delimited. Does not implicitly {@link google.cloud.speech.v2.TranslationConfig.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.speech.v2.TranslationConfig
                         * @static
                         * @param {google.cloud.speech.v2.ITranslationConfig} message TranslationConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        TranslationConfig.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a TranslationConfig message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.speech.v2.TranslationConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.speech.v2.TranslationConfig} TranslationConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        TranslationConfig.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.speech.v2.TranslationConfig();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        message.targetLanguage = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a TranslationConfig message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.speech.v2.TranslationConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.speech.v2.TranslationConfig} TranslationConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        TranslationConfig.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a TranslationConfig message.
                         * @function verify
                         * @memberof google.cloud.speech.v2.TranslationConfig
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        TranslationConfig.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.targetLanguage != null && message.hasOwnProperty("targetLanguage"))
                                if (!$util.isString(message.targetLanguage))
                                    return "targetLanguage: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a TranslationConfig message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.speech.v2.TranslationConfig
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.speech.v2.TranslationConfig} TranslationConfig
                         */
                        TranslationConfig.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.speech.v2.TranslationConfig)
                                return object;
                            var message = new $root.google.cloud.speech.v2.TranslationConfig();
                            if (object.targetLanguage != null)
                                message.targetLanguage = String(object.targetLanguage);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a TranslationConfig message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.speech.v2.TranslationConfig
                         * @static
                         * @param {google.cloud.speech.v2.TranslationConfig} message TranslationConfig
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        TranslationConfig.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.targetLanguage = "";
                            if (message.targetLanguage != null && message.hasOwnProperty("targetLanguage"))
                                object.targetLanguage = message.targetLanguage;
                            return object;
                        };
    
                        /**
                         * Converts this TranslationConfig to JSON.
                         * @function toJSON
                         * @memberof google.cloud.speech.v2.TranslationConfig
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        TranslationConfig.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for TranslationConfig
                         * @function getTypeUrl
                         * @memberof google.cloud.speech.v2.TranslationConfig
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        TranslationConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.speech.v2.TranslationConfig";
                        };
    
                        return TranslationConfig;
                    })();
    
                    v2.SpeechAdaptation = (function() {
    
                        /**
                         * Properties of a SpeechAdaptation.
                         * @memberof google.cloud.speech.v2
                         * @interface ISpeechAdaptation
                         * @property {Array.<google.cloud.speech.v2.SpeechAdaptation.IAdaptationPhraseSet>|null} [phraseSets] SpeechAdaptation phraseSets
                         * @property {Array.<google.cloud.speech.v2.ICustomClass>|null} [customClasses] SpeechAdaptation customClasses
                         */
    
                        /**
                         * Constructs a new SpeechAdaptation.
                         * @memberof google.cloud.speech.v2
                         * @classdesc Represents a SpeechAdaptation.
                         * @implements ISpeechAdaptation
                         * @constructor
                         * @param {google.cloud.speech.v2.ISpeechAdaptation=} [properties] Properties to set
                         */
                        function SpeechAdaptation(properties) {
                            this.phraseSets = [];
                            this.customClasses = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * SpeechAdaptation phraseSets.
                         * @member {Array.<google.cloud.speech.v2.SpeechAdaptation.IAdaptationPhraseSet>} phraseSets
                         * @memberof google.cloud.speech.v2.SpeechAdaptation
                         * @instance
                         */
                        SpeechAdaptation.prototype.phraseSets = $util.emptyArray;
    
                        /**
                         * SpeechAdaptation customClasses.
                         * @member {Array.<google.cloud.speech.v2.ICustomClass>} customClasses
                         * @memberof google.cloud.speech.v2.SpeechAdaptation
                         * @instance
                         */
                        SpeechAdaptation.prototype.customClasses = $util.emptyArray;
    
                        /**
                         * Creates a new SpeechAdaptation instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.speech.v2.SpeechAdaptation
                         * @static
                         * @param {google.cloud.speech.v2.ISpeechAdaptation=} [properties] Properties to set
                         * @returns {google.cloud.speech.v2.SpeechAdaptation} SpeechAdaptation instance
                         */
                        SpeechAdaptation.create = function create(properties) {
                            return new SpeechAdaptation(properties);
                        };
    
                        /**
                         * Encodes the specified SpeechAdaptation message. Does not implicitly {@link google.cloud.speech.v2.SpeechAdaptation.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.speech.v2.SpeechAdaptation
                         * @static
                         * @param {google.cloud.speech.v2.ISpeechAdaptation} message SpeechAdaptation message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SpeechAdaptation.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.phraseSets != null && message.phraseSets.length)
                                for (var i = 0; i < message.phraseSets.length; ++i)
                                    $root.google.cloud.speech.v2.SpeechAdaptation.AdaptationPhraseSet.encode(message.phraseSets[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.customClasses != null && message.customClasses.length)
                                for (var i = 0; i < message.customClasses.length; ++i)
                                    $root.google.cloud.speech.v2.CustomClass.encode(message.customClasses[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified SpeechAdaptation message, length delimited. Does not implicitly {@link google.cloud.speech.v2.SpeechAdaptation.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.speech.v2.SpeechAdaptation
                         * @static
                         * @param {google.cloud.speech.v2.ISpeechAdaptation} message SpeechAdaptation message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SpeechAdaptation.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a SpeechAdaptation message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.speech.v2.SpeechAdaptation
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.speech.v2.SpeechAdaptation} SpeechAdaptation
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SpeechAdaptation.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.speech.v2.SpeechAdaptation();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.phraseSets && message.phraseSets.length))
                                            message.phraseSets = [];
                                        message.phraseSets.push($root.google.cloud.speech.v2.SpeechAdaptation.AdaptationPhraseSet.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 2: {
                                        if (!(message.customClasses && message.customClasses.length))
                                            message.customClasses = [];
                                        message.customClasses.push($root.google.cloud.speech.v2.CustomClass.decode(reader, reader.uint32()));
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a SpeechAdaptation message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.speech.v2.SpeechAdaptation
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.speech.v2.SpeechAdaptation} SpeechAdaptation
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SpeechAdaptation.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a SpeechAdaptation message.
                         * @function verify
                         * @memberof google.cloud.speech.v2.SpeechAdaptation
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        SpeechAdaptation.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.phraseSets != null && message.hasOwnProperty("phraseSets")) {
                                if (!Array.isArray(message.phraseSets))
                                    return "phraseSets: array expected";
                                for (var i = 0; i < message.phraseSets.length; ++i) {
                                    var error = $root.google.cloud.speech.v2.SpeechAdaptation.AdaptationPhraseSet.verify(message.phraseSets[i]);
                                    if (error)
                                        return "phraseSets." + error;
                                }
                            }
                            if (message.customClasses != null && message.hasOwnProperty("customClasses")) {
                                if (!Array.isArray(message.customClasses))
                                    return "customClasses: array expected";
                                for (var i = 0; i < message.customClasses.length; ++i) {
                                    var error = $root.google.cloud.speech.v2.CustomClass.verify(message.customClasses[i]);
                                    if (error)
                                        return "customClasses." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a SpeechAdaptation message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.speech.v2.SpeechAdaptation
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.speech.v2.SpeechAdaptation} SpeechAdaptation
                         */
                        SpeechAdaptation.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.speech.v2.SpeechAdaptation)
                                return object;
                            var message = new $root.google.cloud.speech.v2.SpeechAdaptation();
                            if (object.phraseSets) {
                                if (!Array.isArray(object.phraseSets))
                                    throw TypeError(".google.cloud.speech.v2.SpeechAdaptation.phraseSets: array expected");
                                message.phraseSets = [];
                                for (var i = 0; i < object.phraseSets.length; ++i) {
                                    if (typeof object.phraseSets[i] !== "object")
                                        throw TypeError(".google.cloud.speech.v2.SpeechAdaptation.phraseSets: object expected");
                                    message.phraseSets[i] = $root.google.cloud.speech.v2.SpeechAdaptation.AdaptationPhraseSet.fromObject(object.phraseSets[i]);
                                }
                            }
                            if (object.customClasses) {
                                if (!Array.isArray(object.customClasses))
                                    throw TypeError(".google.cloud.speech.v2.SpeechAdaptation.customClasses: array expected");
                                message.customClasses = [];
                                for (var i = 0; i < object.customClasses.length; ++i) {
                                    if (typeof object.customClasses[i] !== "object")
                                        throw TypeError(".google.cloud.speech.v2.SpeechAdaptation.customClasses: object expected");
                                    message.customClasses[i] = $root.google.cloud.speech.v2.CustomClass.fromObject(object.customClasses[i]);
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a SpeechAdaptation message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.speech.v2.SpeechAdaptation
                         * @static
                         * @param {google.cloud.speech.v2.SpeechAdaptation} message SpeechAdaptation
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        SpeechAdaptation.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object.phraseSets = [];
                                object.customClasses = [];
                            }
                            if (message.phraseSets && message.phraseSets.length) {
                                object.phraseSets = [];
                                for (var j = 0; j < message.phraseSets.length; ++j)
                                    object.phraseSets[j] = $root.google.cloud.speech.v2.SpeechAdaptation.AdaptationPhraseSet.toObject(message.phraseSets[j], options);
                            }
                            if (message.customClasses && message.customClasses.length) {
                                object.customClasses = [];
                                for (var j = 0; j < message.customClasses.length; ++j)
                                    object.customClasses[j] = $root.google.cloud.speech.v2.CustomClass.toObject(message.customClasses[j], options);
                            }
                            return object;
                        };
    
                        /**
                         * Converts this SpeechAdaptation to JSON.
                         * @function toJSON
                         * @memberof google.cloud.speech.v2.SpeechAdaptation
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        SpeechAdaptation.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for SpeechAdaptation
                         * @function getTypeUrl
                         * @memberof google.cloud.speech.v2.SpeechAdaptation
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        SpeechAdaptation.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.speech.v2.SpeechAdaptation";
                        };
    
                        SpeechAdaptation.AdaptationPhraseSet = (function() {
    
                            /**
                             * Properties of an AdaptationPhraseSet.
                             * @memberof google.cloud.speech.v2.SpeechAdaptation
                             * @interface IAdaptationPhraseSet
                             * @property {string|null} [phraseSet] AdaptationPhraseSet phraseSet
                             * @property {google.cloud.speech.v2.IPhraseSet|null} [inlinePhraseSet] AdaptationPhraseSet inlinePhraseSet
                             */
    
                            /**
                             * Constructs a new AdaptationPhraseSet.
                             * @memberof google.cloud.speech.v2.SpeechAdaptation
                             * @classdesc Represents an AdaptationPhraseSet.
                             * @implements IAdaptationPhraseSet
                             * @constructor
                             * @param {google.cloud.speech.v2.SpeechAdaptation.IAdaptationPhraseSet=} [properties] Properties to set
                             */
                            function AdaptationPhraseSet(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * AdaptationPhraseSet phraseSet.
                             * @member {string|null|undefined} phraseSet
                             * @memberof google.cloud.speech.v2.SpeechAdaptation.AdaptationPhraseSet
                             * @instance
                             */
                            AdaptationPhraseSet.prototype.phraseSet = null;
    
                            /**
                             * AdaptationPhraseSet inlinePhraseSet.
                             * @member {google.cloud.speech.v2.IPhraseSet|null|undefined} inlinePhraseSet
                             * @memberof google.cloud.speech.v2.SpeechAdaptation.AdaptationPhraseSet
                             * @instance
                             */
                            AdaptationPhraseSet.prototype.inlinePhraseSet = null;
    
                            // OneOf field names bound to virtual getters and setters
                            var $oneOfFields;
    
                            /**
                             * AdaptationPhraseSet value.
                             * @member {"phraseSet"|"inlinePhraseSet"|undefined} value
                             * @memberof google.cloud.speech.v2.SpeechAdaptation.AdaptationPhraseSet
                             * @instance
                             */
                            Object.defineProperty(AdaptationPhraseSet.prototype, "value", {
                                get: $util.oneOfGetter($oneOfFields = ["phraseSet", "inlinePhraseSet"]),
                                set: $util.oneOfSetter($oneOfFields)
                            });
    
                            /**
                             * Creates a new AdaptationPhraseSet instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.speech.v2.SpeechAdaptation.AdaptationPhraseSet
                             * @static
                             * @param {google.cloud.speech.v2.SpeechAdaptation.IAdaptationPhraseSet=} [properties] Properties to set
                             * @returns {google.cloud.speech.v2.SpeechAdaptation.AdaptationPhraseSet} AdaptationPhraseSet instance
                             */
                            AdaptationPhraseSet.create = function create(properties) {
                                return new AdaptationPhraseSet(properties);
                            };
    
                            /**
                             * Encodes the specified AdaptationPhraseSet message. Does not implicitly {@link google.cloud.speech.v2.SpeechAdaptation.AdaptationPhraseSet.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.speech.v2.SpeechAdaptation.AdaptationPhraseSet
                             * @static
                             * @param {google.cloud.speech.v2.SpeechAdaptation.IAdaptationPhraseSet} message AdaptationPhraseSet message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            AdaptationPhraseSet.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.phraseSet != null && Object.hasOwnProperty.call(message, "phraseSet"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.phraseSet);
                                if (message.inlinePhraseSet != null && Object.hasOwnProperty.call(message, "inlinePhraseSet"))
                                    $root.google.cloud.speech.v2.PhraseSet.encode(message.inlinePhraseSet, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                                return writer;
                            };
    
                            /**
                             * Encodes the specified AdaptationPhraseSet message, length delimited. Does not implicitly {@link google.cloud.speech.v2.SpeechAdaptation.AdaptationPhraseSet.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.speech.v2.SpeechAdaptation.AdaptationPhraseSet
                             * @static
                             * @param {google.cloud.speech.v2.SpeechAdaptation.IAdaptationPhraseSet} message AdaptationPhraseSet message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            AdaptationPhraseSet.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes an AdaptationPhraseSet message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.speech.v2.SpeechAdaptation.AdaptationPhraseSet
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.speech.v2.SpeechAdaptation.AdaptationPhraseSet} AdaptationPhraseSet
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            AdaptationPhraseSet.decode = function decode(reader, length, error) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.speech.v2.SpeechAdaptation.AdaptationPhraseSet();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    if (tag === error)
                                        break;
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.phraseSet = reader.string();
                                            break;
                                        }
                                    case 2: {
                                            message.inlinePhraseSet = $root.google.cloud.speech.v2.PhraseSet.decode(reader, reader.uint32());
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes an AdaptationPhraseSet message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.speech.v2.SpeechAdaptation.AdaptationPhraseSet
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.speech.v2.SpeechAdaptation.AdaptationPhraseSet} AdaptationPhraseSet
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            AdaptationPhraseSet.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies an AdaptationPhraseSet message.
                             * @function verify
                             * @memberof google.cloud.speech.v2.SpeechAdaptation.AdaptationPhraseSet
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            AdaptationPhraseSet.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                var properties = {};
                                if (message.phraseSet != null && message.hasOwnProperty("phraseSet")) {
                                    properties.value = 1;
                                    if (!$util.isString(message.phraseSet))
                                        return "phraseSet: string expected";
                                }
                                if (message.inlinePhraseSet != null && message.hasOwnProperty("inlinePhraseSet")) {
                                    if (properties.value === 1)
                                        return "value: multiple values";
                                    properties.value = 1;
                                    {
                                        var error = $root.google.cloud.speech.v2.PhraseSet.verify(message.inlinePhraseSet);
                                        if (error)
                                            return "inlinePhraseSet." + error;
                                    }
                                }
                                return null;
                            };
    
                            /**
                             * Creates an AdaptationPhraseSet message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.speech.v2.SpeechAdaptation.AdaptationPhraseSet
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.speech.v2.SpeechAdaptation.AdaptationPhraseSet} AdaptationPhraseSet
                             */
                            AdaptationPhraseSet.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.speech.v2.SpeechAdaptation.AdaptationPhraseSet)
                                    return object;
                                var message = new $root.google.cloud.speech.v2.SpeechAdaptation.AdaptationPhraseSet();
                                if (object.phraseSet != null)
                                    message.phraseSet = String(object.phraseSet);
                                if (object.inlinePhraseSet != null) {
                                    if (typeof object.inlinePhraseSet !== "object")
                                        throw TypeError(".google.cloud.speech.v2.SpeechAdaptation.AdaptationPhraseSet.inlinePhraseSet: object expected");
                                    message.inlinePhraseSet = $root.google.cloud.speech.v2.PhraseSet.fromObject(object.inlinePhraseSet);
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from an AdaptationPhraseSet message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.speech.v2.SpeechAdaptation.AdaptationPhraseSet
                             * @static
                             * @param {google.cloud.speech.v2.SpeechAdaptation.AdaptationPhraseSet} message AdaptationPhraseSet
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            AdaptationPhraseSet.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (message.phraseSet != null && message.hasOwnProperty("phraseSet")) {
                                    object.phraseSet = message.phraseSet;
                                    if (options.oneofs)
                                        object.value = "phraseSet";
                                }
                                if (message.inlinePhraseSet != null && message.hasOwnProperty("inlinePhraseSet")) {
                                    object.inlinePhraseSet = $root.google.cloud.speech.v2.PhraseSet.toObject(message.inlinePhraseSet, options);
                                    if (options.oneofs)
                                        object.value = "inlinePhraseSet";
                                }
                                return object;
                            };
    
                            /**
                             * Converts this AdaptationPhraseSet to JSON.
                             * @function toJSON
                             * @memberof google.cloud.speech.v2.SpeechAdaptation.AdaptationPhraseSet
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            AdaptationPhraseSet.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for AdaptationPhraseSet
                             * @function getTypeUrl
                             * @memberof google.cloud.speech.v2.SpeechAdaptation.AdaptationPhraseSet
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            AdaptationPhraseSet.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.speech.v2.SpeechAdaptation.AdaptationPhraseSet";
                            };
    
                            return AdaptationPhraseSet;
                        })();
    
                        return SpeechAdaptation;
                    })();
    
                    v2.RecognitionConfig = (function() {
    
                        /**
                         * Properties of a RecognitionConfig.
                         * @memberof google.cloud.speech.v2
                         * @interface IRecognitionConfig
                         * @property {google.cloud.speech.v2.IAutoDetectDecodingConfig|null} [autoDecodingConfig] RecognitionConfig autoDecodingConfig
                         * @property {google.cloud.speech.v2.IExplicitDecodingConfig|null} [explicitDecodingConfig] RecognitionConfig explicitDecodingConfig
                         * @property {string|null} [model] RecognitionConfig model
                         * @property {Array.<string>|null} [languageCodes] RecognitionConfig languageCodes
                         * @property {google.cloud.speech.v2.IRecognitionFeatures|null} [features] RecognitionConfig features
                         * @property {google.cloud.speech.v2.ISpeechAdaptation|null} [adaptation] RecognitionConfig adaptation
                         * @property {google.cloud.speech.v2.ITranscriptNormalization|null} [transcriptNormalization] RecognitionConfig transcriptNormalization
                         * @property {google.cloud.speech.v2.ITranslationConfig|null} [translationConfig] RecognitionConfig translationConfig
                         */
    
                        /**
                         * Constructs a new RecognitionConfig.
                         * @memberof google.cloud.speech.v2
                         * @classdesc Represents a RecognitionConfig.
                         * @implements IRecognitionConfig
                         * @constructor
                         * @param {google.cloud.speech.v2.IRecognitionConfig=} [properties] Properties to set
                         */
                        function RecognitionConfig(properties) {
                            this.languageCodes = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * RecognitionConfig autoDecodingConfig.
                         * @member {google.cloud.speech.v2.IAutoDetectDecodingConfig|null|undefined} autoDecodingConfig
                         * @memberof google.cloud.speech.v2.RecognitionConfig
                         * @instance
                         */
                        RecognitionConfig.prototype.autoDecodingConfig = null;
    
                        /**
                         * RecognitionConfig explicitDecodingConfig.
                         * @member {google.cloud.speech.v2.IExplicitDecodingConfig|null|undefined} explicitDecodingConfig
                         * @memberof google.cloud.speech.v2.RecognitionConfig
                         * @instance
                         */
                        RecognitionConfig.prototype.explicitDecodingConfig = null;
    
                        /**
                         * RecognitionConfig model.
                         * @member {string} model
                         * @memberof google.cloud.speech.v2.RecognitionConfig
                         * @instance
                         */
                        RecognitionConfig.prototype.model = "";
    
                        /**
                         * RecognitionConfig languageCodes.
                         * @member {Array.<string>} languageCodes
                         * @memberof google.cloud.speech.v2.RecognitionConfig
                         * @instance
                         */
                        RecognitionConfig.prototype.languageCodes = $util.emptyArray;
    
                        /**
                         * RecognitionConfig features.
                         * @member {google.cloud.speech.v2.IRecognitionFeatures|null|undefined} features
                         * @memberof google.cloud.speech.v2.RecognitionConfig
                         * @instance
                         */
                        RecognitionConfig.prototype.features = null;
    
                        /**
                         * RecognitionConfig adaptation.
                         * @member {google.cloud.speech.v2.ISpeechAdaptation|null|undefined} adaptation
                         * @memberof google.cloud.speech.v2.RecognitionConfig
                         * @instance
                         */
                        RecognitionConfig.prototype.adaptation = null;
    
                        /**
                         * RecognitionConfig transcriptNormalization.
                         * @member {google.cloud.speech.v2.ITranscriptNormalization|null|undefined} transcriptNormalization
                         * @memberof google.cloud.speech.v2.RecognitionConfig
                         * @instance
                         */
                        RecognitionConfig.prototype.transcriptNormalization = null;
    
                        /**
                         * RecognitionConfig translationConfig.
                         * @member {google.cloud.speech.v2.ITranslationConfig|null|undefined} translationConfig
                         * @memberof google.cloud.speech.v2.RecognitionConfig
                         * @instance
                         */
                        RecognitionConfig.prototype.translationConfig = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * RecognitionConfig decodingConfig.
                         * @member {"autoDecodingConfig"|"explicitDecodingConfig"|undefined} decodingConfig
                         * @memberof google.cloud.speech.v2.RecognitionConfig
                         * @instance
                         */
                        Object.defineProperty(RecognitionConfig.prototype, "decodingConfig", {
                            get: $util.oneOfGetter($oneOfFields = ["autoDecodingConfig", "explicitDecodingConfig"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new RecognitionConfig instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.speech.v2.RecognitionConfig
                         * @static
                         * @param {google.cloud.speech.v2.IRecognitionConfig=} [properties] Properties to set
                         * @returns {google.cloud.speech.v2.RecognitionConfig} RecognitionConfig instance
                         */
                        RecognitionConfig.create = function create(properties) {
                            return new RecognitionConfig(properties);
                        };
    
                        /**
                         * Encodes the specified RecognitionConfig message. Does not implicitly {@link google.cloud.speech.v2.RecognitionConfig.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.speech.v2.RecognitionConfig
                         * @static
                         * @param {google.cloud.speech.v2.IRecognitionConfig} message RecognitionConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RecognitionConfig.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.features != null && Object.hasOwnProperty.call(message, "features"))
                                $root.google.cloud.speech.v2.RecognitionFeatures.encode(message.features, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.adaptation != null && Object.hasOwnProperty.call(message, "adaptation"))
                                $root.google.cloud.speech.v2.SpeechAdaptation.encode(message.adaptation, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                            if (message.autoDecodingConfig != null && Object.hasOwnProperty.call(message, "autoDecodingConfig"))
                                $root.google.cloud.speech.v2.AutoDetectDecodingConfig.encode(message.autoDecodingConfig, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                            if (message.explicitDecodingConfig != null && Object.hasOwnProperty.call(message, "explicitDecodingConfig"))
                                $root.google.cloud.speech.v2.ExplicitDecodingConfig.encode(message.explicitDecodingConfig, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                            if (message.model != null && Object.hasOwnProperty.call(message, "model"))
                                writer.uint32(/* id 9, wireType 2 =*/74).string(message.model);
                            if (message.languageCodes != null && message.languageCodes.length)
                                for (var i = 0; i < message.languageCodes.length; ++i)
                                    writer.uint32(/* id 10, wireType 2 =*/82).string(message.languageCodes[i]);
                            if (message.transcriptNormalization != null && Object.hasOwnProperty.call(message, "transcriptNormalization"))
                                $root.google.cloud.speech.v2.TranscriptNormalization.encode(message.transcriptNormalization, writer.uint32(/* id 11, wireType 2 =*/90).fork()).ldelim();
                            if (message.translationConfig != null && Object.hasOwnProperty.call(message, "translationConfig"))
                                $root.google.cloud.speech.v2.TranslationConfig.encode(message.translationConfig, writer.uint32(/* id 15, wireType 2 =*/122).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified RecognitionConfig message, length delimited. Does not implicitly {@link google.cloud.speech.v2.RecognitionConfig.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.speech.v2.RecognitionConfig
                         * @static
                         * @param {google.cloud.speech.v2.IRecognitionConfig} message RecognitionConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RecognitionConfig.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a RecognitionConfig message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.speech.v2.RecognitionConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.speech.v2.RecognitionConfig} RecognitionConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RecognitionConfig.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.speech.v2.RecognitionConfig();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 7: {
                                        message.autoDecodingConfig = $root.google.cloud.speech.v2.AutoDetectDecodingConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 8: {
                                        message.explicitDecodingConfig = $root.google.cloud.speech.v2.ExplicitDecodingConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 9: {
                                        message.model = reader.string();
                                        break;
                                    }
                                case 10: {
                                        if (!(message.languageCodes && message.languageCodes.length))
                                            message.languageCodes = [];
                                        message.languageCodes.push(reader.string());
                                        break;
                                    }
                                case 2: {
                                        message.features = $root.google.cloud.speech.v2.RecognitionFeatures.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 6: {
                                        message.adaptation = $root.google.cloud.speech.v2.SpeechAdaptation.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 11: {
                                        message.transcriptNormalization = $root.google.cloud.speech.v2.TranscriptNormalization.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 15: {
                                        message.translationConfig = $root.google.cloud.speech.v2.TranslationConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a RecognitionConfig message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.speech.v2.RecognitionConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.speech.v2.RecognitionConfig} RecognitionConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RecognitionConfig.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a RecognitionConfig message.
                         * @function verify
                         * @memberof google.cloud.speech.v2.RecognitionConfig
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        RecognitionConfig.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.autoDecodingConfig != null && message.hasOwnProperty("autoDecodingConfig")) {
                                properties.decodingConfig = 1;
                                {
                                    var error = $root.google.cloud.speech.v2.AutoDetectDecodingConfig.verify(message.autoDecodingConfig);
                                    if (error)
                                        return "autoDecodingConfig." + error;
                                }
                            }
                            if (message.explicitDecodingConfig != null && message.hasOwnProperty("explicitDecodingConfig")) {
                                if (properties.decodingConfig === 1)
                                    return "decodingConfig: multiple values";
                                properties.decodingConfig = 1;
                                {
                                    var error = $root.google.cloud.speech.v2.ExplicitDecodingConfig.verify(message.explicitDecodingConfig);
                                    if (error)
                                        return "explicitDecodingConfig." + error;
                                }
                            }
                            if (message.model != null && message.hasOwnProperty("model"))
                                if (!$util.isString(message.model))
                                    return "model: string expected";
                            if (message.languageCodes != null && message.hasOwnProperty("languageCodes")) {
                                if (!Array.isArray(message.languageCodes))
                                    return "languageCodes: array expected";
                                for (var i = 0; i < message.languageCodes.length; ++i)
                                    if (!$util.isString(message.languageCodes[i]))
                                        return "languageCodes: string[] expected";
                            }
                            if (message.features != null && message.hasOwnProperty("features")) {
                                var error = $root.google.cloud.speech.v2.RecognitionFeatures.verify(message.features);
                                if (error)
                                    return "features." + error;
                            }
                            if (message.adaptation != null && message.hasOwnProperty("adaptation")) {
                                var error = $root.google.cloud.speech.v2.SpeechAdaptation.verify(message.adaptation);
                                if (error)
                                    return "adaptation." + error;
                            }
                            if (message.transcriptNormalization != null && message.hasOwnProperty("transcriptNormalization")) {
                                var error = $root.google.cloud.speech.v2.TranscriptNormalization.verify(message.transcriptNormalization);
                                if (error)
                                    return "transcriptNormalization." + error;
                            }
                            if (message.translationConfig != null && message.hasOwnProperty("translationConfig")) {
                                var error = $root.google.cloud.speech.v2.TranslationConfig.verify(message.translationConfig);
                                if (error)
                                    return "translationConfig." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a RecognitionConfig message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.speech.v2.RecognitionConfig
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.speech.v2.RecognitionConfig} RecognitionConfig
                         */
                        RecognitionConfig.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.speech.v2.RecognitionConfig)
                                return object;
                            var message = new $root.google.cloud.speech.v2.RecognitionConfig();
                            if (object.autoDecodingConfig != null) {
                                if (typeof object.autoDecodingConfig !== "object")
                                    throw TypeError(".google.cloud.speech.v2.RecognitionConfig.autoDecodingConfig: object expected");
                                message.autoDecodingConfig = $root.google.cloud.speech.v2.AutoDetectDecodingConfig.fromObject(object.autoDecodingConfig);
                            }
                            if (object.explicitDecodingConfig != null) {
                                if (typeof object.explicitDecodingConfig !== "object")
                                    throw TypeError(".google.cloud.speech.v2.RecognitionConfig.explicitDecodingConfig: object expected");
                                message.explicitDecodingConfig = $root.google.cloud.speech.v2.ExplicitDecodingConfig.fromObject(object.explicitDecodingConfig);
                            }
                            if (object.model != null)
                                message.model = String(object.model);
                            if (object.languageCodes) {
                                if (!Array.isArray(object.languageCodes))
                                    throw TypeError(".google.cloud.speech.v2.RecognitionConfig.languageCodes: array expected");
                                message.languageCodes = [];
                                for (var i = 0; i < object.languageCodes.length; ++i)
                                    message.languageCodes[i] = String(object.languageCodes[i]);
                            }
                            if (object.features != null) {
                                if (typeof object.features !== "object")
                                    throw TypeError(".google.cloud.speech.v2.RecognitionConfig.features: object expected");
                                message.features = $root.google.cloud.speech.v2.RecognitionFeatures.fromObject(object.features);
                            }
                            if (object.adaptation != null) {
                                if (typeof object.adaptation !== "object")
                                    throw TypeError(".google.cloud.speech.v2.RecognitionConfig.adaptation: object expected");
                                message.adaptation = $root.google.cloud.speech.v2.SpeechAdaptation.fromObject(object.adaptation);
                            }
                            if (object.transcriptNormalization != null) {
                                if (typeof object.transcriptNormalization !== "object")
                                    throw TypeError(".google.cloud.speech.v2.RecognitionConfig.transcriptNormalization: object expected");
                                message.transcriptNormalization = $root.google.cloud.speech.v2.TranscriptNormalization.fromObject(object.transcriptNormalization);
                            }
                            if (object.translationConfig != null) {
                                if (typeof object.translationConfig !== "object")
                                    throw TypeError(".google.cloud.speech.v2.RecognitionConfig.translationConfig: object expected");
                                message.translationConfig = $root.google.cloud.speech.v2.TranslationConfig.fromObject(object.translationConfig);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a RecognitionConfig message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.speech.v2.RecognitionConfig
                         * @static
                         * @param {google.cloud.speech.v2.RecognitionConfig} message RecognitionConfig
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        RecognitionConfig.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.languageCodes = [];
                            if (options.defaults) {
                                object.features = null;
                                object.adaptation = null;
                                object.model = "";
                                object.transcriptNormalization = null;
                                object.translationConfig = null;
                            }
                            if (message.features != null && message.hasOwnProperty("features"))
                                object.features = $root.google.cloud.speech.v2.RecognitionFeatures.toObject(message.features, options);
                            if (message.adaptation != null && message.hasOwnProperty("adaptation"))
                                object.adaptation = $root.google.cloud.speech.v2.SpeechAdaptation.toObject(message.adaptation, options);
                            if (message.autoDecodingConfig != null && message.hasOwnProperty("autoDecodingConfig")) {
                                object.autoDecodingConfig = $root.google.cloud.speech.v2.AutoDetectDecodingConfig.toObject(message.autoDecodingConfig, options);
                                if (options.oneofs)
                                    object.decodingConfig = "autoDecodingConfig";
                            }
                            if (message.explicitDecodingConfig != null && message.hasOwnProperty("explicitDecodingConfig")) {
                                object.explicitDecodingConfig = $root.google.cloud.speech.v2.ExplicitDecodingConfig.toObject(message.explicitDecodingConfig, options);
                                if (options.oneofs)
                                    object.decodingConfig = "explicitDecodingConfig";
                            }
                            if (message.model != null && message.hasOwnProperty("model"))
                                object.model = message.model;
                            if (message.languageCodes && message.languageCodes.length) {
                                object.languageCodes = [];
                                for (var j = 0; j < message.languageCodes.length; ++j)
                                    object.languageCodes[j] = message.languageCodes[j];
                            }
                            if (message.transcriptNormalization != null && message.hasOwnProperty("transcriptNormalization"))
                                object.transcriptNormalization = $root.google.cloud.speech.v2.TranscriptNormalization.toObject(message.transcriptNormalization, options);
                            if (message.translationConfig != null && message.hasOwnProperty("translationConfig"))
                                object.translationConfig = $root.google.cloud.speech.v2.TranslationConfig.toObject(message.translationConfig, options);
                            return object;
                        };
    
                        /**
                         * Converts this RecognitionConfig to JSON.
                         * @function toJSON
                         * @memberof google.cloud.speech.v2.RecognitionConfig
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        RecognitionConfig.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for RecognitionConfig
                         * @function getTypeUrl
                         * @memberof google.cloud.speech.v2.RecognitionConfig
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        RecognitionConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.speech.v2.RecognitionConfig";
                        };
    
                        return RecognitionConfig;
                    })();
    
                    v2.RecognizeRequest = (function() {
    
                        /**
                         * Properties of a RecognizeRequest.
                         * @memberof google.cloud.speech.v2
                         * @interface IRecognizeRequest
                         * @property {string|null} [recognizer] RecognizeRequest recognizer
                         * @property {google.cloud.speech.v2.IRecognitionConfig|null} [config] RecognizeRequest config
                         * @property {google.protobuf.IFieldMask|null} [configMask] RecognizeRequest configMask
                         * @property {Uint8Array|null} [content] RecognizeRequest content
                         * @property {string|null} [uri] RecognizeRequest uri
                         */
    
                        /**
                         * Constructs a new RecognizeRequest.
                         * @memberof google.cloud.speech.v2
                         * @classdesc Represents a RecognizeRequest.
                         * @implements IRecognizeRequest
                         * @constructor
                         * @param {google.cloud.speech.v2.IRecognizeRequest=} [properties] Properties to set
                         */
                        function RecognizeRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * RecognizeRequest recognizer.
                         * @member {string} recognizer
                         * @memberof google.cloud.speech.v2.RecognizeRequest
                         * @instance
                         */
                        RecognizeRequest.prototype.recognizer = "";
    
                        /**
                         * RecognizeRequest config.
                         * @member {google.cloud.speech.v2.IRecognitionConfig|null|undefined} config
                         * @memberof google.cloud.speech.v2.RecognizeRequest
                         * @instance
                         */
                        RecognizeRequest.prototype.config = null;
    
                        /**
                         * RecognizeRequest configMask.
                         * @member {google.protobuf.IFieldMask|null|undefined} configMask
                         * @memberof google.cloud.speech.v2.RecognizeRequest
                         * @instance
                         */
                        RecognizeRequest.prototype.configMask = null;
    
                        /**
                         * RecognizeRequest content.
                         * @member {Uint8Array|null|undefined} content
                         * @memberof google.cloud.speech.v2.RecognizeRequest
                         * @instance
                         */
                        RecognizeRequest.prototype.content = null;
    
                        /**
                         * RecognizeRequest uri.
                         * @member {string|null|undefined} uri
                         * @memberof google.cloud.speech.v2.RecognizeRequest
                         * @instance
                         */
                        RecognizeRequest.prototype.uri = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * RecognizeRequest audioSource.
                         * @member {"content"|"uri"|undefined} audioSource
                         * @memberof google.cloud.speech.v2.RecognizeRequest
                         * @instance
                         */
                        Object.defineProperty(RecognizeRequest.prototype, "audioSource", {
                            get: $util.oneOfGetter($oneOfFields = ["content", "uri"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new RecognizeRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.speech.v2.RecognizeRequest
                         * @static
                         * @param {google.cloud.speech.v2.IRecognizeRequest=} [properties] Properties to set
                         * @returns {google.cloud.speech.v2.RecognizeRequest} RecognizeRequest instance
                         */
                        RecognizeRequest.create = function create(properties) {
                            return new RecognizeRequest(properties);
                        };
    
                        /**
                         * Encodes the specified RecognizeRequest message. Does not implicitly {@link google.cloud.speech.v2.RecognizeRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.speech.v2.RecognizeRequest
                         * @static
                         * @param {google.cloud.speech.v2.IRecognizeRequest} message RecognizeRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RecognizeRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.config != null && Object.hasOwnProperty.call(message, "config"))
                                $root.google.cloud.speech.v2.RecognitionConfig.encode(message.config, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.recognizer != null && Object.hasOwnProperty.call(message, "recognizer"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.recognizer);
                            if (message.content != null && Object.hasOwnProperty.call(message, "content"))
                                writer.uint32(/* id 5, wireType 2 =*/42).bytes(message.content);
                            if (message.uri != null && Object.hasOwnProperty.call(message, "uri"))
                                writer.uint32(/* id 6, wireType 2 =*/50).string(message.uri);
                            if (message.configMask != null && Object.hasOwnProperty.call(message, "configMask"))
                                $root.google.protobuf.FieldMask.encode(message.configMask, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified RecognizeRequest message, length delimited. Does not implicitly {@link google.cloud.speech.v2.RecognizeRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.speech.v2.RecognizeRequest
                         * @static
                         * @param {google.cloud.speech.v2.IRecognizeRequest} message RecognizeRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RecognizeRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a RecognizeRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.speech.v2.RecognizeRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.speech.v2.RecognizeRequest} RecognizeRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RecognizeRequest.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.speech.v2.RecognizeRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 3: {
                                        message.recognizer = reader.string();
                                        break;
                                    }
                                case 1: {
                                        message.config = $root.google.cloud.speech.v2.RecognitionConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 8: {
                                        message.configMask = $root.google.protobuf.FieldMask.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 5: {
                                        message.content = reader.bytes();
                                        break;
                                    }
                                case 6: {
                                        message.uri = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a RecognizeRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.speech.v2.RecognizeRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.speech.v2.RecognizeRequest} RecognizeRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RecognizeRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a RecognizeRequest message.
                         * @function verify
                         * @memberof google.cloud.speech.v2.RecognizeRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        RecognizeRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.recognizer != null && message.hasOwnProperty("recognizer"))
                                if (!$util.isString(message.recognizer))
                                    return "recognizer: string expected";
                            if (message.config != null && message.hasOwnProperty("config")) {
                                var error = $root.google.cloud.speech.v2.RecognitionConfig.verify(message.config);
                                if (error)
                                    return "config." + error;
                            }
                            if (message.configMask != null && message.hasOwnProperty("configMask")) {
                                var error = $root.google.protobuf.FieldMask.verify(message.configMask);
                                if (error)
                                    return "configMask." + error;
                            }
                            if (message.content != null && message.hasOwnProperty("content")) {
                                properties.audioSource = 1;
                                if (!(message.content && typeof message.content.length === "number" || $util.isString(message.content)))
                                    return "content: buffer expected";
                            }
                            if (message.uri != null && message.hasOwnProperty("uri")) {
                                if (properties.audioSource === 1)
                                    return "audioSource: multiple values";
                                properties.audioSource = 1;
                                if (!$util.isString(message.uri))
                                    return "uri: string expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a RecognizeRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.speech.v2.RecognizeRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.speech.v2.RecognizeRequest} RecognizeRequest
                         */
                        RecognizeRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.speech.v2.RecognizeRequest)
                                return object;
                            var message = new $root.google.cloud.speech.v2.RecognizeRequest();
                            if (object.recognizer != null)
                                message.recognizer = String(object.recognizer);
                            if (object.config != null) {
                                if (typeof object.config !== "object")
                                    throw TypeError(".google.cloud.speech.v2.RecognizeRequest.config: object expected");
                                message.config = $root.google.cloud.speech.v2.RecognitionConfig.fromObject(object.config);
                            }
                            if (object.configMask != null) {
                                if (typeof object.configMask !== "object")
                                    throw TypeError(".google.cloud.speech.v2.RecognizeRequest.configMask: object expected");
                                message.configMask = $root.google.protobuf.FieldMask.fromObject(object.configMask);
                            }
                            if (object.content != null)
                                if (typeof object.content === "string")
                                    $util.base64.decode(object.content, message.content = $util.newBuffer($util.base64.length(object.content)), 0);
                                else if (object.content.length >= 0)
                                    message.content = object.content;
                            if (object.uri != null)
                                message.uri = String(object.uri);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a RecognizeRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.speech.v2.RecognizeRequest
                         * @static
                         * @param {google.cloud.speech.v2.RecognizeRequest} message RecognizeRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        RecognizeRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.config = null;
                                object.recognizer = "";
                                object.configMask = null;
                            }
                            if (message.config != null && message.hasOwnProperty("config"))
                                object.config = $root.google.cloud.speech.v2.RecognitionConfig.toObject(message.config, options);
                            if (message.recognizer != null && message.hasOwnProperty("recognizer"))
                                object.recognizer = message.recognizer;
                            if (message.content != null && message.hasOwnProperty("content")) {
                                object.content = options.bytes === String ? $util.base64.encode(message.content, 0, message.content.length) : options.bytes === Array ? Array.prototype.slice.call(message.content) : message.content;
                                if (options.oneofs)
                                    object.audioSource = "content";
                            }
                            if (message.uri != null && message.hasOwnProperty("uri")) {
                                object.uri = message.uri;
                                if (options.oneofs)
                                    object.audioSource = "uri";
                            }
                            if (message.configMask != null && message.hasOwnProperty("configMask"))
                                object.configMask = $root.google.protobuf.FieldMask.toObject(message.configMask, options);
                            return object;
                        };
    
                        /**
                         * Converts this RecognizeRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.speech.v2.RecognizeRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        RecognizeRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for RecognizeRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.speech.v2.RecognizeRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        RecognizeRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.speech.v2.RecognizeRequest";
                        };
    
                        return RecognizeRequest;
                    })();
    
                    v2.RecognitionResponseMetadata = (function() {
    
                        /**
                         * Properties of a RecognitionResponseMetadata.
                         * @memberof google.cloud.speech.v2
                         * @interface IRecognitionResponseMetadata
                         * @property {string|null} [requestId] RecognitionResponseMetadata requestId
                         * @property {google.protobuf.IDuration|null} [totalBilledDuration] RecognitionResponseMetadata totalBilledDuration
                         */
    
                        /**
                         * Constructs a new RecognitionResponseMetadata.
                         * @memberof google.cloud.speech.v2
                         * @classdesc Represents a RecognitionResponseMetadata.
                         * @implements IRecognitionResponseMetadata
                         * @constructor
                         * @param {google.cloud.speech.v2.IRecognitionResponseMetadata=} [properties] Properties to set
                         */
                        function RecognitionResponseMetadata(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * RecognitionResponseMetadata requestId.
                         * @member {string} requestId
                         * @memberof google.cloud.speech.v2.RecognitionResponseMetadata
                         * @instance
                         */
                        RecognitionResponseMetadata.prototype.requestId = "";
    
                        /**
                         * RecognitionResponseMetadata totalBilledDuration.
                         * @member {google.protobuf.IDuration|null|undefined} totalBilledDuration
                         * @memberof google.cloud.speech.v2.RecognitionResponseMetadata
                         * @instance
                         */
                        RecognitionResponseMetadata.prototype.totalBilledDuration = null;
    
                        /**
                         * Creates a new RecognitionResponseMetadata instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.speech.v2.RecognitionResponseMetadata
                         * @static
                         * @param {google.cloud.speech.v2.IRecognitionResponseMetadata=} [properties] Properties to set
                         * @returns {google.cloud.speech.v2.RecognitionResponseMetadata} RecognitionResponseMetadata instance
                         */
                        RecognitionResponseMetadata.create = function create(properties) {
                            return new RecognitionResponseMetadata(properties);
                        };
    
                        /**
                         * Encodes the specified RecognitionResponseMetadata message. Does not implicitly {@link google.cloud.speech.v2.RecognitionResponseMetadata.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.speech.v2.RecognitionResponseMetadata
                         * @static
                         * @param {google.cloud.speech.v2.IRecognitionResponseMetadata} message RecognitionResponseMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RecognitionResponseMetadata.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.totalBilledDuration != null && Object.hasOwnProperty.call(message, "totalBilledDuration"))
                                $root.google.protobuf.Duration.encode(message.totalBilledDuration, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                            if (message.requestId != null && Object.hasOwnProperty.call(message, "requestId"))
                                writer.uint32(/* id 9, wireType 2 =*/74).string(message.requestId);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified RecognitionResponseMetadata message, length delimited. Does not implicitly {@link google.cloud.speech.v2.RecognitionResponseMetadata.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.speech.v2.RecognitionResponseMetadata
                         * @static
                         * @param {google.cloud.speech.v2.IRecognitionResponseMetadata} message RecognitionResponseMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RecognitionResponseMetadata.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a RecognitionResponseMetadata message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.speech.v2.RecognitionResponseMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.speech.v2.RecognitionResponseMetadata} RecognitionResponseMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RecognitionResponseMetadata.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.speech.v2.RecognitionResponseMetadata();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 9: {
                                        message.requestId = reader.string();
                                        break;
                                    }
                                case 6: {
                                        message.totalBilledDuration = $root.google.protobuf.Duration.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a RecognitionResponseMetadata message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.speech.v2.RecognitionResponseMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.speech.v2.RecognitionResponseMetadata} RecognitionResponseMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RecognitionResponseMetadata.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a RecognitionResponseMetadata message.
                         * @function verify
                         * @memberof google.cloud.speech.v2.RecognitionResponseMetadata
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        RecognitionResponseMetadata.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                if (!$util.isString(message.requestId))
                                    return "requestId: string expected";
                            if (message.totalBilledDuration != null && message.hasOwnProperty("totalBilledDuration")) {
                                var error = $root.google.protobuf.Duration.verify(message.totalBilledDuration);
                                if (error)
                                    return "totalBilledDuration." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a RecognitionResponseMetadata message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.speech.v2.RecognitionResponseMetadata
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.speech.v2.RecognitionResponseMetadata} RecognitionResponseMetadata
                         */
                        RecognitionResponseMetadata.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.speech.v2.RecognitionResponseMetadata)
                                return object;
                            var message = new $root.google.cloud.speech.v2.RecognitionResponseMetadata();
                            if (object.requestId != null)
                                message.requestId = String(object.requestId);
                            if (object.totalBilledDuration != null) {
                                if (typeof object.totalBilledDuration !== "object")
                                    throw TypeError(".google.cloud.speech.v2.RecognitionResponseMetadata.totalBilledDuration: object expected");
                                message.totalBilledDuration = $root.google.protobuf.Duration.fromObject(object.totalBilledDuration);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a RecognitionResponseMetadata message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.speech.v2.RecognitionResponseMetadata
                         * @static
                         * @param {google.cloud.speech.v2.RecognitionResponseMetadata} message RecognitionResponseMetadata
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        RecognitionResponseMetadata.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.totalBilledDuration = null;
                                object.requestId = "";
                            }
                            if (message.totalBilledDuration != null && message.hasOwnProperty("totalBilledDuration"))
                                object.totalBilledDuration = $root.google.protobuf.Duration.toObject(message.totalBilledDuration, options);
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                object.requestId = message.requestId;
                            return object;
                        };
    
                        /**
                         * Converts this RecognitionResponseMetadata to JSON.
                         * @function toJSON
                         * @memberof google.cloud.speech.v2.RecognitionResponseMetadata
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        RecognitionResponseMetadata.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for RecognitionResponseMetadata
                         * @function getTypeUrl
                         * @memberof google.cloud.speech.v2.RecognitionResponseMetadata
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        RecognitionResponseMetadata.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.speech.v2.RecognitionResponseMetadata";
                        };
    
                        return RecognitionResponseMetadata;
                    })();
    
                    v2.SpeechRecognitionAlternative = (function() {
    
                        /**
                         * Properties of a SpeechRecognitionAlternative.
                         * @memberof google.cloud.speech.v2
                         * @interface ISpeechRecognitionAlternative
                         * @property {string|null} [transcript] SpeechRecognitionAlternative transcript
                         * @property {number|null} [confidence] SpeechRecognitionAlternative confidence
                         * @property {Array.<google.cloud.speech.v2.IWordInfo>|null} [words] SpeechRecognitionAlternative words
                         */
    
                        /**
                         * Constructs a new SpeechRecognitionAlternative.
                         * @memberof google.cloud.speech.v2
                         * @classdesc Represents a SpeechRecognitionAlternative.
                         * @implements ISpeechRecognitionAlternative
                         * @constructor
                         * @param {google.cloud.speech.v2.ISpeechRecognitionAlternative=} [properties] Properties to set
                         */
                        function SpeechRecognitionAlternative(properties) {
                            this.words = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * SpeechRecognitionAlternative transcript.
                         * @member {string} transcript
                         * @memberof google.cloud.speech.v2.SpeechRecognitionAlternative
                         * @instance
                         */
                        SpeechRecognitionAlternative.prototype.transcript = "";
    
                        /**
                         * SpeechRecognitionAlternative confidence.
                         * @member {number} confidence
                         * @memberof google.cloud.speech.v2.SpeechRecognitionAlternative
                         * @instance
                         */
                        SpeechRecognitionAlternative.prototype.confidence = 0;
    
                        /**
                         * SpeechRecognitionAlternative words.
                         * @member {Array.<google.cloud.speech.v2.IWordInfo>} words
                         * @memberof google.cloud.speech.v2.SpeechRecognitionAlternative
                         * @instance
                         */
                        SpeechRecognitionAlternative.prototype.words = $util.emptyArray;
    
                        /**
                         * Creates a new SpeechRecognitionAlternative instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.speech.v2.SpeechRecognitionAlternative
                         * @static
                         * @param {google.cloud.speech.v2.ISpeechRecognitionAlternative=} [properties] Properties to set
                         * @returns {google.cloud.speech.v2.SpeechRecognitionAlternative} SpeechRecognitionAlternative instance
                         */
                        SpeechRecognitionAlternative.create = function create(properties) {
                            return new SpeechRecognitionAlternative(properties);
                        };
    
                        /**
                         * Encodes the specified SpeechRecognitionAlternative message. Does not implicitly {@link google.cloud.speech.v2.SpeechRecognitionAlternative.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.speech.v2.SpeechRecognitionAlternative
                         * @static
                         * @param {google.cloud.speech.v2.ISpeechRecognitionAlternative} message SpeechRecognitionAlternative message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SpeechRecognitionAlternative.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.transcript != null && Object.hasOwnProperty.call(message, "transcript"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.transcript);
                            if (message.confidence != null && Object.hasOwnProperty.call(message, "confidence"))
                                writer.uint32(/* id 2, wireType 5 =*/21).float(message.confidence);
                            if (message.words != null && message.words.length)
                                for (var i = 0; i < message.words.length; ++i)
                                    $root.google.cloud.speech.v2.WordInfo.encode(message.words[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified SpeechRecognitionAlternative message, length delimited. Does not implicitly {@link google.cloud.speech.v2.SpeechRecognitionAlternative.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.speech.v2.SpeechRecognitionAlternative
                         * @static
                         * @param {google.cloud.speech.v2.ISpeechRecognitionAlternative} message SpeechRecognitionAlternative message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SpeechRecognitionAlternative.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a SpeechRecognitionAlternative message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.speech.v2.SpeechRecognitionAlternative
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.speech.v2.SpeechRecognitionAlternative} SpeechRecognitionAlternative
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SpeechRecognitionAlternative.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.speech.v2.SpeechRecognitionAlternative();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        message.transcript = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.confidence = reader.float();
                                        break;
                                    }
                                case 3: {
                                        if (!(message.words && message.words.length))
                                            message.words = [];
                                        message.words.push($root.google.cloud.speech.v2.WordInfo.decode(reader, reader.uint32()));
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a SpeechRecognitionAlternative message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.speech.v2.SpeechRecognitionAlternative
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.speech.v2.SpeechRecognitionAlternative} SpeechRecognitionAlternative
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SpeechRecognitionAlternative.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a SpeechRecognitionAlternative message.
                         * @function verify
                         * @memberof google.cloud.speech.v2.SpeechRecognitionAlternative
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        SpeechRecognitionAlternative.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.transcript != null && message.hasOwnProperty("transcript"))
                                if (!$util.isString(message.transcript))
                                    return "transcript: string expected";
                            if (message.confidence != null && message.hasOwnProperty("confidence"))
                                if (typeof message.confidence !== "number")
                                    return "confidence: number expected";
                            if (message.words != null && message.hasOwnProperty("words")) {
                                if (!Array.isArray(message.words))
                                    return "words: array expected";
                                for (var i = 0; i < message.words.length; ++i) {
                                    var error = $root.google.cloud.speech.v2.WordInfo.verify(message.words[i]);
                                    if (error)
                                        return "words." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a SpeechRecognitionAlternative message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.speech.v2.SpeechRecognitionAlternative
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.speech.v2.SpeechRecognitionAlternative} SpeechRecognitionAlternative
                         */
                        SpeechRecognitionAlternative.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.speech.v2.SpeechRecognitionAlternative)
                                return object;
                            var message = new $root.google.cloud.speech.v2.SpeechRecognitionAlternative();
                            if (object.transcript != null)
                                message.transcript = String(object.transcript);
                            if (object.confidence != null)
                                message.confidence = Number(object.confidence);
                            if (object.words) {
                                if (!Array.isArray(object.words))
                                    throw TypeError(".google.cloud.speech.v2.SpeechRecognitionAlternative.words: array expected");
                                message.words = [];
                                for (var i = 0; i < object.words.length; ++i) {
                                    if (typeof object.words[i] !== "object")
                                        throw TypeError(".google.cloud.speech.v2.SpeechRecognitionAlternative.words: object expected");
                                    message.words[i] = $root.google.cloud.speech.v2.WordInfo.fromObject(object.words[i]);
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a SpeechRecognitionAlternative message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.speech.v2.SpeechRecognitionAlternative
                         * @static
                         * @param {google.cloud.speech.v2.SpeechRecognitionAlternative} message SpeechRecognitionAlternative
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        SpeechRecognitionAlternative.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.words = [];
                            if (options.defaults) {
                                object.transcript = "";
                                object.confidence = 0;
                            }
                            if (message.transcript != null && message.hasOwnProperty("transcript"))
                                object.transcript = message.transcript;
                            if (message.confidence != null && message.hasOwnProperty("confidence"))
                                object.confidence = options.json && !isFinite(message.confidence) ? String(message.confidence) : message.confidence;
                            if (message.words && message.words.length) {
                                object.words = [];
                                for (var j = 0; j < message.words.length; ++j)
                                    object.words[j] = $root.google.cloud.speech.v2.WordInfo.toObject(message.words[j], options);
                            }
                            return object;
                        };
    
                        /**
                         * Converts this SpeechRecognitionAlternative to JSON.
                         * @function toJSON
                         * @memberof google.cloud.speech.v2.SpeechRecognitionAlternative
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        SpeechRecognitionAlternative.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for SpeechRecognitionAlternative
                         * @function getTypeUrl
                         * @memberof google.cloud.speech.v2.SpeechRecognitionAlternative
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        SpeechRecognitionAlternative.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.speech.v2.SpeechRecognitionAlternative";
                        };
    
                        return SpeechRecognitionAlternative;
                    })();
    
                    v2.WordInfo = (function() {
    
                        /**
                         * Properties of a WordInfo.
                         * @memberof google.cloud.speech.v2
                         * @interface IWordInfo
                         * @property {google.protobuf.IDuration|null} [startOffset] WordInfo startOffset
                         * @property {google.protobuf.IDuration|null} [endOffset] WordInfo endOffset
                         * @property {string|null} [word] WordInfo word
                         * @property {number|null} [confidence] WordInfo confidence
                         * @property {string|null} [speakerLabel] WordInfo speakerLabel
                         */
    
                        /**
                         * Constructs a new WordInfo.
                         * @memberof google.cloud.speech.v2
                         * @classdesc Represents a WordInfo.
                         * @implements IWordInfo
                         * @constructor
                         * @param {google.cloud.speech.v2.IWordInfo=} [properties] Properties to set
                         */
                        function WordInfo(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * WordInfo startOffset.
                         * @member {google.protobuf.IDuration|null|undefined} startOffset
                         * @memberof google.cloud.speech.v2.WordInfo
                         * @instance
                         */
                        WordInfo.prototype.startOffset = null;
    
                        /**
                         * WordInfo endOffset.
                         * @member {google.protobuf.IDuration|null|undefined} endOffset
                         * @memberof google.cloud.speech.v2.WordInfo
                         * @instance
                         */
                        WordInfo.prototype.endOffset = null;
    
                        /**
                         * WordInfo word.
                         * @member {string} word
                         * @memberof google.cloud.speech.v2.WordInfo
                         * @instance
                         */
                        WordInfo.prototype.word = "";
    
                        /**
                         * WordInfo confidence.
                         * @member {number} confidence
                         * @memberof google.cloud.speech.v2.WordInfo
                         * @instance
                         */
                        WordInfo.prototype.confidence = 0;
    
                        /**
                         * WordInfo speakerLabel.
                         * @member {string} speakerLabel
                         * @memberof google.cloud.speech.v2.WordInfo
                         * @instance
                         */
                        WordInfo.prototype.speakerLabel = "";
    
                        /**
                         * Creates a new WordInfo instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.speech.v2.WordInfo
                         * @static
                         * @param {google.cloud.speech.v2.IWordInfo=} [properties] Properties to set
                         * @returns {google.cloud.speech.v2.WordInfo} WordInfo instance
                         */
                        WordInfo.create = function create(properties) {
                            return new WordInfo(properties);
                        };
    
                        /**
                         * Encodes the specified WordInfo message. Does not implicitly {@link google.cloud.speech.v2.WordInfo.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.speech.v2.WordInfo
                         * @static
                         * @param {google.cloud.speech.v2.IWordInfo} message WordInfo message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        WordInfo.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.startOffset != null && Object.hasOwnProperty.call(message, "startOffset"))
                                $root.google.protobuf.Duration.encode(message.startOffset, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.endOffset != null && Object.hasOwnProperty.call(message, "endOffset"))
                                $root.google.protobuf.Duration.encode(message.endOffset, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.word != null && Object.hasOwnProperty.call(message, "word"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.word);
                            if (message.confidence != null && Object.hasOwnProperty.call(message, "confidence"))
                                writer.uint32(/* id 4, wireType 5 =*/37).float(message.confidence);
                            if (message.speakerLabel != null && Object.hasOwnProperty.call(message, "speakerLabel"))
                                writer.uint32(/* id 6, wireType 2 =*/50).string(message.speakerLabel);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified WordInfo message, length delimited. Does not implicitly {@link google.cloud.speech.v2.WordInfo.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.speech.v2.WordInfo
                         * @static
                         * @param {google.cloud.speech.v2.IWordInfo} message WordInfo message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        WordInfo.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a WordInfo message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.speech.v2.WordInfo
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.speech.v2.WordInfo} WordInfo
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        WordInfo.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.speech.v2.WordInfo();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        message.startOffset = $root.google.protobuf.Duration.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.endOffset = $root.google.protobuf.Duration.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.word = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.confidence = reader.float();
                                        break;
                                    }
                                case 6: {
                                        message.speakerLabel = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a WordInfo message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.speech.v2.WordInfo
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.speech.v2.WordInfo} WordInfo
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        WordInfo.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a WordInfo message.
                         * @function verify
                         * @memberof google.cloud.speech.v2.WordInfo
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        WordInfo.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.startOffset != null && message.hasOwnProperty("startOffset")) {
                                var error = $root.google.protobuf.Duration.verify(message.startOffset);
                                if (error)
                                    return "startOffset." + error;
                            }
                            if (message.endOffset != null && message.hasOwnProperty("endOffset")) {
                                var error = $root.google.protobuf.Duration.verify(message.endOffset);
                                if (error)
                                    return "endOffset." + error;
                            }
                            if (message.word != null && message.hasOwnProperty("word"))
                                if (!$util.isString(message.word))
                                    return "word: string expected";
                            if (message.confidence != null && message.hasOwnProperty("confidence"))
                                if (typeof message.confidence !== "number")
                                    return "confidence: number expected";
                            if (message.speakerLabel != null && message.hasOwnProperty("speakerLabel"))
                                if (!$util.isString(message.speakerLabel))
                                    return "speakerLabel: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a WordInfo message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.speech.v2.WordInfo
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.speech.v2.WordInfo} WordInfo
                         */
                        WordInfo.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.speech.v2.WordInfo)
                                return object;
                            var message = new $root.google.cloud.speech.v2.WordInfo();
                            if (object.startOffset != null) {
                                if (typeof object.startOffset !== "object")
                                    throw TypeError(".google.cloud.speech.v2.WordInfo.startOffset: object expected");
                                message.startOffset = $root.google.protobuf.Duration.fromObject(object.startOffset);
                            }
                            if (object.endOffset != null) {
                                if (typeof object.endOffset !== "object")
                                    throw TypeError(".google.cloud.speech.v2.WordInfo.endOffset: object expected");
                                message.endOffset = $root.google.protobuf.Duration.fromObject(object.endOffset);
                            }
                            if (object.word != null)
                                message.word = String(object.word);
                            if (object.confidence != null)
                                message.confidence = Number(object.confidence);
                            if (object.speakerLabel != null)
                                message.speakerLabel = String(object.speakerLabel);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a WordInfo message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.speech.v2.WordInfo
                         * @static
                         * @param {google.cloud.speech.v2.WordInfo} message WordInfo
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        WordInfo.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.startOffset = null;
                                object.endOffset = null;
                                object.word = "";
                                object.confidence = 0;
                                object.speakerLabel = "";
                            }
                            if (message.startOffset != null && message.hasOwnProperty("startOffset"))
                                object.startOffset = $root.google.protobuf.Duration.toObject(message.startOffset, options);
                            if (message.endOffset != null && message.hasOwnProperty("endOffset"))
                                object.endOffset = $root.google.protobuf.Duration.toObject(message.endOffset, options);
                            if (message.word != null && message.hasOwnProperty("word"))
                                object.word = message.word;
                            if (message.confidence != null && message.hasOwnProperty("confidence"))
                                object.confidence = options.json && !isFinite(message.confidence) ? String(message.confidence) : message.confidence;
                            if (message.speakerLabel != null && message.hasOwnProperty("speakerLabel"))
                                object.speakerLabel = message.speakerLabel;
                            return object;
                        };
    
                        /**
                         * Converts this WordInfo to JSON.
                         * @function toJSON
                         * @memberof google.cloud.speech.v2.WordInfo
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        WordInfo.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for WordInfo
                         * @function getTypeUrl
                         * @memberof google.cloud.speech.v2.WordInfo
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        WordInfo.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.speech.v2.WordInfo";
                        };
    
                        return WordInfo;
                    })();
    
                    v2.SpeechRecognitionResult = (function() {
    
                        /**
                         * Properties of a SpeechRecognitionResult.
                         * @memberof google.cloud.speech.v2
                         * @interface ISpeechRecognitionResult
                         * @property {Array.<google.cloud.speech.v2.ISpeechRecognitionAlternative>|null} [alternatives] SpeechRecognitionResult alternatives
                         * @property {number|null} [channelTag] SpeechRecognitionResult channelTag
                         * @property {google.protobuf.IDuration|null} [resultEndOffset] SpeechRecognitionResult resultEndOffset
                         * @property {string|null} [languageCode] SpeechRecognitionResult languageCode
                         */
    
                        /**
                         * Constructs a new SpeechRecognitionResult.
                         * @memberof google.cloud.speech.v2
                         * @classdesc Represents a SpeechRecognitionResult.
                         * @implements ISpeechRecognitionResult
                         * @constructor
                         * @param {google.cloud.speech.v2.ISpeechRecognitionResult=} [properties] Properties to set
                         */
                        function SpeechRecognitionResult(properties) {
                            this.alternatives = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * SpeechRecognitionResult alternatives.
                         * @member {Array.<google.cloud.speech.v2.ISpeechRecognitionAlternative>} alternatives
                         * @memberof google.cloud.speech.v2.SpeechRecognitionResult
                         * @instance
                         */
                        SpeechRecognitionResult.prototype.alternatives = $util.emptyArray;
    
                        /**
                         * SpeechRecognitionResult channelTag.
                         * @member {number} channelTag
                         * @memberof google.cloud.speech.v2.SpeechRecognitionResult
                         * @instance
                         */
                        SpeechRecognitionResult.prototype.channelTag = 0;
    
                        /**
                         * SpeechRecognitionResult resultEndOffset.
                         * @member {google.protobuf.IDuration|null|undefined} resultEndOffset
                         * @memberof google.cloud.speech.v2.SpeechRecognitionResult
                         * @instance
                         */
                        SpeechRecognitionResult.prototype.resultEndOffset = null;
    
                        /**
                         * SpeechRecognitionResult languageCode.
                         * @member {string} languageCode
                         * @memberof google.cloud.speech.v2.SpeechRecognitionResult
                         * @instance
                         */
                        SpeechRecognitionResult.prototype.languageCode = "";
    
                        /**
                         * Creates a new SpeechRecognitionResult instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.speech.v2.SpeechRecognitionResult
                         * @static
                         * @param {google.cloud.speech.v2.ISpeechRecognitionResult=} [properties] Properties to set
                         * @returns {google.cloud.speech.v2.SpeechRecognitionResult} SpeechRecognitionResult instance
                         */
                        SpeechRecognitionResult.create = function create(properties) {
                            return new SpeechRecognitionResult(properties);
                        };
    
                        /**
                         * Encodes the specified SpeechRecognitionResult message. Does not implicitly {@link google.cloud.speech.v2.SpeechRecognitionResult.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.speech.v2.SpeechRecognitionResult
                         * @static
                         * @param {google.cloud.speech.v2.ISpeechRecognitionResult} message SpeechRecognitionResult message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SpeechRecognitionResult.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.alternatives != null && message.alternatives.length)
                                for (var i = 0; i < message.alternatives.length; ++i)
                                    $root.google.cloud.speech.v2.SpeechRecognitionAlternative.encode(message.alternatives[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.channelTag != null && Object.hasOwnProperty.call(message, "channelTag"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.channelTag);
                            if (message.resultEndOffset != null && Object.hasOwnProperty.call(message, "resultEndOffset"))
                                $root.google.protobuf.Duration.encode(message.resultEndOffset, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            if (message.languageCode != null && Object.hasOwnProperty.call(message, "languageCode"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.languageCode);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified SpeechRecognitionResult message, length delimited. Does not implicitly {@link google.cloud.speech.v2.SpeechRecognitionResult.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.speech.v2.SpeechRecognitionResult
                         * @static
                         * @param {google.cloud.speech.v2.ISpeechRecognitionResult} message SpeechRecognitionResult message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SpeechRecognitionResult.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a SpeechRecognitionResult message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.speech.v2.SpeechRecognitionResult
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.speech.v2.SpeechRecognitionResult} SpeechRecognitionResult
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SpeechRecognitionResult.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.speech.v2.SpeechRecognitionResult();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.alternatives && message.alternatives.length))
                                            message.alternatives = [];
                                        message.alternatives.push($root.google.cloud.speech.v2.SpeechRecognitionAlternative.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 2: {
                                        message.channelTag = reader.int32();
                                        break;
                                    }
                                case 4: {
                                        message.resultEndOffset = $root.google.protobuf.Duration.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 5: {
                                        message.languageCode = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a SpeechRecognitionResult message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.speech.v2.SpeechRecognitionResult
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.speech.v2.SpeechRecognitionResult} SpeechRecognitionResult
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SpeechRecognitionResult.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a SpeechRecognitionResult message.
                         * @function verify
                         * @memberof google.cloud.speech.v2.SpeechRecognitionResult
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        SpeechRecognitionResult.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.alternatives != null && message.hasOwnProperty("alternatives")) {
                                if (!Array.isArray(message.alternatives))
                                    return "alternatives: array expected";
                                for (var i = 0; i < message.alternatives.length; ++i) {
                                    var error = $root.google.cloud.speech.v2.SpeechRecognitionAlternative.verify(message.alternatives[i]);
                                    if (error)
                                        return "alternatives." + error;
                                }
                            }
                            if (message.channelTag != null && message.hasOwnProperty("channelTag"))
                                if (!$util.isInteger(message.channelTag))
                                    return "channelTag: integer expected";
                            if (message.resultEndOffset != null && message.hasOwnProperty("resultEndOffset")) {
                                var error = $root.google.protobuf.Duration.verify(message.resultEndOffset);
                                if (error)
                                    return "resultEndOffset." + error;
                            }
                            if (message.languageCode != null && message.hasOwnProperty("languageCode"))
                                if (!$util.isString(message.languageCode))
                                    return "languageCode: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a SpeechRecognitionResult message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.speech.v2.SpeechRecognitionResult
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.speech.v2.SpeechRecognitionResult} SpeechRecognitionResult
                         */
                        SpeechRecognitionResult.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.speech.v2.SpeechRecognitionResult)
                                return object;
                            var message = new $root.google.cloud.speech.v2.SpeechRecognitionResult();
                            if (object.alternatives) {
                                if (!Array.isArray(object.alternatives))
                                    throw TypeError(".google.cloud.speech.v2.SpeechRecognitionResult.alternatives: array expected");
                                message.alternatives = [];
                                for (var i = 0; i < object.alternatives.length; ++i) {
                                    if (typeof object.alternatives[i] !== "object")
                                        throw TypeError(".google.cloud.speech.v2.SpeechRecognitionResult.alternatives: object expected");
                                    message.alternatives[i] = $root.google.cloud.speech.v2.SpeechRecognitionAlternative.fromObject(object.alternatives[i]);
                                }
                            }
                            if (object.channelTag != null)
                                message.channelTag = object.channelTag | 0;
                            if (object.resultEndOffset != null) {
                                if (typeof object.resultEndOffset !== "object")
                                    throw TypeError(".google.cloud.speech.v2.SpeechRecognitionResult.resultEndOffset: object expected");
                                message.resultEndOffset = $root.google.protobuf.Duration.fromObject(object.resultEndOffset);
                            }
                            if (object.languageCode != null)
                                message.languageCode = String(object.languageCode);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a SpeechRecognitionResult message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.speech.v2.SpeechRecognitionResult
                         * @static
                         * @param {google.cloud.speech.v2.SpeechRecognitionResult} message SpeechRecognitionResult
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        SpeechRecognitionResult.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.alternatives = [];
                            if (options.defaults) {
                                object.channelTag = 0;
                                object.resultEndOffset = null;
                                object.languageCode = "";
                            }
                            if (message.alternatives && message.alternatives.length) {
                                object.alternatives = [];
                                for (var j = 0; j < message.alternatives.length; ++j)
                                    object.alternatives[j] = $root.google.cloud.speech.v2.SpeechRecognitionAlternative.toObject(message.alternatives[j], options);
                            }
                            if (message.channelTag != null && message.hasOwnProperty("channelTag"))
                                object.channelTag = message.channelTag;
                            if (message.resultEndOffset != null && message.hasOwnProperty("resultEndOffset"))
                                object.resultEndOffset = $root.google.protobuf.Duration.toObject(message.resultEndOffset, options);
                            if (message.languageCode != null && message.hasOwnProperty("languageCode"))
                                object.languageCode = message.languageCode;
                            return object;
                        };
    
                        /**
                         * Converts this SpeechRecognitionResult to JSON.
                         * @function toJSON
                         * @memberof google.cloud.speech.v2.SpeechRecognitionResult
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        SpeechRecognitionResult.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for SpeechRecognitionResult
                         * @function getTypeUrl
                         * @memberof google.cloud.speech.v2.SpeechRecognitionResult
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        SpeechRecognitionResult.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.speech.v2.SpeechRecognitionResult";
                        };
    
                        return SpeechRecognitionResult;
                    })();
    
                    v2.RecognizeResponse = (function() {
    
                        /**
                         * Properties of a RecognizeResponse.
                         * @memberof google.cloud.speech.v2
                         * @interface IRecognizeResponse
                         * @property {Array.<google.cloud.speech.v2.ISpeechRecognitionResult>|null} [results] RecognizeResponse results
                         * @property {google.cloud.speech.v2.IRecognitionResponseMetadata|null} [metadata] RecognizeResponse metadata
                         */
    
                        /**
                         * Constructs a new RecognizeResponse.
                         * @memberof google.cloud.speech.v2
                         * @classdesc Represents a RecognizeResponse.
                         * @implements IRecognizeResponse
                         * @constructor
                         * @param {google.cloud.speech.v2.IRecognizeResponse=} [properties] Properties to set
                         */
                        function RecognizeResponse(properties) {
                            this.results = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * RecognizeResponse results.
                         * @member {Array.<google.cloud.speech.v2.ISpeechRecognitionResult>} results
                         * @memberof google.cloud.speech.v2.RecognizeResponse
                         * @instance
                         */
                        RecognizeResponse.prototype.results = $util.emptyArray;
    
                        /**
                         * RecognizeResponse metadata.
                         * @member {google.cloud.speech.v2.IRecognitionResponseMetadata|null|undefined} metadata
                         * @memberof google.cloud.speech.v2.RecognizeResponse
                         * @instance
                         */
                        RecognizeResponse.prototype.metadata = null;
    
                        /**
                         * Creates a new RecognizeResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.speech.v2.RecognizeResponse
                         * @static
                         * @param {google.cloud.speech.v2.IRecognizeResponse=} [properties] Properties to set
                         * @returns {google.cloud.speech.v2.RecognizeResponse} RecognizeResponse instance
                         */
                        RecognizeResponse.create = function create(properties) {
                            return new RecognizeResponse(properties);
                        };
    
                        /**
                         * Encodes the specified RecognizeResponse message. Does not implicitly {@link google.cloud.speech.v2.RecognizeResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.speech.v2.RecognizeResponse
                         * @static
                         * @param {google.cloud.speech.v2.IRecognizeResponse} message RecognizeResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RecognizeResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.metadata != null && Object.hasOwnProperty.call(message, "metadata"))
                                $root.google.cloud.speech.v2.RecognitionResponseMetadata.encode(message.metadata, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.results != null && message.results.length)
                                for (var i = 0; i < message.results.length; ++i)
                                    $root.google.cloud.speech.v2.SpeechRecognitionResult.encode(message.results[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified RecognizeResponse message, length delimited. Does not implicitly {@link google.cloud.speech.v2.RecognizeResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.speech.v2.RecognizeResponse
                         * @static
                         * @param {google.cloud.speech.v2.IRecognizeResponse} message RecognizeResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RecognizeResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a RecognizeResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.speech.v2.RecognizeResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.speech.v2.RecognizeResponse} RecognizeResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RecognizeResponse.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.speech.v2.RecognizeResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 3: {
                                        if (!(message.results && message.results.length))
                                            message.results = [];
                                        message.results.push($root.google.cloud.speech.v2.SpeechRecognitionResult.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 2: {
                                        message.metadata = $root.google.cloud.speech.v2.RecognitionResponseMetadata.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a RecognizeResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.speech.v2.RecognizeResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.speech.v2.RecognizeResponse} RecognizeResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RecognizeResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a RecognizeResponse message.
                         * @function verify
                         * @memberof google.cloud.speech.v2.RecognizeResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        RecognizeResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.results != null && message.hasOwnProperty("results")) {
                                if (!Array.isArray(message.results))
                                    return "results: array expected";
                                for (var i = 0; i < message.results.length; ++i) {
                                    var error = $root.google.cloud.speech.v2.SpeechRecognitionResult.verify(message.results[i]);
                                    if (error)
                                        return "results." + error;
                                }
                            }
                            if (message.metadata != null && message.hasOwnProperty("metadata")) {
                                var error = $root.google.cloud.speech.v2.RecognitionResponseMetadata.verify(message.metadata);
                                if (error)
                                    return "metadata." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a RecognizeResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.speech.v2.RecognizeResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.speech.v2.RecognizeResponse} RecognizeResponse
                         */
                        RecognizeResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.speech.v2.RecognizeResponse)
                                return object;
                            var message = new $root.google.cloud.speech.v2.RecognizeResponse();
                            if (object.results) {
                                if (!Array.isArray(object.results))
                                    throw TypeError(".google.cloud.speech.v2.RecognizeResponse.results: array expected");
                                message.results = [];
                                for (var i = 0; i < object.results.length; ++i) {
                                    if (typeof object.results[i] !== "object")
                                        throw TypeError(".google.cloud.speech.v2.RecognizeResponse.results: object expected");
                                    message.results[i] = $root.google.cloud.speech.v2.SpeechRecognitionResult.fromObject(object.results[i]);
                                }
                            }
                            if (object.metadata != null) {
                                if (typeof object.metadata !== "object")
                                    throw TypeError(".google.cloud.speech.v2.RecognizeResponse.metadata: object expected");
                                message.metadata = $root.google.cloud.speech.v2.RecognitionResponseMetadata.fromObject(object.metadata);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a RecognizeResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.speech.v2.RecognizeResponse
                         * @static
                         * @param {google.cloud.speech.v2.RecognizeResponse} message RecognizeResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        RecognizeResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.results = [];
                            if (options.defaults)
                                object.metadata = null;
                            if (message.metadata != null && message.hasOwnProperty("metadata"))
                                object.metadata = $root.google.cloud.speech.v2.RecognitionResponseMetadata.toObject(message.metadata, options);
                            if (message.results && message.results.length) {
                                object.results = [];
                                for (var j = 0; j < message.results.length; ++j)
                                    object.results[j] = $root.google.cloud.speech.v2.SpeechRecognitionResult.toObject(message.results[j], options);
                            }
                            return object;
                        };
    
                        /**
                         * Converts this RecognizeResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.speech.v2.RecognizeResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        RecognizeResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for RecognizeResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.speech.v2.RecognizeResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        RecognizeResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.speech.v2.RecognizeResponse";
                        };
    
                        return RecognizeResponse;
                    })();
    
                    v2.StreamingRecognitionFeatures = (function() {
    
                        /**
                         * Properties of a StreamingRecognitionFeatures.
                         * @memberof google.cloud.speech.v2
                         * @interface IStreamingRecognitionFeatures
                         * @property {boolean|null} [enableVoiceActivityEvents] StreamingRecognitionFeatures enableVoiceActivityEvents
                         * @property {boolean|null} [interimResults] StreamingRecognitionFeatures interimResults
                         * @property {google.cloud.speech.v2.StreamingRecognitionFeatures.IVoiceActivityTimeout|null} [voiceActivityTimeout] StreamingRecognitionFeatures voiceActivityTimeout
                         */
    
                        /**
                         * Constructs a new StreamingRecognitionFeatures.
                         * @memberof google.cloud.speech.v2
                         * @classdesc Represents a StreamingRecognitionFeatures.
                         * @implements IStreamingRecognitionFeatures
                         * @constructor
                         * @param {google.cloud.speech.v2.IStreamingRecognitionFeatures=} [properties] Properties to set
                         */
                        function StreamingRecognitionFeatures(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * StreamingRecognitionFeatures enableVoiceActivityEvents.
                         * @member {boolean} enableVoiceActivityEvents
                         * @memberof google.cloud.speech.v2.StreamingRecognitionFeatures
                         * @instance
                         */
                        StreamingRecognitionFeatures.prototype.enableVoiceActivityEvents = false;
    
                        /**
                         * StreamingRecognitionFeatures interimResults.
                         * @member {boolean} interimResults
                         * @memberof google.cloud.speech.v2.StreamingRecognitionFeatures
                         * @instance
                         */
                        StreamingRecognitionFeatures.prototype.interimResults = false;
    
                        /**
                         * StreamingRecognitionFeatures voiceActivityTimeout.
                         * @member {google.cloud.speech.v2.StreamingRecognitionFeatures.IVoiceActivityTimeout|null|undefined} voiceActivityTimeout
                         * @memberof google.cloud.speech.v2.StreamingRecognitionFeatures
                         * @instance
                         */
                        StreamingRecognitionFeatures.prototype.voiceActivityTimeout = null;
    
                        /**
                         * Creates a new StreamingRecognitionFeatures instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.speech.v2.StreamingRecognitionFeatures
                         * @static
                         * @param {google.cloud.speech.v2.IStreamingRecognitionFeatures=} [properties] Properties to set
                         * @returns {google.cloud.speech.v2.StreamingRecognitionFeatures} StreamingRecognitionFeatures instance
                         */
                        StreamingRecognitionFeatures.create = function create(properties) {
                            return new StreamingRecognitionFeatures(properties);
                        };
    
                        /**
                         * Encodes the specified StreamingRecognitionFeatures message. Does not implicitly {@link google.cloud.speech.v2.StreamingRecognitionFeatures.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.speech.v2.StreamingRecognitionFeatures
                         * @static
                         * @param {google.cloud.speech.v2.IStreamingRecognitionFeatures} message StreamingRecognitionFeatures message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        StreamingRecognitionFeatures.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.enableVoiceActivityEvents != null && Object.hasOwnProperty.call(message, "enableVoiceActivityEvents"))
                                writer.uint32(/* id 1, wireType 0 =*/8).bool(message.enableVoiceActivityEvents);
                            if (message.interimResults != null && Object.hasOwnProperty.call(message, "interimResults"))
                                writer.uint32(/* id 2, wireType 0 =*/16).bool(message.interimResults);
                            if (message.voiceActivityTimeout != null && Object.hasOwnProperty.call(message, "voiceActivityTimeout"))
                                $root.google.cloud.speech.v2.StreamingRecognitionFeatures.VoiceActivityTimeout.encode(message.voiceActivityTimeout, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified StreamingRecognitionFeatures message, length delimited. Does not implicitly {@link google.cloud.speech.v2.StreamingRecognitionFeatures.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.speech.v2.StreamingRecognitionFeatures
                         * @static
                         * @param {google.cloud.speech.v2.IStreamingRecognitionFeatures} message StreamingRecognitionFeatures message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        StreamingRecognitionFeatures.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a StreamingRecognitionFeatures message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.speech.v2.StreamingRecognitionFeatures
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.speech.v2.StreamingRecognitionFeatures} StreamingRecognitionFeatures
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        StreamingRecognitionFeatures.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.speech.v2.StreamingRecognitionFeatures();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        message.enableVoiceActivityEvents = reader.bool();
                                        break;
                                    }
                                case 2: {
                                        message.interimResults = reader.bool();
                                        break;
                                    }
                                case 3: {
                                        message.voiceActivityTimeout = $root.google.cloud.speech.v2.StreamingRecognitionFeatures.VoiceActivityTimeout.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a StreamingRecognitionFeatures message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.speech.v2.StreamingRecognitionFeatures
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.speech.v2.StreamingRecognitionFeatures} StreamingRecognitionFeatures
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        StreamingRecognitionFeatures.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a StreamingRecognitionFeatures message.
                         * @function verify
                         * @memberof google.cloud.speech.v2.StreamingRecognitionFeatures
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        StreamingRecognitionFeatures.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.enableVoiceActivityEvents != null && message.hasOwnProperty("enableVoiceActivityEvents"))
                                if (typeof message.enableVoiceActivityEvents !== "boolean")
                                    return "enableVoiceActivityEvents: boolean expected";
                            if (message.interimResults != null && message.hasOwnProperty("interimResults"))
                                if (typeof message.interimResults !== "boolean")
                                    return "interimResults: boolean expected";
                            if (message.voiceActivityTimeout != null && message.hasOwnProperty("voiceActivityTimeout")) {
                                var error = $root.google.cloud.speech.v2.StreamingRecognitionFeatures.VoiceActivityTimeout.verify(message.voiceActivityTimeout);
                                if (error)
                                    return "voiceActivityTimeout." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a StreamingRecognitionFeatures message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.speech.v2.StreamingRecognitionFeatures
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.speech.v2.StreamingRecognitionFeatures} StreamingRecognitionFeatures
                         */
                        StreamingRecognitionFeatures.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.speech.v2.StreamingRecognitionFeatures)
                                return object;
                            var message = new $root.google.cloud.speech.v2.StreamingRecognitionFeatures();
                            if (object.enableVoiceActivityEvents != null)
                                message.enableVoiceActivityEvents = Boolean(object.enableVoiceActivityEvents);
                            if (object.interimResults != null)
                                message.interimResults = Boolean(object.interimResults);
                            if (object.voiceActivityTimeout != null) {
                                if (typeof object.voiceActivityTimeout !== "object")
                                    throw TypeError(".google.cloud.speech.v2.StreamingRecognitionFeatures.voiceActivityTimeout: object expected");
                                message.voiceActivityTimeout = $root.google.cloud.speech.v2.StreamingRecognitionFeatures.VoiceActivityTimeout.fromObject(object.voiceActivityTimeout);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a StreamingRecognitionFeatures message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.speech.v2.StreamingRecognitionFeatures
                         * @static
                         * @param {google.cloud.speech.v2.StreamingRecognitionFeatures} message StreamingRecognitionFeatures
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        StreamingRecognitionFeatures.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.enableVoiceActivityEvents = false;
                                object.interimResults = false;
                                object.voiceActivityTimeout = null;
                            }
                            if (message.enableVoiceActivityEvents != null && message.hasOwnProperty("enableVoiceActivityEvents"))
                                object.enableVoiceActivityEvents = message.enableVoiceActivityEvents;
                            if (message.interimResults != null && message.hasOwnProperty("interimResults"))
                                object.interimResults = message.interimResults;
                            if (message.voiceActivityTimeout != null && message.hasOwnProperty("voiceActivityTimeout"))
                                object.voiceActivityTimeout = $root.google.cloud.speech.v2.StreamingRecognitionFeatures.VoiceActivityTimeout.toObject(message.voiceActivityTimeout, options);
                            return object;
                        };
    
                        /**
                         * Converts this StreamingRecognitionFeatures to JSON.
                         * @function toJSON
                         * @memberof google.cloud.speech.v2.StreamingRecognitionFeatures
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        StreamingRecognitionFeatures.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for StreamingRecognitionFeatures
                         * @function getTypeUrl
                         * @memberof google.cloud.speech.v2.StreamingRecognitionFeatures
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        StreamingRecognitionFeatures.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.speech.v2.StreamingRecognitionFeatures";
                        };
    
                        StreamingRecognitionFeatures.VoiceActivityTimeout = (function() {
    
                            /**
                             * Properties of a VoiceActivityTimeout.
                             * @memberof google.cloud.speech.v2.StreamingRecognitionFeatures
                             * @interface IVoiceActivityTimeout
                             * @property {google.protobuf.IDuration|null} [speechStartTimeout] VoiceActivityTimeout speechStartTimeout
                             * @property {google.protobuf.IDuration|null} [speechEndTimeout] VoiceActivityTimeout speechEndTimeout
                             */
    
                            /**
                             * Constructs a new VoiceActivityTimeout.
                             * @memberof google.cloud.speech.v2.StreamingRecognitionFeatures
                             * @classdesc Represents a VoiceActivityTimeout.
                             * @implements IVoiceActivityTimeout
                             * @constructor
                             * @param {google.cloud.speech.v2.StreamingRecognitionFeatures.IVoiceActivityTimeout=} [properties] Properties to set
                             */
                            function VoiceActivityTimeout(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * VoiceActivityTimeout speechStartTimeout.
                             * @member {google.protobuf.IDuration|null|undefined} speechStartTimeout
                             * @memberof google.cloud.speech.v2.StreamingRecognitionFeatures.VoiceActivityTimeout
                             * @instance
                             */
                            VoiceActivityTimeout.prototype.speechStartTimeout = null;
    
                            /**
                             * VoiceActivityTimeout speechEndTimeout.
                             * @member {google.protobuf.IDuration|null|undefined} speechEndTimeout
                             * @memberof google.cloud.speech.v2.StreamingRecognitionFeatures.VoiceActivityTimeout
                             * @instance
                             */
                            VoiceActivityTimeout.prototype.speechEndTimeout = null;
    
                            /**
                             * Creates a new VoiceActivityTimeout instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.speech.v2.StreamingRecognitionFeatures.VoiceActivityTimeout
                             * @static
                             * @param {google.cloud.speech.v2.StreamingRecognitionFeatures.IVoiceActivityTimeout=} [properties] Properties to set
                             * @returns {google.cloud.speech.v2.StreamingRecognitionFeatures.VoiceActivityTimeout} VoiceActivityTimeout instance
                             */
                            VoiceActivityTimeout.create = function create(properties) {
                                return new VoiceActivityTimeout(properties);
                            };
    
                            /**
                             * Encodes the specified VoiceActivityTimeout message. Does not implicitly {@link google.cloud.speech.v2.StreamingRecognitionFeatures.VoiceActivityTimeout.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.speech.v2.StreamingRecognitionFeatures.VoiceActivityTimeout
                             * @static
                             * @param {google.cloud.speech.v2.StreamingRecognitionFeatures.IVoiceActivityTimeout} message VoiceActivityTimeout message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            VoiceActivityTimeout.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.speechStartTimeout != null && Object.hasOwnProperty.call(message, "speechStartTimeout"))
                                    $root.google.protobuf.Duration.encode(message.speechStartTimeout, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                                if (message.speechEndTimeout != null && Object.hasOwnProperty.call(message, "speechEndTimeout"))
                                    $root.google.protobuf.Duration.encode(message.speechEndTimeout, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                                return writer;
                            };
    
                            /**
                             * Encodes the specified VoiceActivityTimeout message, length delimited. Does not implicitly {@link google.cloud.speech.v2.StreamingRecognitionFeatures.VoiceActivityTimeout.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.speech.v2.StreamingRecognitionFeatures.VoiceActivityTimeout
                             * @static
                             * @param {google.cloud.speech.v2.StreamingRecognitionFeatures.IVoiceActivityTimeout} message VoiceActivityTimeout message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            VoiceActivityTimeout.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a VoiceActivityTimeout message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.speech.v2.StreamingRecognitionFeatures.VoiceActivityTimeout
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.speech.v2.StreamingRecognitionFeatures.VoiceActivityTimeout} VoiceActivityTimeout
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            VoiceActivityTimeout.decode = function decode(reader, length, error) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.speech.v2.StreamingRecognitionFeatures.VoiceActivityTimeout();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    if (tag === error)
                                        break;
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.speechStartTimeout = $root.google.protobuf.Duration.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 2: {
                                            message.speechEndTimeout = $root.google.protobuf.Duration.decode(reader, reader.uint32());
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a VoiceActivityTimeout message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.speech.v2.StreamingRecognitionFeatures.VoiceActivityTimeout
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.speech.v2.StreamingRecognitionFeatures.VoiceActivityTimeout} VoiceActivityTimeout
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            VoiceActivityTimeout.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a VoiceActivityTimeout message.
                             * @function verify
                             * @memberof google.cloud.speech.v2.StreamingRecognitionFeatures.VoiceActivityTimeout
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            VoiceActivityTimeout.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.speechStartTimeout != null && message.hasOwnProperty("speechStartTimeout")) {
                                    var error = $root.google.protobuf.Duration.verify(message.speechStartTimeout);
                                    if (error)
                                        return "speechStartTimeout." + error;
                                }
                                if (message.speechEndTimeout != null && message.hasOwnProperty("speechEndTimeout")) {
                                    var error = $root.google.protobuf.Duration.verify(message.speechEndTimeout);
                                    if (error)
                                        return "speechEndTimeout." + error;
                                }
                                return null;
                            };
    
                            /**
                             * Creates a VoiceActivityTimeout message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.speech.v2.StreamingRecognitionFeatures.VoiceActivityTimeout
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.speech.v2.StreamingRecognitionFeatures.VoiceActivityTimeout} VoiceActivityTimeout
                             */
                            VoiceActivityTimeout.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.speech.v2.StreamingRecognitionFeatures.VoiceActivityTimeout)
                                    return object;
                                var message = new $root.google.cloud.speech.v2.StreamingRecognitionFeatures.VoiceActivityTimeout();
                                if (object.speechStartTimeout != null) {
                                    if (typeof object.speechStartTimeout !== "object")
                                        throw TypeError(".google.cloud.speech.v2.StreamingRecognitionFeatures.VoiceActivityTimeout.speechStartTimeout: object expected");
                                    message.speechStartTimeout = $root.google.protobuf.Duration.fromObject(object.speechStartTimeout);
                                }
                                if (object.speechEndTimeout != null) {
                                    if (typeof object.speechEndTimeout !== "object")
                                        throw TypeError(".google.cloud.speech.v2.StreamingRecognitionFeatures.VoiceActivityTimeout.speechEndTimeout: object expected");
                                    message.speechEndTimeout = $root.google.protobuf.Duration.fromObject(object.speechEndTimeout);
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a VoiceActivityTimeout message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.speech.v2.StreamingRecognitionFeatures.VoiceActivityTimeout
                             * @static
                             * @param {google.cloud.speech.v2.StreamingRecognitionFeatures.VoiceActivityTimeout} message VoiceActivityTimeout
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            VoiceActivityTimeout.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.speechStartTimeout = null;
                                    object.speechEndTimeout = null;
                                }
                                if (message.speechStartTimeout != null && message.hasOwnProperty("speechStartTimeout"))
                                    object.speechStartTimeout = $root.google.protobuf.Duration.toObject(message.speechStartTimeout, options);
                                if (message.speechEndTimeout != null && message.hasOwnProperty("speechEndTimeout"))
                                    object.speechEndTimeout = $root.google.protobuf.Duration.toObject(message.speechEndTimeout, options);
                                return object;
                            };
    
                            /**
                             * Converts this VoiceActivityTimeout to JSON.
                             * @function toJSON
                             * @memberof google.cloud.speech.v2.StreamingRecognitionFeatures.VoiceActivityTimeout
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            VoiceActivityTimeout.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for VoiceActivityTimeout
                             * @function getTypeUrl
                             * @memberof google.cloud.speech.v2.StreamingRecognitionFeatures.VoiceActivityTimeout
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            VoiceActivityTimeout.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.speech.v2.StreamingRecognitionFeatures.VoiceActivityTimeout";
                            };
    
                            return VoiceActivityTimeout;
                        })();
    
                        return StreamingRecognitionFeatures;
                    })();
    
                    v2.StreamingRecognitionConfig = (function() {
    
                        /**
                         * Properties of a StreamingRecognitionConfig.
                         * @memberof google.cloud.speech.v2
                         * @interface IStreamingRecognitionConfig
                         * @property {google.cloud.speech.v2.IRecognitionConfig|null} [config] StreamingRecognitionConfig config
                         * @property {google.protobuf.IFieldMask|null} [configMask] StreamingRecognitionConfig configMask
                         * @property {google.cloud.speech.v2.IStreamingRecognitionFeatures|null} [streamingFeatures] StreamingRecognitionConfig streamingFeatures
                         */
    
                        /**
                         * Constructs a new StreamingRecognitionConfig.
                         * @memberof google.cloud.speech.v2
                         * @classdesc Represents a StreamingRecognitionConfig.
                         * @implements IStreamingRecognitionConfig
                         * @constructor
                         * @param {google.cloud.speech.v2.IStreamingRecognitionConfig=} [properties] Properties to set
                         */
                        function StreamingRecognitionConfig(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * StreamingRecognitionConfig config.
                         * @member {google.cloud.speech.v2.IRecognitionConfig|null|undefined} config
                         * @memberof google.cloud.speech.v2.StreamingRecognitionConfig
                         * @instance
                         */
                        StreamingRecognitionConfig.prototype.config = null;
    
                        /**
                         * StreamingRecognitionConfig configMask.
                         * @member {google.protobuf.IFieldMask|null|undefined} configMask
                         * @memberof google.cloud.speech.v2.StreamingRecognitionConfig
                         * @instance
                         */
                        StreamingRecognitionConfig.prototype.configMask = null;
    
                        /**
                         * StreamingRecognitionConfig streamingFeatures.
                         * @member {google.cloud.speech.v2.IStreamingRecognitionFeatures|null|undefined} streamingFeatures
                         * @memberof google.cloud.speech.v2.StreamingRecognitionConfig
                         * @instance
                         */
                        StreamingRecognitionConfig.prototype.streamingFeatures = null;
    
                        /**
                         * Creates a new StreamingRecognitionConfig instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.speech.v2.StreamingRecognitionConfig
                         * @static
                         * @param {google.cloud.speech.v2.IStreamingRecognitionConfig=} [properties] Properties to set
                         * @returns {google.cloud.speech.v2.StreamingRecognitionConfig} StreamingRecognitionConfig instance
                         */
                        StreamingRecognitionConfig.create = function create(properties) {
                            return new StreamingRecognitionConfig(properties);
                        };
    
                        /**
                         * Encodes the specified StreamingRecognitionConfig message. Does not implicitly {@link google.cloud.speech.v2.StreamingRecognitionConfig.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.speech.v2.StreamingRecognitionConfig
                         * @static
                         * @param {google.cloud.speech.v2.IStreamingRecognitionConfig} message StreamingRecognitionConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        StreamingRecognitionConfig.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.config != null && Object.hasOwnProperty.call(message, "config"))
                                $root.google.cloud.speech.v2.RecognitionConfig.encode(message.config, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.streamingFeatures != null && Object.hasOwnProperty.call(message, "streamingFeatures"))
                                $root.google.cloud.speech.v2.StreamingRecognitionFeatures.encode(message.streamingFeatures, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.configMask != null && Object.hasOwnProperty.call(message, "configMask"))
                                $root.google.protobuf.FieldMask.encode(message.configMask, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified StreamingRecognitionConfig message, length delimited. Does not implicitly {@link google.cloud.speech.v2.StreamingRecognitionConfig.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.speech.v2.StreamingRecognitionConfig
                         * @static
                         * @param {google.cloud.speech.v2.IStreamingRecognitionConfig} message StreamingRecognitionConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        StreamingRecognitionConfig.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a StreamingRecognitionConfig message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.speech.v2.StreamingRecognitionConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.speech.v2.StreamingRecognitionConfig} StreamingRecognitionConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        StreamingRecognitionConfig.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.speech.v2.StreamingRecognitionConfig();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        message.config = $root.google.cloud.speech.v2.RecognitionConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.configMask = $root.google.protobuf.FieldMask.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.streamingFeatures = $root.google.cloud.speech.v2.StreamingRecognitionFeatures.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a StreamingRecognitionConfig message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.speech.v2.StreamingRecognitionConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.speech.v2.StreamingRecognitionConfig} StreamingRecognitionConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        StreamingRecognitionConfig.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a StreamingRecognitionConfig message.
                         * @function verify
                         * @memberof google.cloud.speech.v2.StreamingRecognitionConfig
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        StreamingRecognitionConfig.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.config != null && message.hasOwnProperty("config")) {
                                var error = $root.google.cloud.speech.v2.RecognitionConfig.verify(message.config);
                                if (error)
                                    return "config." + error;
                            }
                            if (message.configMask != null && message.hasOwnProperty("configMask")) {
                                var error = $root.google.protobuf.FieldMask.verify(message.configMask);
                                if (error)
                                    return "configMask." + error;
                            }
                            if (message.streamingFeatures != null && message.hasOwnProperty("streamingFeatures")) {
                                var error = $root.google.cloud.speech.v2.StreamingRecognitionFeatures.verify(message.streamingFeatures);
                                if (error)
                                    return "streamingFeatures." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a StreamingRecognitionConfig message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.speech.v2.StreamingRecognitionConfig
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.speech.v2.StreamingRecognitionConfig} StreamingRecognitionConfig
                         */
                        StreamingRecognitionConfig.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.speech.v2.StreamingRecognitionConfig)
                                return object;
                            var message = new $root.google.cloud.speech.v2.StreamingRecognitionConfig();
                            if (object.config != null) {
                                if (typeof object.config !== "object")
                                    throw TypeError(".google.cloud.speech.v2.StreamingRecognitionConfig.config: object expected");
                                message.config = $root.google.cloud.speech.v2.RecognitionConfig.fromObject(object.config);
                            }
                            if (object.configMask != null) {
                                if (typeof object.configMask !== "object")
                                    throw TypeError(".google.cloud.speech.v2.StreamingRecognitionConfig.configMask: object expected");
                                message.configMask = $root.google.protobuf.FieldMask.fromObject(object.configMask);
                            }
                            if (object.streamingFeatures != null) {
                                if (typeof object.streamingFeatures !== "object")
                                    throw TypeError(".google.cloud.speech.v2.StreamingRecognitionConfig.streamingFeatures: object expected");
                                message.streamingFeatures = $root.google.cloud.speech.v2.StreamingRecognitionFeatures.fromObject(object.streamingFeatures);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a StreamingRecognitionConfig message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.speech.v2.StreamingRecognitionConfig
                         * @static
                         * @param {google.cloud.speech.v2.StreamingRecognitionConfig} message StreamingRecognitionConfig
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        StreamingRecognitionConfig.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.config = null;
                                object.streamingFeatures = null;
                                object.configMask = null;
                            }
                            if (message.config != null && message.hasOwnProperty("config"))
                                object.config = $root.google.cloud.speech.v2.RecognitionConfig.toObject(message.config, options);
                            if (message.streamingFeatures != null && message.hasOwnProperty("streamingFeatures"))
                                object.streamingFeatures = $root.google.cloud.speech.v2.StreamingRecognitionFeatures.toObject(message.streamingFeatures, options);
                            if (message.configMask != null && message.hasOwnProperty("configMask"))
                                object.configMask = $root.google.protobuf.FieldMask.toObject(message.configMask, options);
                            return object;
                        };
    
                        /**
                         * Converts this StreamingRecognitionConfig to JSON.
                         * @function toJSON
                         * @memberof google.cloud.speech.v2.StreamingRecognitionConfig
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        StreamingRecognitionConfig.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for StreamingRecognitionConfig
                         * @function getTypeUrl
                         * @memberof google.cloud.speech.v2.StreamingRecognitionConfig
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        StreamingRecognitionConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.speech.v2.StreamingRecognitionConfig";
                        };
    
                        return StreamingRecognitionConfig;
                    })();
    
                    v2.StreamingRecognizeRequest = (function() {
    
                        /**
                         * Properties of a StreamingRecognizeRequest.
                         * @memberof google.cloud.speech.v2
                         * @interface IStreamingRecognizeRequest
                         * @property {string|null} [recognizer] StreamingRecognizeRequest recognizer
                         * @property {google.cloud.speech.v2.IStreamingRecognitionConfig|null} [streamingConfig] StreamingRecognizeRequest streamingConfig
                         * @property {Uint8Array|null} [audio] StreamingRecognizeRequest audio
                         */
    
                        /**
                         * Constructs a new StreamingRecognizeRequest.
                         * @memberof google.cloud.speech.v2
                         * @classdesc Represents a StreamingRecognizeRequest.
                         * @implements IStreamingRecognizeRequest
                         * @constructor
                         * @param {google.cloud.speech.v2.IStreamingRecognizeRequest=} [properties] Properties to set
                         */
                        function StreamingRecognizeRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * StreamingRecognizeRequest recognizer.
                         * @member {string} recognizer
                         * @memberof google.cloud.speech.v2.StreamingRecognizeRequest
                         * @instance
                         */
                        StreamingRecognizeRequest.prototype.recognizer = "";
    
                        /**
                         * StreamingRecognizeRequest streamingConfig.
                         * @member {google.cloud.speech.v2.IStreamingRecognitionConfig|null|undefined} streamingConfig
                         * @memberof google.cloud.speech.v2.StreamingRecognizeRequest
                         * @instance
                         */
                        StreamingRecognizeRequest.prototype.streamingConfig = null;
    
                        /**
                         * StreamingRecognizeRequest audio.
                         * @member {Uint8Array|null|undefined} audio
                         * @memberof google.cloud.speech.v2.StreamingRecognizeRequest
                         * @instance
                         */
                        StreamingRecognizeRequest.prototype.audio = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * StreamingRecognizeRequest streamingRequest.
                         * @member {"streamingConfig"|"audio"|undefined} streamingRequest
                         * @memberof google.cloud.speech.v2.StreamingRecognizeRequest
                         * @instance
                         */
                        Object.defineProperty(StreamingRecognizeRequest.prototype, "streamingRequest", {
                            get: $util.oneOfGetter($oneOfFields = ["streamingConfig", "audio"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new StreamingRecognizeRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.speech.v2.StreamingRecognizeRequest
                         * @static
                         * @param {google.cloud.speech.v2.IStreamingRecognizeRequest=} [properties] Properties to set
                         * @returns {google.cloud.speech.v2.StreamingRecognizeRequest} StreamingRecognizeRequest instance
                         */
                        StreamingRecognizeRequest.create = function create(properties) {
                            return new StreamingRecognizeRequest(properties);
                        };
    
                        /**
                         * Encodes the specified StreamingRecognizeRequest message. Does not implicitly {@link google.cloud.speech.v2.StreamingRecognizeRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.speech.v2.StreamingRecognizeRequest
                         * @static
                         * @param {google.cloud.speech.v2.IStreamingRecognizeRequest} message StreamingRecognizeRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        StreamingRecognizeRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.recognizer != null && Object.hasOwnProperty.call(message, "recognizer"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.recognizer);
                            if (message.audio != null && Object.hasOwnProperty.call(message, "audio"))
                                writer.uint32(/* id 5, wireType 2 =*/42).bytes(message.audio);
                            if (message.streamingConfig != null && Object.hasOwnProperty.call(message, "streamingConfig"))
                                $root.google.cloud.speech.v2.StreamingRecognitionConfig.encode(message.streamingConfig, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified StreamingRecognizeRequest message, length delimited. Does not implicitly {@link google.cloud.speech.v2.StreamingRecognizeRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.speech.v2.StreamingRecognizeRequest
                         * @static
                         * @param {google.cloud.speech.v2.IStreamingRecognizeRequest} message StreamingRecognizeRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        StreamingRecognizeRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a StreamingRecognizeRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.speech.v2.StreamingRecognizeRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.speech.v2.StreamingRecognizeRequest} StreamingRecognizeRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        StreamingRecognizeRequest.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.speech.v2.StreamingRecognizeRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 3: {
                                        message.recognizer = reader.string();
                                        break;
                                    }
                                case 6: {
                                        message.streamingConfig = $root.google.cloud.speech.v2.StreamingRecognitionConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 5: {
                                        message.audio = reader.bytes();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a StreamingRecognizeRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.speech.v2.StreamingRecognizeRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.speech.v2.StreamingRecognizeRequest} StreamingRecognizeRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        StreamingRecognizeRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a StreamingRecognizeRequest message.
                         * @function verify
                         * @memberof google.cloud.speech.v2.StreamingRecognizeRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        StreamingRecognizeRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.recognizer != null && message.hasOwnProperty("recognizer"))
                                if (!$util.isString(message.recognizer))
                                    return "recognizer: string expected";
                            if (message.streamingConfig != null && message.hasOwnProperty("streamingConfig")) {
                                properties.streamingRequest = 1;
                                {
                                    var error = $root.google.cloud.speech.v2.StreamingRecognitionConfig.verify(message.streamingConfig);
                                    if (error)
                                        return "streamingConfig." + error;
                                }
                            }
                            if (message.audio != null && message.hasOwnProperty("audio")) {
                                if (properties.streamingRequest === 1)
                                    return "streamingRequest: multiple values";
                                properties.streamingRequest = 1;
                                if (!(message.audio && typeof message.audio.length === "number" || $util.isString(message.audio)))
                                    return "audio: buffer expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a StreamingRecognizeRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.speech.v2.StreamingRecognizeRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.speech.v2.StreamingRecognizeRequest} StreamingRecognizeRequest
                         */
                        StreamingRecognizeRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.speech.v2.StreamingRecognizeRequest)
                                return object;
                            var message = new $root.google.cloud.speech.v2.StreamingRecognizeRequest();
                            if (object.recognizer != null)
                                message.recognizer = String(object.recognizer);
                            if (object.streamingConfig != null) {
                                if (typeof object.streamingConfig !== "object")
                                    throw TypeError(".google.cloud.speech.v2.StreamingRecognizeRequest.streamingConfig: object expected");
                                message.streamingConfig = $root.google.cloud.speech.v2.StreamingRecognitionConfig.fromObject(object.streamingConfig);
                            }
                            if (object.audio != null)
                                if (typeof object.audio === "string")
                                    $util.base64.decode(object.audio, message.audio = $util.newBuffer($util.base64.length(object.audio)), 0);
                                else if (object.audio.length >= 0)
                                    message.audio = object.audio;
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a StreamingRecognizeRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.speech.v2.StreamingRecognizeRequest
                         * @static
                         * @param {google.cloud.speech.v2.StreamingRecognizeRequest} message StreamingRecognizeRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        StreamingRecognizeRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.recognizer = "";
                            if (message.recognizer != null && message.hasOwnProperty("recognizer"))
                                object.recognizer = message.recognizer;
                            if (message.audio != null && message.hasOwnProperty("audio")) {
                                object.audio = options.bytes === String ? $util.base64.encode(message.audio, 0, message.audio.length) : options.bytes === Array ? Array.prototype.slice.call(message.audio) : message.audio;
                                if (options.oneofs)
                                    object.streamingRequest = "audio";
                            }
                            if (message.streamingConfig != null && message.hasOwnProperty("streamingConfig")) {
                                object.streamingConfig = $root.google.cloud.speech.v2.StreamingRecognitionConfig.toObject(message.streamingConfig, options);
                                if (options.oneofs)
                                    object.streamingRequest = "streamingConfig";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this StreamingRecognizeRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.speech.v2.StreamingRecognizeRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        StreamingRecognizeRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for StreamingRecognizeRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.speech.v2.StreamingRecognizeRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        StreamingRecognizeRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.speech.v2.StreamingRecognizeRequest";
                        };
    
                        return StreamingRecognizeRequest;
                    })();
    
                    v2.BatchRecognizeRequest = (function() {
    
                        /**
                         * Properties of a BatchRecognizeRequest.
                         * @memberof google.cloud.speech.v2
                         * @interface IBatchRecognizeRequest
                         * @property {string|null} [recognizer] BatchRecognizeRequest recognizer
                         * @property {google.cloud.speech.v2.IRecognitionConfig|null} [config] BatchRecognizeRequest config
                         * @property {google.protobuf.IFieldMask|null} [configMask] BatchRecognizeRequest configMask
                         * @property {Array.<google.cloud.speech.v2.IBatchRecognizeFileMetadata>|null} [files] BatchRecognizeRequest files
                         * @property {google.cloud.speech.v2.IRecognitionOutputConfig|null} [recognitionOutputConfig] BatchRecognizeRequest recognitionOutputConfig
                         * @property {google.cloud.speech.v2.BatchRecognizeRequest.ProcessingStrategy|null} [processingStrategy] BatchRecognizeRequest processingStrategy
                         */
    
                        /**
                         * Constructs a new BatchRecognizeRequest.
                         * @memberof google.cloud.speech.v2
                         * @classdesc Represents a BatchRecognizeRequest.
                         * @implements IBatchRecognizeRequest
                         * @constructor
                         * @param {google.cloud.speech.v2.IBatchRecognizeRequest=} [properties] Properties to set
                         */
                        function BatchRecognizeRequest(properties) {
                            this.files = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * BatchRecognizeRequest recognizer.
                         * @member {string} recognizer
                         * @memberof google.cloud.speech.v2.BatchRecognizeRequest
                         * @instance
                         */
                        BatchRecognizeRequest.prototype.recognizer = "";
    
                        /**
                         * BatchRecognizeRequest config.
                         * @member {google.cloud.speech.v2.IRecognitionConfig|null|undefined} config
                         * @memberof google.cloud.speech.v2.BatchRecognizeRequest
                         * @instance
                         */
                        BatchRecognizeRequest.prototype.config = null;
    
                        /**
                         * BatchRecognizeRequest configMask.
                         * @member {google.protobuf.IFieldMask|null|undefined} configMask
                         * @memberof google.cloud.speech.v2.BatchRecognizeRequest
                         * @instance
                         */
                        BatchRecognizeRequest.prototype.configMask = null;
    
                        /**
                         * BatchRecognizeRequest files.
                         * @member {Array.<google.cloud.speech.v2.IBatchRecognizeFileMetadata>} files
                         * @memberof google.cloud.speech.v2.BatchRecognizeRequest
                         * @instance
                         */
                        BatchRecognizeRequest.prototype.files = $util.emptyArray;
    
                        /**
                         * BatchRecognizeRequest recognitionOutputConfig.
                         * @member {google.cloud.speech.v2.IRecognitionOutputConfig|null|undefined} recognitionOutputConfig
                         * @memberof google.cloud.speech.v2.BatchRecognizeRequest
                         * @instance
                         */
                        BatchRecognizeRequest.prototype.recognitionOutputConfig = null;
    
                        /**
                         * BatchRecognizeRequest processingStrategy.
                         * @member {google.cloud.speech.v2.BatchRecognizeRequest.ProcessingStrategy} processingStrategy
                         * @memberof google.cloud.speech.v2.BatchRecognizeRequest
                         * @instance
                         */
                        BatchRecognizeRequest.prototype.processingStrategy = 0;
    
                        /**
                         * Creates a new BatchRecognizeRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.speech.v2.BatchRecognizeRequest
                         * @static
                         * @param {google.cloud.speech.v2.IBatchRecognizeRequest=} [properties] Properties to set
                         * @returns {google.cloud.speech.v2.BatchRecognizeRequest} BatchRecognizeRequest instance
                         */
                        BatchRecognizeRequest.create = function create(properties) {
                            return new BatchRecognizeRequest(properties);
                        };
    
                        /**
                         * Encodes the specified BatchRecognizeRequest message. Does not implicitly {@link google.cloud.speech.v2.BatchRecognizeRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.speech.v2.BatchRecognizeRequest
                         * @static
                         * @param {google.cloud.speech.v2.IBatchRecognizeRequest} message BatchRecognizeRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        BatchRecognizeRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.recognizer != null && Object.hasOwnProperty.call(message, "recognizer"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.recognizer);
                            if (message.files != null && message.files.length)
                                for (var i = 0; i < message.files.length; ++i)
                                    $root.google.cloud.speech.v2.BatchRecognizeFileMetadata.encode(message.files[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.config != null && Object.hasOwnProperty.call(message, "config"))
                                $root.google.cloud.speech.v2.RecognitionConfig.encode(message.config, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            if (message.configMask != null && Object.hasOwnProperty.call(message, "configMask"))
                                $root.google.protobuf.FieldMask.encode(message.configMask, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            if (message.recognitionOutputConfig != null && Object.hasOwnProperty.call(message, "recognitionOutputConfig"))
                                $root.google.cloud.speech.v2.RecognitionOutputConfig.encode(message.recognitionOutputConfig, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                            if (message.processingStrategy != null && Object.hasOwnProperty.call(message, "processingStrategy"))
                                writer.uint32(/* id 7, wireType 0 =*/56).int32(message.processingStrategy);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified BatchRecognizeRequest message, length delimited. Does not implicitly {@link google.cloud.speech.v2.BatchRecognizeRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.speech.v2.BatchRecognizeRequest
                         * @static
                         * @param {google.cloud.speech.v2.IBatchRecognizeRequest} message BatchRecognizeRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        BatchRecognizeRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a BatchRecognizeRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.speech.v2.BatchRecognizeRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.speech.v2.BatchRecognizeRequest} BatchRecognizeRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        BatchRecognizeRequest.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.speech.v2.BatchRecognizeRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        message.recognizer = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.config = $root.google.cloud.speech.v2.RecognitionConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 5: {
                                        message.configMask = $root.google.protobuf.FieldMask.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        if (!(message.files && message.files.length))
                                            message.files = [];
                                        message.files.push($root.google.cloud.speech.v2.BatchRecognizeFileMetadata.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 6: {
                                        message.recognitionOutputConfig = $root.google.cloud.speech.v2.RecognitionOutputConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 7: {
                                        message.processingStrategy = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a BatchRecognizeRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.speech.v2.BatchRecognizeRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.speech.v2.BatchRecognizeRequest} BatchRecognizeRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        BatchRecognizeRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a BatchRecognizeRequest message.
                         * @function verify
                         * @memberof google.cloud.speech.v2.BatchRecognizeRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        BatchRecognizeRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.recognizer != null && message.hasOwnProperty("recognizer"))
                                if (!$util.isString(message.recognizer))
                                    return "recognizer: string expected";
                            if (message.config != null && message.hasOwnProperty("config")) {
                                var error = $root.google.cloud.speech.v2.RecognitionConfig.verify(message.config);
                                if (error)
                                    return "config." + error;
                            }
                            if (message.configMask != null && message.hasOwnProperty("configMask")) {
                                var error = $root.google.protobuf.FieldMask.verify(message.configMask);
                                if (error)
                                    return "configMask." + error;
                            }
                            if (message.files != null && message.hasOwnProperty("files")) {
                                if (!Array.isArray(message.files))
                                    return "files: array expected";
                                for (var i = 0; i < message.files.length; ++i) {
                                    var error = $root.google.cloud.speech.v2.BatchRecognizeFileMetadata.verify(message.files[i]);
                                    if (error)
                                        return "files." + error;
                                }
                            }
                            if (message.recognitionOutputConfig != null && message.hasOwnProperty("recognitionOutputConfig")) {
                                var error = $root.google.cloud.speech.v2.RecognitionOutputConfig.verify(message.recognitionOutputConfig);
                                if (error)
                                    return "recognitionOutputConfig." + error;
                            }
                            if (message.processingStrategy != null && message.hasOwnProperty("processingStrategy"))
                                switch (message.processingStrategy) {
                                default:
                                    return "processingStrategy: enum value expected";
                                case 0:
                                case 1:
                                    break;
                                }
                            return null;
                        };
    
                        /**
                         * Creates a BatchRecognizeRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.speech.v2.BatchRecognizeRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.speech.v2.BatchRecognizeRequest} BatchRecognizeRequest
                         */
                        BatchRecognizeRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.speech.v2.BatchRecognizeRequest)
                                return object;
                            var message = new $root.google.cloud.speech.v2.BatchRecognizeRequest();
                            if (object.recognizer != null)
                                message.recognizer = String(object.recognizer);
                            if (object.config != null) {
                                if (typeof object.config !== "object")
                                    throw TypeError(".google.cloud.speech.v2.BatchRecognizeRequest.config: object expected");
                                message.config = $root.google.cloud.speech.v2.RecognitionConfig.fromObject(object.config);
                            }
                            if (object.configMask != null) {
                                if (typeof object.configMask !== "object")
                                    throw TypeError(".google.cloud.speech.v2.BatchRecognizeRequest.configMask: object expected");
                                message.configMask = $root.google.protobuf.FieldMask.fromObject(object.configMask);
                            }
                            if (object.files) {
                                if (!Array.isArray(object.files))
                                    throw TypeError(".google.cloud.speech.v2.BatchRecognizeRequest.files: array expected");
                                message.files = [];
                                for (var i = 0; i < object.files.length; ++i) {
                                    if (typeof object.files[i] !== "object")
                                        throw TypeError(".google.cloud.speech.v2.BatchRecognizeRequest.files: object expected");
                                    message.files[i] = $root.google.cloud.speech.v2.BatchRecognizeFileMetadata.fromObject(object.files[i]);
                                }
                            }
                            if (object.recognitionOutputConfig != null) {
                                if (typeof object.recognitionOutputConfig !== "object")
                                    throw TypeError(".google.cloud.speech.v2.BatchRecognizeRequest.recognitionOutputConfig: object expected");
                                message.recognitionOutputConfig = $root.google.cloud.speech.v2.RecognitionOutputConfig.fromObject(object.recognitionOutputConfig);
                            }
                            switch (object.processingStrategy) {
                            default:
                                if (typeof object.processingStrategy === "number") {
                                    message.processingStrategy = object.processingStrategy;
                                    break;
                                }
                                break;
                            case "PROCESSING_STRATEGY_UNSPECIFIED":
                            case 0:
                                message.processingStrategy = 0;
                                break;
                            case "DYNAMIC_BATCHING":
                            case 1:
                                message.processingStrategy = 1;
                                break;
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a BatchRecognizeRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.speech.v2.BatchRecognizeRequest
                         * @static
                         * @param {google.cloud.speech.v2.BatchRecognizeRequest} message BatchRecognizeRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        BatchRecognizeRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.files = [];
                            if (options.defaults) {
                                object.recognizer = "";
                                object.config = null;
                                object.configMask = null;
                                object.recognitionOutputConfig = null;
                                object.processingStrategy = options.enums === String ? "PROCESSING_STRATEGY_UNSPECIFIED" : 0;
                            }
                            if (message.recognizer != null && message.hasOwnProperty("recognizer"))
                                object.recognizer = message.recognizer;
                            if (message.files && message.files.length) {
                                object.files = [];
                                for (var j = 0; j < message.files.length; ++j)
                                    object.files[j] = $root.google.cloud.speech.v2.BatchRecognizeFileMetadata.toObject(message.files[j], options);
                            }
                            if (message.config != null && message.hasOwnProperty("config"))
                                object.config = $root.google.cloud.speech.v2.RecognitionConfig.toObject(message.config, options);
                            if (message.configMask != null && message.hasOwnProperty("configMask"))
                                object.configMask = $root.google.protobuf.FieldMask.toObject(message.configMask, options);
                            if (message.recognitionOutputConfig != null && message.hasOwnProperty("recognitionOutputConfig"))
                                object.recognitionOutputConfig = $root.google.cloud.speech.v2.RecognitionOutputConfig.toObject(message.recognitionOutputConfig, options);
                            if (message.processingStrategy != null && message.hasOwnProperty("processingStrategy"))
                                object.processingStrategy = options.enums === String ? $root.google.cloud.speech.v2.BatchRecognizeRequest.ProcessingStrategy[message.processingStrategy] === undefined ? message.processingStrategy : $root.google.cloud.speech.v2.BatchRecognizeRequest.ProcessingStrategy[message.processingStrategy] : message.processingStrategy;
                            return object;
                        };
    
                        /**
                         * Converts this BatchRecognizeRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.speech.v2.BatchRecognizeRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        BatchRecognizeRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for BatchRecognizeRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.speech.v2.BatchRecognizeRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        BatchRecognizeRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.speech.v2.BatchRecognizeRequest";
                        };
    
                        /**
                         * ProcessingStrategy enum.
                         * @name google.cloud.speech.v2.BatchRecognizeRequest.ProcessingStrategy
                         * @enum {number}
                         * @property {number} PROCESSING_STRATEGY_UNSPECIFIED=0 PROCESSING_STRATEGY_UNSPECIFIED value
                         * @property {number} DYNAMIC_BATCHING=1 DYNAMIC_BATCHING value
                         */
                        BatchRecognizeRequest.ProcessingStrategy = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "PROCESSING_STRATEGY_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "DYNAMIC_BATCHING"] = 1;
                            return values;
                        })();
    
                        return BatchRecognizeRequest;
                    })();
    
                    v2.GcsOutputConfig = (function() {
    
                        /**
                         * Properties of a GcsOutputConfig.
                         * @memberof google.cloud.speech.v2
                         * @interface IGcsOutputConfig
                         * @property {string|null} [uri] GcsOutputConfig uri
                         */
    
                        /**
                         * Constructs a new GcsOutputConfig.
                         * @memberof google.cloud.speech.v2
                         * @classdesc Represents a GcsOutputConfig.
                         * @implements IGcsOutputConfig
                         * @constructor
                         * @param {google.cloud.speech.v2.IGcsOutputConfig=} [properties] Properties to set
                         */
                        function GcsOutputConfig(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GcsOutputConfig uri.
                         * @member {string} uri
                         * @memberof google.cloud.speech.v2.GcsOutputConfig
                         * @instance
                         */
                        GcsOutputConfig.prototype.uri = "";
    
                        /**
                         * Creates a new GcsOutputConfig instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.speech.v2.GcsOutputConfig
                         * @static
                         * @param {google.cloud.speech.v2.IGcsOutputConfig=} [properties] Properties to set
                         * @returns {google.cloud.speech.v2.GcsOutputConfig} GcsOutputConfig instance
                         */
                        GcsOutputConfig.create = function create(properties) {
                            return new GcsOutputConfig(properties);
                        };
    
                        /**
                         * Encodes the specified GcsOutputConfig message. Does not implicitly {@link google.cloud.speech.v2.GcsOutputConfig.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.speech.v2.GcsOutputConfig
                         * @static
                         * @param {google.cloud.speech.v2.IGcsOutputConfig} message GcsOutputConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GcsOutputConfig.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.uri != null && Object.hasOwnProperty.call(message, "uri"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.uri);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GcsOutputConfig message, length delimited. Does not implicitly {@link google.cloud.speech.v2.GcsOutputConfig.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.speech.v2.GcsOutputConfig
                         * @static
                         * @param {google.cloud.speech.v2.IGcsOutputConfig} message GcsOutputConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GcsOutputConfig.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GcsOutputConfig message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.speech.v2.GcsOutputConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.speech.v2.GcsOutputConfig} GcsOutputConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GcsOutputConfig.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.speech.v2.GcsOutputConfig();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        message.uri = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GcsOutputConfig message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.speech.v2.GcsOutputConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.speech.v2.GcsOutputConfig} GcsOutputConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GcsOutputConfig.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GcsOutputConfig message.
                         * @function verify
                         * @memberof google.cloud.speech.v2.GcsOutputConfig
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GcsOutputConfig.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.uri != null && message.hasOwnProperty("uri"))
                                if (!$util.isString(message.uri))
                                    return "uri: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a GcsOutputConfig message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.speech.v2.GcsOutputConfig
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.speech.v2.GcsOutputConfig} GcsOutputConfig
                         */
                        GcsOutputConfig.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.speech.v2.GcsOutputConfig)
                                return object;
                            var message = new $root.google.cloud.speech.v2.GcsOutputConfig();
                            if (object.uri != null)
                                message.uri = String(object.uri);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GcsOutputConfig message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.speech.v2.GcsOutputConfig
                         * @static
                         * @param {google.cloud.speech.v2.GcsOutputConfig} message GcsOutputConfig
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GcsOutputConfig.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.uri = "";
                            if (message.uri != null && message.hasOwnProperty("uri"))
                                object.uri = message.uri;
                            return object;
                        };
    
                        /**
                         * Converts this GcsOutputConfig to JSON.
                         * @function toJSON
                         * @memberof google.cloud.speech.v2.GcsOutputConfig
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GcsOutputConfig.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GcsOutputConfig
                         * @function getTypeUrl
                         * @memberof google.cloud.speech.v2.GcsOutputConfig
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GcsOutputConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.speech.v2.GcsOutputConfig";
                        };
    
                        return GcsOutputConfig;
                    })();
    
                    v2.InlineOutputConfig = (function() {
    
                        /**
                         * Properties of an InlineOutputConfig.
                         * @memberof google.cloud.speech.v2
                         * @interface IInlineOutputConfig
                         */
    
                        /**
                         * Constructs a new InlineOutputConfig.
                         * @memberof google.cloud.speech.v2
                         * @classdesc Represents an InlineOutputConfig.
                         * @implements IInlineOutputConfig
                         * @constructor
                         * @param {google.cloud.speech.v2.IInlineOutputConfig=} [properties] Properties to set
                         */
                        function InlineOutputConfig(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Creates a new InlineOutputConfig instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.speech.v2.InlineOutputConfig
                         * @static
                         * @param {google.cloud.speech.v2.IInlineOutputConfig=} [properties] Properties to set
                         * @returns {google.cloud.speech.v2.InlineOutputConfig} InlineOutputConfig instance
                         */
                        InlineOutputConfig.create = function create(properties) {
                            return new InlineOutputConfig(properties);
                        };
    
                        /**
                         * Encodes the specified InlineOutputConfig message. Does not implicitly {@link google.cloud.speech.v2.InlineOutputConfig.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.speech.v2.InlineOutputConfig
                         * @static
                         * @param {google.cloud.speech.v2.IInlineOutputConfig} message InlineOutputConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        InlineOutputConfig.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified InlineOutputConfig message, length delimited. Does not implicitly {@link google.cloud.speech.v2.InlineOutputConfig.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.speech.v2.InlineOutputConfig
                         * @static
                         * @param {google.cloud.speech.v2.IInlineOutputConfig} message InlineOutputConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        InlineOutputConfig.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an InlineOutputConfig message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.speech.v2.InlineOutputConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.speech.v2.InlineOutputConfig} InlineOutputConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        InlineOutputConfig.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.speech.v2.InlineOutputConfig();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an InlineOutputConfig message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.speech.v2.InlineOutputConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.speech.v2.InlineOutputConfig} InlineOutputConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        InlineOutputConfig.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an InlineOutputConfig message.
                         * @function verify
                         * @memberof google.cloud.speech.v2.InlineOutputConfig
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        InlineOutputConfig.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            return null;
                        };
    
                        /**
                         * Creates an InlineOutputConfig message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.speech.v2.InlineOutputConfig
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.speech.v2.InlineOutputConfig} InlineOutputConfig
                         */
                        InlineOutputConfig.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.speech.v2.InlineOutputConfig)
                                return object;
                            return new $root.google.cloud.speech.v2.InlineOutputConfig();
                        };
    
                        /**
                         * Creates a plain object from an InlineOutputConfig message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.speech.v2.InlineOutputConfig
                         * @static
                         * @param {google.cloud.speech.v2.InlineOutputConfig} message InlineOutputConfig
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        InlineOutputConfig.toObject = function toObject() {
                            return {};
                        };
    
                        /**
                         * Converts this InlineOutputConfig to JSON.
                         * @function toJSON
                         * @memberof google.cloud.speech.v2.InlineOutputConfig
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        InlineOutputConfig.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for InlineOutputConfig
                         * @function getTypeUrl
                         * @memberof google.cloud.speech.v2.InlineOutputConfig
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        InlineOutputConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.speech.v2.InlineOutputConfig";
                        };
    
                        return InlineOutputConfig;
                    })();
    
                    v2.NativeOutputFileFormatConfig = (function() {
    
                        /**
                         * Properties of a NativeOutputFileFormatConfig.
                         * @memberof google.cloud.speech.v2
                         * @interface INativeOutputFileFormatConfig
                         */
    
                        /**
                         * Constructs a new NativeOutputFileFormatConfig.
                         * @memberof google.cloud.speech.v2
                         * @classdesc Represents a NativeOutputFileFormatConfig.
                         * @implements INativeOutputFileFormatConfig
                         * @constructor
                         * @param {google.cloud.speech.v2.INativeOutputFileFormatConfig=} [properties] Properties to set
                         */
                        function NativeOutputFileFormatConfig(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Creates a new NativeOutputFileFormatConfig instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.speech.v2.NativeOutputFileFormatConfig
                         * @static
                         * @param {google.cloud.speech.v2.INativeOutputFileFormatConfig=} [properties] Properties to set
                         * @returns {google.cloud.speech.v2.NativeOutputFileFormatConfig} NativeOutputFileFormatConfig instance
                         */
                        NativeOutputFileFormatConfig.create = function create(properties) {
                            return new NativeOutputFileFormatConfig(properties);
                        };
    
                        /**
                         * Encodes the specified NativeOutputFileFormatConfig message. Does not implicitly {@link google.cloud.speech.v2.NativeOutputFileFormatConfig.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.speech.v2.NativeOutputFileFormatConfig
                         * @static
                         * @param {google.cloud.speech.v2.INativeOutputFileFormatConfig} message NativeOutputFileFormatConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        NativeOutputFileFormatConfig.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified NativeOutputFileFormatConfig message, length delimited. Does not implicitly {@link google.cloud.speech.v2.NativeOutputFileFormatConfig.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.speech.v2.NativeOutputFileFormatConfig
                         * @static
                         * @param {google.cloud.speech.v2.INativeOutputFileFormatConfig} message NativeOutputFileFormatConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        NativeOutputFileFormatConfig.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a NativeOutputFileFormatConfig message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.speech.v2.NativeOutputFileFormatConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.speech.v2.NativeOutputFileFormatConfig} NativeOutputFileFormatConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        NativeOutputFileFormatConfig.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.speech.v2.NativeOutputFileFormatConfig();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a NativeOutputFileFormatConfig message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.speech.v2.NativeOutputFileFormatConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.speech.v2.NativeOutputFileFormatConfig} NativeOutputFileFormatConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        NativeOutputFileFormatConfig.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a NativeOutputFileFormatConfig message.
                         * @function verify
                         * @memberof google.cloud.speech.v2.NativeOutputFileFormatConfig
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        NativeOutputFileFormatConfig.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            return null;
                        };
    
                        /**
                         * Creates a NativeOutputFileFormatConfig message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.speech.v2.NativeOutputFileFormatConfig
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.speech.v2.NativeOutputFileFormatConfig} NativeOutputFileFormatConfig
                         */
                        NativeOutputFileFormatConfig.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.speech.v2.NativeOutputFileFormatConfig)
                                return object;
                            return new $root.google.cloud.speech.v2.NativeOutputFileFormatConfig();
                        };
    
                        /**
                         * Creates a plain object from a NativeOutputFileFormatConfig message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.speech.v2.NativeOutputFileFormatConfig
                         * @static
                         * @param {google.cloud.speech.v2.NativeOutputFileFormatConfig} message NativeOutputFileFormatConfig
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        NativeOutputFileFormatConfig.toObject = function toObject() {
                            return {};
                        };
    
                        /**
                         * Converts this NativeOutputFileFormatConfig to JSON.
                         * @function toJSON
                         * @memberof google.cloud.speech.v2.NativeOutputFileFormatConfig
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        NativeOutputFileFormatConfig.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for NativeOutputFileFormatConfig
                         * @function getTypeUrl
                         * @memberof google.cloud.speech.v2.NativeOutputFileFormatConfig
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        NativeOutputFileFormatConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.speech.v2.NativeOutputFileFormatConfig";
                        };
    
                        return NativeOutputFileFormatConfig;
                    })();
    
                    v2.VttOutputFileFormatConfig = (function() {
    
                        /**
                         * Properties of a VttOutputFileFormatConfig.
                         * @memberof google.cloud.speech.v2
                         * @interface IVttOutputFileFormatConfig
                         */
    
                        /**
                         * Constructs a new VttOutputFileFormatConfig.
                         * @memberof google.cloud.speech.v2
                         * @classdesc Represents a VttOutputFileFormatConfig.
                         * @implements IVttOutputFileFormatConfig
                         * @constructor
                         * @param {google.cloud.speech.v2.IVttOutputFileFormatConfig=} [properties] Properties to set
                         */
                        function VttOutputFileFormatConfig(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Creates a new VttOutputFileFormatConfig instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.speech.v2.VttOutputFileFormatConfig
                         * @static
                         * @param {google.cloud.speech.v2.IVttOutputFileFormatConfig=} [properties] Properties to set
                         * @returns {google.cloud.speech.v2.VttOutputFileFormatConfig} VttOutputFileFormatConfig instance
                         */
                        VttOutputFileFormatConfig.create = function create(properties) {
                            return new VttOutputFileFormatConfig(properties);
                        };
    
                        /**
                         * Encodes the specified VttOutputFileFormatConfig message. Does not implicitly {@link google.cloud.speech.v2.VttOutputFileFormatConfig.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.speech.v2.VttOutputFileFormatConfig
                         * @static
                         * @param {google.cloud.speech.v2.IVttOutputFileFormatConfig} message VttOutputFileFormatConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        VttOutputFileFormatConfig.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified VttOutputFileFormatConfig message, length delimited. Does not implicitly {@link google.cloud.speech.v2.VttOutputFileFormatConfig.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.speech.v2.VttOutputFileFormatConfig
                         * @static
                         * @param {google.cloud.speech.v2.IVttOutputFileFormatConfig} message VttOutputFileFormatConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        VttOutputFileFormatConfig.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a VttOutputFileFormatConfig message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.speech.v2.VttOutputFileFormatConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.speech.v2.VttOutputFileFormatConfig} VttOutputFileFormatConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        VttOutputFileFormatConfig.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.speech.v2.VttOutputFileFormatConfig();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a VttOutputFileFormatConfig message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.speech.v2.VttOutputFileFormatConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.speech.v2.VttOutputFileFormatConfig} VttOutputFileFormatConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        VttOutputFileFormatConfig.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a VttOutputFileFormatConfig message.
                         * @function verify
                         * @memberof google.cloud.speech.v2.VttOutputFileFormatConfig
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        VttOutputFileFormatConfig.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            return null;
                        };
    
                        /**
                         * Creates a VttOutputFileFormatConfig message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.speech.v2.VttOutputFileFormatConfig
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.speech.v2.VttOutputFileFormatConfig} VttOutputFileFormatConfig
                         */
                        VttOutputFileFormatConfig.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.speech.v2.VttOutputFileFormatConfig)
                                return object;
                            return new $root.google.cloud.speech.v2.VttOutputFileFormatConfig();
                        };
    
                        /**
                         * Creates a plain object from a VttOutputFileFormatConfig message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.speech.v2.VttOutputFileFormatConfig
                         * @static
                         * @param {google.cloud.speech.v2.VttOutputFileFormatConfig} message VttOutputFileFormatConfig
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        VttOutputFileFormatConfig.toObject = function toObject() {
                            return {};
                        };
    
                        /**
                         * Converts this VttOutputFileFormatConfig to JSON.
                         * @function toJSON
                         * @memberof google.cloud.speech.v2.VttOutputFileFormatConfig
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        VttOutputFileFormatConfig.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for VttOutputFileFormatConfig
                         * @function getTypeUrl
                         * @memberof google.cloud.speech.v2.VttOutputFileFormatConfig
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        VttOutputFileFormatConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.speech.v2.VttOutputFileFormatConfig";
                        };
    
                        return VttOutputFileFormatConfig;
                    })();
    
                    v2.SrtOutputFileFormatConfig = (function() {
    
                        /**
                         * Properties of a SrtOutputFileFormatConfig.
                         * @memberof google.cloud.speech.v2
                         * @interface ISrtOutputFileFormatConfig
                         */
    
                        /**
                         * Constructs a new SrtOutputFileFormatConfig.
                         * @memberof google.cloud.speech.v2
                         * @classdesc Represents a SrtOutputFileFormatConfig.
                         * @implements ISrtOutputFileFormatConfig
                         * @constructor
                         * @param {google.cloud.speech.v2.ISrtOutputFileFormatConfig=} [properties] Properties to set
                         */
                        function SrtOutputFileFormatConfig(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Creates a new SrtOutputFileFormatConfig instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.speech.v2.SrtOutputFileFormatConfig
                         * @static
                         * @param {google.cloud.speech.v2.ISrtOutputFileFormatConfig=} [properties] Properties to set
                         * @returns {google.cloud.speech.v2.SrtOutputFileFormatConfig} SrtOutputFileFormatConfig instance
                         */
                        SrtOutputFileFormatConfig.create = function create(properties) {
                            return new SrtOutputFileFormatConfig(properties);
                        };
    
                        /**
                         * Encodes the specified SrtOutputFileFormatConfig message. Does not implicitly {@link google.cloud.speech.v2.SrtOutputFileFormatConfig.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.speech.v2.SrtOutputFileFormatConfig
                         * @static
                         * @param {google.cloud.speech.v2.ISrtOutputFileFormatConfig} message SrtOutputFileFormatConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SrtOutputFileFormatConfig.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified SrtOutputFileFormatConfig message, length delimited. Does not implicitly {@link google.cloud.speech.v2.SrtOutputFileFormatConfig.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.speech.v2.SrtOutputFileFormatConfig
                         * @static
                         * @param {google.cloud.speech.v2.ISrtOutputFileFormatConfig} message SrtOutputFileFormatConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SrtOutputFileFormatConfig.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a SrtOutputFileFormatConfig message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.speech.v2.SrtOutputFileFormatConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.speech.v2.SrtOutputFileFormatConfig} SrtOutputFileFormatConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SrtOutputFileFormatConfig.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.speech.v2.SrtOutputFileFormatConfig();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a SrtOutputFileFormatConfig message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.speech.v2.SrtOutputFileFormatConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.speech.v2.SrtOutputFileFormatConfig} SrtOutputFileFormatConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SrtOutputFileFormatConfig.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a SrtOutputFileFormatConfig message.
                         * @function verify
                         * @memberof google.cloud.speech.v2.SrtOutputFileFormatConfig
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        SrtOutputFileFormatConfig.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            return null;
                        };
    
                        /**
                         * Creates a SrtOutputFileFormatConfig message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.speech.v2.SrtOutputFileFormatConfig
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.speech.v2.SrtOutputFileFormatConfig} SrtOutputFileFormatConfig
                         */
                        SrtOutputFileFormatConfig.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.speech.v2.SrtOutputFileFormatConfig)
                                return object;
                            return new $root.google.cloud.speech.v2.SrtOutputFileFormatConfig();
                        };
    
                        /**
                         * Creates a plain object from a SrtOutputFileFormatConfig message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.speech.v2.SrtOutputFileFormatConfig
                         * @static
                         * @param {google.cloud.speech.v2.SrtOutputFileFormatConfig} message SrtOutputFileFormatConfig
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        SrtOutputFileFormatConfig.toObject = function toObject() {
                            return {};
                        };
    
                        /**
                         * Converts this SrtOutputFileFormatConfig to JSON.
                         * @function toJSON
                         * @memberof google.cloud.speech.v2.SrtOutputFileFormatConfig
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        SrtOutputFileFormatConfig.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for SrtOutputFileFormatConfig
                         * @function getTypeUrl
                         * @memberof google.cloud.speech.v2.SrtOutputFileFormatConfig
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        SrtOutputFileFormatConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.speech.v2.SrtOutputFileFormatConfig";
                        };
    
                        return SrtOutputFileFormatConfig;
                    })();
    
                    v2.OutputFormatConfig = (function() {
    
                        /**
                         * Properties of an OutputFormatConfig.
                         * @memberof google.cloud.speech.v2
                         * @interface IOutputFormatConfig
                         * @property {google.cloud.speech.v2.INativeOutputFileFormatConfig|null} [native] OutputFormatConfig native
                         * @property {google.cloud.speech.v2.IVttOutputFileFormatConfig|null} [vtt] OutputFormatConfig vtt
                         * @property {google.cloud.speech.v2.ISrtOutputFileFormatConfig|null} [srt] OutputFormatConfig srt
                         */
    
                        /**
                         * Constructs a new OutputFormatConfig.
                         * @memberof google.cloud.speech.v2
                         * @classdesc Represents an OutputFormatConfig.
                         * @implements IOutputFormatConfig
                         * @constructor
                         * @param {google.cloud.speech.v2.IOutputFormatConfig=} [properties] Properties to set
                         */
                        function OutputFormatConfig(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * OutputFormatConfig native.
                         * @member {google.cloud.speech.v2.INativeOutputFileFormatConfig|null|undefined} native
                         * @memberof google.cloud.speech.v2.OutputFormatConfig
                         * @instance
                         */
                        OutputFormatConfig.prototype.native = null;
    
                        /**
                         * OutputFormatConfig vtt.
                         * @member {google.cloud.speech.v2.IVttOutputFileFormatConfig|null|undefined} vtt
                         * @memberof google.cloud.speech.v2.OutputFormatConfig
                         * @instance
                         */
                        OutputFormatConfig.prototype.vtt = null;
    
                        /**
                         * OutputFormatConfig srt.
                         * @member {google.cloud.speech.v2.ISrtOutputFileFormatConfig|null|undefined} srt
                         * @memberof google.cloud.speech.v2.OutputFormatConfig
                         * @instance
                         */
                        OutputFormatConfig.prototype.srt = null;
    
                        /**
                         * Creates a new OutputFormatConfig instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.speech.v2.OutputFormatConfig
                         * @static
                         * @param {google.cloud.speech.v2.IOutputFormatConfig=} [properties] Properties to set
                         * @returns {google.cloud.speech.v2.OutputFormatConfig} OutputFormatConfig instance
                         */
                        OutputFormatConfig.create = function create(properties) {
                            return new OutputFormatConfig(properties);
                        };
    
                        /**
                         * Encodes the specified OutputFormatConfig message. Does not implicitly {@link google.cloud.speech.v2.OutputFormatConfig.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.speech.v2.OutputFormatConfig
                         * @static
                         * @param {google.cloud.speech.v2.IOutputFormatConfig} message OutputFormatConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        OutputFormatConfig.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.native != null && Object.hasOwnProperty.call(message, "native"))
                                $root.google.cloud.speech.v2.NativeOutputFileFormatConfig.encode(message.native, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.vtt != null && Object.hasOwnProperty.call(message, "vtt"))
                                $root.google.cloud.speech.v2.VttOutputFileFormatConfig.encode(message.vtt, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.srt != null && Object.hasOwnProperty.call(message, "srt"))
                                $root.google.cloud.speech.v2.SrtOutputFileFormatConfig.encode(message.srt, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified OutputFormatConfig message, length delimited. Does not implicitly {@link google.cloud.speech.v2.OutputFormatConfig.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.speech.v2.OutputFormatConfig
                         * @static
                         * @param {google.cloud.speech.v2.IOutputFormatConfig} message OutputFormatConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        OutputFormatConfig.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an OutputFormatConfig message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.speech.v2.OutputFormatConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.speech.v2.OutputFormatConfig} OutputFormatConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        OutputFormatConfig.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.speech.v2.OutputFormatConfig();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        message.native = $root.google.cloud.speech.v2.NativeOutputFileFormatConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.vtt = $root.google.cloud.speech.v2.VttOutputFileFormatConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.srt = $root.google.cloud.speech.v2.SrtOutputFileFormatConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an OutputFormatConfig message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.speech.v2.OutputFormatConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.speech.v2.OutputFormatConfig} OutputFormatConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        OutputFormatConfig.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an OutputFormatConfig message.
                         * @function verify
                         * @memberof google.cloud.speech.v2.OutputFormatConfig
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        OutputFormatConfig.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.native != null && message.hasOwnProperty("native")) {
                                var error = $root.google.cloud.speech.v2.NativeOutputFileFormatConfig.verify(message.native);
                                if (error)
                                    return "native." + error;
                            }
                            if (message.vtt != null && message.hasOwnProperty("vtt")) {
                                var error = $root.google.cloud.speech.v2.VttOutputFileFormatConfig.verify(message.vtt);
                                if (error)
                                    return "vtt." + error;
                            }
                            if (message.srt != null && message.hasOwnProperty("srt")) {
                                var error = $root.google.cloud.speech.v2.SrtOutputFileFormatConfig.verify(message.srt);
                                if (error)
                                    return "srt." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates an OutputFormatConfig message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.speech.v2.OutputFormatConfig
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.speech.v2.OutputFormatConfig} OutputFormatConfig
                         */
                        OutputFormatConfig.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.speech.v2.OutputFormatConfig)
                                return object;
                            var message = new $root.google.cloud.speech.v2.OutputFormatConfig();
                            if (object.native != null) {
                                if (typeof object.native !== "object")
                                    throw TypeError(".google.cloud.speech.v2.OutputFormatConfig.native: object expected");
                                message.native = $root.google.cloud.speech.v2.NativeOutputFileFormatConfig.fromObject(object.native);
                            }
                            if (object.vtt != null) {
                                if (typeof object.vtt !== "object")
                                    throw TypeError(".google.cloud.speech.v2.OutputFormatConfig.vtt: object expected");
                                message.vtt = $root.google.cloud.speech.v2.VttOutputFileFormatConfig.fromObject(object.vtt);
                            }
                            if (object.srt != null) {
                                if (typeof object.srt !== "object")
                                    throw TypeError(".google.cloud.speech.v2.OutputFormatConfig.srt: object expected");
                                message.srt = $root.google.cloud.speech.v2.SrtOutputFileFormatConfig.fromObject(object.srt);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an OutputFormatConfig message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.speech.v2.OutputFormatConfig
                         * @static
                         * @param {google.cloud.speech.v2.OutputFormatConfig} message OutputFormatConfig
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        OutputFormatConfig.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.native = null;
                                object.vtt = null;
                                object.srt = null;
                            }
                            if (message.native != null && message.hasOwnProperty("native"))
                                object.native = $root.google.cloud.speech.v2.NativeOutputFileFormatConfig.toObject(message.native, options);
                            if (message.vtt != null && message.hasOwnProperty("vtt"))
                                object.vtt = $root.google.cloud.speech.v2.VttOutputFileFormatConfig.toObject(message.vtt, options);
                            if (message.srt != null && message.hasOwnProperty("srt"))
                                object.srt = $root.google.cloud.speech.v2.SrtOutputFileFormatConfig.toObject(message.srt, options);
                            return object;
                        };
    
                        /**
                         * Converts this OutputFormatConfig to JSON.
                         * @function toJSON
                         * @memberof google.cloud.speech.v2.OutputFormatConfig
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        OutputFormatConfig.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for OutputFormatConfig
                         * @function getTypeUrl
                         * @memberof google.cloud.speech.v2.OutputFormatConfig
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        OutputFormatConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.speech.v2.OutputFormatConfig";
                        };
    
                        return OutputFormatConfig;
                    })();
    
                    v2.RecognitionOutputConfig = (function() {
    
                        /**
                         * Properties of a RecognitionOutputConfig.
                         * @memberof google.cloud.speech.v2
                         * @interface IRecognitionOutputConfig
                         * @property {google.cloud.speech.v2.IGcsOutputConfig|null} [gcsOutputConfig] RecognitionOutputConfig gcsOutputConfig
                         * @property {google.cloud.speech.v2.IInlineOutputConfig|null} [inlineResponseConfig] RecognitionOutputConfig inlineResponseConfig
                         * @property {google.cloud.speech.v2.IOutputFormatConfig|null} [outputFormatConfig] RecognitionOutputConfig outputFormatConfig
                         */
    
                        /**
                         * Constructs a new RecognitionOutputConfig.
                         * @memberof google.cloud.speech.v2
                         * @classdesc Represents a RecognitionOutputConfig.
                         * @implements IRecognitionOutputConfig
                         * @constructor
                         * @param {google.cloud.speech.v2.IRecognitionOutputConfig=} [properties] Properties to set
                         */
                        function RecognitionOutputConfig(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * RecognitionOutputConfig gcsOutputConfig.
                         * @member {google.cloud.speech.v2.IGcsOutputConfig|null|undefined} gcsOutputConfig
                         * @memberof google.cloud.speech.v2.RecognitionOutputConfig
                         * @instance
                         */
                        RecognitionOutputConfig.prototype.gcsOutputConfig = null;
    
                        /**
                         * RecognitionOutputConfig inlineResponseConfig.
                         * @member {google.cloud.speech.v2.IInlineOutputConfig|null|undefined} inlineResponseConfig
                         * @memberof google.cloud.speech.v2.RecognitionOutputConfig
                         * @instance
                         */
                        RecognitionOutputConfig.prototype.inlineResponseConfig = null;
    
                        /**
                         * RecognitionOutputConfig outputFormatConfig.
                         * @member {google.cloud.speech.v2.IOutputFormatConfig|null|undefined} outputFormatConfig
                         * @memberof google.cloud.speech.v2.RecognitionOutputConfig
                         * @instance
                         */
                        RecognitionOutputConfig.prototype.outputFormatConfig = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * RecognitionOutputConfig output.
                         * @member {"gcsOutputConfig"|"inlineResponseConfig"|undefined} output
                         * @memberof google.cloud.speech.v2.RecognitionOutputConfig
                         * @instance
                         */
                        Object.defineProperty(RecognitionOutputConfig.prototype, "output", {
                            get: $util.oneOfGetter($oneOfFields = ["gcsOutputConfig", "inlineResponseConfig"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new RecognitionOutputConfig instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.speech.v2.RecognitionOutputConfig
                         * @static
                         * @param {google.cloud.speech.v2.IRecognitionOutputConfig=} [properties] Properties to set
                         * @returns {google.cloud.speech.v2.RecognitionOutputConfig} RecognitionOutputConfig instance
                         */
                        RecognitionOutputConfig.create = function create(properties) {
                            return new RecognitionOutputConfig(properties);
                        };
    
                        /**
                         * Encodes the specified RecognitionOutputConfig message. Does not implicitly {@link google.cloud.speech.v2.RecognitionOutputConfig.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.speech.v2.RecognitionOutputConfig
                         * @static
                         * @param {google.cloud.speech.v2.IRecognitionOutputConfig} message RecognitionOutputConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RecognitionOutputConfig.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.gcsOutputConfig != null && Object.hasOwnProperty.call(message, "gcsOutputConfig"))
                                $root.google.cloud.speech.v2.GcsOutputConfig.encode(message.gcsOutputConfig, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.inlineResponseConfig != null && Object.hasOwnProperty.call(message, "inlineResponseConfig"))
                                $root.google.cloud.speech.v2.InlineOutputConfig.encode(message.inlineResponseConfig, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.outputFormatConfig != null && Object.hasOwnProperty.call(message, "outputFormatConfig"))
                                $root.google.cloud.speech.v2.OutputFormatConfig.encode(message.outputFormatConfig, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified RecognitionOutputConfig message, length delimited. Does not implicitly {@link google.cloud.speech.v2.RecognitionOutputConfig.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.speech.v2.RecognitionOutputConfig
                         * @static
                         * @param {google.cloud.speech.v2.IRecognitionOutputConfig} message RecognitionOutputConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RecognitionOutputConfig.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a RecognitionOutputConfig message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.speech.v2.RecognitionOutputConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.speech.v2.RecognitionOutputConfig} RecognitionOutputConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RecognitionOutputConfig.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.speech.v2.RecognitionOutputConfig();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        message.gcsOutputConfig = $root.google.cloud.speech.v2.GcsOutputConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.inlineResponseConfig = $root.google.cloud.speech.v2.InlineOutputConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.outputFormatConfig = $root.google.cloud.speech.v2.OutputFormatConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a RecognitionOutputConfig message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.speech.v2.RecognitionOutputConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.speech.v2.RecognitionOutputConfig} RecognitionOutputConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RecognitionOutputConfig.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a RecognitionOutputConfig message.
                         * @function verify
                         * @memberof google.cloud.speech.v2.RecognitionOutputConfig
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        RecognitionOutputConfig.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.gcsOutputConfig != null && message.hasOwnProperty("gcsOutputConfig")) {
                                properties.output = 1;
                                {
                                    var error = $root.google.cloud.speech.v2.GcsOutputConfig.verify(message.gcsOutputConfig);
                                    if (error)
                                        return "gcsOutputConfig." + error;
                                }
                            }
                            if (message.inlineResponseConfig != null && message.hasOwnProperty("inlineResponseConfig")) {
                                if (properties.output === 1)
                                    return "output: multiple values";
                                properties.output = 1;
                                {
                                    var error = $root.google.cloud.speech.v2.InlineOutputConfig.verify(message.inlineResponseConfig);
                                    if (error)
                                        return "inlineResponseConfig." + error;
                                }
                            }
                            if (message.outputFormatConfig != null && message.hasOwnProperty("outputFormatConfig")) {
                                var error = $root.google.cloud.speech.v2.OutputFormatConfig.verify(message.outputFormatConfig);
                                if (error)
                                    return "outputFormatConfig." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a RecognitionOutputConfig message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.speech.v2.RecognitionOutputConfig
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.speech.v2.RecognitionOutputConfig} RecognitionOutputConfig
                         */
                        RecognitionOutputConfig.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.speech.v2.RecognitionOutputConfig)
                                return object;
                            var message = new $root.google.cloud.speech.v2.RecognitionOutputConfig();
                            if (object.gcsOutputConfig != null) {
                                if (typeof object.gcsOutputConfig !== "object")
                                    throw TypeError(".google.cloud.speech.v2.RecognitionOutputConfig.gcsOutputConfig: object expected");
                                message.gcsOutputConfig = $root.google.cloud.speech.v2.GcsOutputConfig.fromObject(object.gcsOutputConfig);
                            }
                            if (object.inlineResponseConfig != null) {
                                if (typeof object.inlineResponseConfig !== "object")
                                    throw TypeError(".google.cloud.speech.v2.RecognitionOutputConfig.inlineResponseConfig: object expected");
                                message.inlineResponseConfig = $root.google.cloud.speech.v2.InlineOutputConfig.fromObject(object.inlineResponseConfig);
                            }
                            if (object.outputFormatConfig != null) {
                                if (typeof object.outputFormatConfig !== "object")
                                    throw TypeError(".google.cloud.speech.v2.RecognitionOutputConfig.outputFormatConfig: object expected");
                                message.outputFormatConfig = $root.google.cloud.speech.v2.OutputFormatConfig.fromObject(object.outputFormatConfig);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a RecognitionOutputConfig message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.speech.v2.RecognitionOutputConfig
                         * @static
                         * @param {google.cloud.speech.v2.RecognitionOutputConfig} message RecognitionOutputConfig
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        RecognitionOutputConfig.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.outputFormatConfig = null;
                            if (message.gcsOutputConfig != null && message.hasOwnProperty("gcsOutputConfig")) {
                                object.gcsOutputConfig = $root.google.cloud.speech.v2.GcsOutputConfig.toObject(message.gcsOutputConfig, options);
                                if (options.oneofs)
                                    object.output = "gcsOutputConfig";
                            }
                            if (message.inlineResponseConfig != null && message.hasOwnProperty("inlineResponseConfig")) {
                                object.inlineResponseConfig = $root.google.cloud.speech.v2.InlineOutputConfig.toObject(message.inlineResponseConfig, options);
                                if (options.oneofs)
                                    object.output = "inlineResponseConfig";
                            }
                            if (message.outputFormatConfig != null && message.hasOwnProperty("outputFormatConfig"))
                                object.outputFormatConfig = $root.google.cloud.speech.v2.OutputFormatConfig.toObject(message.outputFormatConfig, options);
                            return object;
                        };
    
                        /**
                         * Converts this RecognitionOutputConfig to JSON.
                         * @function toJSON
                         * @memberof google.cloud.speech.v2.RecognitionOutputConfig
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        RecognitionOutputConfig.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for RecognitionOutputConfig
                         * @function getTypeUrl
                         * @memberof google.cloud.speech.v2.RecognitionOutputConfig
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        RecognitionOutputConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.speech.v2.RecognitionOutputConfig";
                        };
    
                        return RecognitionOutputConfig;
                    })();
    
                    v2.BatchRecognizeResponse = (function() {
    
                        /**
                         * Properties of a BatchRecognizeResponse.
                         * @memberof google.cloud.speech.v2
                         * @interface IBatchRecognizeResponse
                         * @property {Object.<string,google.cloud.speech.v2.IBatchRecognizeFileResult>|null} [results] BatchRecognizeResponse results
                         * @property {google.protobuf.IDuration|null} [totalBilledDuration] BatchRecognizeResponse totalBilledDuration
                         */
    
                        /**
                         * Constructs a new BatchRecognizeResponse.
                         * @memberof google.cloud.speech.v2
                         * @classdesc Represents a BatchRecognizeResponse.
                         * @implements IBatchRecognizeResponse
                         * @constructor
                         * @param {google.cloud.speech.v2.IBatchRecognizeResponse=} [properties] Properties to set
                         */
                        function BatchRecognizeResponse(properties) {
                            this.results = {};
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * BatchRecognizeResponse results.
                         * @member {Object.<string,google.cloud.speech.v2.IBatchRecognizeFileResult>} results
                         * @memberof google.cloud.speech.v2.BatchRecognizeResponse
                         * @instance
                         */
                        BatchRecognizeResponse.prototype.results = $util.emptyObject;
    
                        /**
                         * BatchRecognizeResponse totalBilledDuration.
                         * @member {google.protobuf.IDuration|null|undefined} totalBilledDuration
                         * @memberof google.cloud.speech.v2.BatchRecognizeResponse
                         * @instance
                         */
                        BatchRecognizeResponse.prototype.totalBilledDuration = null;
    
                        /**
                         * Creates a new BatchRecognizeResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.speech.v2.BatchRecognizeResponse
                         * @static
                         * @param {google.cloud.speech.v2.IBatchRecognizeResponse=} [properties] Properties to set
                         * @returns {google.cloud.speech.v2.BatchRecognizeResponse} BatchRecognizeResponse instance
                         */
                        BatchRecognizeResponse.create = function create(properties) {
                            return new BatchRecognizeResponse(properties);
                        };
    
                        /**
                         * Encodes the specified BatchRecognizeResponse message. Does not implicitly {@link google.cloud.speech.v2.BatchRecognizeResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.speech.v2.BatchRecognizeResponse
                         * @static
                         * @param {google.cloud.speech.v2.IBatchRecognizeResponse} message BatchRecognizeResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        BatchRecognizeResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.results != null && Object.hasOwnProperty.call(message, "results"))
                                for (var keys = Object.keys(message.results), i = 0; i < keys.length; ++i) {
                                    writer.uint32(/* id 1, wireType 2 =*/10).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]);
                                    $root.google.cloud.speech.v2.BatchRecognizeFileResult.encode(message.results[keys[i]], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim().ldelim();
                                }
                            if (message.totalBilledDuration != null && Object.hasOwnProperty.call(message, "totalBilledDuration"))
                                $root.google.protobuf.Duration.encode(message.totalBilledDuration, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified BatchRecognizeResponse message, length delimited. Does not implicitly {@link google.cloud.speech.v2.BatchRecognizeResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.speech.v2.BatchRecognizeResponse
                         * @static
                         * @param {google.cloud.speech.v2.IBatchRecognizeResponse} message BatchRecognizeResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        BatchRecognizeResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a BatchRecognizeResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.speech.v2.BatchRecognizeResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.speech.v2.BatchRecognizeResponse} BatchRecognizeResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        BatchRecognizeResponse.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.speech.v2.BatchRecognizeResponse(), key, value;
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        if (message.results === $util.emptyObject)
                                            message.results = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = null;
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = $root.google.cloud.speech.v2.BatchRecognizeFileResult.decode(reader, reader.uint32());
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.results[key] = value;
                                        break;
                                    }
                                case 2: {
                                        message.totalBilledDuration = $root.google.protobuf.Duration.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a BatchRecognizeResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.speech.v2.BatchRecognizeResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.speech.v2.BatchRecognizeResponse} BatchRecognizeResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        BatchRecognizeResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a BatchRecognizeResponse message.
                         * @function verify
                         * @memberof google.cloud.speech.v2.BatchRecognizeResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        BatchRecognizeResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.results != null && message.hasOwnProperty("results")) {
                                if (!$util.isObject(message.results))
                                    return "results: object expected";
                                var key = Object.keys(message.results);
                                for (var i = 0; i < key.length; ++i) {
                                    var error = $root.google.cloud.speech.v2.BatchRecognizeFileResult.verify(message.results[key[i]]);
                                    if (error)
                                        return "results." + error;
                                }
                            }
                            if (message.totalBilledDuration != null && message.hasOwnProperty("totalBilledDuration")) {
                                var error = $root.google.protobuf.Duration.verify(message.totalBilledDuration);
                                if (error)
                                    return "totalBilledDuration." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a BatchRecognizeResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.speech.v2.BatchRecognizeResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.speech.v2.BatchRecognizeResponse} BatchRecognizeResponse
                         */
                        BatchRecognizeResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.speech.v2.BatchRecognizeResponse)
                                return object;
                            var message = new $root.google.cloud.speech.v2.BatchRecognizeResponse();
                            if (object.results) {
                                if (typeof object.results !== "object")
                                    throw TypeError(".google.cloud.speech.v2.BatchRecognizeResponse.results: object expected");
                                message.results = {};
                                for (var keys = Object.keys(object.results), i = 0; i < keys.length; ++i) {
                                    if (typeof object.results[keys[i]] !== "object")
                                        throw TypeError(".google.cloud.speech.v2.BatchRecognizeResponse.results: object expected");
                                    message.results[keys[i]] = $root.google.cloud.speech.v2.BatchRecognizeFileResult.fromObject(object.results[keys[i]]);
                                }
                            }
                            if (object.totalBilledDuration != null) {
                                if (typeof object.totalBilledDuration !== "object")
                                    throw TypeError(".google.cloud.speech.v2.BatchRecognizeResponse.totalBilledDuration: object expected");
                                message.totalBilledDuration = $root.google.protobuf.Duration.fromObject(object.totalBilledDuration);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a BatchRecognizeResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.speech.v2.BatchRecognizeResponse
                         * @static
                         * @param {google.cloud.speech.v2.BatchRecognizeResponse} message BatchRecognizeResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        BatchRecognizeResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.objects || options.defaults)
                                object.results = {};
                            if (options.defaults)
                                object.totalBilledDuration = null;
                            var keys2;
                            if (message.results && (keys2 = Object.keys(message.results)).length) {
                                object.results = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.results[keys2[j]] = $root.google.cloud.speech.v2.BatchRecognizeFileResult.toObject(message.results[keys2[j]], options);
                            }
                            if (message.totalBilledDuration != null && message.hasOwnProperty("totalBilledDuration"))
                                object.totalBilledDuration = $root.google.protobuf.Duration.toObject(message.totalBilledDuration, options);
                            return object;
                        };
    
                        /**
                         * Converts this BatchRecognizeResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.speech.v2.BatchRecognizeResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        BatchRecognizeResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for BatchRecognizeResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.speech.v2.BatchRecognizeResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        BatchRecognizeResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.speech.v2.BatchRecognizeResponse";
                        };
    
                        return BatchRecognizeResponse;
                    })();
    
                    v2.BatchRecognizeResults = (function() {
    
                        /**
                         * Properties of a BatchRecognizeResults.
                         * @memberof google.cloud.speech.v2
                         * @interface IBatchRecognizeResults
                         * @property {Array.<google.cloud.speech.v2.ISpeechRecognitionResult>|null} [results] BatchRecognizeResults results
                         * @property {google.cloud.speech.v2.IRecognitionResponseMetadata|null} [metadata] BatchRecognizeResults metadata
                         */
    
                        /**
                         * Constructs a new BatchRecognizeResults.
                         * @memberof google.cloud.speech.v2
                         * @classdesc Represents a BatchRecognizeResults.
                         * @implements IBatchRecognizeResults
                         * @constructor
                         * @param {google.cloud.speech.v2.IBatchRecognizeResults=} [properties] Properties to set
                         */
                        function BatchRecognizeResults(properties) {
                            this.results = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * BatchRecognizeResults results.
                         * @member {Array.<google.cloud.speech.v2.ISpeechRecognitionResult>} results
                         * @memberof google.cloud.speech.v2.BatchRecognizeResults
                         * @instance
                         */
                        BatchRecognizeResults.prototype.results = $util.emptyArray;
    
                        /**
                         * BatchRecognizeResults metadata.
                         * @member {google.cloud.speech.v2.IRecognitionResponseMetadata|null|undefined} metadata
                         * @memberof google.cloud.speech.v2.BatchRecognizeResults
                         * @instance
                         */
                        BatchRecognizeResults.prototype.metadata = null;
    
                        /**
                         * Creates a new BatchRecognizeResults instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.speech.v2.BatchRecognizeResults
                         * @static
                         * @param {google.cloud.speech.v2.IBatchRecognizeResults=} [properties] Properties to set
                         * @returns {google.cloud.speech.v2.BatchRecognizeResults} BatchRecognizeResults instance
                         */
                        BatchRecognizeResults.create = function create(properties) {
                            return new BatchRecognizeResults(properties);
                        };
    
                        /**
                         * Encodes the specified BatchRecognizeResults message. Does not implicitly {@link google.cloud.speech.v2.BatchRecognizeResults.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.speech.v2.BatchRecognizeResults
                         * @static
                         * @param {google.cloud.speech.v2.IBatchRecognizeResults} message BatchRecognizeResults message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        BatchRecognizeResults.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.results != null && message.results.length)
                                for (var i = 0; i < message.results.length; ++i)
                                    $root.google.cloud.speech.v2.SpeechRecognitionResult.encode(message.results[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.metadata != null && Object.hasOwnProperty.call(message, "metadata"))
                                $root.google.cloud.speech.v2.RecognitionResponseMetadata.encode(message.metadata, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified BatchRecognizeResults message, length delimited. Does not implicitly {@link google.cloud.speech.v2.BatchRecognizeResults.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.speech.v2.BatchRecognizeResults
                         * @static
                         * @param {google.cloud.speech.v2.IBatchRecognizeResults} message BatchRecognizeResults message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        BatchRecognizeResults.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a BatchRecognizeResults message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.speech.v2.BatchRecognizeResults
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.speech.v2.BatchRecognizeResults} BatchRecognizeResults
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        BatchRecognizeResults.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.speech.v2.BatchRecognizeResults();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.results && message.results.length))
                                            message.results = [];
                                        message.results.push($root.google.cloud.speech.v2.SpeechRecognitionResult.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 2: {
                                        message.metadata = $root.google.cloud.speech.v2.RecognitionResponseMetadata.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a BatchRecognizeResults message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.speech.v2.BatchRecognizeResults
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.speech.v2.BatchRecognizeResults} BatchRecognizeResults
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        BatchRecognizeResults.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a BatchRecognizeResults message.
                         * @function verify
                         * @memberof google.cloud.speech.v2.BatchRecognizeResults
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        BatchRecognizeResults.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.results != null && message.hasOwnProperty("results")) {
                                if (!Array.isArray(message.results))
                                    return "results: array expected";
                                for (var i = 0; i < message.results.length; ++i) {
                                    var error = $root.google.cloud.speech.v2.SpeechRecognitionResult.verify(message.results[i]);
                                    if (error)
                                        return "results." + error;
                                }
                            }
                            if (message.metadata != null && message.hasOwnProperty("metadata")) {
                                var error = $root.google.cloud.speech.v2.RecognitionResponseMetadata.verify(message.metadata);
                                if (error)
                                    return "metadata." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a BatchRecognizeResults message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.speech.v2.BatchRecognizeResults
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.speech.v2.BatchRecognizeResults} BatchRecognizeResults
                         */
                        BatchRecognizeResults.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.speech.v2.BatchRecognizeResults)
                                return object;
                            var message = new $root.google.cloud.speech.v2.BatchRecognizeResults();
                            if (object.results) {
                                if (!Array.isArray(object.results))
                                    throw TypeError(".google.cloud.speech.v2.BatchRecognizeResults.results: array expected");
                                message.results = [];
                                for (var i = 0; i < object.results.length; ++i) {
                                    if (typeof object.results[i] !== "object")
                                        throw TypeError(".google.cloud.speech.v2.BatchRecognizeResults.results: object expected");
                                    message.results[i] = $root.google.cloud.speech.v2.SpeechRecognitionResult.fromObject(object.results[i]);
                                }
                            }
                            if (object.metadata != null) {
                                if (typeof object.metadata !== "object")
                                    throw TypeError(".google.cloud.speech.v2.BatchRecognizeResults.metadata: object expected");
                                message.metadata = $root.google.cloud.speech.v2.RecognitionResponseMetadata.fromObject(object.metadata);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a BatchRecognizeResults message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.speech.v2.BatchRecognizeResults
                         * @static
                         * @param {google.cloud.speech.v2.BatchRecognizeResults} message BatchRecognizeResults
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        BatchRecognizeResults.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.results = [];
                            if (options.defaults)
                                object.metadata = null;
                            if (message.results && message.results.length) {
                                object.results = [];
                                for (var j = 0; j < message.results.length; ++j)
                                    object.results[j] = $root.google.cloud.speech.v2.SpeechRecognitionResult.toObject(message.results[j], options);
                            }
                            if (message.metadata != null && message.hasOwnProperty("metadata"))
                                object.metadata = $root.google.cloud.speech.v2.RecognitionResponseMetadata.toObject(message.metadata, options);
                            return object;
                        };
    
                        /**
                         * Converts this BatchRecognizeResults to JSON.
                         * @function toJSON
                         * @memberof google.cloud.speech.v2.BatchRecognizeResults
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        BatchRecognizeResults.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for BatchRecognizeResults
                         * @function getTypeUrl
                         * @memberof google.cloud.speech.v2.BatchRecognizeResults
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        BatchRecognizeResults.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.speech.v2.BatchRecognizeResults";
                        };
    
                        return BatchRecognizeResults;
                    })();
    
                    v2.CloudStorageResult = (function() {
    
                        /**
                         * Properties of a CloudStorageResult.
                         * @memberof google.cloud.speech.v2
                         * @interface ICloudStorageResult
                         * @property {string|null} [uri] CloudStorageResult uri
                         * @property {string|null} [vttFormatUri] CloudStorageResult vttFormatUri
                         * @property {string|null} [srtFormatUri] CloudStorageResult srtFormatUri
                         */
    
                        /**
                         * Constructs a new CloudStorageResult.
                         * @memberof google.cloud.speech.v2
                         * @classdesc Represents a CloudStorageResult.
                         * @implements ICloudStorageResult
                         * @constructor
                         * @param {google.cloud.speech.v2.ICloudStorageResult=} [properties] Properties to set
                         */
                        function CloudStorageResult(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CloudStorageResult uri.
                         * @member {string} uri
                         * @memberof google.cloud.speech.v2.CloudStorageResult
                         * @instance
                         */
                        CloudStorageResult.prototype.uri = "";
    
                        /**
                         * CloudStorageResult vttFormatUri.
                         * @member {string} vttFormatUri
                         * @memberof google.cloud.speech.v2.CloudStorageResult
                         * @instance
                         */
                        CloudStorageResult.prototype.vttFormatUri = "";
    
                        /**
                         * CloudStorageResult srtFormatUri.
                         * @member {string} srtFormatUri
                         * @memberof google.cloud.speech.v2.CloudStorageResult
                         * @instance
                         */
                        CloudStorageResult.prototype.srtFormatUri = "";
    
                        /**
                         * Creates a new CloudStorageResult instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.speech.v2.CloudStorageResult
                         * @static
                         * @param {google.cloud.speech.v2.ICloudStorageResult=} [properties] Properties to set
                         * @returns {google.cloud.speech.v2.CloudStorageResult} CloudStorageResult instance
                         */
                        CloudStorageResult.create = function create(properties) {
                            return new CloudStorageResult(properties);
                        };
    
                        /**
                         * Encodes the specified CloudStorageResult message. Does not implicitly {@link google.cloud.speech.v2.CloudStorageResult.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.speech.v2.CloudStorageResult
                         * @static
                         * @param {google.cloud.speech.v2.ICloudStorageResult} message CloudStorageResult message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CloudStorageResult.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.uri != null && Object.hasOwnProperty.call(message, "uri"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.uri);
                            if (message.vttFormatUri != null && Object.hasOwnProperty.call(message, "vttFormatUri"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.vttFormatUri);
                            if (message.srtFormatUri != null && Object.hasOwnProperty.call(message, "srtFormatUri"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.srtFormatUri);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CloudStorageResult message, length delimited. Does not implicitly {@link google.cloud.speech.v2.CloudStorageResult.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.speech.v2.CloudStorageResult
                         * @static
                         * @param {google.cloud.speech.v2.ICloudStorageResult} message CloudStorageResult message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CloudStorageResult.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CloudStorageResult message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.speech.v2.CloudStorageResult
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.speech.v2.CloudStorageResult} CloudStorageResult
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CloudStorageResult.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.speech.v2.CloudStorageResult();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        message.uri = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.vttFormatUri = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.srtFormatUri = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CloudStorageResult message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.speech.v2.CloudStorageResult
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.speech.v2.CloudStorageResult} CloudStorageResult
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CloudStorageResult.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CloudStorageResult message.
                         * @function verify
                         * @memberof google.cloud.speech.v2.CloudStorageResult
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CloudStorageResult.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.uri != null && message.hasOwnProperty("uri"))
                                if (!$util.isString(message.uri))
                                    return "uri: string expected";
                            if (message.vttFormatUri != null && message.hasOwnProperty("vttFormatUri"))
                                if (!$util.isString(message.vttFormatUri))
                                    return "vttFormatUri: string expected";
                            if (message.srtFormatUri != null && message.hasOwnProperty("srtFormatUri"))
                                if (!$util.isString(message.srtFormatUri))
                                    return "srtFormatUri: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a CloudStorageResult message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.speech.v2.CloudStorageResult
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.speech.v2.CloudStorageResult} CloudStorageResult
                         */
                        CloudStorageResult.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.speech.v2.CloudStorageResult)
                                return object;
                            var message = new $root.google.cloud.speech.v2.CloudStorageResult();
                            if (object.uri != null)
                                message.uri = String(object.uri);
                            if (object.vttFormatUri != null)
                                message.vttFormatUri = String(object.vttFormatUri);
                            if (object.srtFormatUri != null)
                                message.srtFormatUri = String(object.srtFormatUri);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CloudStorageResult message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.speech.v2.CloudStorageResult
                         * @static
                         * @param {google.cloud.speech.v2.CloudStorageResult} message CloudStorageResult
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CloudStorageResult.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.uri = "";
                                object.vttFormatUri = "";
                                object.srtFormatUri = "";
                            }
                            if (message.uri != null && message.hasOwnProperty("uri"))
                                object.uri = message.uri;
                            if (message.vttFormatUri != null && message.hasOwnProperty("vttFormatUri"))
                                object.vttFormatUri = message.vttFormatUri;
                            if (message.srtFormatUri != null && message.hasOwnProperty("srtFormatUri"))
                                object.srtFormatUri = message.srtFormatUri;
                            return object;
                        };
    
                        /**
                         * Converts this CloudStorageResult to JSON.
                         * @function toJSON
                         * @memberof google.cloud.speech.v2.CloudStorageResult
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CloudStorageResult.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for CloudStorageResult
                         * @function getTypeUrl
                         * @memberof google.cloud.speech.v2.CloudStorageResult
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        CloudStorageResult.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.speech.v2.CloudStorageResult";
                        };
    
                        return CloudStorageResult;
                    })();
    
                    v2.InlineResult = (function() {
    
                        /**
                         * Properties of an InlineResult.
                         * @memberof google.cloud.speech.v2
                         * @interface IInlineResult
                         * @property {google.cloud.speech.v2.IBatchRecognizeResults|null} [transcript] InlineResult transcript
                         * @property {string|null} [vttCaptions] InlineResult vttCaptions
                         * @property {string|null} [srtCaptions] InlineResult srtCaptions
                         */
    
                        /**
                         * Constructs a new InlineResult.
                         * @memberof google.cloud.speech.v2
                         * @classdesc Represents an InlineResult.
                         * @implements IInlineResult
                         * @constructor
                         * @param {google.cloud.speech.v2.IInlineResult=} [properties] Properties to set
                         */
                        function InlineResult(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * InlineResult transcript.
                         * @member {google.cloud.speech.v2.IBatchRecognizeResults|null|undefined} transcript
                         * @memberof google.cloud.speech.v2.InlineResult
                         * @instance
                         */
                        InlineResult.prototype.transcript = null;
    
                        /**
                         * InlineResult vttCaptions.
                         * @member {string} vttCaptions
                         * @memberof google.cloud.speech.v2.InlineResult
                         * @instance
                         */
                        InlineResult.prototype.vttCaptions = "";
    
                        /**
                         * InlineResult srtCaptions.
                         * @member {string} srtCaptions
                         * @memberof google.cloud.speech.v2.InlineResult
                         * @instance
                         */
                        InlineResult.prototype.srtCaptions = "";
    
                        /**
                         * Creates a new InlineResult instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.speech.v2.InlineResult
                         * @static
                         * @param {google.cloud.speech.v2.IInlineResult=} [properties] Properties to set
                         * @returns {google.cloud.speech.v2.InlineResult} InlineResult instance
                         */
                        InlineResult.create = function create(properties) {
                            return new InlineResult(properties);
                        };
    
                        /**
                         * Encodes the specified InlineResult message. Does not implicitly {@link google.cloud.speech.v2.InlineResult.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.speech.v2.InlineResult
                         * @static
                         * @param {google.cloud.speech.v2.IInlineResult} message InlineResult message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        InlineResult.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.transcript != null && Object.hasOwnProperty.call(message, "transcript"))
                                $root.google.cloud.speech.v2.BatchRecognizeResults.encode(message.transcript, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.vttCaptions != null && Object.hasOwnProperty.call(message, "vttCaptions"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.vttCaptions);
                            if (message.srtCaptions != null && Object.hasOwnProperty.call(message, "srtCaptions"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.srtCaptions);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified InlineResult message, length delimited. Does not implicitly {@link google.cloud.speech.v2.InlineResult.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.speech.v2.InlineResult
                         * @static
                         * @param {google.cloud.speech.v2.IInlineResult} message InlineResult message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        InlineResult.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an InlineResult message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.speech.v2.InlineResult
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.speech.v2.InlineResult} InlineResult
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        InlineResult.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.speech.v2.InlineResult();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        message.transcript = $root.google.cloud.speech.v2.BatchRecognizeResults.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.vttCaptions = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.srtCaptions = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an InlineResult message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.speech.v2.InlineResult
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.speech.v2.InlineResult} InlineResult
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        InlineResult.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an InlineResult message.
                         * @function verify
                         * @memberof google.cloud.speech.v2.InlineResult
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        InlineResult.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.transcript != null && message.hasOwnProperty("transcript")) {
                                var error = $root.google.cloud.speech.v2.BatchRecognizeResults.verify(message.transcript);
                                if (error)
                                    return "transcript." + error;
                            }
                            if (message.vttCaptions != null && message.hasOwnProperty("vttCaptions"))
                                if (!$util.isString(message.vttCaptions))
                                    return "vttCaptions: string expected";
                            if (message.srtCaptions != null && message.hasOwnProperty("srtCaptions"))
                                if (!$util.isString(message.srtCaptions))
                                    return "srtCaptions: string expected";
                            return null;
                        };
    
                        /**
                         * Creates an InlineResult message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.speech.v2.InlineResult
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.speech.v2.InlineResult} InlineResult
                         */
                        InlineResult.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.speech.v2.InlineResult)
                                return object;
                            var message = new $root.google.cloud.speech.v2.InlineResult();
                            if (object.transcript != null) {
                                if (typeof object.transcript !== "object")
                                    throw TypeError(".google.cloud.speech.v2.InlineResult.transcript: object expected");
                                message.transcript = $root.google.cloud.speech.v2.BatchRecognizeResults.fromObject(object.transcript);
                            }
                            if (object.vttCaptions != null)
                                message.vttCaptions = String(object.vttCaptions);
                            if (object.srtCaptions != null)
                                message.srtCaptions = String(object.srtCaptions);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an InlineResult message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.speech.v2.InlineResult
                         * @static
                         * @param {google.cloud.speech.v2.InlineResult} message InlineResult
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        InlineResult.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.transcript = null;
                                object.vttCaptions = "";
                                object.srtCaptions = "";
                            }
                            if (message.transcript != null && message.hasOwnProperty("transcript"))
                                object.transcript = $root.google.cloud.speech.v2.BatchRecognizeResults.toObject(message.transcript, options);
                            if (message.vttCaptions != null && message.hasOwnProperty("vttCaptions"))
                                object.vttCaptions = message.vttCaptions;
                            if (message.srtCaptions != null && message.hasOwnProperty("srtCaptions"))
                                object.srtCaptions = message.srtCaptions;
                            return object;
                        };
    
                        /**
                         * Converts this InlineResult to JSON.
                         * @function toJSON
                         * @memberof google.cloud.speech.v2.InlineResult
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        InlineResult.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for InlineResult
                         * @function getTypeUrl
                         * @memberof google.cloud.speech.v2.InlineResult
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        InlineResult.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.speech.v2.InlineResult";
                        };
    
                        return InlineResult;
                    })();
    
                    v2.BatchRecognizeFileResult = (function() {
    
                        /**
                         * Properties of a BatchRecognizeFileResult.
                         * @memberof google.cloud.speech.v2
                         * @interface IBatchRecognizeFileResult
                         * @property {google.rpc.IStatus|null} [error] BatchRecognizeFileResult error
                         * @property {google.cloud.speech.v2.IRecognitionResponseMetadata|null} [metadata] BatchRecognizeFileResult metadata
                         * @property {google.cloud.speech.v2.ICloudStorageResult|null} [cloudStorageResult] BatchRecognizeFileResult cloudStorageResult
                         * @property {google.cloud.speech.v2.IInlineResult|null} [inlineResult] BatchRecognizeFileResult inlineResult
                         * @property {string|null} [uri] BatchRecognizeFileResult uri
                         * @property {google.cloud.speech.v2.IBatchRecognizeResults|null} [transcript] BatchRecognizeFileResult transcript
                         */
    
                        /**
                         * Constructs a new BatchRecognizeFileResult.
                         * @memberof google.cloud.speech.v2
                         * @classdesc Represents a BatchRecognizeFileResult.
                         * @implements IBatchRecognizeFileResult
                         * @constructor
                         * @param {google.cloud.speech.v2.IBatchRecognizeFileResult=} [properties] Properties to set
                         */
                        function BatchRecognizeFileResult(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * BatchRecognizeFileResult error.
                         * @member {google.rpc.IStatus|null|undefined} error
                         * @memberof google.cloud.speech.v2.BatchRecognizeFileResult
                         * @instance
                         */
                        BatchRecognizeFileResult.prototype.error = null;
    
                        /**
                         * BatchRecognizeFileResult metadata.
                         * @member {google.cloud.speech.v2.IRecognitionResponseMetadata|null|undefined} metadata
                         * @memberof google.cloud.speech.v2.BatchRecognizeFileResult
                         * @instance
                         */
                        BatchRecognizeFileResult.prototype.metadata = null;
    
                        /**
                         * BatchRecognizeFileResult cloudStorageResult.
                         * @member {google.cloud.speech.v2.ICloudStorageResult|null|undefined} cloudStorageResult
                         * @memberof google.cloud.speech.v2.BatchRecognizeFileResult
                         * @instance
                         */
                        BatchRecognizeFileResult.prototype.cloudStorageResult = null;
    
                        /**
                         * BatchRecognizeFileResult inlineResult.
                         * @member {google.cloud.speech.v2.IInlineResult|null|undefined} inlineResult
                         * @memberof google.cloud.speech.v2.BatchRecognizeFileResult
                         * @instance
                         */
                        BatchRecognizeFileResult.prototype.inlineResult = null;
    
                        /**
                         * BatchRecognizeFileResult uri.
                         * @member {string} uri
                         * @memberof google.cloud.speech.v2.BatchRecognizeFileResult
                         * @instance
                         */
                        BatchRecognizeFileResult.prototype.uri = "";
    
                        /**
                         * BatchRecognizeFileResult transcript.
                         * @member {google.cloud.speech.v2.IBatchRecognizeResults|null|undefined} transcript
                         * @memberof google.cloud.speech.v2.BatchRecognizeFileResult
                         * @instance
                         */
                        BatchRecognizeFileResult.prototype.transcript = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * BatchRecognizeFileResult result.
                         * @member {"cloudStorageResult"|"inlineResult"|undefined} result
                         * @memberof google.cloud.speech.v2.BatchRecognizeFileResult
                         * @instance
                         */
                        Object.defineProperty(BatchRecognizeFileResult.prototype, "result", {
                            get: $util.oneOfGetter($oneOfFields = ["cloudStorageResult", "inlineResult"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new BatchRecognizeFileResult instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.speech.v2.BatchRecognizeFileResult
                         * @static
                         * @param {google.cloud.speech.v2.IBatchRecognizeFileResult=} [properties] Properties to set
                         * @returns {google.cloud.speech.v2.BatchRecognizeFileResult} BatchRecognizeFileResult instance
                         */
                        BatchRecognizeFileResult.create = function create(properties) {
                            return new BatchRecognizeFileResult(properties);
                        };
    
                        /**
                         * Encodes the specified BatchRecognizeFileResult message. Does not implicitly {@link google.cloud.speech.v2.BatchRecognizeFileResult.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.speech.v2.BatchRecognizeFileResult
                         * @static
                         * @param {google.cloud.speech.v2.IBatchRecognizeFileResult} message BatchRecognizeFileResult message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        BatchRecognizeFileResult.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.uri != null && Object.hasOwnProperty.call(message, "uri"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.uri);
                            if (message.error != null && Object.hasOwnProperty.call(message, "error"))
                                $root.google.rpc.Status.encode(message.error, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.metadata != null && Object.hasOwnProperty.call(message, "metadata"))
                                $root.google.cloud.speech.v2.RecognitionResponseMetadata.encode(message.metadata, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.transcript != null && Object.hasOwnProperty.call(message, "transcript"))
                                $root.google.cloud.speech.v2.BatchRecognizeResults.encode(message.transcript, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            if (message.cloudStorageResult != null && Object.hasOwnProperty.call(message, "cloudStorageResult"))
                                $root.google.cloud.speech.v2.CloudStorageResult.encode(message.cloudStorageResult, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            if (message.inlineResult != null && Object.hasOwnProperty.call(message, "inlineResult"))
                                $root.google.cloud.speech.v2.InlineResult.encode(message.inlineResult, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified BatchRecognizeFileResult message, length delimited. Does not implicitly {@link google.cloud.speech.v2.BatchRecognizeFileResult.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.speech.v2.BatchRecognizeFileResult
                         * @static
                         * @param {google.cloud.speech.v2.IBatchRecognizeFileResult} message BatchRecognizeFileResult message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        BatchRecognizeFileResult.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a BatchRecognizeFileResult message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.speech.v2.BatchRecognizeFileResult
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.speech.v2.BatchRecognizeFileResult} BatchRecognizeFileResult
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        BatchRecognizeFileResult.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.speech.v2.BatchRecognizeFileResult();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 2: {
                                        message.error = $root.google.rpc.Status.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.metadata = $root.google.cloud.speech.v2.RecognitionResponseMetadata.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 5: {
                                        message.cloudStorageResult = $root.google.cloud.speech.v2.CloudStorageResult.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 6: {
                                        message.inlineResult = $root.google.cloud.speech.v2.InlineResult.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 1: {
                                        message.uri = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.transcript = $root.google.cloud.speech.v2.BatchRecognizeResults.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a BatchRecognizeFileResult message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.speech.v2.BatchRecognizeFileResult
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.speech.v2.BatchRecognizeFileResult} BatchRecognizeFileResult
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        BatchRecognizeFileResult.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a BatchRecognizeFileResult message.
                         * @function verify
                         * @memberof google.cloud.speech.v2.BatchRecognizeFileResult
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        BatchRecognizeFileResult.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.error != null && message.hasOwnProperty("error")) {
                                var error = $root.google.rpc.Status.verify(message.error);
                                if (error)
                                    return "error." + error;
                            }
                            if (message.metadata != null && message.hasOwnProperty("metadata")) {
                                var error = $root.google.cloud.speech.v2.RecognitionResponseMetadata.verify(message.metadata);
                                if (error)
                                    return "metadata." + error;
                            }
                            if (message.cloudStorageResult != null && message.hasOwnProperty("cloudStorageResult")) {
                                properties.result = 1;
                                {
                                    var error = $root.google.cloud.speech.v2.CloudStorageResult.verify(message.cloudStorageResult);
                                    if (error)
                                        return "cloudStorageResult." + error;
                                }
                            }
                            if (message.inlineResult != null && message.hasOwnProperty("inlineResult")) {
                                if (properties.result === 1)
                                    return "result: multiple values";
                                properties.result = 1;
                                {
                                    var error = $root.google.cloud.speech.v2.InlineResult.verify(message.inlineResult);
                                    if (error)
                                        return "inlineResult." + error;
                                }
                            }
                            if (message.uri != null && message.hasOwnProperty("uri"))
                                if (!$util.isString(message.uri))
                                    return "uri: string expected";
                            if (message.transcript != null && message.hasOwnProperty("transcript")) {
                                var error = $root.google.cloud.speech.v2.BatchRecognizeResults.verify(message.transcript);
                                if (error)
                                    return "transcript." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a BatchRecognizeFileResult message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.speech.v2.BatchRecognizeFileResult
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.speech.v2.BatchRecognizeFileResult} BatchRecognizeFileResult
                         */
                        BatchRecognizeFileResult.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.speech.v2.BatchRecognizeFileResult)
                                return object;
                            var message = new $root.google.cloud.speech.v2.BatchRecognizeFileResult();
                            if (object.error != null) {
                                if (typeof object.error !== "object")
                                    throw TypeError(".google.cloud.speech.v2.BatchRecognizeFileResult.error: object expected");
                                message.error = $root.google.rpc.Status.fromObject(object.error);
                            }
                            if (object.metadata != null) {
                                if (typeof object.metadata !== "object")
                                    throw TypeError(".google.cloud.speech.v2.BatchRecognizeFileResult.metadata: object expected");
                                message.metadata = $root.google.cloud.speech.v2.RecognitionResponseMetadata.fromObject(object.metadata);
                            }
                            if (object.cloudStorageResult != null) {
                                if (typeof object.cloudStorageResult !== "object")
                                    throw TypeError(".google.cloud.speech.v2.BatchRecognizeFileResult.cloudStorageResult: object expected");
                                message.cloudStorageResult = $root.google.cloud.speech.v2.CloudStorageResult.fromObject(object.cloudStorageResult);
                            }
                            if (object.inlineResult != null) {
                                if (typeof object.inlineResult !== "object")
                                    throw TypeError(".google.cloud.speech.v2.BatchRecognizeFileResult.inlineResult: object expected");
                                message.inlineResult = $root.google.cloud.speech.v2.InlineResult.fromObject(object.inlineResult);
                            }
                            if (object.uri != null)
                                message.uri = String(object.uri);
                            if (object.transcript != null) {
                                if (typeof object.transcript !== "object")
                                    throw TypeError(".google.cloud.speech.v2.BatchRecognizeFileResult.transcript: object expected");
                                message.transcript = $root.google.cloud.speech.v2.BatchRecognizeResults.fromObject(object.transcript);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a BatchRecognizeFileResult message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.speech.v2.BatchRecognizeFileResult
                         * @static
                         * @param {google.cloud.speech.v2.BatchRecognizeFileResult} message BatchRecognizeFileResult
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        BatchRecognizeFileResult.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.uri = "";
                                object.error = null;
                                object.metadata = null;
                                object.transcript = null;
                            }
                            if (message.uri != null && message.hasOwnProperty("uri"))
                                object.uri = message.uri;
                            if (message.error != null && message.hasOwnProperty("error"))
                                object.error = $root.google.rpc.Status.toObject(message.error, options);
                            if (message.metadata != null && message.hasOwnProperty("metadata"))
                                object.metadata = $root.google.cloud.speech.v2.RecognitionResponseMetadata.toObject(message.metadata, options);
                            if (message.transcript != null && message.hasOwnProperty("transcript"))
                                object.transcript = $root.google.cloud.speech.v2.BatchRecognizeResults.toObject(message.transcript, options);
                            if (message.cloudStorageResult != null && message.hasOwnProperty("cloudStorageResult")) {
                                object.cloudStorageResult = $root.google.cloud.speech.v2.CloudStorageResult.toObject(message.cloudStorageResult, options);
                                if (options.oneofs)
                                    object.result = "cloudStorageResult";
                            }
                            if (message.inlineResult != null && message.hasOwnProperty("inlineResult")) {
                                object.inlineResult = $root.google.cloud.speech.v2.InlineResult.toObject(message.inlineResult, options);
                                if (options.oneofs)
                                    object.result = "inlineResult";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this BatchRecognizeFileResult to JSON.
                         * @function toJSON
                         * @memberof google.cloud.speech.v2.BatchRecognizeFileResult
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        BatchRecognizeFileResult.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for BatchRecognizeFileResult
                         * @function getTypeUrl
                         * @memberof google.cloud.speech.v2.BatchRecognizeFileResult
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        BatchRecognizeFileResult.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.speech.v2.BatchRecognizeFileResult";
                        };
    
                        return BatchRecognizeFileResult;
                    })();
    
                    v2.BatchRecognizeTranscriptionMetadata = (function() {
    
                        /**
                         * Properties of a BatchRecognizeTranscriptionMetadata.
                         * @memberof google.cloud.speech.v2
                         * @interface IBatchRecognizeTranscriptionMetadata
                         * @property {number|null} [progressPercent] BatchRecognizeTranscriptionMetadata progressPercent
                         * @property {google.rpc.IStatus|null} [error] BatchRecognizeTranscriptionMetadata error
                         * @property {string|null} [uri] BatchRecognizeTranscriptionMetadata uri
                         */
    
                        /**
                         * Constructs a new BatchRecognizeTranscriptionMetadata.
                         * @memberof google.cloud.speech.v2
                         * @classdesc Represents a BatchRecognizeTranscriptionMetadata.
                         * @implements IBatchRecognizeTranscriptionMetadata
                         * @constructor
                         * @param {google.cloud.speech.v2.IBatchRecognizeTranscriptionMetadata=} [properties] Properties to set
                         */
                        function BatchRecognizeTranscriptionMetadata(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * BatchRecognizeTranscriptionMetadata progressPercent.
                         * @member {number} progressPercent
                         * @memberof google.cloud.speech.v2.BatchRecognizeTranscriptionMetadata
                         * @instance
                         */
                        BatchRecognizeTranscriptionMetadata.prototype.progressPercent = 0;
    
                        /**
                         * BatchRecognizeTranscriptionMetadata error.
                         * @member {google.rpc.IStatus|null|undefined} error
                         * @memberof google.cloud.speech.v2.BatchRecognizeTranscriptionMetadata
                         * @instance
                         */
                        BatchRecognizeTranscriptionMetadata.prototype.error = null;
    
                        /**
                         * BatchRecognizeTranscriptionMetadata uri.
                         * @member {string} uri
                         * @memberof google.cloud.speech.v2.BatchRecognizeTranscriptionMetadata
                         * @instance
                         */
                        BatchRecognizeTranscriptionMetadata.prototype.uri = "";
    
                        /**
                         * Creates a new BatchRecognizeTranscriptionMetadata instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.speech.v2.BatchRecognizeTranscriptionMetadata
                         * @static
                         * @param {google.cloud.speech.v2.IBatchRecognizeTranscriptionMetadata=} [properties] Properties to set
                         * @returns {google.cloud.speech.v2.BatchRecognizeTranscriptionMetadata} BatchRecognizeTranscriptionMetadata instance
                         */
                        BatchRecognizeTranscriptionMetadata.create = function create(properties) {
                            return new BatchRecognizeTranscriptionMetadata(properties);
                        };
    
                        /**
                         * Encodes the specified BatchRecognizeTranscriptionMetadata message. Does not implicitly {@link google.cloud.speech.v2.BatchRecognizeTranscriptionMetadata.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.speech.v2.BatchRecognizeTranscriptionMetadata
                         * @static
                         * @param {google.cloud.speech.v2.IBatchRecognizeTranscriptionMetadata} message BatchRecognizeTranscriptionMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        BatchRecognizeTranscriptionMetadata.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.progressPercent != null && Object.hasOwnProperty.call(message, "progressPercent"))
                                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.progressPercent);
                            if (message.error != null && Object.hasOwnProperty.call(message, "error"))
                                $root.google.rpc.Status.encode(message.error, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.uri != null && Object.hasOwnProperty.call(message, "uri"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.uri);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified BatchRecognizeTranscriptionMetadata message, length delimited. Does not implicitly {@link google.cloud.speech.v2.BatchRecognizeTranscriptionMetadata.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.speech.v2.BatchRecognizeTranscriptionMetadata
                         * @static
                         * @param {google.cloud.speech.v2.IBatchRecognizeTranscriptionMetadata} message BatchRecognizeTranscriptionMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        BatchRecognizeTranscriptionMetadata.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a BatchRecognizeTranscriptionMetadata message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.speech.v2.BatchRecognizeTranscriptionMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.speech.v2.BatchRecognizeTranscriptionMetadata} BatchRecognizeTranscriptionMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        BatchRecognizeTranscriptionMetadata.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.speech.v2.BatchRecognizeTranscriptionMetadata();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        message.progressPercent = reader.int32();
                                        break;
                                    }
                                case 2: {
                                        message.error = $root.google.rpc.Status.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.uri = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a BatchRecognizeTranscriptionMetadata message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.speech.v2.BatchRecognizeTranscriptionMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.speech.v2.BatchRecognizeTranscriptionMetadata} BatchRecognizeTranscriptionMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        BatchRecognizeTranscriptionMetadata.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a BatchRecognizeTranscriptionMetadata message.
                         * @function verify
                         * @memberof google.cloud.speech.v2.BatchRecognizeTranscriptionMetadata
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        BatchRecognizeTranscriptionMetadata.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.progressPercent != null && message.hasOwnProperty("progressPercent"))
                                if (!$util.isInteger(message.progressPercent))
                                    return "progressPercent: integer expected";
                            if (message.error != null && message.hasOwnProperty("error")) {
                                var error = $root.google.rpc.Status.verify(message.error);
                                if (error)
                                    return "error." + error;
                            }
                            if (message.uri != null && message.hasOwnProperty("uri"))
                                if (!$util.isString(message.uri))
                                    return "uri: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a BatchRecognizeTranscriptionMetadata message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.speech.v2.BatchRecognizeTranscriptionMetadata
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.speech.v2.BatchRecognizeTranscriptionMetadata} BatchRecognizeTranscriptionMetadata
                         */
                        BatchRecognizeTranscriptionMetadata.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.speech.v2.BatchRecognizeTranscriptionMetadata)
                                return object;
                            var message = new $root.google.cloud.speech.v2.BatchRecognizeTranscriptionMetadata();
                            if (object.progressPercent != null)
                                message.progressPercent = object.progressPercent | 0;
                            if (object.error != null) {
                                if (typeof object.error !== "object")
                                    throw TypeError(".google.cloud.speech.v2.BatchRecognizeTranscriptionMetadata.error: object expected");
                                message.error = $root.google.rpc.Status.fromObject(object.error);
                            }
                            if (object.uri != null)
                                message.uri = String(object.uri);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a BatchRecognizeTranscriptionMetadata message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.speech.v2.BatchRecognizeTranscriptionMetadata
                         * @static
                         * @param {google.cloud.speech.v2.BatchRecognizeTranscriptionMetadata} message BatchRecognizeTranscriptionMetadata
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        BatchRecognizeTranscriptionMetadata.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.progressPercent = 0;
                                object.error = null;
                                object.uri = "";
                            }
                            if (message.progressPercent != null && message.hasOwnProperty("progressPercent"))
                                object.progressPercent = message.progressPercent;
                            if (message.error != null && message.hasOwnProperty("error"))
                                object.error = $root.google.rpc.Status.toObject(message.error, options);
                            if (message.uri != null && message.hasOwnProperty("uri"))
                                object.uri = message.uri;
                            return object;
                        };
    
                        /**
                         * Converts this BatchRecognizeTranscriptionMetadata to JSON.
                         * @function toJSON
                         * @memberof google.cloud.speech.v2.BatchRecognizeTranscriptionMetadata
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        BatchRecognizeTranscriptionMetadata.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for BatchRecognizeTranscriptionMetadata
                         * @function getTypeUrl
                         * @memberof google.cloud.speech.v2.BatchRecognizeTranscriptionMetadata
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        BatchRecognizeTranscriptionMetadata.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.speech.v2.BatchRecognizeTranscriptionMetadata";
                        };
    
                        return BatchRecognizeTranscriptionMetadata;
                    })();
    
                    v2.BatchRecognizeMetadata = (function() {
    
                        /**
                         * Properties of a BatchRecognizeMetadata.
                         * @memberof google.cloud.speech.v2
                         * @interface IBatchRecognizeMetadata
                         * @property {Object.<string,google.cloud.speech.v2.IBatchRecognizeTranscriptionMetadata>|null} [transcriptionMetadata] BatchRecognizeMetadata transcriptionMetadata
                         */
    
                        /**
                         * Constructs a new BatchRecognizeMetadata.
                         * @memberof google.cloud.speech.v2
                         * @classdesc Represents a BatchRecognizeMetadata.
                         * @implements IBatchRecognizeMetadata
                         * @constructor
                         * @param {google.cloud.speech.v2.IBatchRecognizeMetadata=} [properties] Properties to set
                         */
                        function BatchRecognizeMetadata(properties) {
                            this.transcriptionMetadata = {};
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * BatchRecognizeMetadata transcriptionMetadata.
                         * @member {Object.<string,google.cloud.speech.v2.IBatchRecognizeTranscriptionMetadata>} transcriptionMetadata
                         * @memberof google.cloud.speech.v2.BatchRecognizeMetadata
                         * @instance
                         */
                        BatchRecognizeMetadata.prototype.transcriptionMetadata = $util.emptyObject;
    
                        /**
                         * Creates a new BatchRecognizeMetadata instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.speech.v2.BatchRecognizeMetadata
                         * @static
                         * @param {google.cloud.speech.v2.IBatchRecognizeMetadata=} [properties] Properties to set
                         * @returns {google.cloud.speech.v2.BatchRecognizeMetadata} BatchRecognizeMetadata instance
                         */
                        BatchRecognizeMetadata.create = function create(properties) {
                            return new BatchRecognizeMetadata(properties);
                        };
    
                        /**
                         * Encodes the specified BatchRecognizeMetadata message. Does not implicitly {@link google.cloud.speech.v2.BatchRecognizeMetadata.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.speech.v2.BatchRecognizeMetadata
                         * @static
                         * @param {google.cloud.speech.v2.IBatchRecognizeMetadata} message BatchRecognizeMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        BatchRecognizeMetadata.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.transcriptionMetadata != null && Object.hasOwnProperty.call(message, "transcriptionMetadata"))
                                for (var keys = Object.keys(message.transcriptionMetadata), i = 0; i < keys.length; ++i) {
                                    writer.uint32(/* id 1, wireType 2 =*/10).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]);
                                    $root.google.cloud.speech.v2.BatchRecognizeTranscriptionMetadata.encode(message.transcriptionMetadata[keys[i]], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim().ldelim();
                                }
                            return writer;
                        };
    
                        /**
                         * Encodes the specified BatchRecognizeMetadata message, length delimited. Does not implicitly {@link google.cloud.speech.v2.BatchRecognizeMetadata.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.speech.v2.BatchRecognizeMetadata
                         * @static
                         * @param {google.cloud.speech.v2.IBatchRecognizeMetadata} message BatchRecognizeMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        BatchRecognizeMetadata.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a BatchRecognizeMetadata message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.speech.v2.BatchRecognizeMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.speech.v2.BatchRecognizeMetadata} BatchRecognizeMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        BatchRecognizeMetadata.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.speech.v2.BatchRecognizeMetadata(), key, value;
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        if (message.transcriptionMetadata === $util.emptyObject)
                                            message.transcriptionMetadata = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = null;
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = $root.google.cloud.speech.v2.BatchRecognizeTranscriptionMetadata.decode(reader, reader.uint32());
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.transcriptionMetadata[key] = value;
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a BatchRecognizeMetadata message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.speech.v2.BatchRecognizeMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.speech.v2.BatchRecognizeMetadata} BatchRecognizeMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        BatchRecognizeMetadata.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a BatchRecognizeMetadata message.
                         * @function verify
                         * @memberof google.cloud.speech.v2.BatchRecognizeMetadata
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        BatchRecognizeMetadata.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.transcriptionMetadata != null && message.hasOwnProperty("transcriptionMetadata")) {
                                if (!$util.isObject(message.transcriptionMetadata))
                                    return "transcriptionMetadata: object expected";
                                var key = Object.keys(message.transcriptionMetadata);
                                for (var i = 0; i < key.length; ++i) {
                                    var error = $root.google.cloud.speech.v2.BatchRecognizeTranscriptionMetadata.verify(message.transcriptionMetadata[key[i]]);
                                    if (error)
                                        return "transcriptionMetadata." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a BatchRecognizeMetadata message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.speech.v2.BatchRecognizeMetadata
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.speech.v2.BatchRecognizeMetadata} BatchRecognizeMetadata
                         */
                        BatchRecognizeMetadata.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.speech.v2.BatchRecognizeMetadata)
                                return object;
                            var message = new $root.google.cloud.speech.v2.BatchRecognizeMetadata();
                            if (object.transcriptionMetadata) {
                                if (typeof object.transcriptionMetadata !== "object")
                                    throw TypeError(".google.cloud.speech.v2.BatchRecognizeMetadata.transcriptionMetadata: object expected");
                                message.transcriptionMetadata = {};
                                for (var keys = Object.keys(object.transcriptionMetadata), i = 0; i < keys.length; ++i) {
                                    if (typeof object.transcriptionMetadata[keys[i]] !== "object")
                                        throw TypeError(".google.cloud.speech.v2.BatchRecognizeMetadata.transcriptionMetadata: object expected");
                                    message.transcriptionMetadata[keys[i]] = $root.google.cloud.speech.v2.BatchRecognizeTranscriptionMetadata.fromObject(object.transcriptionMetadata[keys[i]]);
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a BatchRecognizeMetadata message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.speech.v2.BatchRecognizeMetadata
                         * @static
                         * @param {google.cloud.speech.v2.BatchRecognizeMetadata} message BatchRecognizeMetadata
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        BatchRecognizeMetadata.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.objects || options.defaults)
                                object.transcriptionMetadata = {};
                            var keys2;
                            if (message.transcriptionMetadata && (keys2 = Object.keys(message.transcriptionMetadata)).length) {
                                object.transcriptionMetadata = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.transcriptionMetadata[keys2[j]] = $root.google.cloud.speech.v2.BatchRecognizeTranscriptionMetadata.toObject(message.transcriptionMetadata[keys2[j]], options);
                            }
                            return object;
                        };
    
                        /**
                         * Converts this BatchRecognizeMetadata to JSON.
                         * @function toJSON
                         * @memberof google.cloud.speech.v2.BatchRecognizeMetadata
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        BatchRecognizeMetadata.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for BatchRecognizeMetadata
                         * @function getTypeUrl
                         * @memberof google.cloud.speech.v2.BatchRecognizeMetadata
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        BatchRecognizeMetadata.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.speech.v2.BatchRecognizeMetadata";
                        };
    
                        return BatchRecognizeMetadata;
                    })();
    
                    v2.BatchRecognizeFileMetadata = (function() {
    
                        /**
                         * Properties of a BatchRecognizeFileMetadata.
                         * @memberof google.cloud.speech.v2
                         * @interface IBatchRecognizeFileMetadata
                         * @property {string|null} [uri] BatchRecognizeFileMetadata uri
                         * @property {google.cloud.speech.v2.IRecognitionConfig|null} [config] BatchRecognizeFileMetadata config
                         * @property {google.protobuf.IFieldMask|null} [configMask] BatchRecognizeFileMetadata configMask
                         */
    
                        /**
                         * Constructs a new BatchRecognizeFileMetadata.
                         * @memberof google.cloud.speech.v2
                         * @classdesc Represents a BatchRecognizeFileMetadata.
                         * @implements IBatchRecognizeFileMetadata
                         * @constructor
                         * @param {google.cloud.speech.v2.IBatchRecognizeFileMetadata=} [properties] Properties to set
                         */
                        function BatchRecognizeFileMetadata(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * BatchRecognizeFileMetadata uri.
                         * @member {string|null|undefined} uri
                         * @memberof google.cloud.speech.v2.BatchRecognizeFileMetadata
                         * @instance
                         */
                        BatchRecognizeFileMetadata.prototype.uri = null;
    
                        /**
                         * BatchRecognizeFileMetadata config.
                         * @member {google.cloud.speech.v2.IRecognitionConfig|null|undefined} config
                         * @memberof google.cloud.speech.v2.BatchRecognizeFileMetadata
                         * @instance
                         */
                        BatchRecognizeFileMetadata.prototype.config = null;
    
                        /**
                         * BatchRecognizeFileMetadata configMask.
                         * @member {google.protobuf.IFieldMask|null|undefined} configMask
                         * @memberof google.cloud.speech.v2.BatchRecognizeFileMetadata
                         * @instance
                         */
                        BatchRecognizeFileMetadata.prototype.configMask = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * BatchRecognizeFileMetadata audioSource.
                         * @member {"uri"|undefined} audioSource
                         * @memberof google.cloud.speech.v2.BatchRecognizeFileMetadata
                         * @instance
                         */
                        Object.defineProperty(BatchRecognizeFileMetadata.prototype, "audioSource", {
                            get: $util.oneOfGetter($oneOfFields = ["uri"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new BatchRecognizeFileMetadata instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.speech.v2.BatchRecognizeFileMetadata
                         * @static
                         * @param {google.cloud.speech.v2.IBatchRecognizeFileMetadata=} [properties] Properties to set
                         * @returns {google.cloud.speech.v2.BatchRecognizeFileMetadata} BatchRecognizeFileMetadata instance
                         */
                        BatchRecognizeFileMetadata.create = function create(properties) {
                            return new BatchRecognizeFileMetadata(properties);
                        };
    
                        /**
                         * Encodes the specified BatchRecognizeFileMetadata message. Does not implicitly {@link google.cloud.speech.v2.BatchRecognizeFileMetadata.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.speech.v2.BatchRecognizeFileMetadata
                         * @static
                         * @param {google.cloud.speech.v2.IBatchRecognizeFileMetadata} message BatchRecognizeFileMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        BatchRecognizeFileMetadata.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.uri != null && Object.hasOwnProperty.call(message, "uri"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.uri);
                            if (message.config != null && Object.hasOwnProperty.call(message, "config"))
                                $root.google.cloud.speech.v2.RecognitionConfig.encode(message.config, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            if (message.configMask != null && Object.hasOwnProperty.call(message, "configMask"))
                                $root.google.protobuf.FieldMask.encode(message.configMask, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified BatchRecognizeFileMetadata message, length delimited. Does not implicitly {@link google.cloud.speech.v2.BatchRecognizeFileMetadata.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.speech.v2.BatchRecognizeFileMetadata
                         * @static
                         * @param {google.cloud.speech.v2.IBatchRecognizeFileMetadata} message BatchRecognizeFileMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        BatchRecognizeFileMetadata.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a BatchRecognizeFileMetadata message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.speech.v2.BatchRecognizeFileMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.speech.v2.BatchRecognizeFileMetadata} BatchRecognizeFileMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        BatchRecognizeFileMetadata.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.speech.v2.BatchRecognizeFileMetadata();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        message.uri = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.config = $root.google.cloud.speech.v2.RecognitionConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 5: {
                                        message.configMask = $root.google.protobuf.FieldMask.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a BatchRecognizeFileMetadata message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.speech.v2.BatchRecognizeFileMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.speech.v2.BatchRecognizeFileMetadata} BatchRecognizeFileMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        BatchRecognizeFileMetadata.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a BatchRecognizeFileMetadata message.
                         * @function verify
                         * @memberof google.cloud.speech.v2.BatchRecognizeFileMetadata
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        BatchRecognizeFileMetadata.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.uri != null && message.hasOwnProperty("uri")) {
                                properties.audioSource = 1;
                                if (!$util.isString(message.uri))
                                    return "uri: string expected";
                            }
                            if (message.config != null && message.hasOwnProperty("config")) {
                                var error = $root.google.cloud.speech.v2.RecognitionConfig.verify(message.config);
                                if (error)
                                    return "config." + error;
                            }
                            if (message.configMask != null && message.hasOwnProperty("configMask")) {
                                var error = $root.google.protobuf.FieldMask.verify(message.configMask);
                                if (error)
                                    return "configMask." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a BatchRecognizeFileMetadata message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.speech.v2.BatchRecognizeFileMetadata
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.speech.v2.BatchRecognizeFileMetadata} BatchRecognizeFileMetadata
                         */
                        BatchRecognizeFileMetadata.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.speech.v2.BatchRecognizeFileMetadata)
                                return object;
                            var message = new $root.google.cloud.speech.v2.BatchRecognizeFileMetadata();
                            if (object.uri != null)
                                message.uri = String(object.uri);
                            if (object.config != null) {
                                if (typeof object.config !== "object")
                                    throw TypeError(".google.cloud.speech.v2.BatchRecognizeFileMetadata.config: object expected");
                                message.config = $root.google.cloud.speech.v2.RecognitionConfig.fromObject(object.config);
                            }
                            if (object.configMask != null) {
                                if (typeof object.configMask !== "object")
                                    throw TypeError(".google.cloud.speech.v2.BatchRecognizeFileMetadata.configMask: object expected");
                                message.configMask = $root.google.protobuf.FieldMask.fromObject(object.configMask);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a BatchRecognizeFileMetadata message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.speech.v2.BatchRecognizeFileMetadata
                         * @static
                         * @param {google.cloud.speech.v2.BatchRecognizeFileMetadata} message BatchRecognizeFileMetadata
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        BatchRecognizeFileMetadata.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.config = null;
                                object.configMask = null;
                            }
                            if (message.uri != null && message.hasOwnProperty("uri")) {
                                object.uri = message.uri;
                                if (options.oneofs)
                                    object.audioSource = "uri";
                            }
                            if (message.config != null && message.hasOwnProperty("config"))
                                object.config = $root.google.cloud.speech.v2.RecognitionConfig.toObject(message.config, options);
                            if (message.configMask != null && message.hasOwnProperty("configMask"))
                                object.configMask = $root.google.protobuf.FieldMask.toObject(message.configMask, options);
                            return object;
                        };
    
                        /**
                         * Converts this BatchRecognizeFileMetadata to JSON.
                         * @function toJSON
                         * @memberof google.cloud.speech.v2.BatchRecognizeFileMetadata
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        BatchRecognizeFileMetadata.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for BatchRecognizeFileMetadata
                         * @function getTypeUrl
                         * @memberof google.cloud.speech.v2.BatchRecognizeFileMetadata
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        BatchRecognizeFileMetadata.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.speech.v2.BatchRecognizeFileMetadata";
                        };
    
                        return BatchRecognizeFileMetadata;
                    })();
    
                    v2.StreamingRecognitionResult = (function() {
    
                        /**
                         * Properties of a StreamingRecognitionResult.
                         * @memberof google.cloud.speech.v2
                         * @interface IStreamingRecognitionResult
                         * @property {Array.<google.cloud.speech.v2.ISpeechRecognitionAlternative>|null} [alternatives] StreamingRecognitionResult alternatives
                         * @property {boolean|null} [isFinal] StreamingRecognitionResult isFinal
                         * @property {number|null} [stability] StreamingRecognitionResult stability
                         * @property {google.protobuf.IDuration|null} [resultEndOffset] StreamingRecognitionResult resultEndOffset
                         * @property {number|null} [channelTag] StreamingRecognitionResult channelTag
                         * @property {string|null} [languageCode] StreamingRecognitionResult languageCode
                         */
    
                        /**
                         * Constructs a new StreamingRecognitionResult.
                         * @memberof google.cloud.speech.v2
                         * @classdesc Represents a StreamingRecognitionResult.
                         * @implements IStreamingRecognitionResult
                         * @constructor
                         * @param {google.cloud.speech.v2.IStreamingRecognitionResult=} [properties] Properties to set
                         */
                        function StreamingRecognitionResult(properties) {
                            this.alternatives = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * StreamingRecognitionResult alternatives.
                         * @member {Array.<google.cloud.speech.v2.ISpeechRecognitionAlternative>} alternatives
                         * @memberof google.cloud.speech.v2.StreamingRecognitionResult
                         * @instance
                         */
                        StreamingRecognitionResult.prototype.alternatives = $util.emptyArray;
    
                        /**
                         * StreamingRecognitionResult isFinal.
                         * @member {boolean} isFinal
                         * @memberof google.cloud.speech.v2.StreamingRecognitionResult
                         * @instance
                         */
                        StreamingRecognitionResult.prototype.isFinal = false;
    
                        /**
                         * StreamingRecognitionResult stability.
                         * @member {number} stability
                         * @memberof google.cloud.speech.v2.StreamingRecognitionResult
                         * @instance
                         */
                        StreamingRecognitionResult.prototype.stability = 0;
    
                        /**
                         * StreamingRecognitionResult resultEndOffset.
                         * @member {google.protobuf.IDuration|null|undefined} resultEndOffset
                         * @memberof google.cloud.speech.v2.StreamingRecognitionResult
                         * @instance
                         */
                        StreamingRecognitionResult.prototype.resultEndOffset = null;
    
                        /**
                         * StreamingRecognitionResult channelTag.
                         * @member {number} channelTag
                         * @memberof google.cloud.speech.v2.StreamingRecognitionResult
                         * @instance
                         */
                        StreamingRecognitionResult.prototype.channelTag = 0;
    
                        /**
                         * StreamingRecognitionResult languageCode.
                         * @member {string} languageCode
                         * @memberof google.cloud.speech.v2.StreamingRecognitionResult
                         * @instance
                         */
                        StreamingRecognitionResult.prototype.languageCode = "";
    
                        /**
                         * Creates a new StreamingRecognitionResult instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.speech.v2.StreamingRecognitionResult
                         * @static
                         * @param {google.cloud.speech.v2.IStreamingRecognitionResult=} [properties] Properties to set
                         * @returns {google.cloud.speech.v2.StreamingRecognitionResult} StreamingRecognitionResult instance
                         */
                        StreamingRecognitionResult.create = function create(properties) {
                            return new StreamingRecognitionResult(properties);
                        };
    
                        /**
                         * Encodes the specified StreamingRecognitionResult message. Does not implicitly {@link google.cloud.speech.v2.StreamingRecognitionResult.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.speech.v2.StreamingRecognitionResult
                         * @static
                         * @param {google.cloud.speech.v2.IStreamingRecognitionResult} message StreamingRecognitionResult message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        StreamingRecognitionResult.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.alternatives != null && message.alternatives.length)
                                for (var i = 0; i < message.alternatives.length; ++i)
                                    $root.google.cloud.speech.v2.SpeechRecognitionAlternative.encode(message.alternatives[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.isFinal != null && Object.hasOwnProperty.call(message, "isFinal"))
                                writer.uint32(/* id 2, wireType 0 =*/16).bool(message.isFinal);
                            if (message.stability != null && Object.hasOwnProperty.call(message, "stability"))
                                writer.uint32(/* id 3, wireType 5 =*/29).float(message.stability);
                            if (message.resultEndOffset != null && Object.hasOwnProperty.call(message, "resultEndOffset"))
                                $root.google.protobuf.Duration.encode(message.resultEndOffset, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            if (message.channelTag != null && Object.hasOwnProperty.call(message, "channelTag"))
                                writer.uint32(/* id 5, wireType 0 =*/40).int32(message.channelTag);
                            if (message.languageCode != null && Object.hasOwnProperty.call(message, "languageCode"))
                                writer.uint32(/* id 6, wireType 2 =*/50).string(message.languageCode);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified StreamingRecognitionResult message, length delimited. Does not implicitly {@link google.cloud.speech.v2.StreamingRecognitionResult.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.speech.v2.StreamingRecognitionResult
                         * @static
                         * @param {google.cloud.speech.v2.IStreamingRecognitionResult} message StreamingRecognitionResult message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        StreamingRecognitionResult.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a StreamingRecognitionResult message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.speech.v2.StreamingRecognitionResult
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.speech.v2.StreamingRecognitionResult} StreamingRecognitionResult
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        StreamingRecognitionResult.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.speech.v2.StreamingRecognitionResult();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.alternatives && message.alternatives.length))
                                            message.alternatives = [];
                                        message.alternatives.push($root.google.cloud.speech.v2.SpeechRecognitionAlternative.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 2: {
                                        message.isFinal = reader.bool();
                                        break;
                                    }
                                case 3: {
                                        message.stability = reader.float();
                                        break;
                                    }
                                case 4: {
                                        message.resultEndOffset = $root.google.protobuf.Duration.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 5: {
                                        message.channelTag = reader.int32();
                                        break;
                                    }
                                case 6: {
                                        message.languageCode = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a StreamingRecognitionResult message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.speech.v2.StreamingRecognitionResult
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.speech.v2.StreamingRecognitionResult} StreamingRecognitionResult
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        StreamingRecognitionResult.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a StreamingRecognitionResult message.
                         * @function verify
                         * @memberof google.cloud.speech.v2.StreamingRecognitionResult
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        StreamingRecognitionResult.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.alternatives != null && message.hasOwnProperty("alternatives")) {
                                if (!Array.isArray(message.alternatives))
                                    return "alternatives: array expected";
                                for (var i = 0; i < message.alternatives.length; ++i) {
                                    var error = $root.google.cloud.speech.v2.SpeechRecognitionAlternative.verify(message.alternatives[i]);
                                    if (error)
                                        return "alternatives." + error;
                                }
                            }
                            if (message.isFinal != null && message.hasOwnProperty("isFinal"))
                                if (typeof message.isFinal !== "boolean")
                                    return "isFinal: boolean expected";
                            if (message.stability != null && message.hasOwnProperty("stability"))
                                if (typeof message.stability !== "number")
                                    return "stability: number expected";
                            if (message.resultEndOffset != null && message.hasOwnProperty("resultEndOffset")) {
                                var error = $root.google.protobuf.Duration.verify(message.resultEndOffset);
                                if (error)
                                    return "resultEndOffset." + error;
                            }
                            if (message.channelTag != null && message.hasOwnProperty("channelTag"))
                                if (!$util.isInteger(message.channelTag))
                                    return "channelTag: integer expected";
                            if (message.languageCode != null && message.hasOwnProperty("languageCode"))
                                if (!$util.isString(message.languageCode))
                                    return "languageCode: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a StreamingRecognitionResult message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.speech.v2.StreamingRecognitionResult
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.speech.v2.StreamingRecognitionResult} StreamingRecognitionResult
                         */
                        StreamingRecognitionResult.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.speech.v2.StreamingRecognitionResult)
                                return object;
                            var message = new $root.google.cloud.speech.v2.StreamingRecognitionResult();
                            if (object.alternatives) {
                                if (!Array.isArray(object.alternatives))
                                    throw TypeError(".google.cloud.speech.v2.StreamingRecognitionResult.alternatives: array expected");
                                message.alternatives = [];
                                for (var i = 0; i < object.alternatives.length; ++i) {
                                    if (typeof object.alternatives[i] !== "object")
                                        throw TypeError(".google.cloud.speech.v2.StreamingRecognitionResult.alternatives: object expected");
                                    message.alternatives[i] = $root.google.cloud.speech.v2.SpeechRecognitionAlternative.fromObject(object.alternatives[i]);
                                }
                            }
                            if (object.isFinal != null)
                                message.isFinal = Boolean(object.isFinal);
                            if (object.stability != null)
                                message.stability = Number(object.stability);
                            if (object.resultEndOffset != null) {
                                if (typeof object.resultEndOffset !== "object")
                                    throw TypeError(".google.cloud.speech.v2.StreamingRecognitionResult.resultEndOffset: object expected");
                                message.resultEndOffset = $root.google.protobuf.Duration.fromObject(object.resultEndOffset);
                            }
                            if (object.channelTag != null)
                                message.channelTag = object.channelTag | 0;
                            if (object.languageCode != null)
                                message.languageCode = String(object.languageCode);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a StreamingRecognitionResult message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.speech.v2.StreamingRecognitionResult
                         * @static
                         * @param {google.cloud.speech.v2.StreamingRecognitionResult} message StreamingRecognitionResult
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        StreamingRecognitionResult.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.alternatives = [];
                            if (options.defaults) {
                                object.isFinal = false;
                                object.stability = 0;
                                object.resultEndOffset = null;
                                object.channelTag = 0;
                                object.languageCode = "";
                            }
                            if (message.alternatives && message.alternatives.length) {
                                object.alternatives = [];
                                for (var j = 0; j < message.alternatives.length; ++j)
                                    object.alternatives[j] = $root.google.cloud.speech.v2.SpeechRecognitionAlternative.toObject(message.alternatives[j], options);
                            }
                            if (message.isFinal != null && message.hasOwnProperty("isFinal"))
                                object.isFinal = message.isFinal;
                            if (message.stability != null && message.hasOwnProperty("stability"))
                                object.stability = options.json && !isFinite(message.stability) ? String(message.stability) : message.stability;
                            if (message.resultEndOffset != null && message.hasOwnProperty("resultEndOffset"))
                                object.resultEndOffset = $root.google.protobuf.Duration.toObject(message.resultEndOffset, options);
                            if (message.channelTag != null && message.hasOwnProperty("channelTag"))
                                object.channelTag = message.channelTag;
                            if (message.languageCode != null && message.hasOwnProperty("languageCode"))
                                object.languageCode = message.languageCode;
                            return object;
                        };
    
                        /**
                         * Converts this StreamingRecognitionResult to JSON.
                         * @function toJSON
                         * @memberof google.cloud.speech.v2.StreamingRecognitionResult
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        StreamingRecognitionResult.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for StreamingRecognitionResult
                         * @function getTypeUrl
                         * @memberof google.cloud.speech.v2.StreamingRecognitionResult
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        StreamingRecognitionResult.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.speech.v2.StreamingRecognitionResult";
                        };
    
                        return StreamingRecognitionResult;
                    })();
    
                    v2.StreamingRecognizeResponse = (function() {
    
                        /**
                         * Properties of a StreamingRecognizeResponse.
                         * @memberof google.cloud.speech.v2
                         * @interface IStreamingRecognizeResponse
                         * @property {Array.<google.cloud.speech.v2.IStreamingRecognitionResult>|null} [results] StreamingRecognizeResponse results
                         * @property {google.cloud.speech.v2.StreamingRecognizeResponse.SpeechEventType|null} [speechEventType] StreamingRecognizeResponse speechEventType
                         * @property {google.protobuf.IDuration|null} [speechEventOffset] StreamingRecognizeResponse speechEventOffset
                         * @property {google.cloud.speech.v2.IRecognitionResponseMetadata|null} [metadata] StreamingRecognizeResponse metadata
                         */
    
                        /**
                         * Constructs a new StreamingRecognizeResponse.
                         * @memberof google.cloud.speech.v2
                         * @classdesc Represents a StreamingRecognizeResponse.
                         * @implements IStreamingRecognizeResponse
                         * @constructor
                         * @param {google.cloud.speech.v2.IStreamingRecognizeResponse=} [properties] Properties to set
                         */
                        function StreamingRecognizeResponse(properties) {
                            this.results = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * StreamingRecognizeResponse results.
                         * @member {Array.<google.cloud.speech.v2.IStreamingRecognitionResult>} results
                         * @memberof google.cloud.speech.v2.StreamingRecognizeResponse
                         * @instance
                         */
                        StreamingRecognizeResponse.prototype.results = $util.emptyArray;
    
                        /**
                         * StreamingRecognizeResponse speechEventType.
                         * @member {google.cloud.speech.v2.StreamingRecognizeResponse.SpeechEventType} speechEventType
                         * @memberof google.cloud.speech.v2.StreamingRecognizeResponse
                         * @instance
                         */
                        StreamingRecognizeResponse.prototype.speechEventType = 0;
    
                        /**
                         * StreamingRecognizeResponse speechEventOffset.
                         * @member {google.protobuf.IDuration|null|undefined} speechEventOffset
                         * @memberof google.cloud.speech.v2.StreamingRecognizeResponse
                         * @instance
                         */
                        StreamingRecognizeResponse.prototype.speechEventOffset = null;
    
                        /**
                         * StreamingRecognizeResponse metadata.
                         * @member {google.cloud.speech.v2.IRecognitionResponseMetadata|null|undefined} metadata
                         * @memberof google.cloud.speech.v2.StreamingRecognizeResponse
                         * @instance
                         */
                        StreamingRecognizeResponse.prototype.metadata = null;
    
                        /**
                         * Creates a new StreamingRecognizeResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.speech.v2.StreamingRecognizeResponse
                         * @static
                         * @param {google.cloud.speech.v2.IStreamingRecognizeResponse=} [properties] Properties to set
                         * @returns {google.cloud.speech.v2.StreamingRecognizeResponse} StreamingRecognizeResponse instance
                         */
                        StreamingRecognizeResponse.create = function create(properties) {
                            return new StreamingRecognizeResponse(properties);
                        };
    
                        /**
                         * Encodes the specified StreamingRecognizeResponse message. Does not implicitly {@link google.cloud.speech.v2.StreamingRecognizeResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.speech.v2.StreamingRecognizeResponse
                         * @static
                         * @param {google.cloud.speech.v2.IStreamingRecognizeResponse} message StreamingRecognizeResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        StreamingRecognizeResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.speechEventType != null && Object.hasOwnProperty.call(message, "speechEventType"))
                                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.speechEventType);
                            if (message.metadata != null && Object.hasOwnProperty.call(message, "metadata"))
                                $root.google.cloud.speech.v2.RecognitionResponseMetadata.encode(message.metadata, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            if (message.results != null && message.results.length)
                                for (var i = 0; i < message.results.length; ++i)
                                    $root.google.cloud.speech.v2.StreamingRecognitionResult.encode(message.results[i], writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                            if (message.speechEventOffset != null && Object.hasOwnProperty.call(message, "speechEventOffset"))
                                $root.google.protobuf.Duration.encode(message.speechEventOffset, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified StreamingRecognizeResponse message, length delimited. Does not implicitly {@link google.cloud.speech.v2.StreamingRecognizeResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.speech.v2.StreamingRecognizeResponse
                         * @static
                         * @param {google.cloud.speech.v2.IStreamingRecognizeResponse} message StreamingRecognizeResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        StreamingRecognizeResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a StreamingRecognizeResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.speech.v2.StreamingRecognizeResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.speech.v2.StreamingRecognizeResponse} StreamingRecognizeResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        StreamingRecognizeResponse.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.speech.v2.StreamingRecognizeResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 6: {
                                        if (!(message.results && message.results.length))
                                            message.results = [];
                                        message.results.push($root.google.cloud.speech.v2.StreamingRecognitionResult.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 3: {
                                        message.speechEventType = reader.int32();
                                        break;
                                    }
                                case 7: {
                                        message.speechEventOffset = $root.google.protobuf.Duration.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 5: {
                                        message.metadata = $root.google.cloud.speech.v2.RecognitionResponseMetadata.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a StreamingRecognizeResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.speech.v2.StreamingRecognizeResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.speech.v2.StreamingRecognizeResponse} StreamingRecognizeResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        StreamingRecognizeResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a StreamingRecognizeResponse message.
                         * @function verify
                         * @memberof google.cloud.speech.v2.StreamingRecognizeResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        StreamingRecognizeResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.results != null && message.hasOwnProperty("results")) {
                                if (!Array.isArray(message.results))
                                    return "results: array expected";
                                for (var i = 0; i < message.results.length; ++i) {
                                    var error = $root.google.cloud.speech.v2.StreamingRecognitionResult.verify(message.results[i]);
                                    if (error)
                                        return "results." + error;
                                }
                            }
                            if (message.speechEventType != null && message.hasOwnProperty("speechEventType"))
                                switch (message.speechEventType) {
                                default:
                                    return "speechEventType: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                    break;
                                }
                            if (message.speechEventOffset != null && message.hasOwnProperty("speechEventOffset")) {
                                var error = $root.google.protobuf.Duration.verify(message.speechEventOffset);
                                if (error)
                                    return "speechEventOffset." + error;
                            }
                            if (message.metadata != null && message.hasOwnProperty("metadata")) {
                                var error = $root.google.cloud.speech.v2.RecognitionResponseMetadata.verify(message.metadata);
                                if (error)
                                    return "metadata." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a StreamingRecognizeResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.speech.v2.StreamingRecognizeResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.speech.v2.StreamingRecognizeResponse} StreamingRecognizeResponse
                         */
                        StreamingRecognizeResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.speech.v2.StreamingRecognizeResponse)
                                return object;
                            var message = new $root.google.cloud.speech.v2.StreamingRecognizeResponse();
                            if (object.results) {
                                if (!Array.isArray(object.results))
                                    throw TypeError(".google.cloud.speech.v2.StreamingRecognizeResponse.results: array expected");
                                message.results = [];
                                for (var i = 0; i < object.results.length; ++i) {
                                    if (typeof object.results[i] !== "object")
                                        throw TypeError(".google.cloud.speech.v2.StreamingRecognizeResponse.results: object expected");
                                    message.results[i] = $root.google.cloud.speech.v2.StreamingRecognitionResult.fromObject(object.results[i]);
                                }
                            }
                            switch (object.speechEventType) {
                            default:
                                if (typeof object.speechEventType === "number") {
                                    message.speechEventType = object.speechEventType;
                                    break;
                                }
                                break;
                            case "SPEECH_EVENT_TYPE_UNSPECIFIED":
                            case 0:
                                message.speechEventType = 0;
                                break;
                            case "END_OF_SINGLE_UTTERANCE":
                            case 1:
                                message.speechEventType = 1;
                                break;
                            case "SPEECH_ACTIVITY_BEGIN":
                            case 2:
                                message.speechEventType = 2;
                                break;
                            case "SPEECH_ACTIVITY_END":
                            case 3:
                                message.speechEventType = 3;
                                break;
                            }
                            if (object.speechEventOffset != null) {
                                if (typeof object.speechEventOffset !== "object")
                                    throw TypeError(".google.cloud.speech.v2.StreamingRecognizeResponse.speechEventOffset: object expected");
                                message.speechEventOffset = $root.google.protobuf.Duration.fromObject(object.speechEventOffset);
                            }
                            if (object.metadata != null) {
                                if (typeof object.metadata !== "object")
                                    throw TypeError(".google.cloud.speech.v2.StreamingRecognizeResponse.metadata: object expected");
                                message.metadata = $root.google.cloud.speech.v2.RecognitionResponseMetadata.fromObject(object.metadata);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a StreamingRecognizeResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.speech.v2.StreamingRecognizeResponse
                         * @static
                         * @param {google.cloud.speech.v2.StreamingRecognizeResponse} message StreamingRecognizeResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        StreamingRecognizeResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.results = [];
                            if (options.defaults) {
                                object.speechEventType = options.enums === String ? "SPEECH_EVENT_TYPE_UNSPECIFIED" : 0;
                                object.metadata = null;
                                object.speechEventOffset = null;
                            }
                            if (message.speechEventType != null && message.hasOwnProperty("speechEventType"))
                                object.speechEventType = options.enums === String ? $root.google.cloud.speech.v2.StreamingRecognizeResponse.SpeechEventType[message.speechEventType] === undefined ? message.speechEventType : $root.google.cloud.speech.v2.StreamingRecognizeResponse.SpeechEventType[message.speechEventType] : message.speechEventType;
                            if (message.metadata != null && message.hasOwnProperty("metadata"))
                                object.metadata = $root.google.cloud.speech.v2.RecognitionResponseMetadata.toObject(message.metadata, options);
                            if (message.results && message.results.length) {
                                object.results = [];
                                for (var j = 0; j < message.results.length; ++j)
                                    object.results[j] = $root.google.cloud.speech.v2.StreamingRecognitionResult.toObject(message.results[j], options);
                            }
                            if (message.speechEventOffset != null && message.hasOwnProperty("speechEventOffset"))
                                object.speechEventOffset = $root.google.protobuf.Duration.toObject(message.speechEventOffset, options);
                            return object;
                        };
    
                        /**
                         * Converts this StreamingRecognizeResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.speech.v2.StreamingRecognizeResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        StreamingRecognizeResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for StreamingRecognizeResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.speech.v2.StreamingRecognizeResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        StreamingRecognizeResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.speech.v2.StreamingRecognizeResponse";
                        };
    
                        /**
                         * SpeechEventType enum.
                         * @name google.cloud.speech.v2.StreamingRecognizeResponse.SpeechEventType
                         * @enum {number}
                         * @property {number} SPEECH_EVENT_TYPE_UNSPECIFIED=0 SPEECH_EVENT_TYPE_UNSPECIFIED value
                         * @property {number} END_OF_SINGLE_UTTERANCE=1 END_OF_SINGLE_UTTERANCE value
                         * @property {number} SPEECH_ACTIVITY_BEGIN=2 SPEECH_ACTIVITY_BEGIN value
                         * @property {number} SPEECH_ACTIVITY_END=3 SPEECH_ACTIVITY_END value
                         */
                        StreamingRecognizeResponse.SpeechEventType = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "SPEECH_EVENT_TYPE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "END_OF_SINGLE_UTTERANCE"] = 1;
                            values[valuesById[2] = "SPEECH_ACTIVITY_BEGIN"] = 2;
                            values[valuesById[3] = "SPEECH_ACTIVITY_END"] = 3;
                            return values;
                        })();
    
                        return StreamingRecognizeResponse;
                    })();
    
                    v2.Config = (function() {
    
                        /**
                         * Properties of a Config.
                         * @memberof google.cloud.speech.v2
                         * @interface IConfig
                         * @property {string|null} [name] Config name
                         * @property {string|null} [kmsKeyName] Config kmsKeyName
                         * @property {google.protobuf.ITimestamp|null} [updateTime] Config updateTime
                         */
    
                        /**
                         * Constructs a new Config.
                         * @memberof google.cloud.speech.v2
                         * @classdesc Represents a Config.
                         * @implements IConfig
                         * @constructor
                         * @param {google.cloud.speech.v2.IConfig=} [properties] Properties to set
                         */
                        function Config(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Config name.
                         * @member {string} name
                         * @memberof google.cloud.speech.v2.Config
                         * @instance
                         */
                        Config.prototype.name = "";
    
                        /**
                         * Config kmsKeyName.
                         * @member {string} kmsKeyName
                         * @memberof google.cloud.speech.v2.Config
                         * @instance
                         */
                        Config.prototype.kmsKeyName = "";
    
                        /**
                         * Config updateTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} updateTime
                         * @memberof google.cloud.speech.v2.Config
                         * @instance
                         */
                        Config.prototype.updateTime = null;
    
                        /**
                         * Creates a new Config instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.speech.v2.Config
                         * @static
                         * @param {google.cloud.speech.v2.IConfig=} [properties] Properties to set
                         * @returns {google.cloud.speech.v2.Config} Config instance
                         */
                        Config.create = function create(properties) {
                            return new Config(properties);
                        };
    
                        /**
                         * Encodes the specified Config message. Does not implicitly {@link google.cloud.speech.v2.Config.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.speech.v2.Config
                         * @static
                         * @param {google.cloud.speech.v2.IConfig} message Config message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Config.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.kmsKeyName != null && Object.hasOwnProperty.call(message, "kmsKeyName"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.kmsKeyName);
                            if (message.updateTime != null && Object.hasOwnProperty.call(message, "updateTime"))
                                $root.google.protobuf.Timestamp.encode(message.updateTime, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Config message, length delimited. Does not implicitly {@link google.cloud.speech.v2.Config.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.speech.v2.Config
                         * @static
                         * @param {google.cloud.speech.v2.IConfig} message Config message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Config.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Config message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.speech.v2.Config
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.speech.v2.Config} Config
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Config.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.speech.v2.Config();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.kmsKeyName = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.updateTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Config message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.speech.v2.Config
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.speech.v2.Config} Config
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Config.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Config message.
                         * @function verify
                         * @memberof google.cloud.speech.v2.Config
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Config.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.kmsKeyName != null && message.hasOwnProperty("kmsKeyName"))
                                if (!$util.isString(message.kmsKeyName))
                                    return "kmsKeyName: string expected";
                            if (message.updateTime != null && message.hasOwnProperty("updateTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.updateTime);
                                if (error)
                                    return "updateTime." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a Config message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.speech.v2.Config
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.speech.v2.Config} Config
                         */
                        Config.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.speech.v2.Config)
                                return object;
                            var message = new $root.google.cloud.speech.v2.Config();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.kmsKeyName != null)
                                message.kmsKeyName = String(object.kmsKeyName);
                            if (object.updateTime != null) {
                                if (typeof object.updateTime !== "object")
                                    throw TypeError(".google.cloud.speech.v2.Config.updateTime: object expected");
                                message.updateTime = $root.google.protobuf.Timestamp.fromObject(object.updateTime);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Config message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.speech.v2.Config
                         * @static
                         * @param {google.cloud.speech.v2.Config} message Config
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Config.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.kmsKeyName = "";
                                object.updateTime = null;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.kmsKeyName != null && message.hasOwnProperty("kmsKeyName"))
                                object.kmsKeyName = message.kmsKeyName;
                            if (message.updateTime != null && message.hasOwnProperty("updateTime"))
                                object.updateTime = $root.google.protobuf.Timestamp.toObject(message.updateTime, options);
                            return object;
                        };
    
                        /**
                         * Converts this Config to JSON.
                         * @function toJSON
                         * @memberof google.cloud.speech.v2.Config
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Config.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Config
                         * @function getTypeUrl
                         * @memberof google.cloud.speech.v2.Config
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Config.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.speech.v2.Config";
                        };
    
                        return Config;
                    })();
    
                    v2.GetConfigRequest = (function() {
    
                        /**
                         * Properties of a GetConfigRequest.
                         * @memberof google.cloud.speech.v2
                         * @interface IGetConfigRequest
                         * @property {string|null} [name] GetConfigRequest name
                         */
    
                        /**
                         * Constructs a new GetConfigRequest.
                         * @memberof google.cloud.speech.v2
                         * @classdesc Represents a GetConfigRequest.
                         * @implements IGetConfigRequest
                         * @constructor
                         * @param {google.cloud.speech.v2.IGetConfigRequest=} [properties] Properties to set
                         */
                        function GetConfigRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GetConfigRequest name.
                         * @member {string} name
                         * @memberof google.cloud.speech.v2.GetConfigRequest
                         * @instance
                         */
                        GetConfigRequest.prototype.name = "";
    
                        /**
                         * Creates a new GetConfigRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.speech.v2.GetConfigRequest
                         * @static
                         * @param {google.cloud.speech.v2.IGetConfigRequest=} [properties] Properties to set
                         * @returns {google.cloud.speech.v2.GetConfigRequest} GetConfigRequest instance
                         */
                        GetConfigRequest.create = function create(properties) {
                            return new GetConfigRequest(properties);
                        };
    
                        /**
                         * Encodes the specified GetConfigRequest message. Does not implicitly {@link google.cloud.speech.v2.GetConfigRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.speech.v2.GetConfigRequest
                         * @static
                         * @param {google.cloud.speech.v2.IGetConfigRequest} message GetConfigRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetConfigRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GetConfigRequest message, length delimited. Does not implicitly {@link google.cloud.speech.v2.GetConfigRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.speech.v2.GetConfigRequest
                         * @static
                         * @param {google.cloud.speech.v2.IGetConfigRequest} message GetConfigRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetConfigRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GetConfigRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.speech.v2.GetConfigRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.speech.v2.GetConfigRequest} GetConfigRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetConfigRequest.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.speech.v2.GetConfigRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GetConfigRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.speech.v2.GetConfigRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.speech.v2.GetConfigRequest} GetConfigRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetConfigRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GetConfigRequest message.
                         * @function verify
                         * @memberof google.cloud.speech.v2.GetConfigRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GetConfigRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a GetConfigRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.speech.v2.GetConfigRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.speech.v2.GetConfigRequest} GetConfigRequest
                         */
                        GetConfigRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.speech.v2.GetConfigRequest)
                                return object;
                            var message = new $root.google.cloud.speech.v2.GetConfigRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GetConfigRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.speech.v2.GetConfigRequest
                         * @static
                         * @param {google.cloud.speech.v2.GetConfigRequest} message GetConfigRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GetConfigRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this GetConfigRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.speech.v2.GetConfigRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GetConfigRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GetConfigRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.speech.v2.GetConfigRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GetConfigRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.speech.v2.GetConfigRequest";
                        };
    
                        return GetConfigRequest;
                    })();
    
                    v2.UpdateConfigRequest = (function() {
    
                        /**
                         * Properties of an UpdateConfigRequest.
                         * @memberof google.cloud.speech.v2
                         * @interface IUpdateConfigRequest
                         * @property {google.cloud.speech.v2.IConfig|null} [config] UpdateConfigRequest config
                         * @property {google.protobuf.IFieldMask|null} [updateMask] UpdateConfigRequest updateMask
                         */
    
                        /**
                         * Constructs a new UpdateConfigRequest.
                         * @memberof google.cloud.speech.v2
                         * @classdesc Represents an UpdateConfigRequest.
                         * @implements IUpdateConfigRequest
                         * @constructor
                         * @param {google.cloud.speech.v2.IUpdateConfigRequest=} [properties] Properties to set
                         */
                        function UpdateConfigRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * UpdateConfigRequest config.
                         * @member {google.cloud.speech.v2.IConfig|null|undefined} config
                         * @memberof google.cloud.speech.v2.UpdateConfigRequest
                         * @instance
                         */
                        UpdateConfigRequest.prototype.config = null;
    
                        /**
                         * UpdateConfigRequest updateMask.
                         * @member {google.protobuf.IFieldMask|null|undefined} updateMask
                         * @memberof google.cloud.speech.v2.UpdateConfigRequest
                         * @instance
                         */
                        UpdateConfigRequest.prototype.updateMask = null;
    
                        /**
                         * Creates a new UpdateConfigRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.speech.v2.UpdateConfigRequest
                         * @static
                         * @param {google.cloud.speech.v2.IUpdateConfigRequest=} [properties] Properties to set
                         * @returns {google.cloud.speech.v2.UpdateConfigRequest} UpdateConfigRequest instance
                         */
                        UpdateConfigRequest.create = function create(properties) {
                            return new UpdateConfigRequest(properties);
                        };
    
                        /**
                         * Encodes the specified UpdateConfigRequest message. Does not implicitly {@link google.cloud.speech.v2.UpdateConfigRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.speech.v2.UpdateConfigRequest
                         * @static
                         * @param {google.cloud.speech.v2.IUpdateConfigRequest} message UpdateConfigRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateConfigRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.config != null && Object.hasOwnProperty.call(message, "config"))
                                $root.google.cloud.speech.v2.Config.encode(message.config, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.updateMask != null && Object.hasOwnProperty.call(message, "updateMask"))
                                $root.google.protobuf.FieldMask.encode(message.updateMask, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified UpdateConfigRequest message, length delimited. Does not implicitly {@link google.cloud.speech.v2.UpdateConfigRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.speech.v2.UpdateConfigRequest
                         * @static
                         * @param {google.cloud.speech.v2.IUpdateConfigRequest} message UpdateConfigRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateConfigRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an UpdateConfigRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.speech.v2.UpdateConfigRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.speech.v2.UpdateConfigRequest} UpdateConfigRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateConfigRequest.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.speech.v2.UpdateConfigRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        message.config = $root.google.cloud.speech.v2.Config.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.updateMask = $root.google.protobuf.FieldMask.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an UpdateConfigRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.speech.v2.UpdateConfigRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.speech.v2.UpdateConfigRequest} UpdateConfigRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateConfigRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an UpdateConfigRequest message.
                         * @function verify
                         * @memberof google.cloud.speech.v2.UpdateConfigRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        UpdateConfigRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.config != null && message.hasOwnProperty("config")) {
                                var error = $root.google.cloud.speech.v2.Config.verify(message.config);
                                if (error)
                                    return "config." + error;
                            }
                            if (message.updateMask != null && message.hasOwnProperty("updateMask")) {
                                var error = $root.google.protobuf.FieldMask.verify(message.updateMask);
                                if (error)
                                    return "updateMask." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates an UpdateConfigRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.speech.v2.UpdateConfigRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.speech.v2.UpdateConfigRequest} UpdateConfigRequest
                         */
                        UpdateConfigRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.speech.v2.UpdateConfigRequest)
                                return object;
                            var message = new $root.google.cloud.speech.v2.UpdateConfigRequest();
                            if (object.config != null) {
                                if (typeof object.config !== "object")
                                    throw TypeError(".google.cloud.speech.v2.UpdateConfigRequest.config: object expected");
                                message.config = $root.google.cloud.speech.v2.Config.fromObject(object.config);
                            }
                            if (object.updateMask != null) {
                                if (typeof object.updateMask !== "object")
                                    throw TypeError(".google.cloud.speech.v2.UpdateConfigRequest.updateMask: object expected");
                                message.updateMask = $root.google.protobuf.FieldMask.fromObject(object.updateMask);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an UpdateConfigRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.speech.v2.UpdateConfigRequest
                         * @static
                         * @param {google.cloud.speech.v2.UpdateConfigRequest} message UpdateConfigRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        UpdateConfigRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.config = null;
                                object.updateMask = null;
                            }
                            if (message.config != null && message.hasOwnProperty("config"))
                                object.config = $root.google.cloud.speech.v2.Config.toObject(message.config, options);
                            if (message.updateMask != null && message.hasOwnProperty("updateMask"))
                                object.updateMask = $root.google.protobuf.FieldMask.toObject(message.updateMask, options);
                            return object;
                        };
    
                        /**
                         * Converts this UpdateConfigRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.speech.v2.UpdateConfigRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        UpdateConfigRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for UpdateConfigRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.speech.v2.UpdateConfigRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        UpdateConfigRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.speech.v2.UpdateConfigRequest";
                        };
    
                        return UpdateConfigRequest;
                    })();
    
                    v2.CustomClass = (function() {
    
                        /**
                         * Properties of a CustomClass.
                         * @memberof google.cloud.speech.v2
                         * @interface ICustomClass
                         * @property {string|null} [name] CustomClass name
                         * @property {string|null} [uid] CustomClass uid
                         * @property {string|null} [displayName] CustomClass displayName
                         * @property {Array.<google.cloud.speech.v2.CustomClass.IClassItem>|null} [items] CustomClass items
                         * @property {google.cloud.speech.v2.CustomClass.State|null} [state] CustomClass state
                         * @property {google.protobuf.ITimestamp|null} [createTime] CustomClass createTime
                         * @property {google.protobuf.ITimestamp|null} [updateTime] CustomClass updateTime
                         * @property {google.protobuf.ITimestamp|null} [deleteTime] CustomClass deleteTime
                         * @property {google.protobuf.ITimestamp|null} [expireTime] CustomClass expireTime
                         * @property {Object.<string,string>|null} [annotations] CustomClass annotations
                         * @property {string|null} [etag] CustomClass etag
                         * @property {boolean|null} [reconciling] CustomClass reconciling
                         * @property {string|null} [kmsKeyName] CustomClass kmsKeyName
                         * @property {string|null} [kmsKeyVersionName] CustomClass kmsKeyVersionName
                         */
    
                        /**
                         * Constructs a new CustomClass.
                         * @memberof google.cloud.speech.v2
                         * @classdesc Represents a CustomClass.
                         * @implements ICustomClass
                         * @constructor
                         * @param {google.cloud.speech.v2.ICustomClass=} [properties] Properties to set
                         */
                        function CustomClass(properties) {
                            this.items = [];
                            this.annotations = {};
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CustomClass name.
                         * @member {string} name
                         * @memberof google.cloud.speech.v2.CustomClass
                         * @instance
                         */
                        CustomClass.prototype.name = "";
    
                        /**
                         * CustomClass uid.
                         * @member {string} uid
                         * @memberof google.cloud.speech.v2.CustomClass
                         * @instance
                         */
                        CustomClass.prototype.uid = "";
    
                        /**
                         * CustomClass displayName.
                         * @member {string} displayName
                         * @memberof google.cloud.speech.v2.CustomClass
                         * @instance
                         */
                        CustomClass.prototype.displayName = "";
    
                        /**
                         * CustomClass items.
                         * @member {Array.<google.cloud.speech.v2.CustomClass.IClassItem>} items
                         * @memberof google.cloud.speech.v2.CustomClass
                         * @instance
                         */
                        CustomClass.prototype.items = $util.emptyArray;
    
                        /**
                         * CustomClass state.
                         * @member {google.cloud.speech.v2.CustomClass.State} state
                         * @memberof google.cloud.speech.v2.CustomClass
                         * @instance
                         */
                        CustomClass.prototype.state = 0;
    
                        /**
                         * CustomClass createTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} createTime
                         * @memberof google.cloud.speech.v2.CustomClass
                         * @instance
                         */
                        CustomClass.prototype.createTime = null;
    
                        /**
                         * CustomClass updateTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} updateTime
                         * @memberof google.cloud.speech.v2.CustomClass
                         * @instance
                         */
                        CustomClass.prototype.updateTime = null;
    
                        /**
                         * CustomClass deleteTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} deleteTime
                         * @memberof google.cloud.speech.v2.CustomClass
                         * @instance
                         */
                        CustomClass.prototype.deleteTime = null;
    
                        /**
                         * CustomClass expireTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} expireTime
                         * @memberof google.cloud.speech.v2.CustomClass
                         * @instance
                         */
                        CustomClass.prototype.expireTime = null;
    
                        /**
                         * CustomClass annotations.
                         * @member {Object.<string,string>} annotations
                         * @memberof google.cloud.speech.v2.CustomClass
                         * @instance
                         */
                        CustomClass.prototype.annotations = $util.emptyObject;
    
                        /**
                         * CustomClass etag.
                         * @member {string} etag
                         * @memberof google.cloud.speech.v2.CustomClass
                         * @instance
                         */
                        CustomClass.prototype.etag = "";
    
                        /**
                         * CustomClass reconciling.
                         * @member {boolean} reconciling
                         * @memberof google.cloud.speech.v2.CustomClass
                         * @instance
                         */
                        CustomClass.prototype.reconciling = false;
    
                        /**
                         * CustomClass kmsKeyName.
                         * @member {string} kmsKeyName
                         * @memberof google.cloud.speech.v2.CustomClass
                         * @instance
                         */
                        CustomClass.prototype.kmsKeyName = "";
    
                        /**
                         * CustomClass kmsKeyVersionName.
                         * @member {string} kmsKeyVersionName
                         * @memberof google.cloud.speech.v2.CustomClass
                         * @instance
                         */
                        CustomClass.prototype.kmsKeyVersionName = "";
    
                        /**
                         * Creates a new CustomClass instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.speech.v2.CustomClass
                         * @static
                         * @param {google.cloud.speech.v2.ICustomClass=} [properties] Properties to set
                         * @returns {google.cloud.speech.v2.CustomClass} CustomClass instance
                         */
                        CustomClass.create = function create(properties) {
                            return new CustomClass(properties);
                        };
    
                        /**
                         * Encodes the specified CustomClass message. Does not implicitly {@link google.cloud.speech.v2.CustomClass.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.speech.v2.CustomClass
                         * @static
                         * @param {google.cloud.speech.v2.ICustomClass} message CustomClass message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CustomClass.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.uid != null && Object.hasOwnProperty.call(message, "uid"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.uid);
                            if (message.displayName != null && Object.hasOwnProperty.call(message, "displayName"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.displayName);
                            if (message.items != null && message.items.length)
                                for (var i = 0; i < message.items.length; ++i)
                                    $root.google.cloud.speech.v2.CustomClass.ClassItem.encode(message.items[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            if (message.createTime != null && Object.hasOwnProperty.call(message, "createTime"))
                                $root.google.protobuf.Timestamp.encode(message.createTime, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                            if (message.updateTime != null && Object.hasOwnProperty.call(message, "updateTime"))
                                $root.google.protobuf.Timestamp.encode(message.updateTime, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                            if (message.deleteTime != null && Object.hasOwnProperty.call(message, "deleteTime"))
                                $root.google.protobuf.Timestamp.encode(message.deleteTime, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                            if (message.expireTime != null && Object.hasOwnProperty.call(message, "expireTime"))
                                $root.google.protobuf.Timestamp.encode(message.expireTime, writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                            if (message.annotations != null && Object.hasOwnProperty.call(message, "annotations"))
                                for (var keys = Object.keys(message.annotations), i = 0; i < keys.length; ++i)
                                    writer.uint32(/* id 10, wireType 2 =*/82).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.annotations[keys[i]]).ldelim();
                            if (message.etag != null && Object.hasOwnProperty.call(message, "etag"))
                                writer.uint32(/* id 11, wireType 2 =*/90).string(message.etag);
                            if (message.reconciling != null && Object.hasOwnProperty.call(message, "reconciling"))
                                writer.uint32(/* id 12, wireType 0 =*/96).bool(message.reconciling);
                            if (message.kmsKeyName != null && Object.hasOwnProperty.call(message, "kmsKeyName"))
                                writer.uint32(/* id 13, wireType 2 =*/106).string(message.kmsKeyName);
                            if (message.kmsKeyVersionName != null && Object.hasOwnProperty.call(message, "kmsKeyVersionName"))
                                writer.uint32(/* id 14, wireType 2 =*/114).string(message.kmsKeyVersionName);
                            if (message.state != null && Object.hasOwnProperty.call(message, "state"))
                                writer.uint32(/* id 15, wireType 0 =*/120).int32(message.state);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CustomClass message, length delimited. Does not implicitly {@link google.cloud.speech.v2.CustomClass.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.speech.v2.CustomClass
                         * @static
                         * @param {google.cloud.speech.v2.ICustomClass} message CustomClass message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CustomClass.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CustomClass message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.speech.v2.CustomClass
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.speech.v2.CustomClass} CustomClass
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CustomClass.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.speech.v2.CustomClass(), key, value;
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.uid = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.displayName = reader.string();
                                        break;
                                    }
                                case 5: {
                                        if (!(message.items && message.items.length))
                                            message.items = [];
                                        message.items.push($root.google.cloud.speech.v2.CustomClass.ClassItem.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 15: {
                                        message.state = reader.int32();
                                        break;
                                    }
                                case 6: {
                                        message.createTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 7: {
                                        message.updateTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 8: {
                                        message.deleteTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 9: {
                                        message.expireTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 10: {
                                        if (message.annotations === $util.emptyObject)
                                            message.annotations = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = "";
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = reader.string();
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.annotations[key] = value;
                                        break;
                                    }
                                case 11: {
                                        message.etag = reader.string();
                                        break;
                                    }
                                case 12: {
                                        message.reconciling = reader.bool();
                                        break;
                                    }
                                case 13: {
                                        message.kmsKeyName = reader.string();
                                        break;
                                    }
                                case 14: {
                                        message.kmsKeyVersionName = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CustomClass message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.speech.v2.CustomClass
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.speech.v2.CustomClass} CustomClass
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CustomClass.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CustomClass message.
                         * @function verify
                         * @memberof google.cloud.speech.v2.CustomClass
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CustomClass.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.uid != null && message.hasOwnProperty("uid"))
                                if (!$util.isString(message.uid))
                                    return "uid: string expected";
                            if (message.displayName != null && message.hasOwnProperty("displayName"))
                                if (!$util.isString(message.displayName))
                                    return "displayName: string expected";
                            if (message.items != null && message.hasOwnProperty("items")) {
                                if (!Array.isArray(message.items))
                                    return "items: array expected";
                                for (var i = 0; i < message.items.length; ++i) {
                                    var error = $root.google.cloud.speech.v2.CustomClass.ClassItem.verify(message.items[i]);
                                    if (error)
                                        return "items." + error;
                                }
                            }
                            if (message.state != null && message.hasOwnProperty("state"))
                                switch (message.state) {
                                default:
                                    return "state: enum value expected";
                                case 0:
                                case 2:
                                case 4:
                                    break;
                                }
                            if (message.createTime != null && message.hasOwnProperty("createTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.createTime);
                                if (error)
                                    return "createTime." + error;
                            }
                            if (message.updateTime != null && message.hasOwnProperty("updateTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.updateTime);
                                if (error)
                                    return "updateTime." + error;
                            }
                            if (message.deleteTime != null && message.hasOwnProperty("deleteTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.deleteTime);
                                if (error)
                                    return "deleteTime." + error;
                            }
                            if (message.expireTime != null && message.hasOwnProperty("expireTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.expireTime);
                                if (error)
                                    return "expireTime." + error;
                            }
                            if (message.annotations != null && message.hasOwnProperty("annotations")) {
                                if (!$util.isObject(message.annotations))
                                    return "annotations: object expected";
                                var key = Object.keys(message.annotations);
                                for (var i = 0; i < key.length; ++i)
                                    if (!$util.isString(message.annotations[key[i]]))
                                        return "annotations: string{k:string} expected";
                            }
                            if (message.etag != null && message.hasOwnProperty("etag"))
                                if (!$util.isString(message.etag))
                                    return "etag: string expected";
                            if (message.reconciling != null && message.hasOwnProperty("reconciling"))
                                if (typeof message.reconciling !== "boolean")
                                    return "reconciling: boolean expected";
                            if (message.kmsKeyName != null && message.hasOwnProperty("kmsKeyName"))
                                if (!$util.isString(message.kmsKeyName))
                                    return "kmsKeyName: string expected";
                            if (message.kmsKeyVersionName != null && message.hasOwnProperty("kmsKeyVersionName"))
                                if (!$util.isString(message.kmsKeyVersionName))
                                    return "kmsKeyVersionName: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a CustomClass message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.speech.v2.CustomClass
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.speech.v2.CustomClass} CustomClass
                         */
                        CustomClass.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.speech.v2.CustomClass)
                                return object;
                            var message = new $root.google.cloud.speech.v2.CustomClass();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.uid != null)
                                message.uid = String(object.uid);
                            if (object.displayName != null)
                                message.displayName = String(object.displayName);
                            if (object.items) {
                                if (!Array.isArray(object.items))
                                    throw TypeError(".google.cloud.speech.v2.CustomClass.items: array expected");
                                message.items = [];
                                for (var i = 0; i < object.items.length; ++i) {
                                    if (typeof object.items[i] !== "object")
                                        throw TypeError(".google.cloud.speech.v2.CustomClass.items: object expected");
                                    message.items[i] = $root.google.cloud.speech.v2.CustomClass.ClassItem.fromObject(object.items[i]);
                                }
                            }
                            switch (object.state) {
                            default:
                                if (typeof object.state === "number") {
                                    message.state = object.state;
                                    break;
                                }
                                break;
                            case "STATE_UNSPECIFIED":
                            case 0:
                                message.state = 0;
                                break;
                            case "ACTIVE":
                            case 2:
                                message.state = 2;
                                break;
                            case "DELETED":
                            case 4:
                                message.state = 4;
                                break;
                            }
                            if (object.createTime != null) {
                                if (typeof object.createTime !== "object")
                                    throw TypeError(".google.cloud.speech.v2.CustomClass.createTime: object expected");
                                message.createTime = $root.google.protobuf.Timestamp.fromObject(object.createTime);
                            }
                            if (object.updateTime != null) {
                                if (typeof object.updateTime !== "object")
                                    throw TypeError(".google.cloud.speech.v2.CustomClass.updateTime: object expected");
                                message.updateTime = $root.google.protobuf.Timestamp.fromObject(object.updateTime);
                            }
                            if (object.deleteTime != null) {
                                if (typeof object.deleteTime !== "object")
                                    throw TypeError(".google.cloud.speech.v2.CustomClass.deleteTime: object expected");
                                message.deleteTime = $root.google.protobuf.Timestamp.fromObject(object.deleteTime);
                            }
                            if (object.expireTime != null) {
                                if (typeof object.expireTime !== "object")
                                    throw TypeError(".google.cloud.speech.v2.CustomClass.expireTime: object expected");
                                message.expireTime = $root.google.protobuf.Timestamp.fromObject(object.expireTime);
                            }
                            if (object.annotations) {
                                if (typeof object.annotations !== "object")
                                    throw TypeError(".google.cloud.speech.v2.CustomClass.annotations: object expected");
                                message.annotations = {};
                                for (var keys = Object.keys(object.annotations), i = 0; i < keys.length; ++i)
                                    message.annotations[keys[i]] = String(object.annotations[keys[i]]);
                            }
                            if (object.etag != null)
                                message.etag = String(object.etag);
                            if (object.reconciling != null)
                                message.reconciling = Boolean(object.reconciling);
                            if (object.kmsKeyName != null)
                                message.kmsKeyName = String(object.kmsKeyName);
                            if (object.kmsKeyVersionName != null)
                                message.kmsKeyVersionName = String(object.kmsKeyVersionName);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CustomClass message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.speech.v2.CustomClass
                         * @static
                         * @param {google.cloud.speech.v2.CustomClass} message CustomClass
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CustomClass.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.items = [];
                            if (options.objects || options.defaults)
                                object.annotations = {};
                            if (options.defaults) {
                                object.name = "";
                                object.uid = "";
                                object.displayName = "";
                                object.createTime = null;
                                object.updateTime = null;
                                object.deleteTime = null;
                                object.expireTime = null;
                                object.etag = "";
                                object.reconciling = false;
                                object.kmsKeyName = "";
                                object.kmsKeyVersionName = "";
                                object.state = options.enums === String ? "STATE_UNSPECIFIED" : 0;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.uid != null && message.hasOwnProperty("uid"))
                                object.uid = message.uid;
                            if (message.displayName != null && message.hasOwnProperty("displayName"))
                                object.displayName = message.displayName;
                            if (message.items && message.items.length) {
                                object.items = [];
                                for (var j = 0; j < message.items.length; ++j)
                                    object.items[j] = $root.google.cloud.speech.v2.CustomClass.ClassItem.toObject(message.items[j], options);
                            }
                            if (message.createTime != null && message.hasOwnProperty("createTime"))
                                object.createTime = $root.google.protobuf.Timestamp.toObject(message.createTime, options);
                            if (message.updateTime != null && message.hasOwnProperty("updateTime"))
                                object.updateTime = $root.google.protobuf.Timestamp.toObject(message.updateTime, options);
                            if (message.deleteTime != null && message.hasOwnProperty("deleteTime"))
                                object.deleteTime = $root.google.protobuf.Timestamp.toObject(message.deleteTime, options);
                            if (message.expireTime != null && message.hasOwnProperty("expireTime"))
                                object.expireTime = $root.google.protobuf.Timestamp.toObject(message.expireTime, options);
                            var keys2;
                            if (message.annotations && (keys2 = Object.keys(message.annotations)).length) {
                                object.annotations = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.annotations[keys2[j]] = message.annotations[keys2[j]];
                            }
                            if (message.etag != null && message.hasOwnProperty("etag"))
                                object.etag = message.etag;
                            if (message.reconciling != null && message.hasOwnProperty("reconciling"))
                                object.reconciling = message.reconciling;
                            if (message.kmsKeyName != null && message.hasOwnProperty("kmsKeyName"))
                                object.kmsKeyName = message.kmsKeyName;
                            if (message.kmsKeyVersionName != null && message.hasOwnProperty("kmsKeyVersionName"))
                                object.kmsKeyVersionName = message.kmsKeyVersionName;
                            if (message.state != null && message.hasOwnProperty("state"))
                                object.state = options.enums === String ? $root.google.cloud.speech.v2.CustomClass.State[message.state] === undefined ? message.state : $root.google.cloud.speech.v2.CustomClass.State[message.state] : message.state;
                            return object;
                        };
    
                        /**
                         * Converts this CustomClass to JSON.
                         * @function toJSON
                         * @memberof google.cloud.speech.v2.CustomClass
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CustomClass.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for CustomClass
                         * @function getTypeUrl
                         * @memberof google.cloud.speech.v2.CustomClass
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        CustomClass.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.speech.v2.CustomClass";
                        };
    
                        CustomClass.ClassItem = (function() {
    
                            /**
                             * Properties of a ClassItem.
                             * @memberof google.cloud.speech.v2.CustomClass
                             * @interface IClassItem
                             * @property {string|null} [value] ClassItem value
                             */
    
                            /**
                             * Constructs a new ClassItem.
                             * @memberof google.cloud.speech.v2.CustomClass
                             * @classdesc Represents a ClassItem.
                             * @implements IClassItem
                             * @constructor
                             * @param {google.cloud.speech.v2.CustomClass.IClassItem=} [properties] Properties to set
                             */
                            function ClassItem(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * ClassItem value.
                             * @member {string} value
                             * @memberof google.cloud.speech.v2.CustomClass.ClassItem
                             * @instance
                             */
                            ClassItem.prototype.value = "";
    
                            /**
                             * Creates a new ClassItem instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.speech.v2.CustomClass.ClassItem
                             * @static
                             * @param {google.cloud.speech.v2.CustomClass.IClassItem=} [properties] Properties to set
                             * @returns {google.cloud.speech.v2.CustomClass.ClassItem} ClassItem instance
                             */
                            ClassItem.create = function create(properties) {
                                return new ClassItem(properties);
                            };
    
                            /**
                             * Encodes the specified ClassItem message. Does not implicitly {@link google.cloud.speech.v2.CustomClass.ClassItem.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.speech.v2.CustomClass.ClassItem
                             * @static
                             * @param {google.cloud.speech.v2.CustomClass.IClassItem} message ClassItem message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            ClassItem.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.value);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified ClassItem message, length delimited. Does not implicitly {@link google.cloud.speech.v2.CustomClass.ClassItem.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.speech.v2.CustomClass.ClassItem
                             * @static
                             * @param {google.cloud.speech.v2.CustomClass.IClassItem} message ClassItem message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            ClassItem.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a ClassItem message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.speech.v2.CustomClass.ClassItem
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.speech.v2.CustomClass.ClassItem} ClassItem
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            ClassItem.decode = function decode(reader, length, error) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.speech.v2.CustomClass.ClassItem();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    if (tag === error)
                                        break;
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.value = reader.string();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a ClassItem message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.speech.v2.CustomClass.ClassItem
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.speech.v2.CustomClass.ClassItem} ClassItem
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            ClassItem.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a ClassItem message.
                             * @function verify
                             * @memberof google.cloud.speech.v2.CustomClass.ClassItem
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            ClassItem.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.value != null && message.hasOwnProperty("value"))
                                    if (!$util.isString(message.value))
                                        return "value: string expected";
                                return null;
                            };
    
                            /**
                             * Creates a ClassItem message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.speech.v2.CustomClass.ClassItem
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.speech.v2.CustomClass.ClassItem} ClassItem
                             */
                            ClassItem.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.speech.v2.CustomClass.ClassItem)
                                    return object;
                                var message = new $root.google.cloud.speech.v2.CustomClass.ClassItem();
                                if (object.value != null)
                                    message.value = String(object.value);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a ClassItem message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.speech.v2.CustomClass.ClassItem
                             * @static
                             * @param {google.cloud.speech.v2.CustomClass.ClassItem} message ClassItem
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            ClassItem.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults)
                                    object.value = "";
                                if (message.value != null && message.hasOwnProperty("value"))
                                    object.value = message.value;
                                return object;
                            };
    
                            /**
                             * Converts this ClassItem to JSON.
                             * @function toJSON
                             * @memberof google.cloud.speech.v2.CustomClass.ClassItem
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            ClassItem.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for ClassItem
                             * @function getTypeUrl
                             * @memberof google.cloud.speech.v2.CustomClass.ClassItem
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            ClassItem.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.speech.v2.CustomClass.ClassItem";
                            };
    
                            return ClassItem;
                        })();
    
                        /**
                         * State enum.
                         * @name google.cloud.speech.v2.CustomClass.State
                         * @enum {number}
                         * @property {number} STATE_UNSPECIFIED=0 STATE_UNSPECIFIED value
                         * @property {number} ACTIVE=2 ACTIVE value
                         * @property {number} DELETED=4 DELETED value
                         */
                        CustomClass.State = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "STATE_UNSPECIFIED"] = 0;
                            values[valuesById[2] = "ACTIVE"] = 2;
                            values[valuesById[4] = "DELETED"] = 4;
                            return values;
                        })();
    
                        return CustomClass;
                    })();
    
                    v2.PhraseSet = (function() {
    
                        /**
                         * Properties of a PhraseSet.
                         * @memberof google.cloud.speech.v2
                         * @interface IPhraseSet
                         * @property {string|null} [name] PhraseSet name
                         * @property {string|null} [uid] PhraseSet uid
                         * @property {Array.<google.cloud.speech.v2.PhraseSet.IPhrase>|null} [phrases] PhraseSet phrases
                         * @property {number|null} [boost] PhraseSet boost
                         * @property {string|null} [displayName] PhraseSet displayName
                         * @property {google.cloud.speech.v2.PhraseSet.State|null} [state] PhraseSet state
                         * @property {google.protobuf.ITimestamp|null} [createTime] PhraseSet createTime
                         * @property {google.protobuf.ITimestamp|null} [updateTime] PhraseSet updateTime
                         * @property {google.protobuf.ITimestamp|null} [deleteTime] PhraseSet deleteTime
                         * @property {google.protobuf.ITimestamp|null} [expireTime] PhraseSet expireTime
                         * @property {Object.<string,string>|null} [annotations] PhraseSet annotations
                         * @property {string|null} [etag] PhraseSet etag
                         * @property {boolean|null} [reconciling] PhraseSet reconciling
                         * @property {string|null} [kmsKeyName] PhraseSet kmsKeyName
                         * @property {string|null} [kmsKeyVersionName] PhraseSet kmsKeyVersionName
                         */
    
                        /**
                         * Constructs a new PhraseSet.
                         * @memberof google.cloud.speech.v2
                         * @classdesc Represents a PhraseSet.
                         * @implements IPhraseSet
                         * @constructor
                         * @param {google.cloud.speech.v2.IPhraseSet=} [properties] Properties to set
                         */
                        function PhraseSet(properties) {
                            this.phrases = [];
                            this.annotations = {};
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * PhraseSet name.
                         * @member {string} name
                         * @memberof google.cloud.speech.v2.PhraseSet
                         * @instance
                         */
                        PhraseSet.prototype.name = "";
    
                        /**
                         * PhraseSet uid.
                         * @member {string} uid
                         * @memberof google.cloud.speech.v2.PhraseSet
                         * @instance
                         */
                        PhraseSet.prototype.uid = "";
    
                        /**
                         * PhraseSet phrases.
                         * @member {Array.<google.cloud.speech.v2.PhraseSet.IPhrase>} phrases
                         * @memberof google.cloud.speech.v2.PhraseSet
                         * @instance
                         */
                        PhraseSet.prototype.phrases = $util.emptyArray;
    
                        /**
                         * PhraseSet boost.
                         * @member {number} boost
                         * @memberof google.cloud.speech.v2.PhraseSet
                         * @instance
                         */
                        PhraseSet.prototype.boost = 0;
    
                        /**
                         * PhraseSet displayName.
                         * @member {string} displayName
                         * @memberof google.cloud.speech.v2.PhraseSet
                         * @instance
                         */
                        PhraseSet.prototype.displayName = "";
    
                        /**
                         * PhraseSet state.
                         * @member {google.cloud.speech.v2.PhraseSet.State} state
                         * @memberof google.cloud.speech.v2.PhraseSet
                         * @instance
                         */
                        PhraseSet.prototype.state = 0;
    
                        /**
                         * PhraseSet createTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} createTime
                         * @memberof google.cloud.speech.v2.PhraseSet
                         * @instance
                         */
                        PhraseSet.prototype.createTime = null;
    
                        /**
                         * PhraseSet updateTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} updateTime
                         * @memberof google.cloud.speech.v2.PhraseSet
                         * @instance
                         */
                        PhraseSet.prototype.updateTime = null;
    
                        /**
                         * PhraseSet deleteTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} deleteTime
                         * @memberof google.cloud.speech.v2.PhraseSet
                         * @instance
                         */
                        PhraseSet.prototype.deleteTime = null;
    
                        /**
                         * PhraseSet expireTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} expireTime
                         * @memberof google.cloud.speech.v2.PhraseSet
                         * @instance
                         */
                        PhraseSet.prototype.expireTime = null;
    
                        /**
                         * PhraseSet annotations.
                         * @member {Object.<string,string>} annotations
                         * @memberof google.cloud.speech.v2.PhraseSet
                         * @instance
                         */
                        PhraseSet.prototype.annotations = $util.emptyObject;
    
                        /**
                         * PhraseSet etag.
                         * @member {string} etag
                         * @memberof google.cloud.speech.v2.PhraseSet
                         * @instance
                         */
                        PhraseSet.prototype.etag = "";
    
                        /**
                         * PhraseSet reconciling.
                         * @member {boolean} reconciling
                         * @memberof google.cloud.speech.v2.PhraseSet
                         * @instance
                         */
                        PhraseSet.prototype.reconciling = false;
    
                        /**
                         * PhraseSet kmsKeyName.
                         * @member {string} kmsKeyName
                         * @memberof google.cloud.speech.v2.PhraseSet
                         * @instance
                         */
                        PhraseSet.prototype.kmsKeyName = "";
    
                        /**
                         * PhraseSet kmsKeyVersionName.
                         * @member {string} kmsKeyVersionName
                         * @memberof google.cloud.speech.v2.PhraseSet
                         * @instance
                         */
                        PhraseSet.prototype.kmsKeyVersionName = "";
    
                        /**
                         * Creates a new PhraseSet instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.speech.v2.PhraseSet
                         * @static
                         * @param {google.cloud.speech.v2.IPhraseSet=} [properties] Properties to set
                         * @returns {google.cloud.speech.v2.PhraseSet} PhraseSet instance
                         */
                        PhraseSet.create = function create(properties) {
                            return new PhraseSet(properties);
                        };
    
                        /**
                         * Encodes the specified PhraseSet message. Does not implicitly {@link google.cloud.speech.v2.PhraseSet.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.speech.v2.PhraseSet
                         * @static
                         * @param {google.cloud.speech.v2.IPhraseSet} message PhraseSet message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PhraseSet.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.uid != null && Object.hasOwnProperty.call(message, "uid"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.uid);
                            if (message.phrases != null && message.phrases.length)
                                for (var i = 0; i < message.phrases.length; ++i)
                                    $root.google.cloud.speech.v2.PhraseSet.Phrase.encode(message.phrases[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.boost != null && Object.hasOwnProperty.call(message, "boost"))
                                writer.uint32(/* id 4, wireType 5 =*/37).float(message.boost);
                            if (message.displayName != null && Object.hasOwnProperty.call(message, "displayName"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.displayName);
                            if (message.createTime != null && Object.hasOwnProperty.call(message, "createTime"))
                                $root.google.protobuf.Timestamp.encode(message.createTime, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                            if (message.updateTime != null && Object.hasOwnProperty.call(message, "updateTime"))
                                $root.google.protobuf.Timestamp.encode(message.updateTime, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                            if (message.deleteTime != null && Object.hasOwnProperty.call(message, "deleteTime"))
                                $root.google.protobuf.Timestamp.encode(message.deleteTime, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                            if (message.expireTime != null && Object.hasOwnProperty.call(message, "expireTime"))
                                $root.google.protobuf.Timestamp.encode(message.expireTime, writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                            if (message.annotations != null && Object.hasOwnProperty.call(message, "annotations"))
                                for (var keys = Object.keys(message.annotations), i = 0; i < keys.length; ++i)
                                    writer.uint32(/* id 10, wireType 2 =*/82).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.annotations[keys[i]]).ldelim();
                            if (message.etag != null && Object.hasOwnProperty.call(message, "etag"))
                                writer.uint32(/* id 11, wireType 2 =*/90).string(message.etag);
                            if (message.reconciling != null && Object.hasOwnProperty.call(message, "reconciling"))
                                writer.uint32(/* id 12, wireType 0 =*/96).bool(message.reconciling);
                            if (message.kmsKeyName != null && Object.hasOwnProperty.call(message, "kmsKeyName"))
                                writer.uint32(/* id 13, wireType 2 =*/106).string(message.kmsKeyName);
                            if (message.kmsKeyVersionName != null && Object.hasOwnProperty.call(message, "kmsKeyVersionName"))
                                writer.uint32(/* id 14, wireType 2 =*/114).string(message.kmsKeyVersionName);
                            if (message.state != null && Object.hasOwnProperty.call(message, "state"))
                                writer.uint32(/* id 15, wireType 0 =*/120).int32(message.state);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified PhraseSet message, length delimited. Does not implicitly {@link google.cloud.speech.v2.PhraseSet.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.speech.v2.PhraseSet
                         * @static
                         * @param {google.cloud.speech.v2.IPhraseSet} message PhraseSet message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PhraseSet.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a PhraseSet message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.speech.v2.PhraseSet
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.speech.v2.PhraseSet} PhraseSet
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PhraseSet.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.speech.v2.PhraseSet(), key, value;
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.uid = reader.string();
                                        break;
                                    }
                                case 3: {
                                        if (!(message.phrases && message.phrases.length))
                                            message.phrases = [];
                                        message.phrases.push($root.google.cloud.speech.v2.PhraseSet.Phrase.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 4: {
                                        message.boost = reader.float();
                                        break;
                                    }
                                case 5: {
                                        message.displayName = reader.string();
                                        break;
                                    }
                                case 15: {
                                        message.state = reader.int32();
                                        break;
                                    }
                                case 6: {
                                        message.createTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 7: {
                                        message.updateTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 8: {
                                        message.deleteTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 9: {
                                        message.expireTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 10: {
                                        if (message.annotations === $util.emptyObject)
                                            message.annotations = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = "";
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = reader.string();
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.annotations[key] = value;
                                        break;
                                    }
                                case 11: {
                                        message.etag = reader.string();
                                        break;
                                    }
                                case 12: {
                                        message.reconciling = reader.bool();
                                        break;
                                    }
                                case 13: {
                                        message.kmsKeyName = reader.string();
                                        break;
                                    }
                                case 14: {
                                        message.kmsKeyVersionName = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a PhraseSet message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.speech.v2.PhraseSet
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.speech.v2.PhraseSet} PhraseSet
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PhraseSet.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a PhraseSet message.
                         * @function verify
                         * @memberof google.cloud.speech.v2.PhraseSet
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        PhraseSet.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.uid != null && message.hasOwnProperty("uid"))
                                if (!$util.isString(message.uid))
                                    return "uid: string expected";
                            if (message.phrases != null && message.hasOwnProperty("phrases")) {
                                if (!Array.isArray(message.phrases))
                                    return "phrases: array expected";
                                for (var i = 0; i < message.phrases.length; ++i) {
                                    var error = $root.google.cloud.speech.v2.PhraseSet.Phrase.verify(message.phrases[i]);
                                    if (error)
                                        return "phrases." + error;
                                }
                            }
                            if (message.boost != null && message.hasOwnProperty("boost"))
                                if (typeof message.boost !== "number")
                                    return "boost: number expected";
                            if (message.displayName != null && message.hasOwnProperty("displayName"))
                                if (!$util.isString(message.displayName))
                                    return "displayName: string expected";
                            if (message.state != null && message.hasOwnProperty("state"))
                                switch (message.state) {
                                default:
                                    return "state: enum value expected";
                                case 0:
                                case 2:
                                case 4:
                                    break;
                                }
                            if (message.createTime != null && message.hasOwnProperty("createTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.createTime);
                                if (error)
                                    return "createTime." + error;
                            }
                            if (message.updateTime != null && message.hasOwnProperty("updateTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.updateTime);
                                if (error)
                                    return "updateTime." + error;
                            }
                            if (message.deleteTime != null && message.hasOwnProperty("deleteTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.deleteTime);
                                if (error)
                                    return "deleteTime." + error;
                            }
                            if (message.expireTime != null && message.hasOwnProperty("expireTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.expireTime);
                                if (error)
                                    return "expireTime." + error;
                            }
                            if (message.annotations != null && message.hasOwnProperty("annotations")) {
                                if (!$util.isObject(message.annotations))
                                    return "annotations: object expected";
                                var key = Object.keys(message.annotations);
                                for (var i = 0; i < key.length; ++i)
                                    if (!$util.isString(message.annotations[key[i]]))
                                        return "annotations: string{k:string} expected";
                            }
                            if (message.etag != null && message.hasOwnProperty("etag"))
                                if (!$util.isString(message.etag))
                                    return "etag: string expected";
                            if (message.reconciling != null && message.hasOwnProperty("reconciling"))
                                if (typeof message.reconciling !== "boolean")
                                    return "reconciling: boolean expected";
                            if (message.kmsKeyName != null && message.hasOwnProperty("kmsKeyName"))
                                if (!$util.isString(message.kmsKeyName))
                                    return "kmsKeyName: string expected";
                            if (message.kmsKeyVersionName != null && message.hasOwnProperty("kmsKeyVersionName"))
                                if (!$util.isString(message.kmsKeyVersionName))
                                    return "kmsKeyVersionName: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a PhraseSet message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.speech.v2.PhraseSet
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.speech.v2.PhraseSet} PhraseSet
                         */
                        PhraseSet.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.speech.v2.PhraseSet)
                                return object;
                            var message = new $root.google.cloud.speech.v2.PhraseSet();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.uid != null)
                                message.uid = String(object.uid);
                            if (object.phrases) {
                                if (!Array.isArray(object.phrases))
                                    throw TypeError(".google.cloud.speech.v2.PhraseSet.phrases: array expected");
                                message.phrases = [];
                                for (var i = 0; i < object.phrases.length; ++i) {
                                    if (typeof object.phrases[i] !== "object")
                                        throw TypeError(".google.cloud.speech.v2.PhraseSet.phrases: object expected");
                                    message.phrases[i] = $root.google.cloud.speech.v2.PhraseSet.Phrase.fromObject(object.phrases[i]);
                                }
                            }
                            if (object.boost != null)
                                message.boost = Number(object.boost);
                            if (object.displayName != null)
                                message.displayName = String(object.displayName);
                            switch (object.state) {
                            default:
                                if (typeof object.state === "number") {
                                    message.state = object.state;
                                    break;
                                }
                                break;
                            case "STATE_UNSPECIFIED":
                            case 0:
                                message.state = 0;
                                break;
                            case "ACTIVE":
                            case 2:
                                message.state = 2;
                                break;
                            case "DELETED":
                            case 4:
                                message.state = 4;
                                break;
                            }
                            if (object.createTime != null) {
                                if (typeof object.createTime !== "object")
                                    throw TypeError(".google.cloud.speech.v2.PhraseSet.createTime: object expected");
                                message.createTime = $root.google.protobuf.Timestamp.fromObject(object.createTime);
                            }
                            if (object.updateTime != null) {
                                if (typeof object.updateTime !== "object")
                                    throw TypeError(".google.cloud.speech.v2.PhraseSet.updateTime: object expected");
                                message.updateTime = $root.google.protobuf.Timestamp.fromObject(object.updateTime);
                            }
                            if (object.deleteTime != null) {
                                if (typeof object.deleteTime !== "object")
                                    throw TypeError(".google.cloud.speech.v2.PhraseSet.deleteTime: object expected");
                                message.deleteTime = $root.google.protobuf.Timestamp.fromObject(object.deleteTime);
                            }
                            if (object.expireTime != null) {
                                if (typeof object.expireTime !== "object")
                                    throw TypeError(".google.cloud.speech.v2.PhraseSet.expireTime: object expected");
                                message.expireTime = $root.google.protobuf.Timestamp.fromObject(object.expireTime);
                            }
                            if (object.annotations) {
                                if (typeof object.annotations !== "object")
                                    throw TypeError(".google.cloud.speech.v2.PhraseSet.annotations: object expected");
                                message.annotations = {};
                                for (var keys = Object.keys(object.annotations), i = 0; i < keys.length; ++i)
                                    message.annotations[keys[i]] = String(object.annotations[keys[i]]);
                            }
                            if (object.etag != null)
                                message.etag = String(object.etag);
                            if (object.reconciling != null)
                                message.reconciling = Boolean(object.reconciling);
                            if (object.kmsKeyName != null)
                                message.kmsKeyName = String(object.kmsKeyName);
                            if (object.kmsKeyVersionName != null)
                                message.kmsKeyVersionName = String(object.kmsKeyVersionName);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a PhraseSet message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.speech.v2.PhraseSet
                         * @static
                         * @param {google.cloud.speech.v2.PhraseSet} message PhraseSet
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        PhraseSet.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.phrases = [];
                            if (options.objects || options.defaults)
                                object.annotations = {};
                            if (options.defaults) {
                                object.name = "";
                                object.uid = "";
                                object.boost = 0;
                                object.displayName = "";
                                object.createTime = null;
                                object.updateTime = null;
                                object.deleteTime = null;
                                object.expireTime = null;
                                object.etag = "";
                                object.reconciling = false;
                                object.kmsKeyName = "";
                                object.kmsKeyVersionName = "";
                                object.state = options.enums === String ? "STATE_UNSPECIFIED" : 0;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.uid != null && message.hasOwnProperty("uid"))
                                object.uid = message.uid;
                            if (message.phrases && message.phrases.length) {
                                object.phrases = [];
                                for (var j = 0; j < message.phrases.length; ++j)
                                    object.phrases[j] = $root.google.cloud.speech.v2.PhraseSet.Phrase.toObject(message.phrases[j], options);
                            }
                            if (message.boost != null && message.hasOwnProperty("boost"))
                                object.boost = options.json && !isFinite(message.boost) ? String(message.boost) : message.boost;
                            if (message.displayName != null && message.hasOwnProperty("displayName"))
                                object.displayName = message.displayName;
                            if (message.createTime != null && message.hasOwnProperty("createTime"))
                                object.createTime = $root.google.protobuf.Timestamp.toObject(message.createTime, options);
                            if (message.updateTime != null && message.hasOwnProperty("updateTime"))
                                object.updateTime = $root.google.protobuf.Timestamp.toObject(message.updateTime, options);
                            if (message.deleteTime != null && message.hasOwnProperty("deleteTime"))
                                object.deleteTime = $root.google.protobuf.Timestamp.toObject(message.deleteTime, options);
                            if (message.expireTime != null && message.hasOwnProperty("expireTime"))
                                object.expireTime = $root.google.protobuf.Timestamp.toObject(message.expireTime, options);
                            var keys2;
                            if (message.annotations && (keys2 = Object.keys(message.annotations)).length) {
                                object.annotations = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.annotations[keys2[j]] = message.annotations[keys2[j]];
                            }
                            if (message.etag != null && message.hasOwnProperty("etag"))
                                object.etag = message.etag;
                            if (message.reconciling != null && message.hasOwnProperty("reconciling"))
                                object.reconciling = message.reconciling;
                            if (message.kmsKeyName != null && message.hasOwnProperty("kmsKeyName"))
                                object.kmsKeyName = message.kmsKeyName;
                            if (message.kmsKeyVersionName != null && message.hasOwnProperty("kmsKeyVersionName"))
                                object.kmsKeyVersionName = message.kmsKeyVersionName;
                            if (message.state != null && message.hasOwnProperty("state"))
                                object.state = options.enums === String ? $root.google.cloud.speech.v2.PhraseSet.State[message.state] === undefined ? message.state : $root.google.cloud.speech.v2.PhraseSet.State[message.state] : message.state;
                            return object;
                        };
    
                        /**
                         * Converts this PhraseSet to JSON.
                         * @function toJSON
                         * @memberof google.cloud.speech.v2.PhraseSet
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        PhraseSet.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for PhraseSet
                         * @function getTypeUrl
                         * @memberof google.cloud.speech.v2.PhraseSet
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        PhraseSet.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.speech.v2.PhraseSet";
                        };
    
                        PhraseSet.Phrase = (function() {
    
                            /**
                             * Properties of a Phrase.
                             * @memberof google.cloud.speech.v2.PhraseSet
                             * @interface IPhrase
                             * @property {string|null} [value] Phrase value
                             * @property {number|null} [boost] Phrase boost
                             */
    
                            /**
                             * Constructs a new Phrase.
                             * @memberof google.cloud.speech.v2.PhraseSet
                             * @classdesc Represents a Phrase.
                             * @implements IPhrase
                             * @constructor
                             * @param {google.cloud.speech.v2.PhraseSet.IPhrase=} [properties] Properties to set
                             */
                            function Phrase(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * Phrase value.
                             * @member {string} value
                             * @memberof google.cloud.speech.v2.PhraseSet.Phrase
                             * @instance
                             */
                            Phrase.prototype.value = "";
    
                            /**
                             * Phrase boost.
                             * @member {number} boost
                             * @memberof google.cloud.speech.v2.PhraseSet.Phrase
                             * @instance
                             */
                            Phrase.prototype.boost = 0;
    
                            /**
                             * Creates a new Phrase instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.speech.v2.PhraseSet.Phrase
                             * @static
                             * @param {google.cloud.speech.v2.PhraseSet.IPhrase=} [properties] Properties to set
                             * @returns {google.cloud.speech.v2.PhraseSet.Phrase} Phrase instance
                             */
                            Phrase.create = function create(properties) {
                                return new Phrase(properties);
                            };
    
                            /**
                             * Encodes the specified Phrase message. Does not implicitly {@link google.cloud.speech.v2.PhraseSet.Phrase.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.speech.v2.PhraseSet.Phrase
                             * @static
                             * @param {google.cloud.speech.v2.PhraseSet.IPhrase} message Phrase message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            Phrase.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.value);
                                if (message.boost != null && Object.hasOwnProperty.call(message, "boost"))
                                    writer.uint32(/* id 2, wireType 5 =*/21).float(message.boost);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified Phrase message, length delimited. Does not implicitly {@link google.cloud.speech.v2.PhraseSet.Phrase.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.speech.v2.PhraseSet.Phrase
                             * @static
                             * @param {google.cloud.speech.v2.PhraseSet.IPhrase} message Phrase message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            Phrase.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a Phrase message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.speech.v2.PhraseSet.Phrase
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.speech.v2.PhraseSet.Phrase} Phrase
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            Phrase.decode = function decode(reader, length, error) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.speech.v2.PhraseSet.Phrase();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    if (tag === error)
                                        break;
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.value = reader.string();
                                            break;
                                        }
                                    case 2: {
                                            message.boost = reader.float();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a Phrase message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.speech.v2.PhraseSet.Phrase
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.speech.v2.PhraseSet.Phrase} Phrase
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            Phrase.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a Phrase message.
                             * @function verify
                             * @memberof google.cloud.speech.v2.PhraseSet.Phrase
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            Phrase.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.value != null && message.hasOwnProperty("value"))
                                    if (!$util.isString(message.value))
                                        return "value: string expected";
                                if (message.boost != null && message.hasOwnProperty("boost"))
                                    if (typeof message.boost !== "number")
                                        return "boost: number expected";
                                return null;
                            };
    
                            /**
                             * Creates a Phrase message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.speech.v2.PhraseSet.Phrase
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.speech.v2.PhraseSet.Phrase} Phrase
                             */
                            Phrase.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.speech.v2.PhraseSet.Phrase)
                                    return object;
                                var message = new $root.google.cloud.speech.v2.PhraseSet.Phrase();
                                if (object.value != null)
                                    message.value = String(object.value);
                                if (object.boost != null)
                                    message.boost = Number(object.boost);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a Phrase message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.speech.v2.PhraseSet.Phrase
                             * @static
                             * @param {google.cloud.speech.v2.PhraseSet.Phrase} message Phrase
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            Phrase.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.value = "";
                                    object.boost = 0;
                                }
                                if (message.value != null && message.hasOwnProperty("value"))
                                    object.value = message.value;
                                if (message.boost != null && message.hasOwnProperty("boost"))
                                    object.boost = options.json && !isFinite(message.boost) ? String(message.boost) : message.boost;
                                return object;
                            };
    
                            /**
                             * Converts this Phrase to JSON.
                             * @function toJSON
                             * @memberof google.cloud.speech.v2.PhraseSet.Phrase
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            Phrase.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for Phrase
                             * @function getTypeUrl
                             * @memberof google.cloud.speech.v2.PhraseSet.Phrase
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            Phrase.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.speech.v2.PhraseSet.Phrase";
                            };
    
                            return Phrase;
                        })();
    
                        /**
                         * State enum.
                         * @name google.cloud.speech.v2.PhraseSet.State
                         * @enum {number}
                         * @property {number} STATE_UNSPECIFIED=0 STATE_UNSPECIFIED value
                         * @property {number} ACTIVE=2 ACTIVE value
                         * @property {number} DELETED=4 DELETED value
                         */
                        PhraseSet.State = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "STATE_UNSPECIFIED"] = 0;
                            values[valuesById[2] = "ACTIVE"] = 2;
                            values[valuesById[4] = "DELETED"] = 4;
                            return values;
                        })();
    
                        return PhraseSet;
                    })();
    
                    v2.CreateCustomClassRequest = (function() {
    
                        /**
                         * Properties of a CreateCustomClassRequest.
                         * @memberof google.cloud.speech.v2
                         * @interface ICreateCustomClassRequest
                         * @property {google.cloud.speech.v2.ICustomClass|null} [customClass] CreateCustomClassRequest customClass
                         * @property {boolean|null} [validateOnly] CreateCustomClassRequest validateOnly
                         * @property {string|null} [customClassId] CreateCustomClassRequest customClassId
                         * @property {string|null} [parent] CreateCustomClassRequest parent
                         */
    
                        /**
                         * Constructs a new CreateCustomClassRequest.
                         * @memberof google.cloud.speech.v2
                         * @classdesc Represents a CreateCustomClassRequest.
                         * @implements ICreateCustomClassRequest
                         * @constructor
                         * @param {google.cloud.speech.v2.ICreateCustomClassRequest=} [properties] Properties to set
                         */
                        function CreateCustomClassRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CreateCustomClassRequest customClass.
                         * @member {google.cloud.speech.v2.ICustomClass|null|undefined} customClass
                         * @memberof google.cloud.speech.v2.CreateCustomClassRequest
                         * @instance
                         */
                        CreateCustomClassRequest.prototype.customClass = null;
    
                        /**
                         * CreateCustomClassRequest validateOnly.
                         * @member {boolean} validateOnly
                         * @memberof google.cloud.speech.v2.CreateCustomClassRequest
                         * @instance
                         */
                        CreateCustomClassRequest.prototype.validateOnly = false;
    
                        /**
                         * CreateCustomClassRequest customClassId.
                         * @member {string} customClassId
                         * @memberof google.cloud.speech.v2.CreateCustomClassRequest
                         * @instance
                         */
                        CreateCustomClassRequest.prototype.customClassId = "";
    
                        /**
                         * CreateCustomClassRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.speech.v2.CreateCustomClassRequest
                         * @instance
                         */
                        CreateCustomClassRequest.prototype.parent = "";
    
                        /**
                         * Creates a new CreateCustomClassRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.speech.v2.CreateCustomClassRequest
                         * @static
                         * @param {google.cloud.speech.v2.ICreateCustomClassRequest=} [properties] Properties to set
                         * @returns {google.cloud.speech.v2.CreateCustomClassRequest} CreateCustomClassRequest instance
                         */
                        CreateCustomClassRequest.create = function create(properties) {
                            return new CreateCustomClassRequest(properties);
                        };
    
                        /**
                         * Encodes the specified CreateCustomClassRequest message. Does not implicitly {@link google.cloud.speech.v2.CreateCustomClassRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.speech.v2.CreateCustomClassRequest
                         * @static
                         * @param {google.cloud.speech.v2.ICreateCustomClassRequest} message CreateCustomClassRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateCustomClassRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.customClass != null && Object.hasOwnProperty.call(message, "customClass"))
                                $root.google.cloud.speech.v2.CustomClass.encode(message.customClass, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.validateOnly != null && Object.hasOwnProperty.call(message, "validateOnly"))
                                writer.uint32(/* id 2, wireType 0 =*/16).bool(message.validateOnly);
                            if (message.customClassId != null && Object.hasOwnProperty.call(message, "customClassId"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.customClassId);
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.parent);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CreateCustomClassRequest message, length delimited. Does not implicitly {@link google.cloud.speech.v2.CreateCustomClassRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.speech.v2.CreateCustomClassRequest
                         * @static
                         * @param {google.cloud.speech.v2.ICreateCustomClassRequest} message CreateCustomClassRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateCustomClassRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CreateCustomClassRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.speech.v2.CreateCustomClassRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.speech.v2.CreateCustomClassRequest} CreateCustomClassRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateCustomClassRequest.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.speech.v2.CreateCustomClassRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        message.customClass = $root.google.cloud.speech.v2.CustomClass.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.validateOnly = reader.bool();
                                        break;
                                    }
                                case 3: {
                                        message.customClassId = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CreateCustomClassRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.speech.v2.CreateCustomClassRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.speech.v2.CreateCustomClassRequest} CreateCustomClassRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateCustomClassRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CreateCustomClassRequest message.
                         * @function verify
                         * @memberof google.cloud.speech.v2.CreateCustomClassRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CreateCustomClassRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.customClass != null && message.hasOwnProperty("customClass")) {
                                var error = $root.google.cloud.speech.v2.CustomClass.verify(message.customClass);
                                if (error)
                                    return "customClass." + error;
                            }
                            if (message.validateOnly != null && message.hasOwnProperty("validateOnly"))
                                if (typeof message.validateOnly !== "boolean")
                                    return "validateOnly: boolean expected";
                            if (message.customClassId != null && message.hasOwnProperty("customClassId"))
                                if (!$util.isString(message.customClassId))
                                    return "customClassId: string expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a CreateCustomClassRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.speech.v2.CreateCustomClassRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.speech.v2.CreateCustomClassRequest} CreateCustomClassRequest
                         */
                        CreateCustomClassRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.speech.v2.CreateCustomClassRequest)
                                return object;
                            var message = new $root.google.cloud.speech.v2.CreateCustomClassRequest();
                            if (object.customClass != null) {
                                if (typeof object.customClass !== "object")
                                    throw TypeError(".google.cloud.speech.v2.CreateCustomClassRequest.customClass: object expected");
                                message.customClass = $root.google.cloud.speech.v2.CustomClass.fromObject(object.customClass);
                            }
                            if (object.validateOnly != null)
                                message.validateOnly = Boolean(object.validateOnly);
                            if (object.customClassId != null)
                                message.customClassId = String(object.customClassId);
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CreateCustomClassRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.speech.v2.CreateCustomClassRequest
                         * @static
                         * @param {google.cloud.speech.v2.CreateCustomClassRequest} message CreateCustomClassRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CreateCustomClassRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.customClass = null;
                                object.validateOnly = false;
                                object.customClassId = "";
                                object.parent = "";
                            }
                            if (message.customClass != null && message.hasOwnProperty("customClass"))
                                object.customClass = $root.google.cloud.speech.v2.CustomClass.toObject(message.customClass, options);
                            if (message.validateOnly != null && message.hasOwnProperty("validateOnly"))
                                object.validateOnly = message.validateOnly;
                            if (message.customClassId != null && message.hasOwnProperty("customClassId"))
                                object.customClassId = message.customClassId;
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            return object;
                        };
    
                        /**
                         * Converts this CreateCustomClassRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.speech.v2.CreateCustomClassRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CreateCustomClassRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for CreateCustomClassRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.speech.v2.CreateCustomClassRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        CreateCustomClassRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.speech.v2.CreateCustomClassRequest";
                        };
    
                        return CreateCustomClassRequest;
                    })();
    
                    v2.ListCustomClassesRequest = (function() {
    
                        /**
                         * Properties of a ListCustomClassesRequest.
                         * @memberof google.cloud.speech.v2
                         * @interface IListCustomClassesRequest
                         * @property {string|null} [parent] ListCustomClassesRequest parent
                         * @property {number|null} [pageSize] ListCustomClassesRequest pageSize
                         * @property {string|null} [pageToken] ListCustomClassesRequest pageToken
                         * @property {boolean|null} [showDeleted] ListCustomClassesRequest showDeleted
                         */
    
                        /**
                         * Constructs a new ListCustomClassesRequest.
                         * @memberof google.cloud.speech.v2
                         * @classdesc Represents a ListCustomClassesRequest.
                         * @implements IListCustomClassesRequest
                         * @constructor
                         * @param {google.cloud.speech.v2.IListCustomClassesRequest=} [properties] Properties to set
                         */
                        function ListCustomClassesRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListCustomClassesRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.speech.v2.ListCustomClassesRequest
                         * @instance
                         */
                        ListCustomClassesRequest.prototype.parent = "";
    
                        /**
                         * ListCustomClassesRequest pageSize.
                         * @member {number} pageSize
                         * @memberof google.cloud.speech.v2.ListCustomClassesRequest
                         * @instance
                         */
                        ListCustomClassesRequest.prototype.pageSize = 0;
    
                        /**
                         * ListCustomClassesRequest pageToken.
                         * @member {string} pageToken
                         * @memberof google.cloud.speech.v2.ListCustomClassesRequest
                         * @instance
                         */
                        ListCustomClassesRequest.prototype.pageToken = "";
    
                        /**
                         * ListCustomClassesRequest showDeleted.
                         * @member {boolean} showDeleted
                         * @memberof google.cloud.speech.v2.ListCustomClassesRequest
                         * @instance
                         */
                        ListCustomClassesRequest.prototype.showDeleted = false;
    
                        /**
                         * Creates a new ListCustomClassesRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.speech.v2.ListCustomClassesRequest
                         * @static
                         * @param {google.cloud.speech.v2.IListCustomClassesRequest=} [properties] Properties to set
                         * @returns {google.cloud.speech.v2.ListCustomClassesRequest} ListCustomClassesRequest instance
                         */
                        ListCustomClassesRequest.create = function create(properties) {
                            return new ListCustomClassesRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ListCustomClassesRequest message. Does not implicitly {@link google.cloud.speech.v2.ListCustomClassesRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.speech.v2.ListCustomClassesRequest
                         * @static
                         * @param {google.cloud.speech.v2.IListCustomClassesRequest} message ListCustomClassesRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListCustomClassesRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.pageSize != null && Object.hasOwnProperty.call(message, "pageSize"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.pageSize);
                            if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.pageToken);
                            if (message.showDeleted != null && Object.hasOwnProperty.call(message, "showDeleted"))
                                writer.uint32(/* id 4, wireType 0 =*/32).bool(message.showDeleted);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListCustomClassesRequest message, length delimited. Does not implicitly {@link google.cloud.speech.v2.ListCustomClassesRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.speech.v2.ListCustomClassesRequest
                         * @static
                         * @param {google.cloud.speech.v2.IListCustomClassesRequest} message ListCustomClassesRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListCustomClassesRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListCustomClassesRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.speech.v2.ListCustomClassesRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.speech.v2.ListCustomClassesRequest} ListCustomClassesRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListCustomClassesRequest.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.speech.v2.ListCustomClassesRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.pageSize = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        message.pageToken = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.showDeleted = reader.bool();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListCustomClassesRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.speech.v2.ListCustomClassesRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.speech.v2.ListCustomClassesRequest} ListCustomClassesRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListCustomClassesRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListCustomClassesRequest message.
                         * @function verify
                         * @memberof google.cloud.speech.v2.ListCustomClassesRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListCustomClassesRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                if (!$util.isInteger(message.pageSize))
                                    return "pageSize: integer expected";
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                if (!$util.isString(message.pageToken))
                                    return "pageToken: string expected";
                            if (message.showDeleted != null && message.hasOwnProperty("showDeleted"))
                                if (typeof message.showDeleted !== "boolean")
                                    return "showDeleted: boolean expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListCustomClassesRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.speech.v2.ListCustomClassesRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.speech.v2.ListCustomClassesRequest} ListCustomClassesRequest
                         */
                        ListCustomClassesRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.speech.v2.ListCustomClassesRequest)
                                return object;
                            var message = new $root.google.cloud.speech.v2.ListCustomClassesRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.pageSize != null)
                                message.pageSize = object.pageSize | 0;
                            if (object.pageToken != null)
                                message.pageToken = String(object.pageToken);
                            if (object.showDeleted != null)
                                message.showDeleted = Boolean(object.showDeleted);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListCustomClassesRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.speech.v2.ListCustomClassesRequest
                         * @static
                         * @param {google.cloud.speech.v2.ListCustomClassesRequest} message ListCustomClassesRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListCustomClassesRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.pageSize = 0;
                                object.pageToken = "";
                                object.showDeleted = false;
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                object.pageSize = message.pageSize;
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                object.pageToken = message.pageToken;
                            if (message.showDeleted != null && message.hasOwnProperty("showDeleted"))
                                object.showDeleted = message.showDeleted;
                            return object;
                        };
    
                        /**
                         * Converts this ListCustomClassesRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.speech.v2.ListCustomClassesRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListCustomClassesRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListCustomClassesRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.speech.v2.ListCustomClassesRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListCustomClassesRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.speech.v2.ListCustomClassesRequest";
                        };
    
                        return ListCustomClassesRequest;
                    })();
    
                    v2.ListCustomClassesResponse = (function() {
    
                        /**
                         * Properties of a ListCustomClassesResponse.
                         * @memberof google.cloud.speech.v2
                         * @interface IListCustomClassesResponse
                         * @property {Array.<google.cloud.speech.v2.ICustomClass>|null} [customClasses] ListCustomClassesResponse customClasses
                         * @property {string|null} [nextPageToken] ListCustomClassesResponse nextPageToken
                         */
    
                        /**
                         * Constructs a new ListCustomClassesResponse.
                         * @memberof google.cloud.speech.v2
                         * @classdesc Represents a ListCustomClassesResponse.
                         * @implements IListCustomClassesResponse
                         * @constructor
                         * @param {google.cloud.speech.v2.IListCustomClassesResponse=} [properties] Properties to set
                         */
                        function ListCustomClassesResponse(properties) {
                            this.customClasses = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListCustomClassesResponse customClasses.
                         * @member {Array.<google.cloud.speech.v2.ICustomClass>} customClasses
                         * @memberof google.cloud.speech.v2.ListCustomClassesResponse
                         * @instance
                         */
                        ListCustomClassesResponse.prototype.customClasses = $util.emptyArray;
    
                        /**
                         * ListCustomClassesResponse nextPageToken.
                         * @member {string} nextPageToken
                         * @memberof google.cloud.speech.v2.ListCustomClassesResponse
                         * @instance
                         */
                        ListCustomClassesResponse.prototype.nextPageToken = "";
    
                        /**
                         * Creates a new ListCustomClassesResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.speech.v2.ListCustomClassesResponse
                         * @static
                         * @param {google.cloud.speech.v2.IListCustomClassesResponse=} [properties] Properties to set
                         * @returns {google.cloud.speech.v2.ListCustomClassesResponse} ListCustomClassesResponse instance
                         */
                        ListCustomClassesResponse.create = function create(properties) {
                            return new ListCustomClassesResponse(properties);
                        };
    
                        /**
                         * Encodes the specified ListCustomClassesResponse message. Does not implicitly {@link google.cloud.speech.v2.ListCustomClassesResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.speech.v2.ListCustomClassesResponse
                         * @static
                         * @param {google.cloud.speech.v2.IListCustomClassesResponse} message ListCustomClassesResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListCustomClassesResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.customClasses != null && message.customClasses.length)
                                for (var i = 0; i < message.customClasses.length; ++i)
                                    $root.google.cloud.speech.v2.CustomClass.encode(message.customClasses[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListCustomClassesResponse message, length delimited. Does not implicitly {@link google.cloud.speech.v2.ListCustomClassesResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.speech.v2.ListCustomClassesResponse
                         * @static
                         * @param {google.cloud.speech.v2.IListCustomClassesResponse} message ListCustomClassesResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListCustomClassesResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListCustomClassesResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.speech.v2.ListCustomClassesResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.speech.v2.ListCustomClassesResponse} ListCustomClassesResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListCustomClassesResponse.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.speech.v2.ListCustomClassesResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.customClasses && message.customClasses.length))
                                            message.customClasses = [];
                                        message.customClasses.push($root.google.cloud.speech.v2.CustomClass.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 2: {
                                        message.nextPageToken = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListCustomClassesResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.speech.v2.ListCustomClassesResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.speech.v2.ListCustomClassesResponse} ListCustomClassesResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListCustomClassesResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListCustomClassesResponse message.
                         * @function verify
                         * @memberof google.cloud.speech.v2.ListCustomClassesResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListCustomClassesResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.customClasses != null && message.hasOwnProperty("customClasses")) {
                                if (!Array.isArray(message.customClasses))
                                    return "customClasses: array expected";
                                for (var i = 0; i < message.customClasses.length; ++i) {
                                    var error = $root.google.cloud.speech.v2.CustomClass.verify(message.customClasses[i]);
                                    if (error)
                                        return "customClasses." + error;
                                }
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                if (!$util.isString(message.nextPageToken))
                                    return "nextPageToken: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListCustomClassesResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.speech.v2.ListCustomClassesResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.speech.v2.ListCustomClassesResponse} ListCustomClassesResponse
                         */
                        ListCustomClassesResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.speech.v2.ListCustomClassesResponse)
                                return object;
                            var message = new $root.google.cloud.speech.v2.ListCustomClassesResponse();
                            if (object.customClasses) {
                                if (!Array.isArray(object.customClasses))
                                    throw TypeError(".google.cloud.speech.v2.ListCustomClassesResponse.customClasses: array expected");
                                message.customClasses = [];
                                for (var i = 0; i < object.customClasses.length; ++i) {
                                    if (typeof object.customClasses[i] !== "object")
                                        throw TypeError(".google.cloud.speech.v2.ListCustomClassesResponse.customClasses: object expected");
                                    message.customClasses[i] = $root.google.cloud.speech.v2.CustomClass.fromObject(object.customClasses[i]);
                                }
                            }
                            if (object.nextPageToken != null)
                                message.nextPageToken = String(object.nextPageToken);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListCustomClassesResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.speech.v2.ListCustomClassesResponse
                         * @static
                         * @param {google.cloud.speech.v2.ListCustomClassesResponse} message ListCustomClassesResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListCustomClassesResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.customClasses = [];
                            if (options.defaults)
                                object.nextPageToken = "";
                            if (message.customClasses && message.customClasses.length) {
                                object.customClasses = [];
                                for (var j = 0; j < message.customClasses.length; ++j)
                                    object.customClasses[j] = $root.google.cloud.speech.v2.CustomClass.toObject(message.customClasses[j], options);
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                object.nextPageToken = message.nextPageToken;
                            return object;
                        };
    
                        /**
                         * Converts this ListCustomClassesResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.speech.v2.ListCustomClassesResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListCustomClassesResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListCustomClassesResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.speech.v2.ListCustomClassesResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListCustomClassesResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.speech.v2.ListCustomClassesResponse";
                        };
    
                        return ListCustomClassesResponse;
                    })();
    
                    v2.GetCustomClassRequest = (function() {
    
                        /**
                         * Properties of a GetCustomClassRequest.
                         * @memberof google.cloud.speech.v2
                         * @interface IGetCustomClassRequest
                         * @property {string|null} [name] GetCustomClassRequest name
                         */
    
                        /**
                         * Constructs a new GetCustomClassRequest.
                         * @memberof google.cloud.speech.v2
                         * @classdesc Represents a GetCustomClassRequest.
                         * @implements IGetCustomClassRequest
                         * @constructor
                         * @param {google.cloud.speech.v2.IGetCustomClassRequest=} [properties] Properties to set
                         */
                        function GetCustomClassRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GetCustomClassRequest name.
                         * @member {string} name
                         * @memberof google.cloud.speech.v2.GetCustomClassRequest
                         * @instance
                         */
                        GetCustomClassRequest.prototype.name = "";
    
                        /**
                         * Creates a new GetCustomClassRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.speech.v2.GetCustomClassRequest
                         * @static
                         * @param {google.cloud.speech.v2.IGetCustomClassRequest=} [properties] Properties to set
                         * @returns {google.cloud.speech.v2.GetCustomClassRequest} GetCustomClassRequest instance
                         */
                        GetCustomClassRequest.create = function create(properties) {
                            return new GetCustomClassRequest(properties);
                        };
    
                        /**
                         * Encodes the specified GetCustomClassRequest message. Does not implicitly {@link google.cloud.speech.v2.GetCustomClassRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.speech.v2.GetCustomClassRequest
                         * @static
                         * @param {google.cloud.speech.v2.IGetCustomClassRequest} message GetCustomClassRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetCustomClassRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GetCustomClassRequest message, length delimited. Does not implicitly {@link google.cloud.speech.v2.GetCustomClassRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.speech.v2.GetCustomClassRequest
                         * @static
                         * @param {google.cloud.speech.v2.IGetCustomClassRequest} message GetCustomClassRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetCustomClassRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GetCustomClassRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.speech.v2.GetCustomClassRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.speech.v2.GetCustomClassRequest} GetCustomClassRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetCustomClassRequest.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.speech.v2.GetCustomClassRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GetCustomClassRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.speech.v2.GetCustomClassRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.speech.v2.GetCustomClassRequest} GetCustomClassRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetCustomClassRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GetCustomClassRequest message.
                         * @function verify
                         * @memberof google.cloud.speech.v2.GetCustomClassRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GetCustomClassRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a GetCustomClassRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.speech.v2.GetCustomClassRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.speech.v2.GetCustomClassRequest} GetCustomClassRequest
                         */
                        GetCustomClassRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.speech.v2.GetCustomClassRequest)
                                return object;
                            var message = new $root.google.cloud.speech.v2.GetCustomClassRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GetCustomClassRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.speech.v2.GetCustomClassRequest
                         * @static
                         * @param {google.cloud.speech.v2.GetCustomClassRequest} message GetCustomClassRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GetCustomClassRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this GetCustomClassRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.speech.v2.GetCustomClassRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GetCustomClassRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GetCustomClassRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.speech.v2.GetCustomClassRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GetCustomClassRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.speech.v2.GetCustomClassRequest";
                        };
    
                        return GetCustomClassRequest;
                    })();
    
                    v2.UpdateCustomClassRequest = (function() {
    
                        /**
                         * Properties of an UpdateCustomClassRequest.
                         * @memberof google.cloud.speech.v2
                         * @interface IUpdateCustomClassRequest
                         * @property {google.cloud.speech.v2.ICustomClass|null} [customClass] UpdateCustomClassRequest customClass
                         * @property {google.protobuf.IFieldMask|null} [updateMask] UpdateCustomClassRequest updateMask
                         * @property {boolean|null} [validateOnly] UpdateCustomClassRequest validateOnly
                         */
    
                        /**
                         * Constructs a new UpdateCustomClassRequest.
                         * @memberof google.cloud.speech.v2
                         * @classdesc Represents an UpdateCustomClassRequest.
                         * @implements IUpdateCustomClassRequest
                         * @constructor
                         * @param {google.cloud.speech.v2.IUpdateCustomClassRequest=} [properties] Properties to set
                         */
                        function UpdateCustomClassRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * UpdateCustomClassRequest customClass.
                         * @member {google.cloud.speech.v2.ICustomClass|null|undefined} customClass
                         * @memberof google.cloud.speech.v2.UpdateCustomClassRequest
                         * @instance
                         */
                        UpdateCustomClassRequest.prototype.customClass = null;
    
                        /**
                         * UpdateCustomClassRequest updateMask.
                         * @member {google.protobuf.IFieldMask|null|undefined} updateMask
                         * @memberof google.cloud.speech.v2.UpdateCustomClassRequest
                         * @instance
                         */
                        UpdateCustomClassRequest.prototype.updateMask = null;
    
                        /**
                         * UpdateCustomClassRequest validateOnly.
                         * @member {boolean} validateOnly
                         * @memberof google.cloud.speech.v2.UpdateCustomClassRequest
                         * @instance
                         */
                        UpdateCustomClassRequest.prototype.validateOnly = false;
    
                        /**
                         * Creates a new UpdateCustomClassRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.speech.v2.UpdateCustomClassRequest
                         * @static
                         * @param {google.cloud.speech.v2.IUpdateCustomClassRequest=} [properties] Properties to set
                         * @returns {google.cloud.speech.v2.UpdateCustomClassRequest} UpdateCustomClassRequest instance
                         */
                        UpdateCustomClassRequest.create = function create(properties) {
                            return new UpdateCustomClassRequest(properties);
                        };
    
                        /**
                         * Encodes the specified UpdateCustomClassRequest message. Does not implicitly {@link google.cloud.speech.v2.UpdateCustomClassRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.speech.v2.UpdateCustomClassRequest
                         * @static
                         * @param {google.cloud.speech.v2.IUpdateCustomClassRequest} message UpdateCustomClassRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateCustomClassRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.customClass != null && Object.hasOwnProperty.call(message, "customClass"))
                                $root.google.cloud.speech.v2.CustomClass.encode(message.customClass, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.updateMask != null && Object.hasOwnProperty.call(message, "updateMask"))
                                $root.google.protobuf.FieldMask.encode(message.updateMask, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.validateOnly != null && Object.hasOwnProperty.call(message, "validateOnly"))
                                writer.uint32(/* id 4, wireType 0 =*/32).bool(message.validateOnly);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified UpdateCustomClassRequest message, length delimited. Does not implicitly {@link google.cloud.speech.v2.UpdateCustomClassRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.speech.v2.UpdateCustomClassRequest
                         * @static
                         * @param {google.cloud.speech.v2.IUpdateCustomClassRequest} message UpdateCustomClassRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateCustomClassRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an UpdateCustomClassRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.speech.v2.UpdateCustomClassRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.speech.v2.UpdateCustomClassRequest} UpdateCustomClassRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateCustomClassRequest.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.speech.v2.UpdateCustomClassRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        message.customClass = $root.google.cloud.speech.v2.CustomClass.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.updateMask = $root.google.protobuf.FieldMask.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        message.validateOnly = reader.bool();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an UpdateCustomClassRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.speech.v2.UpdateCustomClassRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.speech.v2.UpdateCustomClassRequest} UpdateCustomClassRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateCustomClassRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an UpdateCustomClassRequest message.
                         * @function verify
                         * @memberof google.cloud.speech.v2.UpdateCustomClassRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        UpdateCustomClassRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.customClass != null && message.hasOwnProperty("customClass")) {
                                var error = $root.google.cloud.speech.v2.CustomClass.verify(message.customClass);
                                if (error)
                                    return "customClass." + error;
                            }
                            if (message.updateMask != null && message.hasOwnProperty("updateMask")) {
                                var error = $root.google.protobuf.FieldMask.verify(message.updateMask);
                                if (error)
                                    return "updateMask." + error;
                            }
                            if (message.validateOnly != null && message.hasOwnProperty("validateOnly"))
                                if (typeof message.validateOnly !== "boolean")
                                    return "validateOnly: boolean expected";
                            return null;
                        };
    
                        /**
                         * Creates an UpdateCustomClassRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.speech.v2.UpdateCustomClassRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.speech.v2.UpdateCustomClassRequest} UpdateCustomClassRequest
                         */
                        UpdateCustomClassRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.speech.v2.UpdateCustomClassRequest)
                                return object;
                            var message = new $root.google.cloud.speech.v2.UpdateCustomClassRequest();
                            if (object.customClass != null) {
                                if (typeof object.customClass !== "object")
                                    throw TypeError(".google.cloud.speech.v2.UpdateCustomClassRequest.customClass: object expected");
                                message.customClass = $root.google.cloud.speech.v2.CustomClass.fromObject(object.customClass);
                            }
                            if (object.updateMask != null) {
                                if (typeof object.updateMask !== "object")
                                    throw TypeError(".google.cloud.speech.v2.UpdateCustomClassRequest.updateMask: object expected");
                                message.updateMask = $root.google.protobuf.FieldMask.fromObject(object.updateMask);
                            }
                            if (object.validateOnly != null)
                                message.validateOnly = Boolean(object.validateOnly);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an UpdateCustomClassRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.speech.v2.UpdateCustomClassRequest
                         * @static
                         * @param {google.cloud.speech.v2.UpdateCustomClassRequest} message UpdateCustomClassRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        UpdateCustomClassRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.customClass = null;
                                object.updateMask = null;
                                object.validateOnly = false;
                            }
                            if (message.customClass != null && message.hasOwnProperty("customClass"))
                                object.customClass = $root.google.cloud.speech.v2.CustomClass.toObject(message.customClass, options);
                            if (message.updateMask != null && message.hasOwnProperty("updateMask"))
                                object.updateMask = $root.google.protobuf.FieldMask.toObject(message.updateMask, options);
                            if (message.validateOnly != null && message.hasOwnProperty("validateOnly"))
                                object.validateOnly = message.validateOnly;
                            return object;
                        };
    
                        /**
                         * Converts this UpdateCustomClassRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.speech.v2.UpdateCustomClassRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        UpdateCustomClassRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for UpdateCustomClassRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.speech.v2.UpdateCustomClassRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        UpdateCustomClassRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.speech.v2.UpdateCustomClassRequest";
                        };
    
                        return UpdateCustomClassRequest;
                    })();
    
                    v2.DeleteCustomClassRequest = (function() {
    
                        /**
                         * Properties of a DeleteCustomClassRequest.
                         * @memberof google.cloud.speech.v2
                         * @interface IDeleteCustomClassRequest
                         * @property {string|null} [name] DeleteCustomClassRequest name
                         * @property {boolean|null} [validateOnly] DeleteCustomClassRequest validateOnly
                         * @property {boolean|null} [allowMissing] DeleteCustomClassRequest allowMissing
                         * @property {string|null} [etag] DeleteCustomClassRequest etag
                         */
    
                        /**
                         * Constructs a new DeleteCustomClassRequest.
                         * @memberof google.cloud.speech.v2
                         * @classdesc Represents a DeleteCustomClassRequest.
                         * @implements IDeleteCustomClassRequest
                         * @constructor
                         * @param {google.cloud.speech.v2.IDeleteCustomClassRequest=} [properties] Properties to set
                         */
                        function DeleteCustomClassRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DeleteCustomClassRequest name.
                         * @member {string} name
                         * @memberof google.cloud.speech.v2.DeleteCustomClassRequest
                         * @instance
                         */
                        DeleteCustomClassRequest.prototype.name = "";
    
                        /**
                         * DeleteCustomClassRequest validateOnly.
                         * @member {boolean} validateOnly
                         * @memberof google.cloud.speech.v2.DeleteCustomClassRequest
                         * @instance
                         */
                        DeleteCustomClassRequest.prototype.validateOnly = false;
    
                        /**
                         * DeleteCustomClassRequest allowMissing.
                         * @member {boolean} allowMissing
                         * @memberof google.cloud.speech.v2.DeleteCustomClassRequest
                         * @instance
                         */
                        DeleteCustomClassRequest.prototype.allowMissing = false;
    
                        /**
                         * DeleteCustomClassRequest etag.
                         * @member {string} etag
                         * @memberof google.cloud.speech.v2.DeleteCustomClassRequest
                         * @instance
                         */
                        DeleteCustomClassRequest.prototype.etag = "";
    
                        /**
                         * Creates a new DeleteCustomClassRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.speech.v2.DeleteCustomClassRequest
                         * @static
                         * @param {google.cloud.speech.v2.IDeleteCustomClassRequest=} [properties] Properties to set
                         * @returns {google.cloud.speech.v2.DeleteCustomClassRequest} DeleteCustomClassRequest instance
                         */
                        DeleteCustomClassRequest.create = function create(properties) {
                            return new DeleteCustomClassRequest(properties);
                        };
    
                        /**
                         * Encodes the specified DeleteCustomClassRequest message. Does not implicitly {@link google.cloud.speech.v2.DeleteCustomClassRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.speech.v2.DeleteCustomClassRequest
                         * @static
                         * @param {google.cloud.speech.v2.IDeleteCustomClassRequest} message DeleteCustomClassRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteCustomClassRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.validateOnly != null && Object.hasOwnProperty.call(message, "validateOnly"))
                                writer.uint32(/* id 2, wireType 0 =*/16).bool(message.validateOnly);
                            if (message.etag != null && Object.hasOwnProperty.call(message, "etag"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.etag);
                            if (message.allowMissing != null && Object.hasOwnProperty.call(message, "allowMissing"))
                                writer.uint32(/* id 4, wireType 0 =*/32).bool(message.allowMissing);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DeleteCustomClassRequest message, length delimited. Does not implicitly {@link google.cloud.speech.v2.DeleteCustomClassRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.speech.v2.DeleteCustomClassRequest
                         * @static
                         * @param {google.cloud.speech.v2.IDeleteCustomClassRequest} message DeleteCustomClassRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteCustomClassRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DeleteCustomClassRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.speech.v2.DeleteCustomClassRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.speech.v2.DeleteCustomClassRequest} DeleteCustomClassRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteCustomClassRequest.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.speech.v2.DeleteCustomClassRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.validateOnly = reader.bool();
                                        break;
                                    }
                                case 4: {
                                        message.allowMissing = reader.bool();
                                        break;
                                    }
                                case 3: {
                                        message.etag = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DeleteCustomClassRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.speech.v2.DeleteCustomClassRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.speech.v2.DeleteCustomClassRequest} DeleteCustomClassRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteCustomClassRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DeleteCustomClassRequest message.
                         * @function verify
                         * @memberof google.cloud.speech.v2.DeleteCustomClassRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DeleteCustomClassRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.validateOnly != null && message.hasOwnProperty("validateOnly"))
                                if (typeof message.validateOnly !== "boolean")
                                    return "validateOnly: boolean expected";
                            if (message.allowMissing != null && message.hasOwnProperty("allowMissing"))
                                if (typeof message.allowMissing !== "boolean")
                                    return "allowMissing: boolean expected";
                            if (message.etag != null && message.hasOwnProperty("etag"))
                                if (!$util.isString(message.etag))
                                    return "etag: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a DeleteCustomClassRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.speech.v2.DeleteCustomClassRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.speech.v2.DeleteCustomClassRequest} DeleteCustomClassRequest
                         */
                        DeleteCustomClassRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.speech.v2.DeleteCustomClassRequest)
                                return object;
                            var message = new $root.google.cloud.speech.v2.DeleteCustomClassRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.validateOnly != null)
                                message.validateOnly = Boolean(object.validateOnly);
                            if (object.allowMissing != null)
                                message.allowMissing = Boolean(object.allowMissing);
                            if (object.etag != null)
                                message.etag = String(object.etag);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DeleteCustomClassRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.speech.v2.DeleteCustomClassRequest
                         * @static
                         * @param {google.cloud.speech.v2.DeleteCustomClassRequest} message DeleteCustomClassRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DeleteCustomClassRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.validateOnly = false;
                                object.etag = "";
                                object.allowMissing = false;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.validateOnly != null && message.hasOwnProperty("validateOnly"))
                                object.validateOnly = message.validateOnly;
                            if (message.etag != null && message.hasOwnProperty("etag"))
                                object.etag = message.etag;
                            if (message.allowMissing != null && message.hasOwnProperty("allowMissing"))
                                object.allowMissing = message.allowMissing;
                            return object;
                        };
    
                        /**
                         * Converts this DeleteCustomClassRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.speech.v2.DeleteCustomClassRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DeleteCustomClassRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for DeleteCustomClassRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.speech.v2.DeleteCustomClassRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        DeleteCustomClassRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.speech.v2.DeleteCustomClassRequest";
                        };
    
                        return DeleteCustomClassRequest;
                    })();
    
                    v2.UndeleteCustomClassRequest = (function() {
    
                        /**
                         * Properties of an UndeleteCustomClassRequest.
                         * @memberof google.cloud.speech.v2
                         * @interface IUndeleteCustomClassRequest
                         * @property {string|null} [name] UndeleteCustomClassRequest name
                         * @property {boolean|null} [validateOnly] UndeleteCustomClassRequest validateOnly
                         * @property {string|null} [etag] UndeleteCustomClassRequest etag
                         */
    
                        /**
                         * Constructs a new UndeleteCustomClassRequest.
                         * @memberof google.cloud.speech.v2
                         * @classdesc Represents an UndeleteCustomClassRequest.
                         * @implements IUndeleteCustomClassRequest
                         * @constructor
                         * @param {google.cloud.speech.v2.IUndeleteCustomClassRequest=} [properties] Properties to set
                         */
                        function UndeleteCustomClassRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * UndeleteCustomClassRequest name.
                         * @member {string} name
                         * @memberof google.cloud.speech.v2.UndeleteCustomClassRequest
                         * @instance
                         */
                        UndeleteCustomClassRequest.prototype.name = "";
    
                        /**
                         * UndeleteCustomClassRequest validateOnly.
                         * @member {boolean} validateOnly
                         * @memberof google.cloud.speech.v2.UndeleteCustomClassRequest
                         * @instance
                         */
                        UndeleteCustomClassRequest.prototype.validateOnly = false;
    
                        /**
                         * UndeleteCustomClassRequest etag.
                         * @member {string} etag
                         * @memberof google.cloud.speech.v2.UndeleteCustomClassRequest
                         * @instance
                         */
                        UndeleteCustomClassRequest.prototype.etag = "";
    
                        /**
                         * Creates a new UndeleteCustomClassRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.speech.v2.UndeleteCustomClassRequest
                         * @static
                         * @param {google.cloud.speech.v2.IUndeleteCustomClassRequest=} [properties] Properties to set
                         * @returns {google.cloud.speech.v2.UndeleteCustomClassRequest} UndeleteCustomClassRequest instance
                         */
                        UndeleteCustomClassRequest.create = function create(properties) {
                            return new UndeleteCustomClassRequest(properties);
                        };
    
                        /**
                         * Encodes the specified UndeleteCustomClassRequest message. Does not implicitly {@link google.cloud.speech.v2.UndeleteCustomClassRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.speech.v2.UndeleteCustomClassRequest
                         * @static
                         * @param {google.cloud.speech.v2.IUndeleteCustomClassRequest} message UndeleteCustomClassRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UndeleteCustomClassRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.validateOnly != null && Object.hasOwnProperty.call(message, "validateOnly"))
                                writer.uint32(/* id 3, wireType 0 =*/24).bool(message.validateOnly);
                            if (message.etag != null && Object.hasOwnProperty.call(message, "etag"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.etag);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified UndeleteCustomClassRequest message, length delimited. Does not implicitly {@link google.cloud.speech.v2.UndeleteCustomClassRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.speech.v2.UndeleteCustomClassRequest
                         * @static
                         * @param {google.cloud.speech.v2.IUndeleteCustomClassRequest} message UndeleteCustomClassRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UndeleteCustomClassRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an UndeleteCustomClassRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.speech.v2.UndeleteCustomClassRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.speech.v2.UndeleteCustomClassRequest} UndeleteCustomClassRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UndeleteCustomClassRequest.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.speech.v2.UndeleteCustomClassRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.validateOnly = reader.bool();
                                        break;
                                    }
                                case 4: {
                                        message.etag = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an UndeleteCustomClassRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.speech.v2.UndeleteCustomClassRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.speech.v2.UndeleteCustomClassRequest} UndeleteCustomClassRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UndeleteCustomClassRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an UndeleteCustomClassRequest message.
                         * @function verify
                         * @memberof google.cloud.speech.v2.UndeleteCustomClassRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        UndeleteCustomClassRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.validateOnly != null && message.hasOwnProperty("validateOnly"))
                                if (typeof message.validateOnly !== "boolean")
                                    return "validateOnly: boolean expected";
                            if (message.etag != null && message.hasOwnProperty("etag"))
                                if (!$util.isString(message.etag))
                                    return "etag: string expected";
                            return null;
                        };
    
                        /**
                         * Creates an UndeleteCustomClassRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.speech.v2.UndeleteCustomClassRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.speech.v2.UndeleteCustomClassRequest} UndeleteCustomClassRequest
                         */
                        UndeleteCustomClassRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.speech.v2.UndeleteCustomClassRequest)
                                return object;
                            var message = new $root.google.cloud.speech.v2.UndeleteCustomClassRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.validateOnly != null)
                                message.validateOnly = Boolean(object.validateOnly);
                            if (object.etag != null)
                                message.etag = String(object.etag);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an UndeleteCustomClassRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.speech.v2.UndeleteCustomClassRequest
                         * @static
                         * @param {google.cloud.speech.v2.UndeleteCustomClassRequest} message UndeleteCustomClassRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        UndeleteCustomClassRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.validateOnly = false;
                                object.etag = "";
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.validateOnly != null && message.hasOwnProperty("validateOnly"))
                                object.validateOnly = message.validateOnly;
                            if (message.etag != null && message.hasOwnProperty("etag"))
                                object.etag = message.etag;
                            return object;
                        };
    
                        /**
                         * Converts this UndeleteCustomClassRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.speech.v2.UndeleteCustomClassRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        UndeleteCustomClassRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for UndeleteCustomClassRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.speech.v2.UndeleteCustomClassRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        UndeleteCustomClassRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.speech.v2.UndeleteCustomClassRequest";
                        };
    
                        return UndeleteCustomClassRequest;
                    })();
    
                    v2.CreatePhraseSetRequest = (function() {
    
                        /**
                         * Properties of a CreatePhraseSetRequest.
                         * @memberof google.cloud.speech.v2
                         * @interface ICreatePhraseSetRequest
                         * @property {google.cloud.speech.v2.IPhraseSet|null} [phraseSet] CreatePhraseSetRequest phraseSet
                         * @property {boolean|null} [validateOnly] CreatePhraseSetRequest validateOnly
                         * @property {string|null} [phraseSetId] CreatePhraseSetRequest phraseSetId
                         * @property {string|null} [parent] CreatePhraseSetRequest parent
                         */
    
                        /**
                         * Constructs a new CreatePhraseSetRequest.
                         * @memberof google.cloud.speech.v2
                         * @classdesc Represents a CreatePhraseSetRequest.
                         * @implements ICreatePhraseSetRequest
                         * @constructor
                         * @param {google.cloud.speech.v2.ICreatePhraseSetRequest=} [properties] Properties to set
                         */
                        function CreatePhraseSetRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CreatePhraseSetRequest phraseSet.
                         * @member {google.cloud.speech.v2.IPhraseSet|null|undefined} phraseSet
                         * @memberof google.cloud.speech.v2.CreatePhraseSetRequest
                         * @instance
                         */
                        CreatePhraseSetRequest.prototype.phraseSet = null;
    
                        /**
                         * CreatePhraseSetRequest validateOnly.
                         * @member {boolean} validateOnly
                         * @memberof google.cloud.speech.v2.CreatePhraseSetRequest
                         * @instance
                         */
                        CreatePhraseSetRequest.prototype.validateOnly = false;
    
                        /**
                         * CreatePhraseSetRequest phraseSetId.
                         * @member {string} phraseSetId
                         * @memberof google.cloud.speech.v2.CreatePhraseSetRequest
                         * @instance
                         */
                        CreatePhraseSetRequest.prototype.phraseSetId = "";
    
                        /**
                         * CreatePhraseSetRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.speech.v2.CreatePhraseSetRequest
                         * @instance
                         */
                        CreatePhraseSetRequest.prototype.parent = "";
    
                        /**
                         * Creates a new CreatePhraseSetRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.speech.v2.CreatePhraseSetRequest
                         * @static
                         * @param {google.cloud.speech.v2.ICreatePhraseSetRequest=} [properties] Properties to set
                         * @returns {google.cloud.speech.v2.CreatePhraseSetRequest} CreatePhraseSetRequest instance
                         */
                        CreatePhraseSetRequest.create = function create(properties) {
                            return new CreatePhraseSetRequest(properties);
                        };
    
                        /**
                         * Encodes the specified CreatePhraseSetRequest message. Does not implicitly {@link google.cloud.speech.v2.CreatePhraseSetRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.speech.v2.CreatePhraseSetRequest
                         * @static
                         * @param {google.cloud.speech.v2.ICreatePhraseSetRequest} message CreatePhraseSetRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreatePhraseSetRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.phraseSet != null && Object.hasOwnProperty.call(message, "phraseSet"))
                                $root.google.cloud.speech.v2.PhraseSet.encode(message.phraseSet, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.validateOnly != null && Object.hasOwnProperty.call(message, "validateOnly"))
                                writer.uint32(/* id 2, wireType 0 =*/16).bool(message.validateOnly);
                            if (message.phraseSetId != null && Object.hasOwnProperty.call(message, "phraseSetId"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.phraseSetId);
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.parent);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CreatePhraseSetRequest message, length delimited. Does not implicitly {@link google.cloud.speech.v2.CreatePhraseSetRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.speech.v2.CreatePhraseSetRequest
                         * @static
                         * @param {google.cloud.speech.v2.ICreatePhraseSetRequest} message CreatePhraseSetRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreatePhraseSetRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CreatePhraseSetRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.speech.v2.CreatePhraseSetRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.speech.v2.CreatePhraseSetRequest} CreatePhraseSetRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreatePhraseSetRequest.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.speech.v2.CreatePhraseSetRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        message.phraseSet = $root.google.cloud.speech.v2.PhraseSet.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.validateOnly = reader.bool();
                                        break;
                                    }
                                case 3: {
                                        message.phraseSetId = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CreatePhraseSetRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.speech.v2.CreatePhraseSetRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.speech.v2.CreatePhraseSetRequest} CreatePhraseSetRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreatePhraseSetRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CreatePhraseSetRequest message.
                         * @function verify
                         * @memberof google.cloud.speech.v2.CreatePhraseSetRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CreatePhraseSetRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.phraseSet != null && message.hasOwnProperty("phraseSet")) {
                                var error = $root.google.cloud.speech.v2.PhraseSet.verify(message.phraseSet);
                                if (error)
                                    return "phraseSet." + error;
                            }
                            if (message.validateOnly != null && message.hasOwnProperty("validateOnly"))
                                if (typeof message.validateOnly !== "boolean")
                                    return "validateOnly: boolean expected";
                            if (message.phraseSetId != null && message.hasOwnProperty("phraseSetId"))
                                if (!$util.isString(message.phraseSetId))
                                    return "phraseSetId: string expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a CreatePhraseSetRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.speech.v2.CreatePhraseSetRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.speech.v2.CreatePhraseSetRequest} CreatePhraseSetRequest
                         */
                        CreatePhraseSetRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.speech.v2.CreatePhraseSetRequest)
                                return object;
                            var message = new $root.google.cloud.speech.v2.CreatePhraseSetRequest();
                            if (object.phraseSet != null) {
                                if (typeof object.phraseSet !== "object")
                                    throw TypeError(".google.cloud.speech.v2.CreatePhraseSetRequest.phraseSet: object expected");
                                message.phraseSet = $root.google.cloud.speech.v2.PhraseSet.fromObject(object.phraseSet);
                            }
                            if (object.validateOnly != null)
                                message.validateOnly = Boolean(object.validateOnly);
                            if (object.phraseSetId != null)
                                message.phraseSetId = String(object.phraseSetId);
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CreatePhraseSetRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.speech.v2.CreatePhraseSetRequest
                         * @static
                         * @param {google.cloud.speech.v2.CreatePhraseSetRequest} message CreatePhraseSetRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CreatePhraseSetRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.phraseSet = null;
                                object.validateOnly = false;
                                object.phraseSetId = "";
                                object.parent = "";
                            }
                            if (message.phraseSet != null && message.hasOwnProperty("phraseSet"))
                                object.phraseSet = $root.google.cloud.speech.v2.PhraseSet.toObject(message.phraseSet, options);
                            if (message.validateOnly != null && message.hasOwnProperty("validateOnly"))
                                object.validateOnly = message.validateOnly;
                            if (message.phraseSetId != null && message.hasOwnProperty("phraseSetId"))
                                object.phraseSetId = message.phraseSetId;
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            return object;
                        };
    
                        /**
                         * Converts this CreatePhraseSetRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.speech.v2.CreatePhraseSetRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CreatePhraseSetRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for CreatePhraseSetRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.speech.v2.CreatePhraseSetRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        CreatePhraseSetRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.speech.v2.CreatePhraseSetRequest";
                        };
    
                        return CreatePhraseSetRequest;
                    })();
    
                    v2.ListPhraseSetsRequest = (function() {
    
                        /**
                         * Properties of a ListPhraseSetsRequest.
                         * @memberof google.cloud.speech.v2
                         * @interface IListPhraseSetsRequest
                         * @property {string|null} [parent] ListPhraseSetsRequest parent
                         * @property {number|null} [pageSize] ListPhraseSetsRequest pageSize
                         * @property {string|null} [pageToken] ListPhraseSetsRequest pageToken
                         * @property {boolean|null} [showDeleted] ListPhraseSetsRequest showDeleted
                         */
    
                        /**
                         * Constructs a new ListPhraseSetsRequest.
                         * @memberof google.cloud.speech.v2
                         * @classdesc Represents a ListPhraseSetsRequest.
                         * @implements IListPhraseSetsRequest
                         * @constructor
                         * @param {google.cloud.speech.v2.IListPhraseSetsRequest=} [properties] Properties to set
                         */
                        function ListPhraseSetsRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListPhraseSetsRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.speech.v2.ListPhraseSetsRequest
                         * @instance
                         */
                        ListPhraseSetsRequest.prototype.parent = "";
    
                        /**
                         * ListPhraseSetsRequest pageSize.
                         * @member {number} pageSize
                         * @memberof google.cloud.speech.v2.ListPhraseSetsRequest
                         * @instance
                         */
                        ListPhraseSetsRequest.prototype.pageSize = 0;
    
                        /**
                         * ListPhraseSetsRequest pageToken.
                         * @member {string} pageToken
                         * @memberof google.cloud.speech.v2.ListPhraseSetsRequest
                         * @instance
                         */
                        ListPhraseSetsRequest.prototype.pageToken = "";
    
                        /**
                         * ListPhraseSetsRequest showDeleted.
                         * @member {boolean} showDeleted
                         * @memberof google.cloud.speech.v2.ListPhraseSetsRequest
                         * @instance
                         */
                        ListPhraseSetsRequest.prototype.showDeleted = false;
    
                        /**
                         * Creates a new ListPhraseSetsRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.speech.v2.ListPhraseSetsRequest
                         * @static
                         * @param {google.cloud.speech.v2.IListPhraseSetsRequest=} [properties] Properties to set
                         * @returns {google.cloud.speech.v2.ListPhraseSetsRequest} ListPhraseSetsRequest instance
                         */
                        ListPhraseSetsRequest.create = function create(properties) {
                            return new ListPhraseSetsRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ListPhraseSetsRequest message. Does not implicitly {@link google.cloud.speech.v2.ListPhraseSetsRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.speech.v2.ListPhraseSetsRequest
                         * @static
                         * @param {google.cloud.speech.v2.IListPhraseSetsRequest} message ListPhraseSetsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListPhraseSetsRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.pageSize != null && Object.hasOwnProperty.call(message, "pageSize"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.pageSize);
                            if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.pageToken);
                            if (message.showDeleted != null && Object.hasOwnProperty.call(message, "showDeleted"))
                                writer.uint32(/* id 4, wireType 0 =*/32).bool(message.showDeleted);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListPhraseSetsRequest message, length delimited. Does not implicitly {@link google.cloud.speech.v2.ListPhraseSetsRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.speech.v2.ListPhraseSetsRequest
                         * @static
                         * @param {google.cloud.speech.v2.IListPhraseSetsRequest} message ListPhraseSetsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListPhraseSetsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListPhraseSetsRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.speech.v2.ListPhraseSetsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.speech.v2.ListPhraseSetsRequest} ListPhraseSetsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListPhraseSetsRequest.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.speech.v2.ListPhraseSetsRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.pageSize = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        message.pageToken = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.showDeleted = reader.bool();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListPhraseSetsRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.speech.v2.ListPhraseSetsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.speech.v2.ListPhraseSetsRequest} ListPhraseSetsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListPhraseSetsRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListPhraseSetsRequest message.
                         * @function verify
                         * @memberof google.cloud.speech.v2.ListPhraseSetsRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListPhraseSetsRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                if (!$util.isInteger(message.pageSize))
                                    return "pageSize: integer expected";
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                if (!$util.isString(message.pageToken))
                                    return "pageToken: string expected";
                            if (message.showDeleted != null && message.hasOwnProperty("showDeleted"))
                                if (typeof message.showDeleted !== "boolean")
                                    return "showDeleted: boolean expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListPhraseSetsRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.speech.v2.ListPhraseSetsRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.speech.v2.ListPhraseSetsRequest} ListPhraseSetsRequest
                         */
                        ListPhraseSetsRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.speech.v2.ListPhraseSetsRequest)
                                return object;
                            var message = new $root.google.cloud.speech.v2.ListPhraseSetsRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.pageSize != null)
                                message.pageSize = object.pageSize | 0;
                            if (object.pageToken != null)
                                message.pageToken = String(object.pageToken);
                            if (object.showDeleted != null)
                                message.showDeleted = Boolean(object.showDeleted);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListPhraseSetsRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.speech.v2.ListPhraseSetsRequest
                         * @static
                         * @param {google.cloud.speech.v2.ListPhraseSetsRequest} message ListPhraseSetsRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListPhraseSetsRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.pageSize = 0;
                                object.pageToken = "";
                                object.showDeleted = false;
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                object.pageSize = message.pageSize;
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                object.pageToken = message.pageToken;
                            if (message.showDeleted != null && message.hasOwnProperty("showDeleted"))
                                object.showDeleted = message.showDeleted;
                            return object;
                        };
    
                        /**
                         * Converts this ListPhraseSetsRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.speech.v2.ListPhraseSetsRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListPhraseSetsRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListPhraseSetsRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.speech.v2.ListPhraseSetsRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListPhraseSetsRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.speech.v2.ListPhraseSetsRequest";
                        };
    
                        return ListPhraseSetsRequest;
                    })();
    
                    v2.ListPhraseSetsResponse = (function() {
    
                        /**
                         * Properties of a ListPhraseSetsResponse.
                         * @memberof google.cloud.speech.v2
                         * @interface IListPhraseSetsResponse
                         * @property {Array.<google.cloud.speech.v2.IPhraseSet>|null} [phraseSets] ListPhraseSetsResponse phraseSets
                         * @property {string|null} [nextPageToken] ListPhraseSetsResponse nextPageToken
                         */
    
                        /**
                         * Constructs a new ListPhraseSetsResponse.
                         * @memberof google.cloud.speech.v2
                         * @classdesc Represents a ListPhraseSetsResponse.
                         * @implements IListPhraseSetsResponse
                         * @constructor
                         * @param {google.cloud.speech.v2.IListPhraseSetsResponse=} [properties] Properties to set
                         */
                        function ListPhraseSetsResponse(properties) {
                            this.phraseSets = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListPhraseSetsResponse phraseSets.
                         * @member {Array.<google.cloud.speech.v2.IPhraseSet>} phraseSets
                         * @memberof google.cloud.speech.v2.ListPhraseSetsResponse
                         * @instance
                         */
                        ListPhraseSetsResponse.prototype.phraseSets = $util.emptyArray;
    
                        /**
                         * ListPhraseSetsResponse nextPageToken.
                         * @member {string} nextPageToken
                         * @memberof google.cloud.speech.v2.ListPhraseSetsResponse
                         * @instance
                         */
                        ListPhraseSetsResponse.prototype.nextPageToken = "";
    
                        /**
                         * Creates a new ListPhraseSetsResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.speech.v2.ListPhraseSetsResponse
                         * @static
                         * @param {google.cloud.speech.v2.IListPhraseSetsResponse=} [properties] Properties to set
                         * @returns {google.cloud.speech.v2.ListPhraseSetsResponse} ListPhraseSetsResponse instance
                         */
                        ListPhraseSetsResponse.create = function create(properties) {
                            return new ListPhraseSetsResponse(properties);
                        };
    
                        /**
                         * Encodes the specified ListPhraseSetsResponse message. Does not implicitly {@link google.cloud.speech.v2.ListPhraseSetsResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.speech.v2.ListPhraseSetsResponse
                         * @static
                         * @param {google.cloud.speech.v2.IListPhraseSetsResponse} message ListPhraseSetsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListPhraseSetsResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.phraseSets != null && message.phraseSets.length)
                                for (var i = 0; i < message.phraseSets.length; ++i)
                                    $root.google.cloud.speech.v2.PhraseSet.encode(message.phraseSets[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListPhraseSetsResponse message, length delimited. Does not implicitly {@link google.cloud.speech.v2.ListPhraseSetsResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.speech.v2.ListPhraseSetsResponse
                         * @static
                         * @param {google.cloud.speech.v2.IListPhraseSetsResponse} message ListPhraseSetsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListPhraseSetsResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListPhraseSetsResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.speech.v2.ListPhraseSetsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.speech.v2.ListPhraseSetsResponse} ListPhraseSetsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListPhraseSetsResponse.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.speech.v2.ListPhraseSetsResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.phraseSets && message.phraseSets.length))
                                            message.phraseSets = [];
                                        message.phraseSets.push($root.google.cloud.speech.v2.PhraseSet.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 2: {
                                        message.nextPageToken = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListPhraseSetsResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.speech.v2.ListPhraseSetsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.speech.v2.ListPhraseSetsResponse} ListPhraseSetsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListPhraseSetsResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListPhraseSetsResponse message.
                         * @function verify
                         * @memberof google.cloud.speech.v2.ListPhraseSetsResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListPhraseSetsResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.phraseSets != null && message.hasOwnProperty("phraseSets")) {
                                if (!Array.isArray(message.phraseSets))
                                    return "phraseSets: array expected";
                                for (var i = 0; i < message.phraseSets.length; ++i) {
                                    var error = $root.google.cloud.speech.v2.PhraseSet.verify(message.phraseSets[i]);
                                    if (error)
                                        return "phraseSets." + error;
                                }
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                if (!$util.isString(message.nextPageToken))
                                    return "nextPageToken: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListPhraseSetsResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.speech.v2.ListPhraseSetsResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.speech.v2.ListPhraseSetsResponse} ListPhraseSetsResponse
                         */
                        ListPhraseSetsResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.speech.v2.ListPhraseSetsResponse)
                                return object;
                            var message = new $root.google.cloud.speech.v2.ListPhraseSetsResponse();
                            if (object.phraseSets) {
                                if (!Array.isArray(object.phraseSets))
                                    throw TypeError(".google.cloud.speech.v2.ListPhraseSetsResponse.phraseSets: array expected");
                                message.phraseSets = [];
                                for (var i = 0; i < object.phraseSets.length; ++i) {
                                    if (typeof object.phraseSets[i] !== "object")
                                        throw TypeError(".google.cloud.speech.v2.ListPhraseSetsResponse.phraseSets: object expected");
                                    message.phraseSets[i] = $root.google.cloud.speech.v2.PhraseSet.fromObject(object.phraseSets[i]);
                                }
                            }
                            if (object.nextPageToken != null)
                                message.nextPageToken = String(object.nextPageToken);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListPhraseSetsResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.speech.v2.ListPhraseSetsResponse
                         * @static
                         * @param {google.cloud.speech.v2.ListPhraseSetsResponse} message ListPhraseSetsResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListPhraseSetsResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.phraseSets = [];
                            if (options.defaults)
                                object.nextPageToken = "";
                            if (message.phraseSets && message.phraseSets.length) {
                                object.phraseSets = [];
                                for (var j = 0; j < message.phraseSets.length; ++j)
                                    object.phraseSets[j] = $root.google.cloud.speech.v2.PhraseSet.toObject(message.phraseSets[j], options);
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                object.nextPageToken = message.nextPageToken;
                            return object;
                        };
    
                        /**
                         * Converts this ListPhraseSetsResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.speech.v2.ListPhraseSetsResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListPhraseSetsResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListPhraseSetsResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.speech.v2.ListPhraseSetsResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListPhraseSetsResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.speech.v2.ListPhraseSetsResponse";
                        };
    
                        return ListPhraseSetsResponse;
                    })();
    
                    v2.GetPhraseSetRequest = (function() {
    
                        /**
                         * Properties of a GetPhraseSetRequest.
                         * @memberof google.cloud.speech.v2
                         * @interface IGetPhraseSetRequest
                         * @property {string|null} [name] GetPhraseSetRequest name
                         */
    
                        /**
                         * Constructs a new GetPhraseSetRequest.
                         * @memberof google.cloud.speech.v2
                         * @classdesc Represents a GetPhraseSetRequest.
                         * @implements IGetPhraseSetRequest
                         * @constructor
                         * @param {google.cloud.speech.v2.IGetPhraseSetRequest=} [properties] Properties to set
                         */
                        function GetPhraseSetRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GetPhraseSetRequest name.
                         * @member {string} name
                         * @memberof google.cloud.speech.v2.GetPhraseSetRequest
                         * @instance
                         */
                        GetPhraseSetRequest.prototype.name = "";
    
                        /**
                         * Creates a new GetPhraseSetRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.speech.v2.GetPhraseSetRequest
                         * @static
                         * @param {google.cloud.speech.v2.IGetPhraseSetRequest=} [properties] Properties to set
                         * @returns {google.cloud.speech.v2.GetPhraseSetRequest} GetPhraseSetRequest instance
                         */
                        GetPhraseSetRequest.create = function create(properties) {
                            return new GetPhraseSetRequest(properties);
                        };
    
                        /**
                         * Encodes the specified GetPhraseSetRequest message. Does not implicitly {@link google.cloud.speech.v2.GetPhraseSetRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.speech.v2.GetPhraseSetRequest
                         * @static
                         * @param {google.cloud.speech.v2.IGetPhraseSetRequest} message GetPhraseSetRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetPhraseSetRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GetPhraseSetRequest message, length delimited. Does not implicitly {@link google.cloud.speech.v2.GetPhraseSetRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.speech.v2.GetPhraseSetRequest
                         * @static
                         * @param {google.cloud.speech.v2.IGetPhraseSetRequest} message GetPhraseSetRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetPhraseSetRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GetPhraseSetRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.speech.v2.GetPhraseSetRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.speech.v2.GetPhraseSetRequest} GetPhraseSetRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetPhraseSetRequest.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.speech.v2.GetPhraseSetRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GetPhraseSetRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.speech.v2.GetPhraseSetRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.speech.v2.GetPhraseSetRequest} GetPhraseSetRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetPhraseSetRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GetPhraseSetRequest message.
                         * @function verify
                         * @memberof google.cloud.speech.v2.GetPhraseSetRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GetPhraseSetRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a GetPhraseSetRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.speech.v2.GetPhraseSetRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.speech.v2.GetPhraseSetRequest} GetPhraseSetRequest
                         */
                        GetPhraseSetRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.speech.v2.GetPhraseSetRequest)
                                return object;
                            var message = new $root.google.cloud.speech.v2.GetPhraseSetRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GetPhraseSetRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.speech.v2.GetPhraseSetRequest
                         * @static
                         * @param {google.cloud.speech.v2.GetPhraseSetRequest} message GetPhraseSetRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GetPhraseSetRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this GetPhraseSetRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.speech.v2.GetPhraseSetRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GetPhraseSetRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GetPhraseSetRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.speech.v2.GetPhraseSetRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GetPhraseSetRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.speech.v2.GetPhraseSetRequest";
                        };
    
                        return GetPhraseSetRequest;
                    })();
    
                    v2.UpdatePhraseSetRequest = (function() {
    
                        /**
                         * Properties of an UpdatePhraseSetRequest.
                         * @memberof google.cloud.speech.v2
                         * @interface IUpdatePhraseSetRequest
                         * @property {google.cloud.speech.v2.IPhraseSet|null} [phraseSet] UpdatePhraseSetRequest phraseSet
                         * @property {google.protobuf.IFieldMask|null} [updateMask] UpdatePhraseSetRequest updateMask
                         * @property {boolean|null} [validateOnly] UpdatePhraseSetRequest validateOnly
                         */
    
                        /**
                         * Constructs a new UpdatePhraseSetRequest.
                         * @memberof google.cloud.speech.v2
                         * @classdesc Represents an UpdatePhraseSetRequest.
                         * @implements IUpdatePhraseSetRequest
                         * @constructor
                         * @param {google.cloud.speech.v2.IUpdatePhraseSetRequest=} [properties] Properties to set
                         */
                        function UpdatePhraseSetRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * UpdatePhraseSetRequest phraseSet.
                         * @member {google.cloud.speech.v2.IPhraseSet|null|undefined} phraseSet
                         * @memberof google.cloud.speech.v2.UpdatePhraseSetRequest
                         * @instance
                         */
                        UpdatePhraseSetRequest.prototype.phraseSet = null;
    
                        /**
                         * UpdatePhraseSetRequest updateMask.
                         * @member {google.protobuf.IFieldMask|null|undefined} updateMask
                         * @memberof google.cloud.speech.v2.UpdatePhraseSetRequest
                         * @instance
                         */
                        UpdatePhraseSetRequest.prototype.updateMask = null;
    
                        /**
                         * UpdatePhraseSetRequest validateOnly.
                         * @member {boolean} validateOnly
                         * @memberof google.cloud.speech.v2.UpdatePhraseSetRequest
                         * @instance
                         */
                        UpdatePhraseSetRequest.prototype.validateOnly = false;
    
                        /**
                         * Creates a new UpdatePhraseSetRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.speech.v2.UpdatePhraseSetRequest
                         * @static
                         * @param {google.cloud.speech.v2.IUpdatePhraseSetRequest=} [properties] Properties to set
                         * @returns {google.cloud.speech.v2.UpdatePhraseSetRequest} UpdatePhraseSetRequest instance
                         */
                        UpdatePhraseSetRequest.create = function create(properties) {
                            return new UpdatePhraseSetRequest(properties);
                        };
    
                        /**
                         * Encodes the specified UpdatePhraseSetRequest message. Does not implicitly {@link google.cloud.speech.v2.UpdatePhraseSetRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.speech.v2.UpdatePhraseSetRequest
                         * @static
                         * @param {google.cloud.speech.v2.IUpdatePhraseSetRequest} message UpdatePhraseSetRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdatePhraseSetRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.phraseSet != null && Object.hasOwnProperty.call(message, "phraseSet"))
                                $root.google.cloud.speech.v2.PhraseSet.encode(message.phraseSet, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.updateMask != null && Object.hasOwnProperty.call(message, "updateMask"))
                                $root.google.protobuf.FieldMask.encode(message.updateMask, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.validateOnly != null && Object.hasOwnProperty.call(message, "validateOnly"))
                                writer.uint32(/* id 4, wireType 0 =*/32).bool(message.validateOnly);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified UpdatePhraseSetRequest message, length delimited. Does not implicitly {@link google.cloud.speech.v2.UpdatePhraseSetRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.speech.v2.UpdatePhraseSetRequest
                         * @static
                         * @param {google.cloud.speech.v2.IUpdatePhraseSetRequest} message UpdatePhraseSetRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdatePhraseSetRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an UpdatePhraseSetRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.speech.v2.UpdatePhraseSetRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.speech.v2.UpdatePhraseSetRequest} UpdatePhraseSetRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdatePhraseSetRequest.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.speech.v2.UpdatePhraseSetRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        message.phraseSet = $root.google.cloud.speech.v2.PhraseSet.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.updateMask = $root.google.protobuf.FieldMask.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        message.validateOnly = reader.bool();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an UpdatePhraseSetRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.speech.v2.UpdatePhraseSetRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.speech.v2.UpdatePhraseSetRequest} UpdatePhraseSetRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdatePhraseSetRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an UpdatePhraseSetRequest message.
                         * @function verify
                         * @memberof google.cloud.speech.v2.UpdatePhraseSetRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        UpdatePhraseSetRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.phraseSet != null && message.hasOwnProperty("phraseSet")) {
                                var error = $root.google.cloud.speech.v2.PhraseSet.verify(message.phraseSet);
                                if (error)
                                    return "phraseSet." + error;
                            }
                            if (message.updateMask != null && message.hasOwnProperty("updateMask")) {
                                var error = $root.google.protobuf.FieldMask.verify(message.updateMask);
                                if (error)
                                    return "updateMask." + error;
                            }
                            if (message.validateOnly != null && message.hasOwnProperty("validateOnly"))
                                if (typeof message.validateOnly !== "boolean")
                                    return "validateOnly: boolean expected";
                            return null;
                        };
    
                        /**
                         * Creates an UpdatePhraseSetRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.speech.v2.UpdatePhraseSetRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.speech.v2.UpdatePhraseSetRequest} UpdatePhraseSetRequest
                         */
                        UpdatePhraseSetRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.speech.v2.UpdatePhraseSetRequest)
                                return object;
                            var message = new $root.google.cloud.speech.v2.UpdatePhraseSetRequest();
                            if (object.phraseSet != null) {
                                if (typeof object.phraseSet !== "object")
                                    throw TypeError(".google.cloud.speech.v2.UpdatePhraseSetRequest.phraseSet: object expected");
                                message.phraseSet = $root.google.cloud.speech.v2.PhraseSet.fromObject(object.phraseSet);
                            }
                            if (object.updateMask != null) {
                                if (typeof object.updateMask !== "object")
                                    throw TypeError(".google.cloud.speech.v2.UpdatePhraseSetRequest.updateMask: object expected");
                                message.updateMask = $root.google.protobuf.FieldMask.fromObject(object.updateMask);
                            }
                            if (object.validateOnly != null)
                                message.validateOnly = Boolean(object.validateOnly);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an UpdatePhraseSetRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.speech.v2.UpdatePhraseSetRequest
                         * @static
                         * @param {google.cloud.speech.v2.UpdatePhraseSetRequest} message UpdatePhraseSetRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        UpdatePhraseSetRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.phraseSet = null;
                                object.updateMask = null;
                                object.validateOnly = false;
                            }
                            if (message.phraseSet != null && message.hasOwnProperty("phraseSet"))
                                object.phraseSet = $root.google.cloud.speech.v2.PhraseSet.toObject(message.phraseSet, options);
                            if (message.updateMask != null && message.hasOwnProperty("updateMask"))
                                object.updateMask = $root.google.protobuf.FieldMask.toObject(message.updateMask, options);
                            if (message.validateOnly != null && message.hasOwnProperty("validateOnly"))
                                object.validateOnly = message.validateOnly;
                            return object;
                        };
    
                        /**
                         * Converts this UpdatePhraseSetRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.speech.v2.UpdatePhraseSetRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        UpdatePhraseSetRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for UpdatePhraseSetRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.speech.v2.UpdatePhraseSetRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        UpdatePhraseSetRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.speech.v2.UpdatePhraseSetRequest";
                        };
    
                        return UpdatePhraseSetRequest;
                    })();
    
                    v2.DeletePhraseSetRequest = (function() {
    
                        /**
                         * Properties of a DeletePhraseSetRequest.
                         * @memberof google.cloud.speech.v2
                         * @interface IDeletePhraseSetRequest
                         * @property {string|null} [name] DeletePhraseSetRequest name
                         * @property {boolean|null} [validateOnly] DeletePhraseSetRequest validateOnly
                         * @property {boolean|null} [allowMissing] DeletePhraseSetRequest allowMissing
                         * @property {string|null} [etag] DeletePhraseSetRequest etag
                         */
    
                        /**
                         * Constructs a new DeletePhraseSetRequest.
                         * @memberof google.cloud.speech.v2
                         * @classdesc Represents a DeletePhraseSetRequest.
                         * @implements IDeletePhraseSetRequest
                         * @constructor
                         * @param {google.cloud.speech.v2.IDeletePhraseSetRequest=} [properties] Properties to set
                         */
                        function DeletePhraseSetRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DeletePhraseSetRequest name.
                         * @member {string} name
                         * @memberof google.cloud.speech.v2.DeletePhraseSetRequest
                         * @instance
                         */
                        DeletePhraseSetRequest.prototype.name = "";
    
                        /**
                         * DeletePhraseSetRequest validateOnly.
                         * @member {boolean} validateOnly
                         * @memberof google.cloud.speech.v2.DeletePhraseSetRequest
                         * @instance
                         */
                        DeletePhraseSetRequest.prototype.validateOnly = false;
    
                        /**
                         * DeletePhraseSetRequest allowMissing.
                         * @member {boolean} allowMissing
                         * @memberof google.cloud.speech.v2.DeletePhraseSetRequest
                         * @instance
                         */
                        DeletePhraseSetRequest.prototype.allowMissing = false;
    
                        /**
                         * DeletePhraseSetRequest etag.
                         * @member {string} etag
                         * @memberof google.cloud.speech.v2.DeletePhraseSetRequest
                         * @instance
                         */
                        DeletePhraseSetRequest.prototype.etag = "";
    
                        /**
                         * Creates a new DeletePhraseSetRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.speech.v2.DeletePhraseSetRequest
                         * @static
                         * @param {google.cloud.speech.v2.IDeletePhraseSetRequest=} [properties] Properties to set
                         * @returns {google.cloud.speech.v2.DeletePhraseSetRequest} DeletePhraseSetRequest instance
                         */
                        DeletePhraseSetRequest.create = function create(properties) {
                            return new DeletePhraseSetRequest(properties);
                        };
    
                        /**
                         * Encodes the specified DeletePhraseSetRequest message. Does not implicitly {@link google.cloud.speech.v2.DeletePhraseSetRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.speech.v2.DeletePhraseSetRequest
                         * @static
                         * @param {google.cloud.speech.v2.IDeletePhraseSetRequest} message DeletePhraseSetRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeletePhraseSetRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.validateOnly != null && Object.hasOwnProperty.call(message, "validateOnly"))
                                writer.uint32(/* id 2, wireType 0 =*/16).bool(message.validateOnly);
                            if (message.etag != null && Object.hasOwnProperty.call(message, "etag"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.etag);
                            if (message.allowMissing != null && Object.hasOwnProperty.call(message, "allowMissing"))
                                writer.uint32(/* id 4, wireType 0 =*/32).bool(message.allowMissing);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DeletePhraseSetRequest message, length delimited. Does not implicitly {@link google.cloud.speech.v2.DeletePhraseSetRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.speech.v2.DeletePhraseSetRequest
                         * @static
                         * @param {google.cloud.speech.v2.IDeletePhraseSetRequest} message DeletePhraseSetRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeletePhraseSetRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DeletePhraseSetRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.speech.v2.DeletePhraseSetRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.speech.v2.DeletePhraseSetRequest} DeletePhraseSetRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeletePhraseSetRequest.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.speech.v2.DeletePhraseSetRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.validateOnly = reader.bool();
                                        break;
                                    }
                                case 4: {
                                        message.allowMissing = reader.bool();
                                        break;
                                    }
                                case 3: {
                                        message.etag = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DeletePhraseSetRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.speech.v2.DeletePhraseSetRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.speech.v2.DeletePhraseSetRequest} DeletePhraseSetRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeletePhraseSetRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DeletePhraseSetRequest message.
                         * @function verify
                         * @memberof google.cloud.speech.v2.DeletePhraseSetRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DeletePhraseSetRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.validateOnly != null && message.hasOwnProperty("validateOnly"))
                                if (typeof message.validateOnly !== "boolean")
                                    return "validateOnly: boolean expected";
                            if (message.allowMissing != null && message.hasOwnProperty("allowMissing"))
                                if (typeof message.allowMissing !== "boolean")
                                    return "allowMissing: boolean expected";
                            if (message.etag != null && message.hasOwnProperty("etag"))
                                if (!$util.isString(message.etag))
                                    return "etag: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a DeletePhraseSetRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.speech.v2.DeletePhraseSetRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.speech.v2.DeletePhraseSetRequest} DeletePhraseSetRequest
                         */
                        DeletePhraseSetRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.speech.v2.DeletePhraseSetRequest)
                                return object;
                            var message = new $root.google.cloud.speech.v2.DeletePhraseSetRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.validateOnly != null)
                                message.validateOnly = Boolean(object.validateOnly);
                            if (object.allowMissing != null)
                                message.allowMissing = Boolean(object.allowMissing);
                            if (object.etag != null)
                                message.etag = String(object.etag);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DeletePhraseSetRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.speech.v2.DeletePhraseSetRequest
                         * @static
                         * @param {google.cloud.speech.v2.DeletePhraseSetRequest} message DeletePhraseSetRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DeletePhraseSetRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.validateOnly = false;
                                object.etag = "";
                                object.allowMissing = false;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.validateOnly != null && message.hasOwnProperty("validateOnly"))
                                object.validateOnly = message.validateOnly;
                            if (message.etag != null && message.hasOwnProperty("etag"))
                                object.etag = message.etag;
                            if (message.allowMissing != null && message.hasOwnProperty("allowMissing"))
                                object.allowMissing = message.allowMissing;
                            return object;
                        };
    
                        /**
                         * Converts this DeletePhraseSetRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.speech.v2.DeletePhraseSetRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DeletePhraseSetRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for DeletePhraseSetRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.speech.v2.DeletePhraseSetRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        DeletePhraseSetRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.speech.v2.DeletePhraseSetRequest";
                        };
    
                        return DeletePhraseSetRequest;
                    })();
    
                    v2.UndeletePhraseSetRequest = (function() {
    
                        /**
                         * Properties of an UndeletePhraseSetRequest.
                         * @memberof google.cloud.speech.v2
                         * @interface IUndeletePhraseSetRequest
                         * @property {string|null} [name] UndeletePhraseSetRequest name
                         * @property {boolean|null} [validateOnly] UndeletePhraseSetRequest validateOnly
                         * @property {string|null} [etag] UndeletePhraseSetRequest etag
                         */
    
                        /**
                         * Constructs a new UndeletePhraseSetRequest.
                         * @memberof google.cloud.speech.v2
                         * @classdesc Represents an UndeletePhraseSetRequest.
                         * @implements IUndeletePhraseSetRequest
                         * @constructor
                         * @param {google.cloud.speech.v2.IUndeletePhraseSetRequest=} [properties] Properties to set
                         */
                        function UndeletePhraseSetRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * UndeletePhraseSetRequest name.
                         * @member {string} name
                         * @memberof google.cloud.speech.v2.UndeletePhraseSetRequest
                         * @instance
                         */
                        UndeletePhraseSetRequest.prototype.name = "";
    
                        /**
                         * UndeletePhraseSetRequest validateOnly.
                         * @member {boolean} validateOnly
                         * @memberof google.cloud.speech.v2.UndeletePhraseSetRequest
                         * @instance
                         */
                        UndeletePhraseSetRequest.prototype.validateOnly = false;
    
                        /**
                         * UndeletePhraseSetRequest etag.
                         * @member {string} etag
                         * @memberof google.cloud.speech.v2.UndeletePhraseSetRequest
                         * @instance
                         */
                        UndeletePhraseSetRequest.prototype.etag = "";
    
                        /**
                         * Creates a new UndeletePhraseSetRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.speech.v2.UndeletePhraseSetRequest
                         * @static
                         * @param {google.cloud.speech.v2.IUndeletePhraseSetRequest=} [properties] Properties to set
                         * @returns {google.cloud.speech.v2.UndeletePhraseSetRequest} UndeletePhraseSetRequest instance
                         */
                        UndeletePhraseSetRequest.create = function create(properties) {
                            return new UndeletePhraseSetRequest(properties);
                        };
    
                        /**
                         * Encodes the specified UndeletePhraseSetRequest message. Does not implicitly {@link google.cloud.speech.v2.UndeletePhraseSetRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.speech.v2.UndeletePhraseSetRequest
                         * @static
                         * @param {google.cloud.speech.v2.IUndeletePhraseSetRequest} message UndeletePhraseSetRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UndeletePhraseSetRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.validateOnly != null && Object.hasOwnProperty.call(message, "validateOnly"))
                                writer.uint32(/* id 3, wireType 0 =*/24).bool(message.validateOnly);
                            if (message.etag != null && Object.hasOwnProperty.call(message, "etag"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.etag);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified UndeletePhraseSetRequest message, length delimited. Does not implicitly {@link google.cloud.speech.v2.UndeletePhraseSetRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.speech.v2.UndeletePhraseSetRequest
                         * @static
                         * @param {google.cloud.speech.v2.IUndeletePhraseSetRequest} message UndeletePhraseSetRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UndeletePhraseSetRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an UndeletePhraseSetRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.speech.v2.UndeletePhraseSetRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.speech.v2.UndeletePhraseSetRequest} UndeletePhraseSetRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UndeletePhraseSetRequest.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.speech.v2.UndeletePhraseSetRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.validateOnly = reader.bool();
                                        break;
                                    }
                                case 4: {
                                        message.etag = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an UndeletePhraseSetRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.speech.v2.UndeletePhraseSetRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.speech.v2.UndeletePhraseSetRequest} UndeletePhraseSetRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UndeletePhraseSetRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an UndeletePhraseSetRequest message.
                         * @function verify
                         * @memberof google.cloud.speech.v2.UndeletePhraseSetRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        UndeletePhraseSetRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.validateOnly != null && message.hasOwnProperty("validateOnly"))
                                if (typeof message.validateOnly !== "boolean")
                                    return "validateOnly: boolean expected";
                            if (message.etag != null && message.hasOwnProperty("etag"))
                                if (!$util.isString(message.etag))
                                    return "etag: string expected";
                            return null;
                        };
    
                        /**
                         * Creates an UndeletePhraseSetRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.speech.v2.UndeletePhraseSetRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.speech.v2.UndeletePhraseSetRequest} UndeletePhraseSetRequest
                         */
                        UndeletePhraseSetRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.speech.v2.UndeletePhraseSetRequest)
                                return object;
                            var message = new $root.google.cloud.speech.v2.UndeletePhraseSetRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.validateOnly != null)
                                message.validateOnly = Boolean(object.validateOnly);
                            if (object.etag != null)
                                message.etag = String(object.etag);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an UndeletePhraseSetRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.speech.v2.UndeletePhraseSetRequest
                         * @static
                         * @param {google.cloud.speech.v2.UndeletePhraseSetRequest} message UndeletePhraseSetRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        UndeletePhraseSetRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.validateOnly = false;
                                object.etag = "";
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.validateOnly != null && message.hasOwnProperty("validateOnly"))
                                object.validateOnly = message.validateOnly;
                            if (message.etag != null && message.hasOwnProperty("etag"))
                                object.etag = message.etag;
                            return object;
                        };
    
                        /**
                         * Converts this UndeletePhraseSetRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.speech.v2.UndeletePhraseSetRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        UndeletePhraseSetRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for UndeletePhraseSetRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.speech.v2.UndeletePhraseSetRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        UndeletePhraseSetRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.speech.v2.UndeletePhraseSetRequest";
                        };
    
                        return UndeletePhraseSetRequest;
                    })();
    
                    v2.ModelFeature = (function() {
    
                        /**
                         * Properties of a ModelFeature.
                         * @memberof google.cloud.speech.v2
                         * @interface IModelFeature
                         * @property {string|null} [feature] ModelFeature feature
                         * @property {string|null} [releaseState] ModelFeature releaseState
                         */
    
                        /**
                         * Constructs a new ModelFeature.
                         * @memberof google.cloud.speech.v2
                         * @classdesc Represents a ModelFeature.
                         * @implements IModelFeature
                         * @constructor
                         * @param {google.cloud.speech.v2.IModelFeature=} [properties] Properties to set
                         */
                        function ModelFeature(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ModelFeature feature.
                         * @member {string} feature
                         * @memberof google.cloud.speech.v2.ModelFeature
                         * @instance
                         */
                        ModelFeature.prototype.feature = "";
    
                        /**
                         * ModelFeature releaseState.
                         * @member {string} releaseState
                         * @memberof google.cloud.speech.v2.ModelFeature
                         * @instance
                         */
                        ModelFeature.prototype.releaseState = "";
    
                        /**
                         * Creates a new ModelFeature instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.speech.v2.ModelFeature
                         * @static
                         * @param {google.cloud.speech.v2.IModelFeature=} [properties] Properties to set
                         * @returns {google.cloud.speech.v2.ModelFeature} ModelFeature instance
                         */
                        ModelFeature.create = function create(properties) {
                            return new ModelFeature(properties);
                        };
    
                        /**
                         * Encodes the specified ModelFeature message. Does not implicitly {@link google.cloud.speech.v2.ModelFeature.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.speech.v2.ModelFeature
                         * @static
                         * @param {google.cloud.speech.v2.IModelFeature} message ModelFeature message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ModelFeature.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.feature != null && Object.hasOwnProperty.call(message, "feature"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.feature);
                            if (message.releaseState != null && Object.hasOwnProperty.call(message, "releaseState"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.releaseState);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ModelFeature message, length delimited. Does not implicitly {@link google.cloud.speech.v2.ModelFeature.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.speech.v2.ModelFeature
                         * @static
                         * @param {google.cloud.speech.v2.IModelFeature} message ModelFeature message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ModelFeature.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ModelFeature message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.speech.v2.ModelFeature
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.speech.v2.ModelFeature} ModelFeature
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ModelFeature.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.speech.v2.ModelFeature();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        message.feature = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.releaseState = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ModelFeature message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.speech.v2.ModelFeature
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.speech.v2.ModelFeature} ModelFeature
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ModelFeature.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ModelFeature message.
                         * @function verify
                         * @memberof google.cloud.speech.v2.ModelFeature
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ModelFeature.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.feature != null && message.hasOwnProperty("feature"))
                                if (!$util.isString(message.feature))
                                    return "feature: string expected";
                            if (message.releaseState != null && message.hasOwnProperty("releaseState"))
                                if (!$util.isString(message.releaseState))
                                    return "releaseState: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ModelFeature message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.speech.v2.ModelFeature
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.speech.v2.ModelFeature} ModelFeature
                         */
                        ModelFeature.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.speech.v2.ModelFeature)
                                return object;
                            var message = new $root.google.cloud.speech.v2.ModelFeature();
                            if (object.feature != null)
                                message.feature = String(object.feature);
                            if (object.releaseState != null)
                                message.releaseState = String(object.releaseState);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ModelFeature message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.speech.v2.ModelFeature
                         * @static
                         * @param {google.cloud.speech.v2.ModelFeature} message ModelFeature
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ModelFeature.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.feature = "";
                                object.releaseState = "";
                            }
                            if (message.feature != null && message.hasOwnProperty("feature"))
                                object.feature = message.feature;
                            if (message.releaseState != null && message.hasOwnProperty("releaseState"))
                                object.releaseState = message.releaseState;
                            return object;
                        };
    
                        /**
                         * Converts this ModelFeature to JSON.
                         * @function toJSON
                         * @memberof google.cloud.speech.v2.ModelFeature
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ModelFeature.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ModelFeature
                         * @function getTypeUrl
                         * @memberof google.cloud.speech.v2.ModelFeature
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ModelFeature.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.speech.v2.ModelFeature";
                        };
    
                        return ModelFeature;
                    })();
    
                    v2.ModelFeatures = (function() {
    
                        /**
                         * Properties of a ModelFeatures.
                         * @memberof google.cloud.speech.v2
                         * @interface IModelFeatures
                         * @property {Array.<google.cloud.speech.v2.IModelFeature>|null} [modelFeature] ModelFeatures modelFeature
                         */
    
                        /**
                         * Constructs a new ModelFeatures.
                         * @memberof google.cloud.speech.v2
                         * @classdesc Represents a ModelFeatures.
                         * @implements IModelFeatures
                         * @constructor
                         * @param {google.cloud.speech.v2.IModelFeatures=} [properties] Properties to set
                         */
                        function ModelFeatures(properties) {
                            this.modelFeature = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ModelFeatures modelFeature.
                         * @member {Array.<google.cloud.speech.v2.IModelFeature>} modelFeature
                         * @memberof google.cloud.speech.v2.ModelFeatures
                         * @instance
                         */
                        ModelFeatures.prototype.modelFeature = $util.emptyArray;
    
                        /**
                         * Creates a new ModelFeatures instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.speech.v2.ModelFeatures
                         * @static
                         * @param {google.cloud.speech.v2.IModelFeatures=} [properties] Properties to set
                         * @returns {google.cloud.speech.v2.ModelFeatures} ModelFeatures instance
                         */
                        ModelFeatures.create = function create(properties) {
                            return new ModelFeatures(properties);
                        };
    
                        /**
                         * Encodes the specified ModelFeatures message. Does not implicitly {@link google.cloud.speech.v2.ModelFeatures.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.speech.v2.ModelFeatures
                         * @static
                         * @param {google.cloud.speech.v2.IModelFeatures} message ModelFeatures message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ModelFeatures.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.modelFeature != null && message.modelFeature.length)
                                for (var i = 0; i < message.modelFeature.length; ++i)
                                    $root.google.cloud.speech.v2.ModelFeature.encode(message.modelFeature[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ModelFeatures message, length delimited. Does not implicitly {@link google.cloud.speech.v2.ModelFeatures.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.speech.v2.ModelFeatures
                         * @static
                         * @param {google.cloud.speech.v2.IModelFeatures} message ModelFeatures message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ModelFeatures.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ModelFeatures message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.speech.v2.ModelFeatures
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.speech.v2.ModelFeatures} ModelFeatures
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ModelFeatures.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.speech.v2.ModelFeatures();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.modelFeature && message.modelFeature.length))
                                            message.modelFeature = [];
                                        message.modelFeature.push($root.google.cloud.speech.v2.ModelFeature.decode(reader, reader.uint32()));
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ModelFeatures message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.speech.v2.ModelFeatures
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.speech.v2.ModelFeatures} ModelFeatures
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ModelFeatures.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ModelFeatures message.
                         * @function verify
                         * @memberof google.cloud.speech.v2.ModelFeatures
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ModelFeatures.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.modelFeature != null && message.hasOwnProperty("modelFeature")) {
                                if (!Array.isArray(message.modelFeature))
                                    return "modelFeature: array expected";
                                for (var i = 0; i < message.modelFeature.length; ++i) {
                                    var error = $root.google.cloud.speech.v2.ModelFeature.verify(message.modelFeature[i]);
                                    if (error)
                                        return "modelFeature." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a ModelFeatures message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.speech.v2.ModelFeatures
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.speech.v2.ModelFeatures} ModelFeatures
                         */
                        ModelFeatures.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.speech.v2.ModelFeatures)
                                return object;
                            var message = new $root.google.cloud.speech.v2.ModelFeatures();
                            if (object.modelFeature) {
                                if (!Array.isArray(object.modelFeature))
                                    throw TypeError(".google.cloud.speech.v2.ModelFeatures.modelFeature: array expected");
                                message.modelFeature = [];
                                for (var i = 0; i < object.modelFeature.length; ++i) {
                                    if (typeof object.modelFeature[i] !== "object")
                                        throw TypeError(".google.cloud.speech.v2.ModelFeatures.modelFeature: object expected");
                                    message.modelFeature[i] = $root.google.cloud.speech.v2.ModelFeature.fromObject(object.modelFeature[i]);
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ModelFeatures message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.speech.v2.ModelFeatures
                         * @static
                         * @param {google.cloud.speech.v2.ModelFeatures} message ModelFeatures
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ModelFeatures.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.modelFeature = [];
                            if (message.modelFeature && message.modelFeature.length) {
                                object.modelFeature = [];
                                for (var j = 0; j < message.modelFeature.length; ++j)
                                    object.modelFeature[j] = $root.google.cloud.speech.v2.ModelFeature.toObject(message.modelFeature[j], options);
                            }
                            return object;
                        };
    
                        /**
                         * Converts this ModelFeatures to JSON.
                         * @function toJSON
                         * @memberof google.cloud.speech.v2.ModelFeatures
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ModelFeatures.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ModelFeatures
                         * @function getTypeUrl
                         * @memberof google.cloud.speech.v2.ModelFeatures
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ModelFeatures.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.speech.v2.ModelFeatures";
                        };
    
                        return ModelFeatures;
                    })();
    
                    v2.ModelMetadata = (function() {
    
                        /**
                         * Properties of a ModelMetadata.
                         * @memberof google.cloud.speech.v2
                         * @interface IModelMetadata
                         * @property {Object.<string,google.cloud.speech.v2.IModelFeatures>|null} [modelFeatures] ModelMetadata modelFeatures
                         */
    
                        /**
                         * Constructs a new ModelMetadata.
                         * @memberof google.cloud.speech.v2
                         * @classdesc Represents a ModelMetadata.
                         * @implements IModelMetadata
                         * @constructor
                         * @param {google.cloud.speech.v2.IModelMetadata=} [properties] Properties to set
                         */
                        function ModelMetadata(properties) {
                            this.modelFeatures = {};
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ModelMetadata modelFeatures.
                         * @member {Object.<string,google.cloud.speech.v2.IModelFeatures>} modelFeatures
                         * @memberof google.cloud.speech.v2.ModelMetadata
                         * @instance
                         */
                        ModelMetadata.prototype.modelFeatures = $util.emptyObject;
    
                        /**
                         * Creates a new ModelMetadata instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.speech.v2.ModelMetadata
                         * @static
                         * @param {google.cloud.speech.v2.IModelMetadata=} [properties] Properties to set
                         * @returns {google.cloud.speech.v2.ModelMetadata} ModelMetadata instance
                         */
                        ModelMetadata.create = function create(properties) {
                            return new ModelMetadata(properties);
                        };
    
                        /**
                         * Encodes the specified ModelMetadata message. Does not implicitly {@link google.cloud.speech.v2.ModelMetadata.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.speech.v2.ModelMetadata
                         * @static
                         * @param {google.cloud.speech.v2.IModelMetadata} message ModelMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ModelMetadata.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.modelFeatures != null && Object.hasOwnProperty.call(message, "modelFeatures"))
                                for (var keys = Object.keys(message.modelFeatures), i = 0; i < keys.length; ++i) {
                                    writer.uint32(/* id 1, wireType 2 =*/10).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]);
                                    $root.google.cloud.speech.v2.ModelFeatures.encode(message.modelFeatures[keys[i]], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim().ldelim();
                                }
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ModelMetadata message, length delimited. Does not implicitly {@link google.cloud.speech.v2.ModelMetadata.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.speech.v2.ModelMetadata
                         * @static
                         * @param {google.cloud.speech.v2.IModelMetadata} message ModelMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ModelMetadata.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ModelMetadata message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.speech.v2.ModelMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.speech.v2.ModelMetadata} ModelMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ModelMetadata.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.speech.v2.ModelMetadata(), key, value;
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        if (message.modelFeatures === $util.emptyObject)
                                            message.modelFeatures = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = null;
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = $root.google.cloud.speech.v2.ModelFeatures.decode(reader, reader.uint32());
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.modelFeatures[key] = value;
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ModelMetadata message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.speech.v2.ModelMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.speech.v2.ModelMetadata} ModelMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ModelMetadata.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ModelMetadata message.
                         * @function verify
                         * @memberof google.cloud.speech.v2.ModelMetadata
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ModelMetadata.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.modelFeatures != null && message.hasOwnProperty("modelFeatures")) {
                                if (!$util.isObject(message.modelFeatures))
                                    return "modelFeatures: object expected";
                                var key = Object.keys(message.modelFeatures);
                                for (var i = 0; i < key.length; ++i) {
                                    var error = $root.google.cloud.speech.v2.ModelFeatures.verify(message.modelFeatures[key[i]]);
                                    if (error)
                                        return "modelFeatures." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a ModelMetadata message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.speech.v2.ModelMetadata
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.speech.v2.ModelMetadata} ModelMetadata
                         */
                        ModelMetadata.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.speech.v2.ModelMetadata)
                                return object;
                            var message = new $root.google.cloud.speech.v2.ModelMetadata();
                            if (object.modelFeatures) {
                                if (typeof object.modelFeatures !== "object")
                                    throw TypeError(".google.cloud.speech.v2.ModelMetadata.modelFeatures: object expected");
                                message.modelFeatures = {};
                                for (var keys = Object.keys(object.modelFeatures), i = 0; i < keys.length; ++i) {
                                    if (typeof object.modelFeatures[keys[i]] !== "object")
                                        throw TypeError(".google.cloud.speech.v2.ModelMetadata.modelFeatures: object expected");
                                    message.modelFeatures[keys[i]] = $root.google.cloud.speech.v2.ModelFeatures.fromObject(object.modelFeatures[keys[i]]);
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ModelMetadata message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.speech.v2.ModelMetadata
                         * @static
                         * @param {google.cloud.speech.v2.ModelMetadata} message ModelMetadata
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ModelMetadata.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.objects || options.defaults)
                                object.modelFeatures = {};
                            var keys2;
                            if (message.modelFeatures && (keys2 = Object.keys(message.modelFeatures)).length) {
                                object.modelFeatures = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.modelFeatures[keys2[j]] = $root.google.cloud.speech.v2.ModelFeatures.toObject(message.modelFeatures[keys2[j]], options);
                            }
                            return object;
                        };
    
                        /**
                         * Converts this ModelMetadata to JSON.
                         * @function toJSON
                         * @memberof google.cloud.speech.v2.ModelMetadata
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ModelMetadata.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ModelMetadata
                         * @function getTypeUrl
                         * @memberof google.cloud.speech.v2.ModelMetadata
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ModelMetadata.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.speech.v2.ModelMetadata";
                        };
    
                        return ModelMetadata;
                    })();
    
                    v2.LanguageMetadata = (function() {
    
                        /**
                         * Properties of a LanguageMetadata.
                         * @memberof google.cloud.speech.v2
                         * @interface ILanguageMetadata
                         * @property {Object.<string,google.cloud.speech.v2.IModelMetadata>|null} [models] LanguageMetadata models
                         */
    
                        /**
                         * Constructs a new LanguageMetadata.
                         * @memberof google.cloud.speech.v2
                         * @classdesc Represents a LanguageMetadata.
                         * @implements ILanguageMetadata
                         * @constructor
                         * @param {google.cloud.speech.v2.ILanguageMetadata=} [properties] Properties to set
                         */
                        function LanguageMetadata(properties) {
                            this.models = {};
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * LanguageMetadata models.
                         * @member {Object.<string,google.cloud.speech.v2.IModelMetadata>} models
                         * @memberof google.cloud.speech.v2.LanguageMetadata
                         * @instance
                         */
                        LanguageMetadata.prototype.models = $util.emptyObject;
    
                        /**
                         * Creates a new LanguageMetadata instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.speech.v2.LanguageMetadata
                         * @static
                         * @param {google.cloud.speech.v2.ILanguageMetadata=} [properties] Properties to set
                         * @returns {google.cloud.speech.v2.LanguageMetadata} LanguageMetadata instance
                         */
                        LanguageMetadata.create = function create(properties) {
                            return new LanguageMetadata(properties);
                        };
    
                        /**
                         * Encodes the specified LanguageMetadata message. Does not implicitly {@link google.cloud.speech.v2.LanguageMetadata.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.speech.v2.LanguageMetadata
                         * @static
                         * @param {google.cloud.speech.v2.ILanguageMetadata} message LanguageMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        LanguageMetadata.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.models != null && Object.hasOwnProperty.call(message, "models"))
                                for (var keys = Object.keys(message.models), i = 0; i < keys.length; ++i) {
                                    writer.uint32(/* id 1, wireType 2 =*/10).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]);
                                    $root.google.cloud.speech.v2.ModelMetadata.encode(message.models[keys[i]], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim().ldelim();
                                }
                            return writer;
                        };
    
                        /**
                         * Encodes the specified LanguageMetadata message, length delimited. Does not implicitly {@link google.cloud.speech.v2.LanguageMetadata.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.speech.v2.LanguageMetadata
                         * @static
                         * @param {google.cloud.speech.v2.ILanguageMetadata} message LanguageMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        LanguageMetadata.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a LanguageMetadata message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.speech.v2.LanguageMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.speech.v2.LanguageMetadata} LanguageMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        LanguageMetadata.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.speech.v2.LanguageMetadata(), key, value;
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        if (message.models === $util.emptyObject)
                                            message.models = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = null;
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = $root.google.cloud.speech.v2.ModelMetadata.decode(reader, reader.uint32());
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.models[key] = value;
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a LanguageMetadata message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.speech.v2.LanguageMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.speech.v2.LanguageMetadata} LanguageMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        LanguageMetadata.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a LanguageMetadata message.
                         * @function verify
                         * @memberof google.cloud.speech.v2.LanguageMetadata
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        LanguageMetadata.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.models != null && message.hasOwnProperty("models")) {
                                if (!$util.isObject(message.models))
                                    return "models: object expected";
                                var key = Object.keys(message.models);
                                for (var i = 0; i < key.length; ++i) {
                                    var error = $root.google.cloud.speech.v2.ModelMetadata.verify(message.models[key[i]]);
                                    if (error)
                                        return "models." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a LanguageMetadata message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.speech.v2.LanguageMetadata
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.speech.v2.LanguageMetadata} LanguageMetadata
                         */
                        LanguageMetadata.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.speech.v2.LanguageMetadata)
                                return object;
                            var message = new $root.google.cloud.speech.v2.LanguageMetadata();
                            if (object.models) {
                                if (typeof object.models !== "object")
                                    throw TypeError(".google.cloud.speech.v2.LanguageMetadata.models: object expected");
                                message.models = {};
                                for (var keys = Object.keys(object.models), i = 0; i < keys.length; ++i) {
                                    if (typeof object.models[keys[i]] !== "object")
                                        throw TypeError(".google.cloud.speech.v2.LanguageMetadata.models: object expected");
                                    message.models[keys[i]] = $root.google.cloud.speech.v2.ModelMetadata.fromObject(object.models[keys[i]]);
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a LanguageMetadata message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.speech.v2.LanguageMetadata
                         * @static
                         * @param {google.cloud.speech.v2.LanguageMetadata} message LanguageMetadata
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        LanguageMetadata.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.objects || options.defaults)
                                object.models = {};
                            var keys2;
                            if (message.models && (keys2 = Object.keys(message.models)).length) {
                                object.models = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.models[keys2[j]] = $root.google.cloud.speech.v2.ModelMetadata.toObject(message.models[keys2[j]], options);
                            }
                            return object;
                        };
    
                        /**
                         * Converts this LanguageMetadata to JSON.
                         * @function toJSON
                         * @memberof google.cloud.speech.v2.LanguageMetadata
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        LanguageMetadata.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for LanguageMetadata
                         * @function getTypeUrl
                         * @memberof google.cloud.speech.v2.LanguageMetadata
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        LanguageMetadata.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.speech.v2.LanguageMetadata";
                        };
    
                        return LanguageMetadata;
                    })();
    
                    v2.AccessMetadata = (function() {
    
                        /**
                         * Properties of an AccessMetadata.
                         * @memberof google.cloud.speech.v2
                         * @interface IAccessMetadata
                         * @property {google.cloud.speech.v2.AccessMetadata.ConstraintType|null} [constraintType] AccessMetadata constraintType
                         */
    
                        /**
                         * Constructs a new AccessMetadata.
                         * @memberof google.cloud.speech.v2
                         * @classdesc Represents an AccessMetadata.
                         * @implements IAccessMetadata
                         * @constructor
                         * @param {google.cloud.speech.v2.IAccessMetadata=} [properties] Properties to set
                         */
                        function AccessMetadata(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * AccessMetadata constraintType.
                         * @member {google.cloud.speech.v2.AccessMetadata.ConstraintType} constraintType
                         * @memberof google.cloud.speech.v2.AccessMetadata
                         * @instance
                         */
                        AccessMetadata.prototype.constraintType = 0;
    
                        /**
                         * Creates a new AccessMetadata instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.speech.v2.AccessMetadata
                         * @static
                         * @param {google.cloud.speech.v2.IAccessMetadata=} [properties] Properties to set
                         * @returns {google.cloud.speech.v2.AccessMetadata} AccessMetadata instance
                         */
                        AccessMetadata.create = function create(properties) {
                            return new AccessMetadata(properties);
                        };
    
                        /**
                         * Encodes the specified AccessMetadata message. Does not implicitly {@link google.cloud.speech.v2.AccessMetadata.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.speech.v2.AccessMetadata
                         * @static
                         * @param {google.cloud.speech.v2.IAccessMetadata} message AccessMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        AccessMetadata.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.constraintType != null && Object.hasOwnProperty.call(message, "constraintType"))
                                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.constraintType);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified AccessMetadata message, length delimited. Does not implicitly {@link google.cloud.speech.v2.AccessMetadata.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.speech.v2.AccessMetadata
                         * @static
                         * @param {google.cloud.speech.v2.IAccessMetadata} message AccessMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        AccessMetadata.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an AccessMetadata message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.speech.v2.AccessMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.speech.v2.AccessMetadata} AccessMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        AccessMetadata.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.speech.v2.AccessMetadata();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        message.constraintType = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an AccessMetadata message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.speech.v2.AccessMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.speech.v2.AccessMetadata} AccessMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        AccessMetadata.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an AccessMetadata message.
                         * @function verify
                         * @memberof google.cloud.speech.v2.AccessMetadata
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        AccessMetadata.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.constraintType != null && message.hasOwnProperty("constraintType"))
                                switch (message.constraintType) {
                                default:
                                    return "constraintType: enum value expected";
                                case 0:
                                case 1:
                                    break;
                                }
                            return null;
                        };
    
                        /**
                         * Creates an AccessMetadata message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.speech.v2.AccessMetadata
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.speech.v2.AccessMetadata} AccessMetadata
                         */
                        AccessMetadata.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.speech.v2.AccessMetadata)
                                return object;
                            var message = new $root.google.cloud.speech.v2.AccessMetadata();
                            switch (object.constraintType) {
                            default:
                                if (typeof object.constraintType === "number") {
                                    message.constraintType = object.constraintType;
                                    break;
                                }
                                break;
                            case "CONSTRAINT_TYPE_UNSPECIFIED":
                            case 0:
                                message.constraintType = 0;
                                break;
                            case "RESOURCE_LOCATIONS_ORG_POLICY_CREATE_CONSTRAINT":
                            case 1:
                                message.constraintType = 1;
                                break;
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an AccessMetadata message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.speech.v2.AccessMetadata
                         * @static
                         * @param {google.cloud.speech.v2.AccessMetadata} message AccessMetadata
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        AccessMetadata.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.constraintType = options.enums === String ? "CONSTRAINT_TYPE_UNSPECIFIED" : 0;
                            if (message.constraintType != null && message.hasOwnProperty("constraintType"))
                                object.constraintType = options.enums === String ? $root.google.cloud.speech.v2.AccessMetadata.ConstraintType[message.constraintType] === undefined ? message.constraintType : $root.google.cloud.speech.v2.AccessMetadata.ConstraintType[message.constraintType] : message.constraintType;
                            return object;
                        };
    
                        /**
                         * Converts this AccessMetadata to JSON.
                         * @function toJSON
                         * @memberof google.cloud.speech.v2.AccessMetadata
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        AccessMetadata.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for AccessMetadata
                         * @function getTypeUrl
                         * @memberof google.cloud.speech.v2.AccessMetadata
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        AccessMetadata.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.speech.v2.AccessMetadata";
                        };
    
                        /**
                         * ConstraintType enum.
                         * @name google.cloud.speech.v2.AccessMetadata.ConstraintType
                         * @enum {number}
                         * @property {number} CONSTRAINT_TYPE_UNSPECIFIED=0 CONSTRAINT_TYPE_UNSPECIFIED value
                         * @property {number} RESOURCE_LOCATIONS_ORG_POLICY_CREATE_CONSTRAINT=1 RESOURCE_LOCATIONS_ORG_POLICY_CREATE_CONSTRAINT value
                         */
                        AccessMetadata.ConstraintType = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "CONSTRAINT_TYPE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "RESOURCE_LOCATIONS_ORG_POLICY_CREATE_CONSTRAINT"] = 1;
                            return values;
                        })();
    
                        return AccessMetadata;
                    })();
    
                    v2.LocationsMetadata = (function() {
    
                        /**
                         * Properties of a LocationsMetadata.
                         * @memberof google.cloud.speech.v2
                         * @interface ILocationsMetadata
                         * @property {google.cloud.speech.v2.ILanguageMetadata|null} [languages] LocationsMetadata languages
                         * @property {google.cloud.speech.v2.IAccessMetadata|null} [accessMetadata] LocationsMetadata accessMetadata
                         */
    
                        /**
                         * Constructs a new LocationsMetadata.
                         * @memberof google.cloud.speech.v2
                         * @classdesc Represents a LocationsMetadata.
                         * @implements ILocationsMetadata
                         * @constructor
                         * @param {google.cloud.speech.v2.ILocationsMetadata=} [properties] Properties to set
                         */
                        function LocationsMetadata(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * LocationsMetadata languages.
                         * @member {google.cloud.speech.v2.ILanguageMetadata|null|undefined} languages
                         * @memberof google.cloud.speech.v2.LocationsMetadata
                         * @instance
                         */
                        LocationsMetadata.prototype.languages = null;
    
                        /**
                         * LocationsMetadata accessMetadata.
                         * @member {google.cloud.speech.v2.IAccessMetadata|null|undefined} accessMetadata
                         * @memberof google.cloud.speech.v2.LocationsMetadata
                         * @instance
                         */
                        LocationsMetadata.prototype.accessMetadata = null;
    
                        /**
                         * Creates a new LocationsMetadata instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.speech.v2.LocationsMetadata
                         * @static
                         * @param {google.cloud.speech.v2.ILocationsMetadata=} [properties] Properties to set
                         * @returns {google.cloud.speech.v2.LocationsMetadata} LocationsMetadata instance
                         */
                        LocationsMetadata.create = function create(properties) {
                            return new LocationsMetadata(properties);
                        };
    
                        /**
                         * Encodes the specified LocationsMetadata message. Does not implicitly {@link google.cloud.speech.v2.LocationsMetadata.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.speech.v2.LocationsMetadata
                         * @static
                         * @param {google.cloud.speech.v2.ILocationsMetadata} message LocationsMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        LocationsMetadata.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.languages != null && Object.hasOwnProperty.call(message, "languages"))
                                $root.google.cloud.speech.v2.LanguageMetadata.encode(message.languages, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.accessMetadata != null && Object.hasOwnProperty.call(message, "accessMetadata"))
                                $root.google.cloud.speech.v2.AccessMetadata.encode(message.accessMetadata, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified LocationsMetadata message, length delimited. Does not implicitly {@link google.cloud.speech.v2.LocationsMetadata.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.speech.v2.LocationsMetadata
                         * @static
                         * @param {google.cloud.speech.v2.ILocationsMetadata} message LocationsMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        LocationsMetadata.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a LocationsMetadata message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.speech.v2.LocationsMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.speech.v2.LocationsMetadata} LocationsMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        LocationsMetadata.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.speech.v2.LocationsMetadata();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        message.languages = $root.google.cloud.speech.v2.LanguageMetadata.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.accessMetadata = $root.google.cloud.speech.v2.AccessMetadata.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a LocationsMetadata message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.speech.v2.LocationsMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.speech.v2.LocationsMetadata} LocationsMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        LocationsMetadata.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a LocationsMetadata message.
                         * @function verify
                         * @memberof google.cloud.speech.v2.LocationsMetadata
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        LocationsMetadata.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.languages != null && message.hasOwnProperty("languages")) {
                                var error = $root.google.cloud.speech.v2.LanguageMetadata.verify(message.languages);
                                if (error)
                                    return "languages." + error;
                            }
                            if (message.accessMetadata != null && message.hasOwnProperty("accessMetadata")) {
                                var error = $root.google.cloud.speech.v2.AccessMetadata.verify(message.accessMetadata);
                                if (error)
                                    return "accessMetadata." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a LocationsMetadata message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.speech.v2.LocationsMetadata
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.speech.v2.LocationsMetadata} LocationsMetadata
                         */
                        LocationsMetadata.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.speech.v2.LocationsMetadata)
                                return object;
                            var message = new $root.google.cloud.speech.v2.LocationsMetadata();
                            if (object.languages != null) {
                                if (typeof object.languages !== "object")
                                    throw TypeError(".google.cloud.speech.v2.LocationsMetadata.languages: object expected");
                                message.languages = $root.google.cloud.speech.v2.LanguageMetadata.fromObject(object.languages);
                            }
                            if (object.accessMetadata != null) {
                                if (typeof object.accessMetadata !== "object")
                                    throw TypeError(".google.cloud.speech.v2.LocationsMetadata.accessMetadata: object expected");
                                message.accessMetadata = $root.google.cloud.speech.v2.AccessMetadata.fromObject(object.accessMetadata);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a LocationsMetadata message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.speech.v2.LocationsMetadata
                         * @static
                         * @param {google.cloud.speech.v2.LocationsMetadata} message LocationsMetadata
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        LocationsMetadata.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.languages = null;
                                object.accessMetadata = null;
                            }
                            if (message.languages != null && message.hasOwnProperty("languages"))
                                object.languages = $root.google.cloud.speech.v2.LanguageMetadata.toObject(message.languages, options);
                            if (message.accessMetadata != null && message.hasOwnProperty("accessMetadata"))
                                object.accessMetadata = $root.google.cloud.speech.v2.AccessMetadata.toObject(message.accessMetadata, options);
                            return object;
                        };
    
                        /**
                         * Converts this LocationsMetadata to JSON.
                         * @function toJSON
                         * @memberof google.cloud.speech.v2.LocationsMetadata
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        LocationsMetadata.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for LocationsMetadata
                         * @function getTypeUrl
                         * @memberof google.cloud.speech.v2.LocationsMetadata
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        LocationsMetadata.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.speech.v2.LocationsMetadata";
                        };
    
                        return LocationsMetadata;
                    })();
    
                    return v2;
                })();
    
                return speech;
            })();
    
            return cloud;
        })();
    
        google.api = (function() {
    
            /**
             * Namespace api.
             * @memberof google
             * @namespace
             */
            var api = {};
    
            api.Http = (function() {
    
                /**
                 * Properties of a Http.
                 * @memberof google.api
                 * @interface IHttp
                 * @property {Array.<google.api.IHttpRule>|null} [rules] Http rules
                 * @property {boolean|null} [fullyDecodeReservedExpansion] Http fullyDecodeReservedExpansion
                 */
    
                /**
                 * Constructs a new Http.
                 * @memberof google.api
                 * @classdesc Represents a Http.
                 * @implements IHttp
                 * @constructor
                 * @param {google.api.IHttp=} [properties] Properties to set
                 */
                function Http(properties) {
                    this.rules = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Http rules.
                 * @member {Array.<google.api.IHttpRule>} rules
                 * @memberof google.api.Http
                 * @instance
                 */
                Http.prototype.rules = $util.emptyArray;
    
                /**
                 * Http fullyDecodeReservedExpansion.
                 * @member {boolean} fullyDecodeReservedExpansion
                 * @memberof google.api.Http
                 * @instance
                 */
                Http.prototype.fullyDecodeReservedExpansion = false;
    
                /**
                 * Creates a new Http instance using the specified properties.
                 * @function create
                 * @memberof google.api.Http
                 * @static
                 * @param {google.api.IHttp=} [properties] Properties to set
                 * @returns {google.api.Http} Http instance
                 */
                Http.create = function create(properties) {
                    return new Http(properties);
                };
    
                /**
                 * Encodes the specified Http message. Does not implicitly {@link google.api.Http.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.Http
                 * @static
                 * @param {google.api.IHttp} message Http message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Http.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.rules != null && message.rules.length)
                        for (var i = 0; i < message.rules.length; ++i)
                            $root.google.api.HttpRule.encode(message.rules[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    if (message.fullyDecodeReservedExpansion != null && Object.hasOwnProperty.call(message, "fullyDecodeReservedExpansion"))
                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.fullyDecodeReservedExpansion);
                    return writer;
                };
    
                /**
                 * Encodes the specified Http message, length delimited. Does not implicitly {@link google.api.Http.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.Http
                 * @static
                 * @param {google.api.IHttp} message Http message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Http.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a Http message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.Http
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.Http} Http
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Http.decode = function decode(reader, length, error) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.Http();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        if (tag === error)
                            break;
                        switch (tag >>> 3) {
                        case 1: {
                                if (!(message.rules && message.rules.length))
                                    message.rules = [];
                                message.rules.push($root.google.api.HttpRule.decode(reader, reader.uint32()));
                                break;
                            }
                        case 2: {
                                message.fullyDecodeReservedExpansion = reader.bool();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a Http message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.Http
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.Http} Http
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Http.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a Http message.
                 * @function verify
                 * @memberof google.api.Http
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Http.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.rules != null && message.hasOwnProperty("rules")) {
                        if (!Array.isArray(message.rules))
                            return "rules: array expected";
                        for (var i = 0; i < message.rules.length; ++i) {
                            var error = $root.google.api.HttpRule.verify(message.rules[i]);
                            if (error)
                                return "rules." + error;
                        }
                    }
                    if (message.fullyDecodeReservedExpansion != null && message.hasOwnProperty("fullyDecodeReservedExpansion"))
                        if (typeof message.fullyDecodeReservedExpansion !== "boolean")
                            return "fullyDecodeReservedExpansion: boolean expected";
                    return null;
                };
    
                /**
                 * Creates a Http message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.Http
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.Http} Http
                 */
                Http.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.Http)
                        return object;
                    var message = new $root.google.api.Http();
                    if (object.rules) {
                        if (!Array.isArray(object.rules))
                            throw TypeError(".google.api.Http.rules: array expected");
                        message.rules = [];
                        for (var i = 0; i < object.rules.length; ++i) {
                            if (typeof object.rules[i] !== "object")
                                throw TypeError(".google.api.Http.rules: object expected");
                            message.rules[i] = $root.google.api.HttpRule.fromObject(object.rules[i]);
                        }
                    }
                    if (object.fullyDecodeReservedExpansion != null)
                        message.fullyDecodeReservedExpansion = Boolean(object.fullyDecodeReservedExpansion);
                    return message;
                };
    
                /**
                 * Creates a plain object from a Http message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.Http
                 * @static
                 * @param {google.api.Http} message Http
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Http.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.rules = [];
                    if (options.defaults)
                        object.fullyDecodeReservedExpansion = false;
                    if (message.rules && message.rules.length) {
                        object.rules = [];
                        for (var j = 0; j < message.rules.length; ++j)
                            object.rules[j] = $root.google.api.HttpRule.toObject(message.rules[j], options);
                    }
                    if (message.fullyDecodeReservedExpansion != null && message.hasOwnProperty("fullyDecodeReservedExpansion"))
                        object.fullyDecodeReservedExpansion = message.fullyDecodeReservedExpansion;
                    return object;
                };
    
                /**
                 * Converts this Http to JSON.
                 * @function toJSON
                 * @memberof google.api.Http
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Http.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Http
                 * @function getTypeUrl
                 * @memberof google.api.Http
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Http.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.Http";
                };
    
                return Http;
            })();
    
            api.HttpRule = (function() {
    
                /**
                 * Properties of a HttpRule.
                 * @memberof google.api
                 * @interface IHttpRule
                 * @property {string|null} [selector] HttpRule selector
                 * @property {string|null} [get] HttpRule get
                 * @property {string|null} [put] HttpRule put
                 * @property {string|null} [post] HttpRule post
                 * @property {string|null} ["delete"] HttpRule delete
                 * @property {string|null} [patch] HttpRule patch
                 * @property {google.api.ICustomHttpPattern|null} [custom] HttpRule custom
                 * @property {string|null} [body] HttpRule body
                 * @property {string|null} [responseBody] HttpRule responseBody
                 * @property {Array.<google.api.IHttpRule>|null} [additionalBindings] HttpRule additionalBindings
                 */
    
                /**
                 * Constructs a new HttpRule.
                 * @memberof google.api
                 * @classdesc Represents a HttpRule.
                 * @implements IHttpRule
                 * @constructor
                 * @param {google.api.IHttpRule=} [properties] Properties to set
                 */
                function HttpRule(properties) {
                    this.additionalBindings = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * HttpRule selector.
                 * @member {string} selector
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.selector = "";
    
                /**
                 * HttpRule get.
                 * @member {string|null|undefined} get
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.get = null;
    
                /**
                 * HttpRule put.
                 * @member {string|null|undefined} put
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.put = null;
    
                /**
                 * HttpRule post.
                 * @member {string|null|undefined} post
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.post = null;
    
                /**
                 * HttpRule delete.
                 * @member {string|null|undefined} delete
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype["delete"] = null;
    
                /**
                 * HttpRule patch.
                 * @member {string|null|undefined} patch
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.patch = null;
    
                /**
                 * HttpRule custom.
                 * @member {google.api.ICustomHttpPattern|null|undefined} custom
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.custom = null;
    
                /**
                 * HttpRule body.
                 * @member {string} body
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.body = "";
    
                /**
                 * HttpRule responseBody.
                 * @member {string} responseBody
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.responseBody = "";
    
                /**
                 * HttpRule additionalBindings.
                 * @member {Array.<google.api.IHttpRule>} additionalBindings
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.additionalBindings = $util.emptyArray;
    
                // OneOf field names bound to virtual getters and setters
                var $oneOfFields;
    
                /**
                 * HttpRule pattern.
                 * @member {"get"|"put"|"post"|"delete"|"patch"|"custom"|undefined} pattern
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                Object.defineProperty(HttpRule.prototype, "pattern", {
                    get: $util.oneOfGetter($oneOfFields = ["get", "put", "post", "delete", "patch", "custom"]),
                    set: $util.oneOfSetter($oneOfFields)
                });
    
                /**
                 * Creates a new HttpRule instance using the specified properties.
                 * @function create
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {google.api.IHttpRule=} [properties] Properties to set
                 * @returns {google.api.HttpRule} HttpRule instance
                 */
                HttpRule.create = function create(properties) {
                    return new HttpRule(properties);
                };
    
                /**
                 * Encodes the specified HttpRule message. Does not implicitly {@link google.api.HttpRule.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {google.api.IHttpRule} message HttpRule message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                HttpRule.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.selector != null && Object.hasOwnProperty.call(message, "selector"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.selector);
                    if (message.get != null && Object.hasOwnProperty.call(message, "get"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.get);
                    if (message.put != null && Object.hasOwnProperty.call(message, "put"))
                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.put);
                    if (message.post != null && Object.hasOwnProperty.call(message, "post"))
                        writer.uint32(/* id 4, wireType 2 =*/34).string(message.post);
                    if (message["delete"] != null && Object.hasOwnProperty.call(message, "delete"))
                        writer.uint32(/* id 5, wireType 2 =*/42).string(message["delete"]);
                    if (message.patch != null && Object.hasOwnProperty.call(message, "patch"))
                        writer.uint32(/* id 6, wireType 2 =*/50).string(message.patch);
                    if (message.body != null && Object.hasOwnProperty.call(message, "body"))
                        writer.uint32(/* id 7, wireType 2 =*/58).string(message.body);
                    if (message.custom != null && Object.hasOwnProperty.call(message, "custom"))
                        $root.google.api.CustomHttpPattern.encode(message.custom, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                    if (message.additionalBindings != null && message.additionalBindings.length)
                        for (var i = 0; i < message.additionalBindings.length; ++i)
                            $root.google.api.HttpRule.encode(message.additionalBindings[i], writer.uint32(/* id 11, wireType 2 =*/90).fork()).ldelim();
                    if (message.responseBody != null && Object.hasOwnProperty.call(message, "responseBody"))
                        writer.uint32(/* id 12, wireType 2 =*/98).string(message.responseBody);
                    return writer;
                };
    
                /**
                 * Encodes the specified HttpRule message, length delimited. Does not implicitly {@link google.api.HttpRule.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {google.api.IHttpRule} message HttpRule message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                HttpRule.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a HttpRule message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.HttpRule} HttpRule
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                HttpRule.decode = function decode(reader, length, error) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.HttpRule();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        if (tag === error)
                            break;
                        switch (tag >>> 3) {
                        case 1: {
                                message.selector = reader.string();
                                break;
                            }
                        case 2: {
                                message.get = reader.string();
                                break;
                            }
                        case 3: {
                                message.put = reader.string();
                                break;
                            }
                        case 4: {
                                message.post = reader.string();
                                break;
                            }
                        case 5: {
                                message["delete"] = reader.string();
                                break;
                            }
                        case 6: {
                                message.patch = reader.string();
                                break;
                            }
                        case 8: {
                                message.custom = $root.google.api.CustomHttpPattern.decode(reader, reader.uint32());
                                break;
                            }
                        case 7: {
                                message.body = reader.string();
                                break;
                            }
                        case 12: {
                                message.responseBody = reader.string();
                                break;
                            }
                        case 11: {
                                if (!(message.additionalBindings && message.additionalBindings.length))
                                    message.additionalBindings = [];
                                message.additionalBindings.push($root.google.api.HttpRule.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a HttpRule message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.HttpRule} HttpRule
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                HttpRule.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a HttpRule message.
                 * @function verify
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                HttpRule.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    var properties = {};
                    if (message.selector != null && message.hasOwnProperty("selector"))
                        if (!$util.isString(message.selector))
                            return "selector: string expected";
                    if (message.get != null && message.hasOwnProperty("get")) {
                        properties.pattern = 1;
                        if (!$util.isString(message.get))
                            return "get: string expected";
                    }
                    if (message.put != null && message.hasOwnProperty("put")) {
                        if (properties.pattern === 1)
                            return "pattern: multiple values";
                        properties.pattern = 1;
                        if (!$util.isString(message.put))
                            return "put: string expected";
                    }
                    if (message.post != null && message.hasOwnProperty("post")) {
                        if (properties.pattern === 1)
                            return "pattern: multiple values";
                        properties.pattern = 1;
                        if (!$util.isString(message.post))
                            return "post: string expected";
                    }
                    if (message["delete"] != null && message.hasOwnProperty("delete")) {
                        if (properties.pattern === 1)
                            return "pattern: multiple values";
                        properties.pattern = 1;
                        if (!$util.isString(message["delete"]))
                            return "delete: string expected";
                    }
                    if (message.patch != null && message.hasOwnProperty("patch")) {
                        if (properties.pattern === 1)
                            return "pattern: multiple values";
                        properties.pattern = 1;
                        if (!$util.isString(message.patch))
                            return "patch: string expected";
                    }
                    if (message.custom != null && message.hasOwnProperty("custom")) {
                        if (properties.pattern === 1)
                            return "pattern: multiple values";
                        properties.pattern = 1;
                        {
                            var error = $root.google.api.CustomHttpPattern.verify(message.custom);
                            if (error)
                                return "custom." + error;
                        }
                    }
                    if (message.body != null && message.hasOwnProperty("body"))
                        if (!$util.isString(message.body))
                            return "body: string expected";
                    if (message.responseBody != null && message.hasOwnProperty("responseBody"))
                        if (!$util.isString(message.responseBody))
                            return "responseBody: string expected";
                    if (message.additionalBindings != null && message.hasOwnProperty("additionalBindings")) {
                        if (!Array.isArray(message.additionalBindings))
                            return "additionalBindings: array expected";
                        for (var i = 0; i < message.additionalBindings.length; ++i) {
                            var error = $root.google.api.HttpRule.verify(message.additionalBindings[i]);
                            if (error)
                                return "additionalBindings." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a HttpRule message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.HttpRule} HttpRule
                 */
                HttpRule.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.HttpRule)
                        return object;
                    var message = new $root.google.api.HttpRule();
                    if (object.selector != null)
                        message.selector = String(object.selector);
                    if (object.get != null)
                        message.get = String(object.get);
                    if (object.put != null)
                        message.put = String(object.put);
                    if (object.post != null)
                        message.post = String(object.post);
                    if (object["delete"] != null)
                        message["delete"] = String(object["delete"]);
                    if (object.patch != null)
                        message.patch = String(object.patch);
                    if (object.custom != null) {
                        if (typeof object.custom !== "object")
                            throw TypeError(".google.api.HttpRule.custom: object expected");
                        message.custom = $root.google.api.CustomHttpPattern.fromObject(object.custom);
                    }
                    if (object.body != null)
                        message.body = String(object.body);
                    if (object.responseBody != null)
                        message.responseBody = String(object.responseBody);
                    if (object.additionalBindings) {
                        if (!Array.isArray(object.additionalBindings))
                            throw TypeError(".google.api.HttpRule.additionalBindings: array expected");
                        message.additionalBindings = [];
                        for (var i = 0; i < object.additionalBindings.length; ++i) {
                            if (typeof object.additionalBindings[i] !== "object")
                                throw TypeError(".google.api.HttpRule.additionalBindings: object expected");
                            message.additionalBindings[i] = $root.google.api.HttpRule.fromObject(object.additionalBindings[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a HttpRule message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {google.api.HttpRule} message HttpRule
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                HttpRule.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.additionalBindings = [];
                    if (options.defaults) {
                        object.selector = "";
                        object.body = "";
                        object.responseBody = "";
                    }
                    if (message.selector != null && message.hasOwnProperty("selector"))
                        object.selector = message.selector;
                    if (message.get != null && message.hasOwnProperty("get")) {
                        object.get = message.get;
                        if (options.oneofs)
                            object.pattern = "get";
                    }
                    if (message.put != null && message.hasOwnProperty("put")) {
                        object.put = message.put;
                        if (options.oneofs)
                            object.pattern = "put";
                    }
                    if (message.post != null && message.hasOwnProperty("post")) {
                        object.post = message.post;
                        if (options.oneofs)
                            object.pattern = "post";
                    }
                    if (message["delete"] != null && message.hasOwnProperty("delete")) {
                        object["delete"] = message["delete"];
                        if (options.oneofs)
                            object.pattern = "delete";
                    }
                    if (message.patch != null && message.hasOwnProperty("patch")) {
                        object.patch = message.patch;
                        if (options.oneofs)
                            object.pattern = "patch";
                    }
                    if (message.body != null && message.hasOwnProperty("body"))
                        object.body = message.body;
                    if (message.custom != null && message.hasOwnProperty("custom")) {
                        object.custom = $root.google.api.CustomHttpPattern.toObject(message.custom, options);
                        if (options.oneofs)
                            object.pattern = "custom";
                    }
                    if (message.additionalBindings && message.additionalBindings.length) {
                        object.additionalBindings = [];
                        for (var j = 0; j < message.additionalBindings.length; ++j)
                            object.additionalBindings[j] = $root.google.api.HttpRule.toObject(message.additionalBindings[j], options);
                    }
                    if (message.responseBody != null && message.hasOwnProperty("responseBody"))
                        object.responseBody = message.responseBody;
                    return object;
                };
    
                /**
                 * Converts this HttpRule to JSON.
                 * @function toJSON
                 * @memberof google.api.HttpRule
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                HttpRule.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for HttpRule
                 * @function getTypeUrl
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                HttpRule.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.HttpRule";
                };
    
                return HttpRule;
            })();
    
            api.CustomHttpPattern = (function() {
    
                /**
                 * Properties of a CustomHttpPattern.
                 * @memberof google.api
                 * @interface ICustomHttpPattern
                 * @property {string|null} [kind] CustomHttpPattern kind
                 * @property {string|null} [path] CustomHttpPattern path
                 */
    
                /**
                 * Constructs a new CustomHttpPattern.
                 * @memberof google.api
                 * @classdesc Represents a CustomHttpPattern.
                 * @implements ICustomHttpPattern
                 * @constructor
                 * @param {google.api.ICustomHttpPattern=} [properties] Properties to set
                 */
                function CustomHttpPattern(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * CustomHttpPattern kind.
                 * @member {string} kind
                 * @memberof google.api.CustomHttpPattern
                 * @instance
                 */
                CustomHttpPattern.prototype.kind = "";
    
                /**
                 * CustomHttpPattern path.
                 * @member {string} path
                 * @memberof google.api.CustomHttpPattern
                 * @instance
                 */
                CustomHttpPattern.prototype.path = "";
    
                /**
                 * Creates a new CustomHttpPattern instance using the specified properties.
                 * @function create
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {google.api.ICustomHttpPattern=} [properties] Properties to set
                 * @returns {google.api.CustomHttpPattern} CustomHttpPattern instance
                 */
                CustomHttpPattern.create = function create(properties) {
                    return new CustomHttpPattern(properties);
                };
    
                /**
                 * Encodes the specified CustomHttpPattern message. Does not implicitly {@link google.api.CustomHttpPattern.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {google.api.ICustomHttpPattern} message CustomHttpPattern message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                CustomHttpPattern.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.kind != null && Object.hasOwnProperty.call(message, "kind"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.kind);
                    if (message.path != null && Object.hasOwnProperty.call(message, "path"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.path);
                    return writer;
                };
    
                /**
                 * Encodes the specified CustomHttpPattern message, length delimited. Does not implicitly {@link google.api.CustomHttpPattern.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {google.api.ICustomHttpPattern} message CustomHttpPattern message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                CustomHttpPattern.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a CustomHttpPattern message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.CustomHttpPattern} CustomHttpPattern
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                CustomHttpPattern.decode = function decode(reader, length, error) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.CustomHttpPattern();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        if (tag === error)
                            break;
                        switch (tag >>> 3) {
                        case 1: {
                                message.kind = reader.string();
                                break;
                            }
                        case 2: {
                                message.path = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a CustomHttpPattern message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.CustomHttpPattern} CustomHttpPattern
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                CustomHttpPattern.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a CustomHttpPattern message.
                 * @function verify
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                CustomHttpPattern.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.kind != null && message.hasOwnProperty("kind"))
                        if (!$util.isString(message.kind))
                            return "kind: string expected";
                    if (message.path != null && message.hasOwnProperty("path"))
                        if (!$util.isString(message.path))
                            return "path: string expected";
                    return null;
                };
    
                /**
                 * Creates a CustomHttpPattern message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.CustomHttpPattern} CustomHttpPattern
                 */
                CustomHttpPattern.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.CustomHttpPattern)
                        return object;
                    var message = new $root.google.api.CustomHttpPattern();
                    if (object.kind != null)
                        message.kind = String(object.kind);
                    if (object.path != null)
                        message.path = String(object.path);
                    return message;
                };
    
                /**
                 * Creates a plain object from a CustomHttpPattern message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {google.api.CustomHttpPattern} message CustomHttpPattern
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                CustomHttpPattern.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.kind = "";
                        object.path = "";
                    }
                    if (message.kind != null && message.hasOwnProperty("kind"))
                        object.kind = message.kind;
                    if (message.path != null && message.hasOwnProperty("path"))
                        object.path = message.path;
                    return object;
                };
    
                /**
                 * Converts this CustomHttpPattern to JSON.
                 * @function toJSON
                 * @memberof google.api.CustomHttpPattern
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                CustomHttpPattern.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for CustomHttpPattern
                 * @function getTypeUrl
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                CustomHttpPattern.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.CustomHttpPattern";
                };
    
                return CustomHttpPattern;
            })();
    
            api.CommonLanguageSettings = (function() {
    
                /**
                 * Properties of a CommonLanguageSettings.
                 * @memberof google.api
                 * @interface ICommonLanguageSettings
                 * @property {string|null} [referenceDocsUri] CommonLanguageSettings referenceDocsUri
                 * @property {Array.<google.api.ClientLibraryDestination>|null} [destinations] CommonLanguageSettings destinations
                 */
    
                /**
                 * Constructs a new CommonLanguageSettings.
                 * @memberof google.api
                 * @classdesc Represents a CommonLanguageSettings.
                 * @implements ICommonLanguageSettings
                 * @constructor
                 * @param {google.api.ICommonLanguageSettings=} [properties] Properties to set
                 */
                function CommonLanguageSettings(properties) {
                    this.destinations = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * CommonLanguageSettings referenceDocsUri.
                 * @member {string} referenceDocsUri
                 * @memberof google.api.CommonLanguageSettings
                 * @instance
                 */
                CommonLanguageSettings.prototype.referenceDocsUri = "";
    
                /**
                 * CommonLanguageSettings destinations.
                 * @member {Array.<google.api.ClientLibraryDestination>} destinations
                 * @memberof google.api.CommonLanguageSettings
                 * @instance
                 */
                CommonLanguageSettings.prototype.destinations = $util.emptyArray;
    
                /**
                 * Creates a new CommonLanguageSettings instance using the specified properties.
                 * @function create
                 * @memberof google.api.CommonLanguageSettings
                 * @static
                 * @param {google.api.ICommonLanguageSettings=} [properties] Properties to set
                 * @returns {google.api.CommonLanguageSettings} CommonLanguageSettings instance
                 */
                CommonLanguageSettings.create = function create(properties) {
                    return new CommonLanguageSettings(properties);
                };
    
                /**
                 * Encodes the specified CommonLanguageSettings message. Does not implicitly {@link google.api.CommonLanguageSettings.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.CommonLanguageSettings
                 * @static
                 * @param {google.api.ICommonLanguageSettings} message CommonLanguageSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                CommonLanguageSettings.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.referenceDocsUri != null && Object.hasOwnProperty.call(message, "referenceDocsUri"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.referenceDocsUri);
                    if (message.destinations != null && message.destinations.length) {
                        writer.uint32(/* id 2, wireType 2 =*/18).fork();
                        for (var i = 0; i < message.destinations.length; ++i)
                            writer.int32(message.destinations[i]);
                        writer.ldelim();
                    }
                    return writer;
                };
    
                /**
                 * Encodes the specified CommonLanguageSettings message, length delimited. Does not implicitly {@link google.api.CommonLanguageSettings.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.CommonLanguageSettings
                 * @static
                 * @param {google.api.ICommonLanguageSettings} message CommonLanguageSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                CommonLanguageSettings.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a CommonLanguageSettings message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.CommonLanguageSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.CommonLanguageSettings} CommonLanguageSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                CommonLanguageSettings.decode = function decode(reader, length, error) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.CommonLanguageSettings();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        if (tag === error)
                            break;
                        switch (tag >>> 3) {
                        case 1: {
                                message.referenceDocsUri = reader.string();
                                break;
                            }
                        case 2: {
                                if (!(message.destinations && message.destinations.length))
                                    message.destinations = [];
                                if ((tag & 7) === 2) {
                                    var end2 = reader.uint32() + reader.pos;
                                    while (reader.pos < end2)
                                        message.destinations.push(reader.int32());
                                } else
                                    message.destinations.push(reader.int32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a CommonLanguageSettings message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.CommonLanguageSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.CommonLanguageSettings} CommonLanguageSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                CommonLanguageSettings.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a CommonLanguageSettings message.
                 * @function verify
                 * @memberof google.api.CommonLanguageSettings
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                CommonLanguageSettings.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.referenceDocsUri != null && message.hasOwnProperty("referenceDocsUri"))
                        if (!$util.isString(message.referenceDocsUri))
                            return "referenceDocsUri: string expected";
                    if (message.destinations != null && message.hasOwnProperty("destinations")) {
                        if (!Array.isArray(message.destinations))
                            return "destinations: array expected";
                        for (var i = 0; i < message.destinations.length; ++i)
                            switch (message.destinations[i]) {
                            default:
                                return "destinations: enum value[] expected";
                            case 0:
                            case 10:
                            case 20:
                                break;
                            }
                    }
                    return null;
                };
    
                /**
                 * Creates a CommonLanguageSettings message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.CommonLanguageSettings
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.CommonLanguageSettings} CommonLanguageSettings
                 */
                CommonLanguageSettings.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.CommonLanguageSettings)
                        return object;
                    var message = new $root.google.api.CommonLanguageSettings();
                    if (object.referenceDocsUri != null)
                        message.referenceDocsUri = String(object.referenceDocsUri);
                    if (object.destinations) {
                        if (!Array.isArray(object.destinations))
                            throw TypeError(".google.api.CommonLanguageSettings.destinations: array expected");
                        message.destinations = [];
                        for (var i = 0; i < object.destinations.length; ++i)
                            switch (object.destinations[i]) {
                            default:
                                if (typeof object.destinations[i] === "number") {
                                    message.destinations[i] = object.destinations[i];
                                    break;
                                }
                            case "CLIENT_LIBRARY_DESTINATION_UNSPECIFIED":
                            case 0:
                                message.destinations[i] = 0;
                                break;
                            case "GITHUB":
                            case 10:
                                message.destinations[i] = 10;
                                break;
                            case "PACKAGE_MANAGER":
                            case 20:
                                message.destinations[i] = 20;
                                break;
                            }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a CommonLanguageSettings message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.CommonLanguageSettings
                 * @static
                 * @param {google.api.CommonLanguageSettings} message CommonLanguageSettings
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                CommonLanguageSettings.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.destinations = [];
                    if (options.defaults)
                        object.referenceDocsUri = "";
                    if (message.referenceDocsUri != null && message.hasOwnProperty("referenceDocsUri"))
                        object.referenceDocsUri = message.referenceDocsUri;
                    if (message.destinations && message.destinations.length) {
                        object.destinations = [];
                        for (var j = 0; j < message.destinations.length; ++j)
                            object.destinations[j] = options.enums === String ? $root.google.api.ClientLibraryDestination[message.destinations[j]] === undefined ? message.destinations[j] : $root.google.api.ClientLibraryDestination[message.destinations[j]] : message.destinations[j];
                    }
                    return object;
                };
    
                /**
                 * Converts this CommonLanguageSettings to JSON.
                 * @function toJSON
                 * @memberof google.api.CommonLanguageSettings
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                CommonLanguageSettings.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for CommonLanguageSettings
                 * @function getTypeUrl
                 * @memberof google.api.CommonLanguageSettings
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                CommonLanguageSettings.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.CommonLanguageSettings";
                };
    
                return CommonLanguageSettings;
            })();
    
            api.ClientLibrarySettings = (function() {
    
                /**
                 * Properties of a ClientLibrarySettings.
                 * @memberof google.api
                 * @interface IClientLibrarySettings
                 * @property {string|null} [version] ClientLibrarySettings version
                 * @property {google.api.LaunchStage|null} [launchStage] ClientLibrarySettings launchStage
                 * @property {boolean|null} [restNumericEnums] ClientLibrarySettings restNumericEnums
                 * @property {google.api.IJavaSettings|null} [javaSettings] ClientLibrarySettings javaSettings
                 * @property {google.api.ICppSettings|null} [cppSettings] ClientLibrarySettings cppSettings
                 * @property {google.api.IPhpSettings|null} [phpSettings] ClientLibrarySettings phpSettings
                 * @property {google.api.IPythonSettings|null} [pythonSettings] ClientLibrarySettings pythonSettings
                 * @property {google.api.INodeSettings|null} [nodeSettings] ClientLibrarySettings nodeSettings
                 * @property {google.api.IDotnetSettings|null} [dotnetSettings] ClientLibrarySettings dotnetSettings
                 * @property {google.api.IRubySettings|null} [rubySettings] ClientLibrarySettings rubySettings
                 * @property {google.api.IGoSettings|null} [goSettings] ClientLibrarySettings goSettings
                 */
    
                /**
                 * Constructs a new ClientLibrarySettings.
                 * @memberof google.api
                 * @classdesc Represents a ClientLibrarySettings.
                 * @implements IClientLibrarySettings
                 * @constructor
                 * @param {google.api.IClientLibrarySettings=} [properties] Properties to set
                 */
                function ClientLibrarySettings(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ClientLibrarySettings version.
                 * @member {string} version
                 * @memberof google.api.ClientLibrarySettings
                 * @instance
                 */
                ClientLibrarySettings.prototype.version = "";
    
                /**
                 * ClientLibrarySettings launchStage.
                 * @member {google.api.LaunchStage} launchStage
                 * @memberof google.api.ClientLibrarySettings
                 * @instance
                 */
                ClientLibrarySettings.prototype.launchStage = 0;
    
                /**
                 * ClientLibrarySettings restNumericEnums.
                 * @member {boolean} restNumericEnums
                 * @memberof google.api.ClientLibrarySettings
                 * @instance
                 */
                ClientLibrarySettings.prototype.restNumericEnums = false;
    
                /**
                 * ClientLibrarySettings javaSettings.
                 * @member {google.api.IJavaSettings|null|undefined} javaSettings
                 * @memberof google.api.ClientLibrarySettings
                 * @instance
                 */
                ClientLibrarySettings.prototype.javaSettings = null;
    
                /**
                 * ClientLibrarySettings cppSettings.
                 * @member {google.api.ICppSettings|null|undefined} cppSettings
                 * @memberof google.api.ClientLibrarySettings
                 * @instance
                 */
                ClientLibrarySettings.prototype.cppSettings = null;
    
                /**
                 * ClientLibrarySettings phpSettings.
                 * @member {google.api.IPhpSettings|null|undefined} phpSettings
                 * @memberof google.api.ClientLibrarySettings
                 * @instance
                 */
                ClientLibrarySettings.prototype.phpSettings = null;
    
                /**
                 * ClientLibrarySettings pythonSettings.
                 * @member {google.api.IPythonSettings|null|undefined} pythonSettings
                 * @memberof google.api.ClientLibrarySettings
                 * @instance
                 */
                ClientLibrarySettings.prototype.pythonSettings = null;
    
                /**
                 * ClientLibrarySettings nodeSettings.
                 * @member {google.api.INodeSettings|null|undefined} nodeSettings
                 * @memberof google.api.ClientLibrarySettings
                 * @instance
                 */
                ClientLibrarySettings.prototype.nodeSettings = null;
    
                /**
                 * ClientLibrarySettings dotnetSettings.
                 * @member {google.api.IDotnetSettings|null|undefined} dotnetSettings
                 * @memberof google.api.ClientLibrarySettings
                 * @instance
                 */
                ClientLibrarySettings.prototype.dotnetSettings = null;
    
                /**
                 * ClientLibrarySettings rubySettings.
                 * @member {google.api.IRubySettings|null|undefined} rubySettings
                 * @memberof google.api.ClientLibrarySettings
                 * @instance
                 */
                ClientLibrarySettings.prototype.rubySettings = null;
    
                /**
                 * ClientLibrarySettings goSettings.
                 * @member {google.api.IGoSettings|null|undefined} goSettings
                 * @memberof google.api.ClientLibrarySettings
                 * @instance
                 */
                ClientLibrarySettings.prototype.goSettings = null;
    
                /**
                 * Creates a new ClientLibrarySettings instance using the specified properties.
                 * @function create
                 * @memberof google.api.ClientLibrarySettings
                 * @static
                 * @param {google.api.IClientLibrarySettings=} [properties] Properties to set
                 * @returns {google.api.ClientLibrarySettings} ClientLibrarySettings instance
                 */
                ClientLibrarySettings.create = function create(properties) {
                    return new ClientLibrarySettings(properties);
                };
    
                /**
                 * Encodes the specified ClientLibrarySettings message. Does not implicitly {@link google.api.ClientLibrarySettings.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.ClientLibrarySettings
                 * @static
                 * @param {google.api.IClientLibrarySettings} message ClientLibrarySettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ClientLibrarySettings.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.version != null && Object.hasOwnProperty.call(message, "version"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.version);
                    if (message.launchStage != null && Object.hasOwnProperty.call(message, "launchStage"))
                        writer.uint32(/* id 2, wireType 0 =*/16).int32(message.launchStage);
                    if (message.restNumericEnums != null && Object.hasOwnProperty.call(message, "restNumericEnums"))
                        writer.uint32(/* id 3, wireType 0 =*/24).bool(message.restNumericEnums);
                    if (message.javaSettings != null && Object.hasOwnProperty.call(message, "javaSettings"))
                        $root.google.api.JavaSettings.encode(message.javaSettings, writer.uint32(/* id 21, wireType 2 =*/170).fork()).ldelim();
                    if (message.cppSettings != null && Object.hasOwnProperty.call(message, "cppSettings"))
                        $root.google.api.CppSettings.encode(message.cppSettings, writer.uint32(/* id 22, wireType 2 =*/178).fork()).ldelim();
                    if (message.phpSettings != null && Object.hasOwnProperty.call(message, "phpSettings"))
                        $root.google.api.PhpSettings.encode(message.phpSettings, writer.uint32(/* id 23, wireType 2 =*/186).fork()).ldelim();
                    if (message.pythonSettings != null && Object.hasOwnProperty.call(message, "pythonSettings"))
                        $root.google.api.PythonSettings.encode(message.pythonSettings, writer.uint32(/* id 24, wireType 2 =*/194).fork()).ldelim();
                    if (message.nodeSettings != null && Object.hasOwnProperty.call(message, "nodeSettings"))
                        $root.google.api.NodeSettings.encode(message.nodeSettings, writer.uint32(/* id 25, wireType 2 =*/202).fork()).ldelim();
                    if (message.dotnetSettings != null && Object.hasOwnProperty.call(message, "dotnetSettings"))
                        $root.google.api.DotnetSettings.encode(message.dotnetSettings, writer.uint32(/* id 26, wireType 2 =*/210).fork()).ldelim();
                    if (message.rubySettings != null && Object.hasOwnProperty.call(message, "rubySettings"))
                        $root.google.api.RubySettings.encode(message.rubySettings, writer.uint32(/* id 27, wireType 2 =*/218).fork()).ldelim();
                    if (message.goSettings != null && Object.hasOwnProperty.call(message, "goSettings"))
                        $root.google.api.GoSettings.encode(message.goSettings, writer.uint32(/* id 28, wireType 2 =*/226).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified ClientLibrarySettings message, length delimited. Does not implicitly {@link google.api.ClientLibrarySettings.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.ClientLibrarySettings
                 * @static
                 * @param {google.api.IClientLibrarySettings} message ClientLibrarySettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ClientLibrarySettings.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a ClientLibrarySettings message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.ClientLibrarySettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.ClientLibrarySettings} ClientLibrarySettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ClientLibrarySettings.decode = function decode(reader, length, error) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.ClientLibrarySettings();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        if (tag === error)
                            break;
                        switch (tag >>> 3) {
                        case 1: {
                                message.version = reader.string();
                                break;
                            }
                        case 2: {
                                message.launchStage = reader.int32();
                                break;
                            }
                        case 3: {
                                message.restNumericEnums = reader.bool();
                                break;
                            }
                        case 21: {
                                message.javaSettings = $root.google.api.JavaSettings.decode(reader, reader.uint32());
                                break;
                            }
                        case 22: {
                                message.cppSettings = $root.google.api.CppSettings.decode(reader, reader.uint32());
                                break;
                            }
                        case 23: {
                                message.phpSettings = $root.google.api.PhpSettings.decode(reader, reader.uint32());
                                break;
                            }
                        case 24: {
                                message.pythonSettings = $root.google.api.PythonSettings.decode(reader, reader.uint32());
                                break;
                            }
                        case 25: {
                                message.nodeSettings = $root.google.api.NodeSettings.decode(reader, reader.uint32());
                                break;
                            }
                        case 26: {
                                message.dotnetSettings = $root.google.api.DotnetSettings.decode(reader, reader.uint32());
                                break;
                            }
                        case 27: {
                                message.rubySettings = $root.google.api.RubySettings.decode(reader, reader.uint32());
                                break;
                            }
                        case 28: {
                                message.goSettings = $root.google.api.GoSettings.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a ClientLibrarySettings message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.ClientLibrarySettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.ClientLibrarySettings} ClientLibrarySettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ClientLibrarySettings.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a ClientLibrarySettings message.
                 * @function verify
                 * @memberof google.api.ClientLibrarySettings
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ClientLibrarySettings.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.version != null && message.hasOwnProperty("version"))
                        if (!$util.isString(message.version))
                            return "version: string expected";
                    if (message.launchStage != null && message.hasOwnProperty("launchStage"))
                        switch (message.launchStage) {
                        default:
                            return "launchStage: enum value expected";
                        case 0:
                        case 6:
                        case 7:
                        case 1:
                        case 2:
                        case 3:
                        case 4:
                        case 5:
                            break;
                        }
                    if (message.restNumericEnums != null && message.hasOwnProperty("restNumericEnums"))
                        if (typeof message.restNumericEnums !== "boolean")
                            return "restNumericEnums: boolean expected";
                    if (message.javaSettings != null && message.hasOwnProperty("javaSettings")) {
                        var error = $root.google.api.JavaSettings.verify(message.javaSettings);
                        if (error)
                            return "javaSettings." + error;
                    }
                    if (message.cppSettings != null && message.hasOwnProperty("cppSettings")) {
                        var error = $root.google.api.CppSettings.verify(message.cppSettings);
                        if (error)
                            return "cppSettings." + error;
                    }
                    if (message.phpSettings != null && message.hasOwnProperty("phpSettings")) {
                        var error = $root.google.api.PhpSettings.verify(message.phpSettings);
                        if (error)
                            return "phpSettings." + error;
                    }
                    if (message.pythonSettings != null && message.hasOwnProperty("pythonSettings")) {
                        var error = $root.google.api.PythonSettings.verify(message.pythonSettings);
                        if (error)
                            return "pythonSettings." + error;
                    }
                    if (message.nodeSettings != null && message.hasOwnProperty("nodeSettings")) {
                        var error = $root.google.api.NodeSettings.verify(message.nodeSettings);
                        if (error)
                            return "nodeSettings." + error;
                    }
                    if (message.dotnetSettings != null && message.hasOwnProperty("dotnetSettings")) {
                        var error = $root.google.api.DotnetSettings.verify(message.dotnetSettings);
                        if (error)
                            return "dotnetSettings." + error;
                    }
                    if (message.rubySettings != null && message.hasOwnProperty("rubySettings")) {
                        var error = $root.google.api.RubySettings.verify(message.rubySettings);
                        if (error)
                            return "rubySettings." + error;
                    }
                    if (message.goSettings != null && message.hasOwnProperty("goSettings")) {
                        var error = $root.google.api.GoSettings.verify(message.goSettings);
                        if (error)
                            return "goSettings." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a ClientLibrarySettings message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.ClientLibrarySettings
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.ClientLibrarySettings} ClientLibrarySettings
                 */
                ClientLibrarySettings.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.ClientLibrarySettings)
                        return object;
                    var message = new $root.google.api.ClientLibrarySettings();
                    if (object.version != null)
                        message.version = String(object.version);
                    switch (object.launchStage) {
                    default:
                        if (typeof object.launchStage === "number") {
                            message.launchStage = object.launchStage;
                            break;
                        }
                        break;
                    case "LAUNCH_STAGE_UNSPECIFIED":
                    case 0:
                        message.launchStage = 0;
                        break;
                    case "UNIMPLEMENTED":
                    case 6:
                        message.launchStage = 6;
                        break;
                    case "PRELAUNCH":
                    case 7:
                        message.launchStage = 7;
                        break;
                    case "EARLY_ACCESS":
                    case 1:
                        message.launchStage = 1;
                        break;
                    case "ALPHA":
                    case 2:
                        message.launchStage = 2;
                        break;
                    case "BETA":
                    case 3:
                        message.launchStage = 3;
                        break;
                    case "GA":
                    case 4:
                        message.launchStage = 4;
                        break;
                    case "DEPRECATED":
                    case 5:
                        message.launchStage = 5;
                        break;
                    }
                    if (object.restNumericEnums != null)
                        message.restNumericEnums = Boolean(object.restNumericEnums);
                    if (object.javaSettings != null) {
                        if (typeof object.javaSettings !== "object")
                            throw TypeError(".google.api.ClientLibrarySettings.javaSettings: object expected");
                        message.javaSettings = $root.google.api.JavaSettings.fromObject(object.javaSettings);
                    }
                    if (object.cppSettings != null) {
                        if (typeof object.cppSettings !== "object")
                            throw TypeError(".google.api.ClientLibrarySettings.cppSettings: object expected");
                        message.cppSettings = $root.google.api.CppSettings.fromObject(object.cppSettings);
                    }
                    if (object.phpSettings != null) {
                        if (typeof object.phpSettings !== "object")
                            throw TypeError(".google.api.ClientLibrarySettings.phpSettings: object expected");
                        message.phpSettings = $root.google.api.PhpSettings.fromObject(object.phpSettings);
                    }
                    if (object.pythonSettings != null) {
                        if (typeof object.pythonSettings !== "object")
                            throw TypeError(".google.api.ClientLibrarySettings.pythonSettings: object expected");
                        message.pythonSettings = $root.google.api.PythonSettings.fromObject(object.pythonSettings);
                    }
                    if (object.nodeSettings != null) {
                        if (typeof object.nodeSettings !== "object")
                            throw TypeError(".google.api.ClientLibrarySettings.nodeSettings: object expected");
                        message.nodeSettings = $root.google.api.NodeSettings.fromObject(object.nodeSettings);
                    }
                    if (object.dotnetSettings != null) {
                        if (typeof object.dotnetSettings !== "object")
                            throw TypeError(".google.api.ClientLibrarySettings.dotnetSettings: object expected");
                        message.dotnetSettings = $root.google.api.DotnetSettings.fromObject(object.dotnetSettings);
                    }
                    if (object.rubySettings != null) {
                        if (typeof object.rubySettings !== "object")
                            throw TypeError(".google.api.ClientLibrarySettings.rubySettings: object expected");
                        message.rubySettings = $root.google.api.RubySettings.fromObject(object.rubySettings);
                    }
                    if (object.goSettings != null) {
                        if (typeof object.goSettings !== "object")
                            throw TypeError(".google.api.ClientLibrarySettings.goSettings: object expected");
                        message.goSettings = $root.google.api.GoSettings.fromObject(object.goSettings);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a ClientLibrarySettings message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.ClientLibrarySettings
                 * @static
                 * @param {google.api.ClientLibrarySettings} message ClientLibrarySettings
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ClientLibrarySettings.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.version = "";
                        object.launchStage = options.enums === String ? "LAUNCH_STAGE_UNSPECIFIED" : 0;
                        object.restNumericEnums = false;
                        object.javaSettings = null;
                        object.cppSettings = null;
                        object.phpSettings = null;
                        object.pythonSettings = null;
                        object.nodeSettings = null;
                        object.dotnetSettings = null;
                        object.rubySettings = null;
                        object.goSettings = null;
                    }
                    if (message.version != null && message.hasOwnProperty("version"))
                        object.version = message.version;
                    if (message.launchStage != null && message.hasOwnProperty("launchStage"))
                        object.launchStage = options.enums === String ? $root.google.api.LaunchStage[message.launchStage] === undefined ? message.launchStage : $root.google.api.LaunchStage[message.launchStage] : message.launchStage;
                    if (message.restNumericEnums != null && message.hasOwnProperty("restNumericEnums"))
                        object.restNumericEnums = message.restNumericEnums;
                    if (message.javaSettings != null && message.hasOwnProperty("javaSettings"))
                        object.javaSettings = $root.google.api.JavaSettings.toObject(message.javaSettings, options);
                    if (message.cppSettings != null && message.hasOwnProperty("cppSettings"))
                        object.cppSettings = $root.google.api.CppSettings.toObject(message.cppSettings, options);
                    if (message.phpSettings != null && message.hasOwnProperty("phpSettings"))
                        object.phpSettings = $root.google.api.PhpSettings.toObject(message.phpSettings, options);
                    if (message.pythonSettings != null && message.hasOwnProperty("pythonSettings"))
                        object.pythonSettings = $root.google.api.PythonSettings.toObject(message.pythonSettings, options);
                    if (message.nodeSettings != null && message.hasOwnProperty("nodeSettings"))
                        object.nodeSettings = $root.google.api.NodeSettings.toObject(message.nodeSettings, options);
                    if (message.dotnetSettings != null && message.hasOwnProperty("dotnetSettings"))
                        object.dotnetSettings = $root.google.api.DotnetSettings.toObject(message.dotnetSettings, options);
                    if (message.rubySettings != null && message.hasOwnProperty("rubySettings"))
                        object.rubySettings = $root.google.api.RubySettings.toObject(message.rubySettings, options);
                    if (message.goSettings != null && message.hasOwnProperty("goSettings"))
                        object.goSettings = $root.google.api.GoSettings.toObject(message.goSettings, options);
                    return object;
                };
    
                /**
                 * Converts this ClientLibrarySettings to JSON.
                 * @function toJSON
                 * @memberof google.api.ClientLibrarySettings
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ClientLibrarySettings.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for ClientLibrarySettings
                 * @function getTypeUrl
                 * @memberof google.api.ClientLibrarySettings
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                ClientLibrarySettings.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.ClientLibrarySettings";
                };
    
                return ClientLibrarySettings;
            })();
    
            api.Publishing = (function() {
    
                /**
                 * Properties of a Publishing.
                 * @memberof google.api
                 * @interface IPublishing
                 * @property {Array.<google.api.IMethodSettings>|null} [methodSettings] Publishing methodSettings
                 * @property {string|null} [newIssueUri] Publishing newIssueUri
                 * @property {string|null} [documentationUri] Publishing documentationUri
                 * @property {string|null} [apiShortName] Publishing apiShortName
                 * @property {string|null} [githubLabel] Publishing githubLabel
                 * @property {Array.<string>|null} [codeownerGithubTeams] Publishing codeownerGithubTeams
                 * @property {string|null} [docTagPrefix] Publishing docTagPrefix
                 * @property {google.api.ClientLibraryOrganization|null} [organization] Publishing organization
                 * @property {Array.<google.api.IClientLibrarySettings>|null} [librarySettings] Publishing librarySettings
                 * @property {string|null} [protoReferenceDocumentationUri] Publishing protoReferenceDocumentationUri
                 * @property {string|null} [restReferenceDocumentationUri] Publishing restReferenceDocumentationUri
                 */
    
                /**
                 * Constructs a new Publishing.
                 * @memberof google.api
                 * @classdesc Represents a Publishing.
                 * @implements IPublishing
                 * @constructor
                 * @param {google.api.IPublishing=} [properties] Properties to set
                 */
                function Publishing(properties) {
                    this.methodSettings = [];
                    this.codeownerGithubTeams = [];
                    this.librarySettings = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Publishing methodSettings.
                 * @member {Array.<google.api.IMethodSettings>} methodSettings
                 * @memberof google.api.Publishing
                 * @instance
                 */
                Publishing.prototype.methodSettings = $util.emptyArray;
    
                /**
                 * Publishing newIssueUri.
                 * @member {string} newIssueUri
                 * @memberof google.api.Publishing
                 * @instance
                 */
                Publishing.prototype.newIssueUri = "";
    
                /**
                 * Publishing documentationUri.
                 * @member {string} documentationUri
                 * @memberof google.api.Publishing
                 * @instance
                 */
                Publishing.prototype.documentationUri = "";
    
                /**
                 * Publishing apiShortName.
                 * @member {string} apiShortName
                 * @memberof google.api.Publishing
                 * @instance
                 */
                Publishing.prototype.apiShortName = "";
    
                /**
                 * Publishing githubLabel.
                 * @member {string} githubLabel
                 * @memberof google.api.Publishing
                 * @instance
                 */
                Publishing.prototype.githubLabel = "";
    
                /**
                 * Publishing codeownerGithubTeams.
                 * @member {Array.<string>} codeownerGithubTeams
                 * @memberof google.api.Publishing
                 * @instance
                 */
                Publishing.prototype.codeownerGithubTeams = $util.emptyArray;
    
                /**
                 * Publishing docTagPrefix.
                 * @member {string} docTagPrefix
                 * @memberof google.api.Publishing
                 * @instance
                 */
                Publishing.prototype.docTagPrefix = "";
    
                /**
                 * Publishing organization.
                 * @member {google.api.ClientLibraryOrganization} organization
                 * @memberof google.api.Publishing
                 * @instance
                 */
                Publishing.prototype.organization = 0;
    
                /**
                 * Publishing librarySettings.
                 * @member {Array.<google.api.IClientLibrarySettings>} librarySettings
                 * @memberof google.api.Publishing
                 * @instance
                 */
                Publishing.prototype.librarySettings = $util.emptyArray;
    
                /**
                 * Publishing protoReferenceDocumentationUri.
                 * @member {string} protoReferenceDocumentationUri
                 * @memberof google.api.Publishing
                 * @instance
                 */
                Publishing.prototype.protoReferenceDocumentationUri = "";
    
                /**
                 * Publishing restReferenceDocumentationUri.
                 * @member {string} restReferenceDocumentationUri
                 * @memberof google.api.Publishing
                 * @instance
                 */
                Publishing.prototype.restReferenceDocumentationUri = "";
    
                /**
                 * Creates a new Publishing instance using the specified properties.
                 * @function create
                 * @memberof google.api.Publishing
                 * @static
                 * @param {google.api.IPublishing=} [properties] Properties to set
                 * @returns {google.api.Publishing} Publishing instance
                 */
                Publishing.create = function create(properties) {
                    return new Publishing(properties);
                };
    
                /**
                 * Encodes the specified Publishing message. Does not implicitly {@link google.api.Publishing.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.Publishing
                 * @static
                 * @param {google.api.IPublishing} message Publishing message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Publishing.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.methodSettings != null && message.methodSettings.length)
                        for (var i = 0; i < message.methodSettings.length; ++i)
                            $root.google.api.MethodSettings.encode(message.methodSettings[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.newIssueUri != null && Object.hasOwnProperty.call(message, "newIssueUri"))
                        writer.uint32(/* id 101, wireType 2 =*/810).string(message.newIssueUri);
                    if (message.documentationUri != null && Object.hasOwnProperty.call(message, "documentationUri"))
                        writer.uint32(/* id 102, wireType 2 =*/818).string(message.documentationUri);
                    if (message.apiShortName != null && Object.hasOwnProperty.call(message, "apiShortName"))
                        writer.uint32(/* id 103, wireType 2 =*/826).string(message.apiShortName);
                    if (message.githubLabel != null && Object.hasOwnProperty.call(message, "githubLabel"))
                        writer.uint32(/* id 104, wireType 2 =*/834).string(message.githubLabel);
                    if (message.codeownerGithubTeams != null && message.codeownerGithubTeams.length)
                        for (var i = 0; i < message.codeownerGithubTeams.length; ++i)
                            writer.uint32(/* id 105, wireType 2 =*/842).string(message.codeownerGithubTeams[i]);
                    if (message.docTagPrefix != null && Object.hasOwnProperty.call(message, "docTagPrefix"))
                        writer.uint32(/* id 106, wireType 2 =*/850).string(message.docTagPrefix);
                    if (message.organization != null && Object.hasOwnProperty.call(message, "organization"))
                        writer.uint32(/* id 107, wireType 0 =*/856).int32(message.organization);
                    if (message.librarySettings != null && message.librarySettings.length)
                        for (var i = 0; i < message.librarySettings.length; ++i)
                            $root.google.api.ClientLibrarySettings.encode(message.librarySettings[i], writer.uint32(/* id 109, wireType 2 =*/874).fork()).ldelim();
                    if (message.protoReferenceDocumentationUri != null && Object.hasOwnProperty.call(message, "protoReferenceDocumentationUri"))
                        writer.uint32(/* id 110, wireType 2 =*/882).string(message.protoReferenceDocumentationUri);
                    if (message.restReferenceDocumentationUri != null && Object.hasOwnProperty.call(message, "restReferenceDocumentationUri"))
                        writer.uint32(/* id 111, wireType 2 =*/890).string(message.restReferenceDocumentationUri);
                    return writer;
                };
    
                /**
                 * Encodes the specified Publishing message, length delimited. Does not implicitly {@link google.api.Publishing.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.Publishing
                 * @static
                 * @param {google.api.IPublishing} message Publishing message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Publishing.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a Publishing message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.Publishing
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.Publishing} Publishing
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Publishing.decode = function decode(reader, length, error) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.Publishing();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        if (tag === error)
                            break;
                        switch (tag >>> 3) {
                        case 2: {
                                if (!(message.methodSettings && message.methodSettings.length))
                                    message.methodSettings = [];
                                message.methodSettings.push($root.google.api.MethodSettings.decode(reader, reader.uint32()));
                                break;
                            }
                        case 101: {
                                message.newIssueUri = reader.string();
                                break;
                            }
                        case 102: {
                                message.documentationUri = reader.string();
                                break;
                            }
                        case 103: {
                                message.apiShortName = reader.string();
                                break;
                            }
                        case 104: {
                                message.githubLabel = reader.string();
                                break;
                            }
                        case 105: {
                                if (!(message.codeownerGithubTeams && message.codeownerGithubTeams.length))
                                    message.codeownerGithubTeams = [];
                                message.codeownerGithubTeams.push(reader.string());
                                break;
                            }
                        case 106: {
                                message.docTagPrefix = reader.string();
                                break;
                            }
                        case 107: {
                                message.organization = reader.int32();
                                break;
                            }
                        case 109: {
                                if (!(message.librarySettings && message.librarySettings.length))
                                    message.librarySettings = [];
                                message.librarySettings.push($root.google.api.ClientLibrarySettings.decode(reader, reader.uint32()));
                                break;
                            }
                        case 110: {
                                message.protoReferenceDocumentationUri = reader.string();
                                break;
                            }
                        case 111: {
                                message.restReferenceDocumentationUri = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a Publishing message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.Publishing
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.Publishing} Publishing
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Publishing.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a Publishing message.
                 * @function verify
                 * @memberof google.api.Publishing
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Publishing.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.methodSettings != null && message.hasOwnProperty("methodSettings")) {
                        if (!Array.isArray(message.methodSettings))
                            return "methodSettings: array expected";
                        for (var i = 0; i < message.methodSettings.length; ++i) {
                            var error = $root.google.api.MethodSettings.verify(message.methodSettings[i]);
                            if (error)
                                return "methodSettings." + error;
                        }
                    }
                    if (message.newIssueUri != null && message.hasOwnProperty("newIssueUri"))
                        if (!$util.isString(message.newIssueUri))
                            return "newIssueUri: string expected";
                    if (message.documentationUri != null && message.hasOwnProperty("documentationUri"))
                        if (!$util.isString(message.documentationUri))
                            return "documentationUri: string expected";
                    if (message.apiShortName != null && message.hasOwnProperty("apiShortName"))
                        if (!$util.isString(message.apiShortName))
                            return "apiShortName: string expected";
                    if (message.githubLabel != null && message.hasOwnProperty("githubLabel"))
                        if (!$util.isString(message.githubLabel))
                            return "githubLabel: string expected";
                    if (message.codeownerGithubTeams != null && message.hasOwnProperty("codeownerGithubTeams")) {
                        if (!Array.isArray(message.codeownerGithubTeams))
                            return "codeownerGithubTeams: array expected";
                        for (var i = 0; i < message.codeownerGithubTeams.length; ++i)
                            if (!$util.isString(message.codeownerGithubTeams[i]))
                                return "codeownerGithubTeams: string[] expected";
                    }
                    if (message.docTagPrefix != null && message.hasOwnProperty("docTagPrefix"))
                        if (!$util.isString(message.docTagPrefix))
                            return "docTagPrefix: string expected";
                    if (message.organization != null && message.hasOwnProperty("organization"))
                        switch (message.organization) {
                        default:
                            return "organization: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                        case 3:
                        case 4:
                        case 5:
                        case 6:
                        case 7:
                            break;
                        }
                    if (message.librarySettings != null && message.hasOwnProperty("librarySettings")) {
                        if (!Array.isArray(message.librarySettings))
                            return "librarySettings: array expected";
                        for (var i = 0; i < message.librarySettings.length; ++i) {
                            var error = $root.google.api.ClientLibrarySettings.verify(message.librarySettings[i]);
                            if (error)
                                return "librarySettings." + error;
                        }
                    }
                    if (message.protoReferenceDocumentationUri != null && message.hasOwnProperty("protoReferenceDocumentationUri"))
                        if (!$util.isString(message.protoReferenceDocumentationUri))
                            return "protoReferenceDocumentationUri: string expected";
                    if (message.restReferenceDocumentationUri != null && message.hasOwnProperty("restReferenceDocumentationUri"))
                        if (!$util.isString(message.restReferenceDocumentationUri))
                            return "restReferenceDocumentationUri: string expected";
                    return null;
                };
    
                /**
                 * Creates a Publishing message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.Publishing
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.Publishing} Publishing
                 */
                Publishing.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.Publishing)
                        return object;
                    var message = new $root.google.api.Publishing();
                    if (object.methodSettings) {
                        if (!Array.isArray(object.methodSettings))
                            throw TypeError(".google.api.Publishing.methodSettings: array expected");
                        message.methodSettings = [];
                        for (var i = 0; i < object.methodSettings.length; ++i) {
                            if (typeof object.methodSettings[i] !== "object")
                                throw TypeError(".google.api.Publishing.methodSettings: object expected");
                            message.methodSettings[i] = $root.google.api.MethodSettings.fromObject(object.methodSettings[i]);
                        }
                    }
                    if (object.newIssueUri != null)
                        message.newIssueUri = String(object.newIssueUri);
                    if (object.documentationUri != null)
                        message.documentationUri = String(object.documentationUri);
                    if (object.apiShortName != null)
                        message.apiShortName = String(object.apiShortName);
                    if (object.githubLabel != null)
                        message.githubLabel = String(object.githubLabel);
                    if (object.codeownerGithubTeams) {
                        if (!Array.isArray(object.codeownerGithubTeams))
                            throw TypeError(".google.api.Publishing.codeownerGithubTeams: array expected");
                        message.codeownerGithubTeams = [];
                        for (var i = 0; i < object.codeownerGithubTeams.length; ++i)
                            message.codeownerGithubTeams[i] = String(object.codeownerGithubTeams[i]);
                    }
                    if (object.docTagPrefix != null)
                        message.docTagPrefix = String(object.docTagPrefix);
                    switch (object.organization) {
                    default:
                        if (typeof object.organization === "number") {
                            message.organization = object.organization;
                            break;
                        }
                        break;
                    case "CLIENT_LIBRARY_ORGANIZATION_UNSPECIFIED":
                    case 0:
                        message.organization = 0;
                        break;
                    case "CLOUD":
                    case 1:
                        message.organization = 1;
                        break;
                    case "ADS":
                    case 2:
                        message.organization = 2;
                        break;
                    case "PHOTOS":
                    case 3:
                        message.organization = 3;
                        break;
                    case "STREET_VIEW":
                    case 4:
                        message.organization = 4;
                        break;
                    case "SHOPPING":
                    case 5:
                        message.organization = 5;
                        break;
                    case "GEO":
                    case 6:
                        message.organization = 6;
                        break;
                    case "GENERATIVE_AI":
                    case 7:
                        message.organization = 7;
                        break;
                    }
                    if (object.librarySettings) {
                        if (!Array.isArray(object.librarySettings))
                            throw TypeError(".google.api.Publishing.librarySettings: array expected");
                        message.librarySettings = [];
                        for (var i = 0; i < object.librarySettings.length; ++i) {
                            if (typeof object.librarySettings[i] !== "object")
                                throw TypeError(".google.api.Publishing.librarySettings: object expected");
                            message.librarySettings[i] = $root.google.api.ClientLibrarySettings.fromObject(object.librarySettings[i]);
                        }
                    }
                    if (object.protoReferenceDocumentationUri != null)
                        message.protoReferenceDocumentationUri = String(object.protoReferenceDocumentationUri);
                    if (object.restReferenceDocumentationUri != null)
                        message.restReferenceDocumentationUri = String(object.restReferenceDocumentationUri);
                    return message;
                };
    
                /**
                 * Creates a plain object from a Publishing message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.Publishing
                 * @static
                 * @param {google.api.Publishing} message Publishing
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Publishing.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.methodSettings = [];
                        object.codeownerGithubTeams = [];
                        object.librarySettings = [];
                    }
                    if (options.defaults) {
                        object.newIssueUri = "";
                        object.documentationUri = "";
                        object.apiShortName = "";
                        object.githubLabel = "";
                        object.docTagPrefix = "";
                        object.organization = options.enums === String ? "CLIENT_LIBRARY_ORGANIZATION_UNSPECIFIED" : 0;
                        object.protoReferenceDocumentationUri = "";
                        object.restReferenceDocumentationUri = "";
                    }
                    if (message.methodSettings && message.methodSettings.length) {
                        object.methodSettings = [];
                        for (var j = 0; j < message.methodSettings.length; ++j)
                            object.methodSettings[j] = $root.google.api.MethodSettings.toObject(message.methodSettings[j], options);
                    }
                    if (message.newIssueUri != null && message.hasOwnProperty("newIssueUri"))
                        object.newIssueUri = message.newIssueUri;
                    if (message.documentationUri != null && message.hasOwnProperty("documentationUri"))
                        object.documentationUri = message.documentationUri;
                    if (message.apiShortName != null && message.hasOwnProperty("apiShortName"))
                        object.apiShortName = message.apiShortName;
                    if (message.githubLabel != null && message.hasOwnProperty("githubLabel"))
                        object.githubLabel = message.githubLabel;
                    if (message.codeownerGithubTeams && message.codeownerGithubTeams.length) {
                        object.codeownerGithubTeams = [];
                        for (var j = 0; j < message.codeownerGithubTeams.length; ++j)
                            object.codeownerGithubTeams[j] = message.codeownerGithubTeams[j];
                    }
                    if (message.docTagPrefix != null && message.hasOwnProperty("docTagPrefix"))
                        object.docTagPrefix = message.docTagPrefix;
                    if (message.organization != null && message.hasOwnProperty("organization"))
                        object.organization = options.enums === String ? $root.google.api.ClientLibraryOrganization[message.organization] === undefined ? message.organization : $root.google.api.ClientLibraryOrganization[message.organization] : message.organization;
                    if (message.librarySettings && message.librarySettings.length) {
                        object.librarySettings = [];
                        for (var j = 0; j < message.librarySettings.length; ++j)
                            object.librarySettings[j] = $root.google.api.ClientLibrarySettings.toObject(message.librarySettings[j], options);
                    }
                    if (message.protoReferenceDocumentationUri != null && message.hasOwnProperty("protoReferenceDocumentationUri"))
                        object.protoReferenceDocumentationUri = message.protoReferenceDocumentationUri;
                    if (message.restReferenceDocumentationUri != null && message.hasOwnProperty("restReferenceDocumentationUri"))
                        object.restReferenceDocumentationUri = message.restReferenceDocumentationUri;
                    return object;
                };
    
                /**
                 * Converts this Publishing to JSON.
                 * @function toJSON
                 * @memberof google.api.Publishing
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Publishing.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Publishing
                 * @function getTypeUrl
                 * @memberof google.api.Publishing
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Publishing.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.Publishing";
                };
    
                return Publishing;
            })();
    
            api.JavaSettings = (function() {
    
                /**
                 * Properties of a JavaSettings.
                 * @memberof google.api
                 * @interface IJavaSettings
                 * @property {string|null} [libraryPackage] JavaSettings libraryPackage
                 * @property {Object.<string,string>|null} [serviceClassNames] JavaSettings serviceClassNames
                 * @property {google.api.ICommonLanguageSettings|null} [common] JavaSettings common
                 */
    
                /**
                 * Constructs a new JavaSettings.
                 * @memberof google.api
                 * @classdesc Represents a JavaSettings.
                 * @implements IJavaSettings
                 * @constructor
                 * @param {google.api.IJavaSettings=} [properties] Properties to set
                 */
                function JavaSettings(properties) {
                    this.serviceClassNames = {};
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * JavaSettings libraryPackage.
                 * @member {string} libraryPackage
                 * @memberof google.api.JavaSettings
                 * @instance
                 */
                JavaSettings.prototype.libraryPackage = "";
    
                /**
                 * JavaSettings serviceClassNames.
                 * @member {Object.<string,string>} serviceClassNames
                 * @memberof google.api.JavaSettings
                 * @instance
                 */
                JavaSettings.prototype.serviceClassNames = $util.emptyObject;
    
                /**
                 * JavaSettings common.
                 * @member {google.api.ICommonLanguageSettings|null|undefined} common
                 * @memberof google.api.JavaSettings
                 * @instance
                 */
                JavaSettings.prototype.common = null;
    
                /**
                 * Creates a new JavaSettings instance using the specified properties.
                 * @function create
                 * @memberof google.api.JavaSettings
                 * @static
                 * @param {google.api.IJavaSettings=} [properties] Properties to set
                 * @returns {google.api.JavaSettings} JavaSettings instance
                 */
                JavaSettings.create = function create(properties) {
                    return new JavaSettings(properties);
                };
    
                /**
                 * Encodes the specified JavaSettings message. Does not implicitly {@link google.api.JavaSettings.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.JavaSettings
                 * @static
                 * @param {google.api.IJavaSettings} message JavaSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                JavaSettings.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.libraryPackage != null && Object.hasOwnProperty.call(message, "libraryPackage"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.libraryPackage);
                    if (message.serviceClassNames != null && Object.hasOwnProperty.call(message, "serviceClassNames"))
                        for (var keys = Object.keys(message.serviceClassNames), i = 0; i < keys.length; ++i)
                            writer.uint32(/* id 2, wireType 2 =*/18).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.serviceClassNames[keys[i]]).ldelim();
                    if (message.common != null && Object.hasOwnProperty.call(message, "common"))
                        $root.google.api.CommonLanguageSettings.encode(message.common, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified JavaSettings message, length delimited. Does not implicitly {@link google.api.JavaSettings.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.JavaSettings
                 * @static
                 * @param {google.api.IJavaSettings} message JavaSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                JavaSettings.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a JavaSettings message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.JavaSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.JavaSettings} JavaSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                JavaSettings.decode = function decode(reader, length, error) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.JavaSettings(), key, value;
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        if (tag === error)
                            break;
                        switch (tag >>> 3) {
                        case 1: {
                                message.libraryPackage = reader.string();
                                break;
                            }
                        case 2: {
                                if (message.serviceClassNames === $util.emptyObject)
                                    message.serviceClassNames = {};
                                var end2 = reader.uint32() + reader.pos;
                                key = "";
                                value = "";
                                while (reader.pos < end2) {
                                    var tag2 = reader.uint32();
                                    switch (tag2 >>> 3) {
                                    case 1:
                                        key = reader.string();
                                        break;
                                    case 2:
                                        value = reader.string();
                                        break;
                                    default:
                                        reader.skipType(tag2 & 7);
                                        break;
                                    }
                                }
                                message.serviceClassNames[key] = value;
                                break;
                            }
                        case 3: {
                                message.common = $root.google.api.CommonLanguageSettings.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a JavaSettings message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.JavaSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.JavaSettings} JavaSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                JavaSettings.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a JavaSettings message.
                 * @function verify
                 * @memberof google.api.JavaSettings
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                JavaSettings.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.libraryPackage != null && message.hasOwnProperty("libraryPackage"))
                        if (!$util.isString(message.libraryPackage))
                            return "libraryPackage: string expected";
                    if (message.serviceClassNames != null && message.hasOwnProperty("serviceClassNames")) {
                        if (!$util.isObject(message.serviceClassNames))
                            return "serviceClassNames: object expected";
                        var key = Object.keys(message.serviceClassNames);
                        for (var i = 0; i < key.length; ++i)
                            if (!$util.isString(message.serviceClassNames[key[i]]))
                                return "serviceClassNames: string{k:string} expected";
                    }
                    if (message.common != null && message.hasOwnProperty("common")) {
                        var error = $root.google.api.CommonLanguageSettings.verify(message.common);
                        if (error)
                            return "common." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a JavaSettings message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.JavaSettings
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.JavaSettings} JavaSettings
                 */
                JavaSettings.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.JavaSettings)
                        return object;
                    var message = new $root.google.api.JavaSettings();
                    if (object.libraryPackage != null)
                        message.libraryPackage = String(object.libraryPackage);
                    if (object.serviceClassNames) {
                        if (typeof object.serviceClassNames !== "object")
                            throw TypeError(".google.api.JavaSettings.serviceClassNames: object expected");
                        message.serviceClassNames = {};
                        for (var keys = Object.keys(object.serviceClassNames), i = 0; i < keys.length; ++i)
                            message.serviceClassNames[keys[i]] = String(object.serviceClassNames[keys[i]]);
                    }
                    if (object.common != null) {
                        if (typeof object.common !== "object")
                            throw TypeError(".google.api.JavaSettings.common: object expected");
                        message.common = $root.google.api.CommonLanguageSettings.fromObject(object.common);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a JavaSettings message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.JavaSettings
                 * @static
                 * @param {google.api.JavaSettings} message JavaSettings
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                JavaSettings.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.objects || options.defaults)
                        object.serviceClassNames = {};
                    if (options.defaults) {
                        object.libraryPackage = "";
                        object.common = null;
                    }
                    if (message.libraryPackage != null && message.hasOwnProperty("libraryPackage"))
                        object.libraryPackage = message.libraryPackage;
                    var keys2;
                    if (message.serviceClassNames && (keys2 = Object.keys(message.serviceClassNames)).length) {
                        object.serviceClassNames = {};
                        for (var j = 0; j < keys2.length; ++j)
                            object.serviceClassNames[keys2[j]] = message.serviceClassNames[keys2[j]];
                    }
                    if (message.common != null && message.hasOwnProperty("common"))
                        object.common = $root.google.api.CommonLanguageSettings.toObject(message.common, options);
                    return object;
                };
    
                /**
                 * Converts this JavaSettings to JSON.
                 * @function toJSON
                 * @memberof google.api.JavaSettings
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                JavaSettings.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for JavaSettings
                 * @function getTypeUrl
                 * @memberof google.api.JavaSettings
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                JavaSettings.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.JavaSettings";
                };
    
                return JavaSettings;
            })();
    
            api.CppSettings = (function() {
    
                /**
                 * Properties of a CppSettings.
                 * @memberof google.api
                 * @interface ICppSettings
                 * @property {google.api.ICommonLanguageSettings|null} [common] CppSettings common
                 */
    
                /**
                 * Constructs a new CppSettings.
                 * @memberof google.api
                 * @classdesc Represents a CppSettings.
                 * @implements ICppSettings
                 * @constructor
                 * @param {google.api.ICppSettings=} [properties] Properties to set
                 */
                function CppSettings(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * CppSettings common.
                 * @member {google.api.ICommonLanguageSettings|null|undefined} common
                 * @memberof google.api.CppSettings
                 * @instance
                 */
                CppSettings.prototype.common = null;
    
                /**
                 * Creates a new CppSettings instance using the specified properties.
                 * @function create
                 * @memberof google.api.CppSettings
                 * @static
                 * @param {google.api.ICppSettings=} [properties] Properties to set
                 * @returns {google.api.CppSettings} CppSettings instance
                 */
                CppSettings.create = function create(properties) {
                    return new CppSettings(properties);
                };
    
                /**
                 * Encodes the specified CppSettings message. Does not implicitly {@link google.api.CppSettings.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.CppSettings
                 * @static
                 * @param {google.api.ICppSettings} message CppSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                CppSettings.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.common != null && Object.hasOwnProperty.call(message, "common"))
                        $root.google.api.CommonLanguageSettings.encode(message.common, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified CppSettings message, length delimited. Does not implicitly {@link google.api.CppSettings.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.CppSettings
                 * @static
                 * @param {google.api.ICppSettings} message CppSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                CppSettings.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a CppSettings message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.CppSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.CppSettings} CppSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                CppSettings.decode = function decode(reader, length, error) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.CppSettings();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        if (tag === error)
                            break;
                        switch (tag >>> 3) {
                        case 1: {
                                message.common = $root.google.api.CommonLanguageSettings.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a CppSettings message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.CppSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.CppSettings} CppSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                CppSettings.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a CppSettings message.
                 * @function verify
                 * @memberof google.api.CppSettings
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                CppSettings.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.common != null && message.hasOwnProperty("common")) {
                        var error = $root.google.api.CommonLanguageSettings.verify(message.common);
                        if (error)
                            return "common." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a CppSettings message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.CppSettings
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.CppSettings} CppSettings
                 */
                CppSettings.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.CppSettings)
                        return object;
                    var message = new $root.google.api.CppSettings();
                    if (object.common != null) {
                        if (typeof object.common !== "object")
                            throw TypeError(".google.api.CppSettings.common: object expected");
                        message.common = $root.google.api.CommonLanguageSettings.fromObject(object.common);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a CppSettings message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.CppSettings
                 * @static
                 * @param {google.api.CppSettings} message CppSettings
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                CppSettings.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.common = null;
                    if (message.common != null && message.hasOwnProperty("common"))
                        object.common = $root.google.api.CommonLanguageSettings.toObject(message.common, options);
                    return object;
                };
    
                /**
                 * Converts this CppSettings to JSON.
                 * @function toJSON
                 * @memberof google.api.CppSettings
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                CppSettings.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for CppSettings
                 * @function getTypeUrl
                 * @memberof google.api.CppSettings
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                CppSettings.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.CppSettings";
                };
    
                return CppSettings;
            })();
    
            api.PhpSettings = (function() {
    
                /**
                 * Properties of a PhpSettings.
                 * @memberof google.api
                 * @interface IPhpSettings
                 * @property {google.api.ICommonLanguageSettings|null} [common] PhpSettings common
                 */
    
                /**
                 * Constructs a new PhpSettings.
                 * @memberof google.api
                 * @classdesc Represents a PhpSettings.
                 * @implements IPhpSettings
                 * @constructor
                 * @param {google.api.IPhpSettings=} [properties] Properties to set
                 */
                function PhpSettings(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * PhpSettings common.
                 * @member {google.api.ICommonLanguageSettings|null|undefined} common
                 * @memberof google.api.PhpSettings
                 * @instance
                 */
                PhpSettings.prototype.common = null;
    
                /**
                 * Creates a new PhpSettings instance using the specified properties.
                 * @function create
                 * @memberof google.api.PhpSettings
                 * @static
                 * @param {google.api.IPhpSettings=} [properties] Properties to set
                 * @returns {google.api.PhpSettings} PhpSettings instance
                 */
                PhpSettings.create = function create(properties) {
                    return new PhpSettings(properties);
                };
    
                /**
                 * Encodes the specified PhpSettings message. Does not implicitly {@link google.api.PhpSettings.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.PhpSettings
                 * @static
                 * @param {google.api.IPhpSettings} message PhpSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                PhpSettings.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.common != null && Object.hasOwnProperty.call(message, "common"))
                        $root.google.api.CommonLanguageSettings.encode(message.common, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified PhpSettings message, length delimited. Does not implicitly {@link google.api.PhpSettings.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.PhpSettings
                 * @static
                 * @param {google.api.IPhpSettings} message PhpSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                PhpSettings.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a PhpSettings message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.PhpSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.PhpSettings} PhpSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                PhpSettings.decode = function decode(reader, length, error) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.PhpSettings();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        if (tag === error)
                            break;
                        switch (tag >>> 3) {
                        case 1: {
                                message.common = $root.google.api.CommonLanguageSettings.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a PhpSettings message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.PhpSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.PhpSettings} PhpSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                PhpSettings.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a PhpSettings message.
                 * @function verify
                 * @memberof google.api.PhpSettings
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                PhpSettings.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.common != null && message.hasOwnProperty("common")) {
                        var error = $root.google.api.CommonLanguageSettings.verify(message.common);
                        if (error)
                            return "common." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a PhpSettings message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.PhpSettings
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.PhpSettings} PhpSettings
                 */
                PhpSettings.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.PhpSettings)
                        return object;
                    var message = new $root.google.api.PhpSettings();
                    if (object.common != null) {
                        if (typeof object.common !== "object")
                            throw TypeError(".google.api.PhpSettings.common: object expected");
                        message.common = $root.google.api.CommonLanguageSettings.fromObject(object.common);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a PhpSettings message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.PhpSettings
                 * @static
                 * @param {google.api.PhpSettings} message PhpSettings
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                PhpSettings.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.common = null;
                    if (message.common != null && message.hasOwnProperty("common"))
                        object.common = $root.google.api.CommonLanguageSettings.toObject(message.common, options);
                    return object;
                };
    
                /**
                 * Converts this PhpSettings to JSON.
                 * @function toJSON
                 * @memberof google.api.PhpSettings
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                PhpSettings.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for PhpSettings
                 * @function getTypeUrl
                 * @memberof google.api.PhpSettings
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                PhpSettings.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.PhpSettings";
                };
    
                return PhpSettings;
            })();
    
            api.PythonSettings = (function() {
    
                /**
                 * Properties of a PythonSettings.
                 * @memberof google.api
                 * @interface IPythonSettings
                 * @property {google.api.ICommonLanguageSettings|null} [common] PythonSettings common
                 */
    
                /**
                 * Constructs a new PythonSettings.
                 * @memberof google.api
                 * @classdesc Represents a PythonSettings.
                 * @implements IPythonSettings
                 * @constructor
                 * @param {google.api.IPythonSettings=} [properties] Properties to set
                 */
                function PythonSettings(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * PythonSettings common.
                 * @member {google.api.ICommonLanguageSettings|null|undefined} common
                 * @memberof google.api.PythonSettings
                 * @instance
                 */
                PythonSettings.prototype.common = null;
    
                /**
                 * Creates a new PythonSettings instance using the specified properties.
                 * @function create
                 * @memberof google.api.PythonSettings
                 * @static
                 * @param {google.api.IPythonSettings=} [properties] Properties to set
                 * @returns {google.api.PythonSettings} PythonSettings instance
                 */
                PythonSettings.create = function create(properties) {
                    return new PythonSettings(properties);
                };
    
                /**
                 * Encodes the specified PythonSettings message. Does not implicitly {@link google.api.PythonSettings.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.PythonSettings
                 * @static
                 * @param {google.api.IPythonSettings} message PythonSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                PythonSettings.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.common != null && Object.hasOwnProperty.call(message, "common"))
                        $root.google.api.CommonLanguageSettings.encode(message.common, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified PythonSettings message, length delimited. Does not implicitly {@link google.api.PythonSettings.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.PythonSettings
                 * @static
                 * @param {google.api.IPythonSettings} message PythonSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                PythonSettings.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a PythonSettings message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.PythonSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.PythonSettings} PythonSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                PythonSettings.decode = function decode(reader, length, error) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.PythonSettings();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        if (tag === error)
                            break;
                        switch (tag >>> 3) {
                        case 1: {
                                message.common = $root.google.api.CommonLanguageSettings.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a PythonSettings message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.PythonSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.PythonSettings} PythonSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                PythonSettings.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a PythonSettings message.
                 * @function verify
                 * @memberof google.api.PythonSettings
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                PythonSettings.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.common != null && message.hasOwnProperty("common")) {
                        var error = $root.google.api.CommonLanguageSettings.verify(message.common);
                        if (error)
                            return "common." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a PythonSettings message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.PythonSettings
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.PythonSettings} PythonSettings
                 */
                PythonSettings.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.PythonSettings)
                        return object;
                    var message = new $root.google.api.PythonSettings();
                    if (object.common != null) {
                        if (typeof object.common !== "object")
                            throw TypeError(".google.api.PythonSettings.common: object expected");
                        message.common = $root.google.api.CommonLanguageSettings.fromObject(object.common);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a PythonSettings message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.PythonSettings
                 * @static
                 * @param {google.api.PythonSettings} message PythonSettings
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                PythonSettings.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.common = null;
                    if (message.common != null && message.hasOwnProperty("common"))
                        object.common = $root.google.api.CommonLanguageSettings.toObject(message.common, options);
                    return object;
                };
    
                /**
                 * Converts this PythonSettings to JSON.
                 * @function toJSON
                 * @memberof google.api.PythonSettings
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                PythonSettings.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for PythonSettings
                 * @function getTypeUrl
                 * @memberof google.api.PythonSettings
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                PythonSettings.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.PythonSettings";
                };
    
                return PythonSettings;
            })();
    
            api.NodeSettings = (function() {
    
                /**
                 * Properties of a NodeSettings.
                 * @memberof google.api
                 * @interface INodeSettings
                 * @property {google.api.ICommonLanguageSettings|null} [common] NodeSettings common
                 */
    
                /**
                 * Constructs a new NodeSettings.
                 * @memberof google.api
                 * @classdesc Represents a NodeSettings.
                 * @implements INodeSettings
                 * @constructor
                 * @param {google.api.INodeSettings=} [properties] Properties to set
                 */
                function NodeSettings(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * NodeSettings common.
                 * @member {google.api.ICommonLanguageSettings|null|undefined} common
                 * @memberof google.api.NodeSettings
                 * @instance
                 */
                NodeSettings.prototype.common = null;
    
                /**
                 * Creates a new NodeSettings instance using the specified properties.
                 * @function create
                 * @memberof google.api.NodeSettings
                 * @static
                 * @param {google.api.INodeSettings=} [properties] Properties to set
                 * @returns {google.api.NodeSettings} NodeSettings instance
                 */
                NodeSettings.create = function create(properties) {
                    return new NodeSettings(properties);
                };
    
                /**
                 * Encodes the specified NodeSettings message. Does not implicitly {@link google.api.NodeSettings.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.NodeSettings
                 * @static
                 * @param {google.api.INodeSettings} message NodeSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                NodeSettings.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.common != null && Object.hasOwnProperty.call(message, "common"))
                        $root.google.api.CommonLanguageSettings.encode(message.common, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified NodeSettings message, length delimited. Does not implicitly {@link google.api.NodeSettings.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.NodeSettings
                 * @static
                 * @param {google.api.INodeSettings} message NodeSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                NodeSettings.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a NodeSettings message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.NodeSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.NodeSettings} NodeSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                NodeSettings.decode = function decode(reader, length, error) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.NodeSettings();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        if (tag === error)
                            break;
                        switch (tag >>> 3) {
                        case 1: {
                                message.common = $root.google.api.CommonLanguageSettings.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a NodeSettings message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.NodeSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.NodeSettings} NodeSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                NodeSettings.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a NodeSettings message.
                 * @function verify
                 * @memberof google.api.NodeSettings
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                NodeSettings.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.common != null && message.hasOwnProperty("common")) {
                        var error = $root.google.api.CommonLanguageSettings.verify(message.common);
                        if (error)
                            return "common." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a NodeSettings message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.NodeSettings
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.NodeSettings} NodeSettings
                 */
                NodeSettings.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.NodeSettings)
                        return object;
                    var message = new $root.google.api.NodeSettings();
                    if (object.common != null) {
                        if (typeof object.common !== "object")
                            throw TypeError(".google.api.NodeSettings.common: object expected");
                        message.common = $root.google.api.CommonLanguageSettings.fromObject(object.common);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a NodeSettings message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.NodeSettings
                 * @static
                 * @param {google.api.NodeSettings} message NodeSettings
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                NodeSettings.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.common = null;
                    if (message.common != null && message.hasOwnProperty("common"))
                        object.common = $root.google.api.CommonLanguageSettings.toObject(message.common, options);
                    return object;
                };
    
                /**
                 * Converts this NodeSettings to JSON.
                 * @function toJSON
                 * @memberof google.api.NodeSettings
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                NodeSettings.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for NodeSettings
                 * @function getTypeUrl
                 * @memberof google.api.NodeSettings
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                NodeSettings.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.NodeSettings";
                };
    
                return NodeSettings;
            })();
    
            api.DotnetSettings = (function() {
    
                /**
                 * Properties of a DotnetSettings.
                 * @memberof google.api
                 * @interface IDotnetSettings
                 * @property {google.api.ICommonLanguageSettings|null} [common] DotnetSettings common
                 * @property {Object.<string,string>|null} [renamedServices] DotnetSettings renamedServices
                 * @property {Object.<string,string>|null} [renamedResources] DotnetSettings renamedResources
                 * @property {Array.<string>|null} [ignoredResources] DotnetSettings ignoredResources
                 * @property {Array.<string>|null} [forcedNamespaceAliases] DotnetSettings forcedNamespaceAliases
                 * @property {Array.<string>|null} [handwrittenSignatures] DotnetSettings handwrittenSignatures
                 */
    
                /**
                 * Constructs a new DotnetSettings.
                 * @memberof google.api
                 * @classdesc Represents a DotnetSettings.
                 * @implements IDotnetSettings
                 * @constructor
                 * @param {google.api.IDotnetSettings=} [properties] Properties to set
                 */
                function DotnetSettings(properties) {
                    this.renamedServices = {};
                    this.renamedResources = {};
                    this.ignoredResources = [];
                    this.forcedNamespaceAliases = [];
                    this.handwrittenSignatures = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * DotnetSettings common.
                 * @member {google.api.ICommonLanguageSettings|null|undefined} common
                 * @memberof google.api.DotnetSettings
                 * @instance
                 */
                DotnetSettings.prototype.common = null;
    
                /**
                 * DotnetSettings renamedServices.
                 * @member {Object.<string,string>} renamedServices
                 * @memberof google.api.DotnetSettings
                 * @instance
                 */
                DotnetSettings.prototype.renamedServices = $util.emptyObject;
    
                /**
                 * DotnetSettings renamedResources.
                 * @member {Object.<string,string>} renamedResources
                 * @memberof google.api.DotnetSettings
                 * @instance
                 */
                DotnetSettings.prototype.renamedResources = $util.emptyObject;
    
                /**
                 * DotnetSettings ignoredResources.
                 * @member {Array.<string>} ignoredResources
                 * @memberof google.api.DotnetSettings
                 * @instance
                 */
                DotnetSettings.prototype.ignoredResources = $util.emptyArray;
    
                /**
                 * DotnetSettings forcedNamespaceAliases.
                 * @member {Array.<string>} forcedNamespaceAliases
                 * @memberof google.api.DotnetSettings
                 * @instance
                 */
                DotnetSettings.prototype.forcedNamespaceAliases = $util.emptyArray;
    
                /**
                 * DotnetSettings handwrittenSignatures.
                 * @member {Array.<string>} handwrittenSignatures
                 * @memberof google.api.DotnetSettings
                 * @instance
                 */
                DotnetSettings.prototype.handwrittenSignatures = $util.emptyArray;
    
                /**
                 * Creates a new DotnetSettings instance using the specified properties.
                 * @function create
                 * @memberof google.api.DotnetSettings
                 * @static
                 * @param {google.api.IDotnetSettings=} [properties] Properties to set
                 * @returns {google.api.DotnetSettings} DotnetSettings instance
                 */
                DotnetSettings.create = function create(properties) {
                    return new DotnetSettings(properties);
                };
    
                /**
                 * Encodes the specified DotnetSettings message. Does not implicitly {@link google.api.DotnetSettings.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.DotnetSettings
                 * @static
                 * @param {google.api.IDotnetSettings} message DotnetSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                DotnetSettings.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.common != null && Object.hasOwnProperty.call(message, "common"))
                        $root.google.api.CommonLanguageSettings.encode(message.common, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    if (message.renamedServices != null && Object.hasOwnProperty.call(message, "renamedServices"))
                        for (var keys = Object.keys(message.renamedServices), i = 0; i < keys.length; ++i)
                            writer.uint32(/* id 2, wireType 2 =*/18).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.renamedServices[keys[i]]).ldelim();
                    if (message.renamedResources != null && Object.hasOwnProperty.call(message, "renamedResources"))
                        for (var keys = Object.keys(message.renamedResources), i = 0; i < keys.length; ++i)
                            writer.uint32(/* id 3, wireType 2 =*/26).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.renamedResources[keys[i]]).ldelim();
                    if (message.ignoredResources != null && message.ignoredResources.length)
                        for (var i = 0; i < message.ignoredResources.length; ++i)
                            writer.uint32(/* id 4, wireType 2 =*/34).string(message.ignoredResources[i]);
                    if (message.forcedNamespaceAliases != null && message.forcedNamespaceAliases.length)
                        for (var i = 0; i < message.forcedNamespaceAliases.length; ++i)
                            writer.uint32(/* id 5, wireType 2 =*/42).string(message.forcedNamespaceAliases[i]);
                    if (message.handwrittenSignatures != null && message.handwrittenSignatures.length)
                        for (var i = 0; i < message.handwrittenSignatures.length; ++i)
                            writer.uint32(/* id 6, wireType 2 =*/50).string(message.handwrittenSignatures[i]);
                    return writer;
                };
    
                /**
                 * Encodes the specified DotnetSettings message, length delimited. Does not implicitly {@link google.api.DotnetSettings.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.DotnetSettings
                 * @static
                 * @param {google.api.IDotnetSettings} message DotnetSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                DotnetSettings.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a DotnetSettings message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.DotnetSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.DotnetSettings} DotnetSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                DotnetSettings.decode = function decode(reader, length, error) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.DotnetSettings(), key, value;
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        if (tag === error)
                            break;
                        switch (tag >>> 3) {
                        case 1: {
                                message.common = $root.google.api.CommonLanguageSettings.decode(reader, reader.uint32());
                                break;
                            }
                        case 2: {
                                if (message.renamedServices === $util.emptyObject)
                                    message.renamedServices = {};
                                var end2 = reader.uint32() + reader.pos;
                                key = "";
                                value = "";
                                while (reader.pos < end2) {
                                    var tag2 = reader.uint32();
                                    switch (tag2 >>> 3) {
                                    case 1:
                                        key = reader.string();
                                        break;
                                    case 2:
                                        value = reader.string();
                                        break;
                                    default:
                                        reader.skipType(tag2 & 7);
                                        break;
                                    }
                                }
                                message.renamedServices[key] = value;
                                break;
                            }
                        case 3: {
                                if (message.renamedResources === $util.emptyObject)
                                    message.renamedResources = {};
                                var end2 = reader.uint32() + reader.pos;
                                key = "";
                                value = "";
                                while (reader.pos < end2) {
                                    var tag2 = reader.uint32();
                                    switch (tag2 >>> 3) {
                                    case 1:
                                        key = reader.string();
                                        break;
                                    case 2:
                                        value = reader.string();
                                        break;
                                    default:
                                        reader.skipType(tag2 & 7);
                                        break;
                                    }
                                }
                                message.renamedResources[key] = value;
                                break;
                            }
                        case 4: {
                                if (!(message.ignoredResources && message.ignoredResources.length))
                                    message.ignoredResources = [];
                                message.ignoredResources.push(reader.string());
                                break;
                            }
                        case 5: {
                                if (!(message.forcedNamespaceAliases && message.forcedNamespaceAliases.length))
                                    message.forcedNamespaceAliases = [];
                                message.forcedNamespaceAliases.push(reader.string());
                                break;
                            }
                        case 6: {
                                if (!(message.handwrittenSignatures && message.handwrittenSignatures.length))
                                    message.handwrittenSignatures = [];
                                message.handwrittenSignatures.push(reader.string());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a DotnetSettings message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.DotnetSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.DotnetSettings} DotnetSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                DotnetSettings.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a DotnetSettings message.
                 * @function verify
                 * @memberof google.api.DotnetSettings
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                DotnetSettings.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.common != null && message.hasOwnProperty("common")) {
                        var error = $root.google.api.CommonLanguageSettings.verify(message.common);
                        if (error)
                            return "common." + error;
                    }
                    if (message.renamedServices != null && message.hasOwnProperty("renamedServices")) {
                        if (!$util.isObject(message.renamedServices))
                            return "renamedServices: object expected";
                        var key = Object.keys(message.renamedServices);
                        for (var i = 0; i < key.length; ++i)
                            if (!$util.isString(message.renamedServices[key[i]]))
                                return "renamedServices: string{k:string} expected";
                    }
                    if (message.renamedResources != null && message.hasOwnProperty("renamedResources")) {
                        if (!$util.isObject(message.renamedResources))
                            return "renamedResources: object expected";
                        var key = Object.keys(message.renamedResources);
                        for (var i = 0; i < key.length; ++i)
                            if (!$util.isString(message.renamedResources[key[i]]))
                                return "renamedResources: string{k:string} expected";
                    }
                    if (message.ignoredResources != null && message.hasOwnProperty("ignoredResources")) {
                        if (!Array.isArray(message.ignoredResources))
                            return "ignoredResources: array expected";
                        for (var i = 0; i < message.ignoredResources.length; ++i)
                            if (!$util.isString(message.ignoredResources[i]))
                                return "ignoredResources: string[] expected";
                    }
                    if (message.forcedNamespaceAliases != null && message.hasOwnProperty("forcedNamespaceAliases")) {
                        if (!Array.isArray(message.forcedNamespaceAliases))
                            return "forcedNamespaceAliases: array expected";
                        for (var i = 0; i < message.forcedNamespaceAliases.length; ++i)
                            if (!$util.isString(message.forcedNamespaceAliases[i]))
                                return "forcedNamespaceAliases: string[] expected";
                    }
                    if (message.handwrittenSignatures != null && message.hasOwnProperty("handwrittenSignatures")) {
                        if (!Array.isArray(message.handwrittenSignatures))
                            return "handwrittenSignatures: array expected";
                        for (var i = 0; i < message.handwrittenSignatures.length; ++i)
                            if (!$util.isString(message.handwrittenSignatures[i]))
                                return "handwrittenSignatures: string[] expected";
                    }
                    return null;
                };
    
                /**
                 * Creates a DotnetSettings message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.DotnetSettings
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.DotnetSettings} DotnetSettings
                 */
                DotnetSettings.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.DotnetSettings)
                        return object;
                    var message = new $root.google.api.DotnetSettings();
                    if (object.common != null) {
                        if (typeof object.common !== "object")
                            throw TypeError(".google.api.DotnetSettings.common: object expected");
                        message.common = $root.google.api.CommonLanguageSettings.fromObject(object.common);
                    }
                    if (object.renamedServices) {
                        if (typeof object.renamedServices !== "object")
                            throw TypeError(".google.api.DotnetSettings.renamedServices: object expected");
                        message.renamedServices = {};
                        for (var keys = Object.keys(object.renamedServices), i = 0; i < keys.length; ++i)
                            message.renamedServices[keys[i]] = String(object.renamedServices[keys[i]]);
                    }
                    if (object.renamedResources) {
                        if (typeof object.renamedResources !== "object")
                            throw TypeError(".google.api.DotnetSettings.renamedResources: object expected");
                        message.renamedResources = {};
                        for (var keys = Object.keys(object.renamedResources), i = 0; i < keys.length; ++i)
                            message.renamedResources[keys[i]] = String(object.renamedResources[keys[i]]);
                    }
                    if (object.ignoredResources) {
                        if (!Array.isArray(object.ignoredResources))
                            throw TypeError(".google.api.DotnetSettings.ignoredResources: array expected");
                        message.ignoredResources = [];
                        for (var i = 0; i < object.ignoredResources.length; ++i)
                            message.ignoredResources[i] = String(object.ignoredResources[i]);
                    }
                    if (object.forcedNamespaceAliases) {
                        if (!Array.isArray(object.forcedNamespaceAliases))
                            throw TypeError(".google.api.DotnetSettings.forcedNamespaceAliases: array expected");
                        message.forcedNamespaceAliases = [];
                        for (var i = 0; i < object.forcedNamespaceAliases.length; ++i)
                            message.forcedNamespaceAliases[i] = String(object.forcedNamespaceAliases[i]);
                    }
                    if (object.handwrittenSignatures) {
                        if (!Array.isArray(object.handwrittenSignatures))
                            throw TypeError(".google.api.DotnetSettings.handwrittenSignatures: array expected");
                        message.handwrittenSignatures = [];
                        for (var i = 0; i < object.handwrittenSignatures.length; ++i)
                            message.handwrittenSignatures[i] = String(object.handwrittenSignatures[i]);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a DotnetSettings message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.DotnetSettings
                 * @static
                 * @param {google.api.DotnetSettings} message DotnetSettings
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                DotnetSettings.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.ignoredResources = [];
                        object.forcedNamespaceAliases = [];
                        object.handwrittenSignatures = [];
                    }
                    if (options.objects || options.defaults) {
                        object.renamedServices = {};
                        object.renamedResources = {};
                    }
                    if (options.defaults)
                        object.common = null;
                    if (message.common != null && message.hasOwnProperty("common"))
                        object.common = $root.google.api.CommonLanguageSettings.toObject(message.common, options);
                    var keys2;
                    if (message.renamedServices && (keys2 = Object.keys(message.renamedServices)).length) {
                        object.renamedServices = {};
                        for (var j = 0; j < keys2.length; ++j)
                            object.renamedServices[keys2[j]] = message.renamedServices[keys2[j]];
                    }
                    if (message.renamedResources && (keys2 = Object.keys(message.renamedResources)).length) {
                        object.renamedResources = {};
                        for (var j = 0; j < keys2.length; ++j)
                            object.renamedResources[keys2[j]] = message.renamedResources[keys2[j]];
                    }
                    if (message.ignoredResources && message.ignoredResources.length) {
                        object.ignoredResources = [];
                        for (var j = 0; j < message.ignoredResources.length; ++j)
                            object.ignoredResources[j] = message.ignoredResources[j];
                    }
                    if (message.forcedNamespaceAliases && message.forcedNamespaceAliases.length) {
                        object.forcedNamespaceAliases = [];
                        for (var j = 0; j < message.forcedNamespaceAliases.length; ++j)
                            object.forcedNamespaceAliases[j] = message.forcedNamespaceAliases[j];
                    }
                    if (message.handwrittenSignatures && message.handwrittenSignatures.length) {
                        object.handwrittenSignatures = [];
                        for (var j = 0; j < message.handwrittenSignatures.length; ++j)
                            object.handwrittenSignatures[j] = message.handwrittenSignatures[j];
                    }
                    return object;
                };
    
                /**
                 * Converts this DotnetSettings to JSON.
                 * @function toJSON
                 * @memberof google.api.DotnetSettings
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                DotnetSettings.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for DotnetSettings
                 * @function getTypeUrl
                 * @memberof google.api.DotnetSettings
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                DotnetSettings.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.DotnetSettings";
                };
    
                return DotnetSettings;
            })();
    
            api.RubySettings = (function() {
    
                /**
                 * Properties of a RubySettings.
                 * @memberof google.api
                 * @interface IRubySettings
                 * @property {google.api.ICommonLanguageSettings|null} [common] RubySettings common
                 */
    
                /**
                 * Constructs a new RubySettings.
                 * @memberof google.api
                 * @classdesc Represents a RubySettings.
                 * @implements IRubySettings
                 * @constructor
                 * @param {google.api.IRubySettings=} [properties] Properties to set
                 */
                function RubySettings(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * RubySettings common.
                 * @member {google.api.ICommonLanguageSettings|null|undefined} common
                 * @memberof google.api.RubySettings
                 * @instance
                 */
                RubySettings.prototype.common = null;
    
                /**
                 * Creates a new RubySettings instance using the specified properties.
                 * @function create
                 * @memberof google.api.RubySettings
                 * @static
                 * @param {google.api.IRubySettings=} [properties] Properties to set
                 * @returns {google.api.RubySettings} RubySettings instance
                 */
                RubySettings.create = function create(properties) {
                    return new RubySettings(properties);
                };
    
                /**
                 * Encodes the specified RubySettings message. Does not implicitly {@link google.api.RubySettings.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.RubySettings
                 * @static
                 * @param {google.api.IRubySettings} message RubySettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                RubySettings.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.common != null && Object.hasOwnProperty.call(message, "common"))
                        $root.google.api.CommonLanguageSettings.encode(message.common, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified RubySettings message, length delimited. Does not implicitly {@link google.api.RubySettings.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.RubySettings
                 * @static
                 * @param {google.api.IRubySettings} message RubySettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                RubySettings.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a RubySettings message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.RubySettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.RubySettings} RubySettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                RubySettings.decode = function decode(reader, length, error) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.RubySettings();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        if (tag === error)
                            break;
                        switch (tag >>> 3) {
                        case 1: {
                                message.common = $root.google.api.CommonLanguageSettings.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a RubySettings message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.RubySettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.RubySettings} RubySettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                RubySettings.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a RubySettings message.
                 * @function verify
                 * @memberof google.api.RubySettings
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                RubySettings.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.common != null && message.hasOwnProperty("common")) {
                        var error = $root.google.api.CommonLanguageSettings.verify(message.common);
                        if (error)
                            return "common." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a RubySettings message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.RubySettings
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.RubySettings} RubySettings
                 */
                RubySettings.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.RubySettings)
                        return object;
                    var message = new $root.google.api.RubySettings();
                    if (object.common != null) {
                        if (typeof object.common !== "object")
                            throw TypeError(".google.api.RubySettings.common: object expected");
                        message.common = $root.google.api.CommonLanguageSettings.fromObject(object.common);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a RubySettings message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.RubySettings
                 * @static
                 * @param {google.api.RubySettings} message RubySettings
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                RubySettings.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.common = null;
                    if (message.common != null && message.hasOwnProperty("common"))
                        object.common = $root.google.api.CommonLanguageSettings.toObject(message.common, options);
                    return object;
                };
    
                /**
                 * Converts this RubySettings to JSON.
                 * @function toJSON
                 * @memberof google.api.RubySettings
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                RubySettings.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for RubySettings
                 * @function getTypeUrl
                 * @memberof google.api.RubySettings
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                RubySettings.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.RubySettings";
                };
    
                return RubySettings;
            })();
    
            api.GoSettings = (function() {
    
                /**
                 * Properties of a GoSettings.
                 * @memberof google.api
                 * @interface IGoSettings
                 * @property {google.api.ICommonLanguageSettings|null} [common] GoSettings common
                 */
    
                /**
                 * Constructs a new GoSettings.
                 * @memberof google.api
                 * @classdesc Represents a GoSettings.
                 * @implements IGoSettings
                 * @constructor
                 * @param {google.api.IGoSettings=} [properties] Properties to set
                 */
                function GoSettings(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * GoSettings common.
                 * @member {google.api.ICommonLanguageSettings|null|undefined} common
                 * @memberof google.api.GoSettings
                 * @instance
                 */
                GoSettings.prototype.common = null;
    
                /**
                 * Creates a new GoSettings instance using the specified properties.
                 * @function create
                 * @memberof google.api.GoSettings
                 * @static
                 * @param {google.api.IGoSettings=} [properties] Properties to set
                 * @returns {google.api.GoSettings} GoSettings instance
                 */
                GoSettings.create = function create(properties) {
                    return new GoSettings(properties);
                };
    
                /**
                 * Encodes the specified GoSettings message. Does not implicitly {@link google.api.GoSettings.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.GoSettings
                 * @static
                 * @param {google.api.IGoSettings} message GoSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                GoSettings.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.common != null && Object.hasOwnProperty.call(message, "common"))
                        $root.google.api.CommonLanguageSettings.encode(message.common, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified GoSettings message, length delimited. Does not implicitly {@link google.api.GoSettings.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.GoSettings
                 * @static
                 * @param {google.api.IGoSettings} message GoSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                GoSettings.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a GoSettings message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.GoSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.GoSettings} GoSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                GoSettings.decode = function decode(reader, length, error) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.GoSettings();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        if (tag === error)
                            break;
                        switch (tag >>> 3) {
                        case 1: {
                                message.common = $root.google.api.CommonLanguageSettings.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a GoSettings message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.GoSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.GoSettings} GoSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                GoSettings.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a GoSettings message.
                 * @function verify
                 * @memberof google.api.GoSettings
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                GoSettings.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.common != null && message.hasOwnProperty("common")) {
                        var error = $root.google.api.CommonLanguageSettings.verify(message.common);
                        if (error)
                            return "common." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a GoSettings message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.GoSettings
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.GoSettings} GoSettings
                 */
                GoSettings.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.GoSettings)
                        return object;
                    var message = new $root.google.api.GoSettings();
                    if (object.common != null) {
                        if (typeof object.common !== "object")
                            throw TypeError(".google.api.GoSettings.common: object expected");
                        message.common = $root.google.api.CommonLanguageSettings.fromObject(object.common);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a GoSettings message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.GoSettings
                 * @static
                 * @param {google.api.GoSettings} message GoSettings
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                GoSettings.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.common = null;
                    if (message.common != null && message.hasOwnProperty("common"))
                        object.common = $root.google.api.CommonLanguageSettings.toObject(message.common, options);
                    return object;
                };
    
                /**
                 * Converts this GoSettings to JSON.
                 * @function toJSON
                 * @memberof google.api.GoSettings
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                GoSettings.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for GoSettings
                 * @function getTypeUrl
                 * @memberof google.api.GoSettings
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                GoSettings.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.GoSettings";
                };
    
                return GoSettings;
            })();
    
            api.MethodSettings = (function() {
    
                /**
                 * Properties of a MethodSettings.
                 * @memberof google.api
                 * @interface IMethodSettings
                 * @property {string|null} [selector] MethodSettings selector
                 * @property {google.api.MethodSettings.ILongRunning|null} [longRunning] MethodSettings longRunning
                 * @property {Array.<string>|null} [autoPopulatedFields] MethodSettings autoPopulatedFields
                 */
    
                /**
                 * Constructs a new MethodSettings.
                 * @memberof google.api
                 * @classdesc Represents a MethodSettings.
                 * @implements IMethodSettings
                 * @constructor
                 * @param {google.api.IMethodSettings=} [properties] Properties to set
                 */
                function MethodSettings(properties) {
                    this.autoPopulatedFields = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * MethodSettings selector.
                 * @member {string} selector
                 * @memberof google.api.MethodSettings
                 * @instance
                 */
                MethodSettings.prototype.selector = "";
    
                /**
                 * MethodSettings longRunning.
                 * @member {google.api.MethodSettings.ILongRunning|null|undefined} longRunning
                 * @memberof google.api.MethodSettings
                 * @instance
                 */
                MethodSettings.prototype.longRunning = null;
    
                /**
                 * MethodSettings autoPopulatedFields.
                 * @member {Array.<string>} autoPopulatedFields
                 * @memberof google.api.MethodSettings
                 * @instance
                 */
                MethodSettings.prototype.autoPopulatedFields = $util.emptyArray;
    
                /**
                 * Creates a new MethodSettings instance using the specified properties.
                 * @function create
                 * @memberof google.api.MethodSettings
                 * @static
                 * @param {google.api.IMethodSettings=} [properties] Properties to set
                 * @returns {google.api.MethodSettings} MethodSettings instance
                 */
                MethodSettings.create = function create(properties) {
                    return new MethodSettings(properties);
                };
    
                /**
                 * Encodes the specified MethodSettings message. Does not implicitly {@link google.api.MethodSettings.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.MethodSettings
                 * @static
                 * @param {google.api.IMethodSettings} message MethodSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MethodSettings.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.selector != null && Object.hasOwnProperty.call(message, "selector"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.selector);
                    if (message.longRunning != null && Object.hasOwnProperty.call(message, "longRunning"))
                        $root.google.api.MethodSettings.LongRunning.encode(message.longRunning, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.autoPopulatedFields != null && message.autoPopulatedFields.length)
                        for (var i = 0; i < message.autoPopulatedFields.length; ++i)
                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.autoPopulatedFields[i]);
                    return writer;
                };
    
                /**
                 * Encodes the specified MethodSettings message, length delimited. Does not implicitly {@link google.api.MethodSettings.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.MethodSettings
                 * @static
                 * @param {google.api.IMethodSettings} message MethodSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MethodSettings.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a MethodSettings message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.MethodSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.MethodSettings} MethodSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MethodSettings.decode = function decode(reader, length, error) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.MethodSettings();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        if (tag === error)
                            break;
                        switch (tag >>> 3) {
                        case 1: {
                                message.selector = reader.string();
                                break;
                            }
                        case 2: {
                                message.longRunning = $root.google.api.MethodSettings.LongRunning.decode(reader, reader.uint32());
                                break;
                            }
                        case 3: {
                                if (!(message.autoPopulatedFields && message.autoPopulatedFields.length))
                                    message.autoPopulatedFields = [];
                                message.autoPopulatedFields.push(reader.string());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a MethodSettings message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.MethodSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.MethodSettings} MethodSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MethodSettings.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a MethodSettings message.
                 * @function verify
                 * @memberof google.api.MethodSettings
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                MethodSettings.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.selector != null && message.hasOwnProperty("selector"))
                        if (!$util.isString(message.selector))
                            return "selector: string expected";
                    if (message.longRunning != null && message.hasOwnProperty("longRunning")) {
                        var error = $root.google.api.MethodSettings.LongRunning.verify(message.longRunning);
                        if (error)
                            return "longRunning." + error;
                    }
                    if (message.autoPopulatedFields != null && message.hasOwnProperty("autoPopulatedFields")) {
                        if (!Array.isArray(message.autoPopulatedFields))
                            return "autoPopulatedFields: array expected";
                        for (var i = 0; i < message.autoPopulatedFields.length; ++i)
                            if (!$util.isString(message.autoPopulatedFields[i]))
                                return "autoPopulatedFields: string[] expected";
                    }
                    return null;
                };
    
                /**
                 * Creates a MethodSettings message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.MethodSettings
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.MethodSettings} MethodSettings
                 */
                MethodSettings.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.MethodSettings)
                        return object;
                    var message = new $root.google.api.MethodSettings();
                    if (object.selector != null)
                        message.selector = String(object.selector);
                    if (object.longRunning != null) {
                        if (typeof object.longRunning !== "object")
                            throw TypeError(".google.api.MethodSettings.longRunning: object expected");
                        message.longRunning = $root.google.api.MethodSettings.LongRunning.fromObject(object.longRunning);
                    }
                    if (object.autoPopulatedFields) {
                        if (!Array.isArray(object.autoPopulatedFields))
                            throw TypeError(".google.api.MethodSettings.autoPopulatedFields: array expected");
                        message.autoPopulatedFields = [];
                        for (var i = 0; i < object.autoPopulatedFields.length; ++i)
                            message.autoPopulatedFields[i] = String(object.autoPopulatedFields[i]);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a MethodSettings message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.MethodSettings
                 * @static
                 * @param {google.api.MethodSettings} message MethodSettings
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                MethodSettings.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.autoPopulatedFields = [];
                    if (options.defaults) {
                        object.selector = "";
                        object.longRunning = null;
                    }
                    if (message.selector != null && message.hasOwnProperty("selector"))
                        object.selector = message.selector;
                    if (message.longRunning != null && message.hasOwnProperty("longRunning"))
                        object.longRunning = $root.google.api.MethodSettings.LongRunning.toObject(message.longRunning, options);
                    if (message.autoPopulatedFields && message.autoPopulatedFields.length) {
                        object.autoPopulatedFields = [];
                        for (var j = 0; j < message.autoPopulatedFields.length; ++j)
                            object.autoPopulatedFields[j] = message.autoPopulatedFields[j];
                    }
                    return object;
                };
    
                /**
                 * Converts this MethodSettings to JSON.
                 * @function toJSON
                 * @memberof google.api.MethodSettings
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                MethodSettings.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for MethodSettings
                 * @function getTypeUrl
                 * @memberof google.api.MethodSettings
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                MethodSettings.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.MethodSettings";
                };
    
                MethodSettings.LongRunning = (function() {
    
                    /**
                     * Properties of a LongRunning.
                     * @memberof google.api.MethodSettings
                     * @interface ILongRunning
                     * @property {google.protobuf.IDuration|null} [initialPollDelay] LongRunning initialPollDelay
                     * @property {number|null} [pollDelayMultiplier] LongRunning pollDelayMultiplier
                     * @property {google.protobuf.IDuration|null} [maxPollDelay] LongRunning maxPollDelay
                     * @property {google.protobuf.IDuration|null} [totalPollTimeout] LongRunning totalPollTimeout
                     */
    
                    /**
                     * Constructs a new LongRunning.
                     * @memberof google.api.MethodSettings
                     * @classdesc Represents a LongRunning.
                     * @implements ILongRunning
                     * @constructor
                     * @param {google.api.MethodSettings.ILongRunning=} [properties] Properties to set
                     */
                    function LongRunning(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * LongRunning initialPollDelay.
                     * @member {google.protobuf.IDuration|null|undefined} initialPollDelay
                     * @memberof google.api.MethodSettings.LongRunning
                     * @instance
                     */
                    LongRunning.prototype.initialPollDelay = null;
    
                    /**
                     * LongRunning pollDelayMultiplier.
                     * @member {number} pollDelayMultiplier
                     * @memberof google.api.MethodSettings.LongRunning
                     * @instance
                     */
                    LongRunning.prototype.pollDelayMultiplier = 0;
    
                    /**
                     * LongRunning maxPollDelay.
                     * @member {google.protobuf.IDuration|null|undefined} maxPollDelay
                     * @memberof google.api.MethodSettings.LongRunning
                     * @instance
                     */
                    LongRunning.prototype.maxPollDelay = null;
    
                    /**
                     * LongRunning totalPollTimeout.
                     * @member {google.protobuf.IDuration|null|undefined} totalPollTimeout
                     * @memberof google.api.MethodSettings.LongRunning
                     * @instance
                     */
                    LongRunning.prototype.totalPollTimeout = null;
    
                    /**
                     * Creates a new LongRunning instance using the specified properties.
                     * @function create
                     * @memberof google.api.MethodSettings.LongRunning
                     * @static
                     * @param {google.api.MethodSettings.ILongRunning=} [properties] Properties to set
                     * @returns {google.api.MethodSettings.LongRunning} LongRunning instance
                     */
                    LongRunning.create = function create(properties) {
                        return new LongRunning(properties);
                    };
    
                    /**
                     * Encodes the specified LongRunning message. Does not implicitly {@link google.api.MethodSettings.LongRunning.verify|verify} messages.
                     * @function encode
                     * @memberof google.api.MethodSettings.LongRunning
                     * @static
                     * @param {google.api.MethodSettings.ILongRunning} message LongRunning message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    LongRunning.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.initialPollDelay != null && Object.hasOwnProperty.call(message, "initialPollDelay"))
                            $root.google.protobuf.Duration.encode(message.initialPollDelay, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                        if (message.pollDelayMultiplier != null && Object.hasOwnProperty.call(message, "pollDelayMultiplier"))
                            writer.uint32(/* id 2, wireType 5 =*/21).float(message.pollDelayMultiplier);
                        if (message.maxPollDelay != null && Object.hasOwnProperty.call(message, "maxPollDelay"))
                            $root.google.protobuf.Duration.encode(message.maxPollDelay, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                        if (message.totalPollTimeout != null && Object.hasOwnProperty.call(message, "totalPollTimeout"))
                            $root.google.protobuf.Duration.encode(message.totalPollTimeout, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                        return writer;
                    };
    
                    /**
                     * Encodes the specified LongRunning message, length delimited. Does not implicitly {@link google.api.MethodSettings.LongRunning.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.api.MethodSettings.LongRunning
                     * @static
                     * @param {google.api.MethodSettings.ILongRunning} message LongRunning message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    LongRunning.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a LongRunning message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.api.MethodSettings.LongRunning
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.api.MethodSettings.LongRunning} LongRunning
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    LongRunning.decode = function decode(reader, length, error) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.MethodSettings.LongRunning();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            if (tag === error)
                                break;
                            switch (tag >>> 3) {
                            case 1: {
                                    message.initialPollDelay = $root.google.protobuf.Duration.decode(reader, reader.uint32());
                                    break;
                                }
                            case 2: {
                                    message.pollDelayMultiplier = reader.float();
                                    break;
                                }
                            case 3: {
                                    message.maxPollDelay = $root.google.protobuf.Duration.decode(reader, reader.uint32());
                                    break;
                                }
                            case 4: {
                                    message.totalPollTimeout = $root.google.protobuf.Duration.decode(reader, reader.uint32());
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a LongRunning message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.api.MethodSettings.LongRunning
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.api.MethodSettings.LongRunning} LongRunning
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    LongRunning.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a LongRunning message.
                     * @function verify
                     * @memberof google.api.MethodSettings.LongRunning
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    LongRunning.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.initialPollDelay != null && message.hasOwnProperty("initialPollDelay")) {
                            var error = $root.google.protobuf.Duration.verify(message.initialPollDelay);
                            if (error)
                                return "initialPollDelay." + error;
                        }
                        if (message.pollDelayMultiplier != null && message.hasOwnProperty("pollDelayMultiplier"))
                            if (typeof message.pollDelayMultiplier !== "number")
                                return "pollDelayMultiplier: number expected";
                        if (message.maxPollDelay != null && message.hasOwnProperty("maxPollDelay")) {
                            var error = $root.google.protobuf.Duration.verify(message.maxPollDelay);
                            if (error)
                                return "maxPollDelay." + error;
                        }
                        if (message.totalPollTimeout != null && message.hasOwnProperty("totalPollTimeout")) {
                            var error = $root.google.protobuf.Duration.verify(message.totalPollTimeout);
                            if (error)
                                return "totalPollTimeout." + error;
                        }
                        return null;
                    };
    
                    /**
                     * Creates a LongRunning message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.api.MethodSettings.LongRunning
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.api.MethodSettings.LongRunning} LongRunning
                     */
                    LongRunning.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.api.MethodSettings.LongRunning)
                            return object;
                        var message = new $root.google.api.MethodSettings.LongRunning();
                        if (object.initialPollDelay != null) {
                            if (typeof object.initialPollDelay !== "object")
                                throw TypeError(".google.api.MethodSettings.LongRunning.initialPollDelay: object expected");
                            message.initialPollDelay = $root.google.protobuf.Duration.fromObject(object.initialPollDelay);
                        }
                        if (object.pollDelayMultiplier != null)
                            message.pollDelayMultiplier = Number(object.pollDelayMultiplier);
                        if (object.maxPollDelay != null) {
                            if (typeof object.maxPollDelay !== "object")
                                throw TypeError(".google.api.MethodSettings.LongRunning.maxPollDelay: object expected");
                            message.maxPollDelay = $root.google.protobuf.Duration.fromObject(object.maxPollDelay);
                        }
                        if (object.totalPollTimeout != null) {
                            if (typeof object.totalPollTimeout !== "object")
                                throw TypeError(".google.api.MethodSettings.LongRunning.totalPollTimeout: object expected");
                            message.totalPollTimeout = $root.google.protobuf.Duration.fromObject(object.totalPollTimeout);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a LongRunning message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.api.MethodSettings.LongRunning
                     * @static
                     * @param {google.api.MethodSettings.LongRunning} message LongRunning
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    LongRunning.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.initialPollDelay = null;
                            object.pollDelayMultiplier = 0;
                            object.maxPollDelay = null;
                            object.totalPollTimeout = null;
                        }
                        if (message.initialPollDelay != null && message.hasOwnProperty("initialPollDelay"))
                            object.initialPollDelay = $root.google.protobuf.Duration.toObject(message.initialPollDelay, options);
                        if (message.pollDelayMultiplier != null && message.hasOwnProperty("pollDelayMultiplier"))
                            object.pollDelayMultiplier = options.json && !isFinite(message.pollDelayMultiplier) ? String(message.pollDelayMultiplier) : message.pollDelayMultiplier;
                        if (message.maxPollDelay != null && message.hasOwnProperty("maxPollDelay"))
                            object.maxPollDelay = $root.google.protobuf.Duration.toObject(message.maxPollDelay, options);
                        if (message.totalPollTimeout != null && message.hasOwnProperty("totalPollTimeout"))
                            object.totalPollTimeout = $root.google.protobuf.Duration.toObject(message.totalPollTimeout, options);
                        return object;
                    };
    
                    /**
                     * Converts this LongRunning to JSON.
                     * @function toJSON
                     * @memberof google.api.MethodSettings.LongRunning
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    LongRunning.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for LongRunning
                     * @function getTypeUrl
                     * @memberof google.api.MethodSettings.LongRunning
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    LongRunning.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.api.MethodSettings.LongRunning";
                    };
    
                    return LongRunning;
                })();
    
                return MethodSettings;
            })();
    
            /**
             * ClientLibraryOrganization enum.
             * @name google.api.ClientLibraryOrganization
             * @enum {number}
             * @property {number} CLIENT_LIBRARY_ORGANIZATION_UNSPECIFIED=0 CLIENT_LIBRARY_ORGANIZATION_UNSPECIFIED value
             * @property {number} CLOUD=1 CLOUD value
             * @property {number} ADS=2 ADS value
             * @property {number} PHOTOS=3 PHOTOS value
             * @property {number} STREET_VIEW=4 STREET_VIEW value
             * @property {number} SHOPPING=5 SHOPPING value
             * @property {number} GEO=6 GEO value
             * @property {number} GENERATIVE_AI=7 GENERATIVE_AI value
             */
            api.ClientLibraryOrganization = (function() {
                var valuesById = {}, values = Object.create(valuesById);
                values[valuesById[0] = "CLIENT_LIBRARY_ORGANIZATION_UNSPECIFIED"] = 0;
                values[valuesById[1] = "CLOUD"] = 1;
                values[valuesById[2] = "ADS"] = 2;
                values[valuesById[3] = "PHOTOS"] = 3;
                values[valuesById[4] = "STREET_VIEW"] = 4;
                values[valuesById[5] = "SHOPPING"] = 5;
                values[valuesById[6] = "GEO"] = 6;
                values[valuesById[7] = "GENERATIVE_AI"] = 7;
                return values;
            })();
    
            /**
             * ClientLibraryDestination enum.
             * @name google.api.ClientLibraryDestination
             * @enum {number}
             * @property {number} CLIENT_LIBRARY_DESTINATION_UNSPECIFIED=0 CLIENT_LIBRARY_DESTINATION_UNSPECIFIED value
             * @property {number} GITHUB=10 GITHUB value
             * @property {number} PACKAGE_MANAGER=20 PACKAGE_MANAGER value
             */
            api.ClientLibraryDestination = (function() {
                var valuesById = {}, values = Object.create(valuesById);
                values[valuesById[0] = "CLIENT_LIBRARY_DESTINATION_UNSPECIFIED"] = 0;
                values[valuesById[10] = "GITHUB"] = 10;
                values[valuesById[20] = "PACKAGE_MANAGER"] = 20;
                return values;
            })();
    
            /**
             * LaunchStage enum.
             * @name google.api.LaunchStage
             * @enum {number}
             * @property {number} LAUNCH_STAGE_UNSPECIFIED=0 LAUNCH_STAGE_UNSPECIFIED value
             * @property {number} UNIMPLEMENTED=6 UNIMPLEMENTED value
             * @property {number} PRELAUNCH=7 PRELAUNCH value
             * @property {number} EARLY_ACCESS=1 EARLY_ACCESS value
             * @property {number} ALPHA=2 ALPHA value
             * @property {number} BETA=3 BETA value
             * @property {number} GA=4 GA value
             * @property {number} DEPRECATED=5 DEPRECATED value
             */
            api.LaunchStage = (function() {
                var valuesById = {}, values = Object.create(valuesById);
                values[valuesById[0] = "LAUNCH_STAGE_UNSPECIFIED"] = 0;
                values[valuesById[6] = "UNIMPLEMENTED"] = 6;
                values[valuesById[7] = "PRELAUNCH"] = 7;
                values[valuesById[1] = "EARLY_ACCESS"] = 1;
                values[valuesById[2] = "ALPHA"] = 2;
                values[valuesById[3] = "BETA"] = 3;
                values[valuesById[4] = "GA"] = 4;
                values[valuesById[5] = "DEPRECATED"] = 5;
                return values;
            })();
    
            /**
             * FieldBehavior enum.
             * @name google.api.FieldBehavior
             * @enum {number}
             * @property {number} FIELD_BEHAVIOR_UNSPECIFIED=0 FIELD_BEHAVIOR_UNSPECIFIED value
             * @property {number} OPTIONAL=1 OPTIONAL value
             * @property {number} REQUIRED=2 REQUIRED value
             * @property {number} OUTPUT_ONLY=3 OUTPUT_ONLY value
             * @property {number} INPUT_ONLY=4 INPUT_ONLY value
             * @property {number} IMMUTABLE=5 IMMUTABLE value
             * @property {number} UNORDERED_LIST=6 UNORDERED_LIST value
             * @property {number} NON_EMPTY_DEFAULT=7 NON_EMPTY_DEFAULT value
             * @property {number} IDENTIFIER=8 IDENTIFIER value
             */
            api.FieldBehavior = (function() {
                var valuesById = {}, values = Object.create(valuesById);
                values[valuesById[0] = "FIELD_BEHAVIOR_UNSPECIFIED"] = 0;
                values[valuesById[1] = "OPTIONAL"] = 1;
                values[valuesById[2] = "REQUIRED"] = 2;
                values[valuesById[3] = "OUTPUT_ONLY"] = 3;
                values[valuesById[4] = "INPUT_ONLY"] = 4;
                values[valuesById[5] = "IMMUTABLE"] = 5;
                values[valuesById[6] = "UNORDERED_LIST"] = 6;
                values[valuesById[7] = "NON_EMPTY_DEFAULT"] = 7;
                values[valuesById[8] = "IDENTIFIER"] = 8;
                return values;
            })();
    
            api.FieldInfo = (function() {
    
                /**
                 * Properties of a FieldInfo.
                 * @memberof google.api
                 * @interface IFieldInfo
                 * @property {google.api.FieldInfo.Format|null} [format] FieldInfo format
                 */
    
                /**
                 * Constructs a new FieldInfo.
                 * @memberof google.api
                 * @classdesc Represents a FieldInfo.
                 * @implements IFieldInfo
                 * @constructor
                 * @param {google.api.IFieldInfo=} [properties] Properties to set
                 */
                function FieldInfo(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FieldInfo format.
                 * @member {google.api.FieldInfo.Format} format
                 * @memberof google.api.FieldInfo
                 * @instance
                 */
                FieldInfo.prototype.format = 0;
    
                /**
                 * Creates a new FieldInfo instance using the specified properties.
                 * @function create
                 * @memberof google.api.FieldInfo
                 * @static
                 * @param {google.api.IFieldInfo=} [properties] Properties to set
                 * @returns {google.api.FieldInfo} FieldInfo instance
                 */
                FieldInfo.create = function create(properties) {
                    return new FieldInfo(properties);
                };
    
                /**
                 * Encodes the specified FieldInfo message. Does not implicitly {@link google.api.FieldInfo.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.FieldInfo
                 * @static
                 * @param {google.api.IFieldInfo} message FieldInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldInfo.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.format != null && Object.hasOwnProperty.call(message, "format"))
                        writer.uint32(/* id 1, wireType 0 =*/8).int32(message.format);
                    return writer;
                };
    
                /**
                 * Encodes the specified FieldInfo message, length delimited. Does not implicitly {@link google.api.FieldInfo.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.FieldInfo
                 * @static
                 * @param {google.api.IFieldInfo} message FieldInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldInfo.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FieldInfo message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.FieldInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.FieldInfo} FieldInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldInfo.decode = function decode(reader, length, error) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.FieldInfo();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        if (tag === error)
                            break;
                        switch (tag >>> 3) {
                        case 1: {
                                message.format = reader.int32();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FieldInfo message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.FieldInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.FieldInfo} FieldInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldInfo.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FieldInfo message.
                 * @function verify
                 * @memberof google.api.FieldInfo
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FieldInfo.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.format != null && message.hasOwnProperty("format"))
                        switch (message.format) {
                        default:
                            return "format: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                        case 3:
                        case 4:
                            break;
                        }
                    return null;
                };
    
                /**
                 * Creates a FieldInfo message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.FieldInfo
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.FieldInfo} FieldInfo
                 */
                FieldInfo.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.FieldInfo)
                        return object;
                    var message = new $root.google.api.FieldInfo();
                    switch (object.format) {
                    default:
                        if (typeof object.format === "number") {
                            message.format = object.format;
                            break;
                        }
                        break;
                    case "FORMAT_UNSPECIFIED":
                    case 0:
                        message.format = 0;
                        break;
                    case "UUID4":
                    case 1:
                        message.format = 1;
                        break;
                    case "IPV4":
                    case 2:
                        message.format = 2;
                        break;
                    case "IPV6":
                    case 3:
                        message.format = 3;
                        break;
                    case "IPV4_OR_IPV6":
                    case 4:
                        message.format = 4;
                        break;
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a FieldInfo message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.FieldInfo
                 * @static
                 * @param {google.api.FieldInfo} message FieldInfo
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FieldInfo.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.format = options.enums === String ? "FORMAT_UNSPECIFIED" : 0;
                    if (message.format != null && message.hasOwnProperty("format"))
                        object.format = options.enums === String ? $root.google.api.FieldInfo.Format[message.format] === undefined ? message.format : $root.google.api.FieldInfo.Format[message.format] : message.format;
                    return object;
                };
    
                /**
                 * Converts this FieldInfo to JSON.
                 * @function toJSON
                 * @memberof google.api.FieldInfo
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FieldInfo.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for FieldInfo
                 * @function getTypeUrl
                 * @memberof google.api.FieldInfo
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                FieldInfo.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.FieldInfo";
                };
    
                /**
                 * Format enum.
                 * @name google.api.FieldInfo.Format
                 * @enum {number}
                 * @property {number} FORMAT_UNSPECIFIED=0 FORMAT_UNSPECIFIED value
                 * @property {number} UUID4=1 UUID4 value
                 * @property {number} IPV4=2 IPV4 value
                 * @property {number} IPV6=3 IPV6 value
                 * @property {number} IPV4_OR_IPV6=4 IPV4_OR_IPV6 value
                 */
                FieldInfo.Format = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "FORMAT_UNSPECIFIED"] = 0;
                    values[valuesById[1] = "UUID4"] = 1;
                    values[valuesById[2] = "IPV4"] = 2;
                    values[valuesById[3] = "IPV6"] = 3;
                    values[valuesById[4] = "IPV4_OR_IPV6"] = 4;
                    return values;
                })();
    
                return FieldInfo;
            })();
    
            api.ResourceDescriptor = (function() {
    
                /**
                 * Properties of a ResourceDescriptor.
                 * @memberof google.api
                 * @interface IResourceDescriptor
                 * @property {string|null} [type] ResourceDescriptor type
                 * @property {Array.<string>|null} [pattern] ResourceDescriptor pattern
                 * @property {string|null} [nameField] ResourceDescriptor nameField
                 * @property {google.api.ResourceDescriptor.History|null} [history] ResourceDescriptor history
                 * @property {string|null} [plural] ResourceDescriptor plural
                 * @property {string|null} [singular] ResourceDescriptor singular
                 * @property {Array.<google.api.ResourceDescriptor.Style>|null} [style] ResourceDescriptor style
                 */
    
                /**
                 * Constructs a new ResourceDescriptor.
                 * @memberof google.api
                 * @classdesc Represents a ResourceDescriptor.
                 * @implements IResourceDescriptor
                 * @constructor
                 * @param {google.api.IResourceDescriptor=} [properties] Properties to set
                 */
                function ResourceDescriptor(properties) {
                    this.pattern = [];
                    this.style = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ResourceDescriptor type.
                 * @member {string} type
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 */
                ResourceDescriptor.prototype.type = "";
    
                /**
                 * ResourceDescriptor pattern.
                 * @member {Array.<string>} pattern
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 */
                ResourceDescriptor.prototype.pattern = $util.emptyArray;
    
                /**
                 * ResourceDescriptor nameField.
                 * @member {string} nameField
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 */
                ResourceDescriptor.prototype.nameField = "";
    
                /**
                 * ResourceDescriptor history.
                 * @member {google.api.ResourceDescriptor.History} history
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 */
                ResourceDescriptor.prototype.history = 0;
    
                /**
                 * ResourceDescriptor plural.
                 * @member {string} plural
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 */
                ResourceDescriptor.prototype.plural = "";
    
                /**
                 * ResourceDescriptor singular.
                 * @member {string} singular
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 */
                ResourceDescriptor.prototype.singular = "";
    
                /**
                 * ResourceDescriptor style.
                 * @member {Array.<google.api.ResourceDescriptor.Style>} style
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 */
                ResourceDescriptor.prototype.style = $util.emptyArray;
    
                /**
                 * Creates a new ResourceDescriptor instance using the specified properties.
                 * @function create
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {google.api.IResourceDescriptor=} [properties] Properties to set
                 * @returns {google.api.ResourceDescriptor} ResourceDescriptor instance
                 */
                ResourceDescriptor.create = function create(properties) {
                    return new ResourceDescriptor(properties);
                };
    
                /**
                 * Encodes the specified ResourceDescriptor message. Does not implicitly {@link google.api.ResourceDescriptor.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {google.api.IResourceDescriptor} message ResourceDescriptor message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ResourceDescriptor.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.type);
                    if (message.pattern != null && message.pattern.length)
                        for (var i = 0; i < message.pattern.length; ++i)
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.pattern[i]);
                    if (message.nameField != null && Object.hasOwnProperty.call(message, "nameField"))
                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.nameField);
                    if (message.history != null && Object.hasOwnProperty.call(message, "history"))
                        writer.uint32(/* id 4, wireType 0 =*/32).int32(message.history);
                    if (message.plural != null && Object.hasOwnProperty.call(message, "plural"))
                        writer.uint32(/* id 5, wireType 2 =*/42).string(message.plural);
                    if (message.singular != null && Object.hasOwnProperty.call(message, "singular"))
                        writer.uint32(/* id 6, wireType 2 =*/50).string(message.singular);
                    if (message.style != null && message.style.length) {
                        writer.uint32(/* id 10, wireType 2 =*/82).fork();
                        for (var i = 0; i < message.style.length; ++i)
                            writer.int32(message.style[i]);
                        writer.ldelim();
                    }
                    return writer;
                };
    
                /**
                 * Encodes the specified ResourceDescriptor message, length delimited. Does not implicitly {@link google.api.ResourceDescriptor.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {google.api.IResourceDescriptor} message ResourceDescriptor message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ResourceDescriptor.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a ResourceDescriptor message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.ResourceDescriptor} ResourceDescriptor
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ResourceDescriptor.decode = function decode(reader, length, error) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.ResourceDescriptor();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        if (tag === error)
                            break;
                        switch (tag >>> 3) {
                        case 1: {
                                message.type = reader.string();
                                break;
                            }
                        case 2: {
                                if (!(message.pattern && message.pattern.length))
                                    message.pattern = [];
                                message.pattern.push(reader.string());
                                break;
                            }
                        case 3: {
                                message.nameField = reader.string();
                                break;
                            }
                        case 4: {
                                message.history = reader.int32();
                                break;
                            }
                        case 5: {
                                message.plural = reader.string();
                                break;
                            }
                        case 6: {
                                message.singular = reader.string();
                                break;
                            }
                        case 10: {
                                if (!(message.style && message.style.length))
                                    message.style = [];
                                if ((tag & 7) === 2) {
                                    var end2 = reader.uint32() + reader.pos;
                                    while (reader.pos < end2)
                                        message.style.push(reader.int32());
                                } else
                                    message.style.push(reader.int32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a ResourceDescriptor message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.ResourceDescriptor} ResourceDescriptor
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ResourceDescriptor.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a ResourceDescriptor message.
                 * @function verify
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ResourceDescriptor.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.type != null && message.hasOwnProperty("type"))
                        if (!$util.isString(message.type))
                            return "type: string expected";
                    if (message.pattern != null && message.hasOwnProperty("pattern")) {
                        if (!Array.isArray(message.pattern))
                            return "pattern: array expected";
                        for (var i = 0; i < message.pattern.length; ++i)
                            if (!$util.isString(message.pattern[i]))
                                return "pattern: string[] expected";
                    }
                    if (message.nameField != null && message.hasOwnProperty("nameField"))
                        if (!$util.isString(message.nameField))
                            return "nameField: string expected";
                    if (message.history != null && message.hasOwnProperty("history"))
                        switch (message.history) {
                        default:
                            return "history: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                            break;
                        }
                    if (message.plural != null && message.hasOwnProperty("plural"))
                        if (!$util.isString(message.plural))
                            return "plural: string expected";
                    if (message.singular != null && message.hasOwnProperty("singular"))
                        if (!$util.isString(message.singular))
                            return "singular: string expected";
                    if (message.style != null && message.hasOwnProperty("style")) {
                        if (!Array.isArray(message.style))
                            return "style: array expected";
                        for (var i = 0; i < message.style.length; ++i)
                            switch (message.style[i]) {
                            default:
                                return "style: enum value[] expected";
                            case 0:
                            case 1:
                                break;
                            }
                    }
                    return null;
                };
    
                /**
                 * Creates a ResourceDescriptor message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.ResourceDescriptor} ResourceDescriptor
                 */
                ResourceDescriptor.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.ResourceDescriptor)
                        return object;
                    var message = new $root.google.api.ResourceDescriptor();
                    if (object.type != null)
                        message.type = String(object.type);
                    if (object.pattern) {
                        if (!Array.isArray(object.pattern))
                            throw TypeError(".google.api.ResourceDescriptor.pattern: array expected");
                        message.pattern = [];
                        for (var i = 0; i < object.pattern.length; ++i)
                            message.pattern[i] = String(object.pattern[i]);
                    }
                    if (object.nameField != null)
                        message.nameField = String(object.nameField);
                    switch (object.history) {
                    default:
                        if (typeof object.history === "number") {
                            message.history = object.history;
                            break;
                        }
                        break;
                    case "HISTORY_UNSPECIFIED":
                    case 0:
                        message.history = 0;
                        break;
                    case "ORIGINALLY_SINGLE_PATTERN":
                    case 1:
                        message.history = 1;
                        break;
                    case "FUTURE_MULTI_PATTERN":
                    case 2:
                        message.history = 2;
                        break;
                    }
                    if (object.plural != null)
                        message.plural = String(object.plural);
                    if (object.singular != null)
                        message.singular = String(object.singular);
                    if (object.style) {
                        if (!Array.isArray(object.style))
                            throw TypeError(".google.api.ResourceDescriptor.style: array expected");
                        message.style = [];
                        for (var i = 0; i < object.style.length; ++i)
                            switch (object.style[i]) {
                            default:
                                if (typeof object.style[i] === "number") {
                                    message.style[i] = object.style[i];
                                    break;
                                }
                            case "STYLE_UNSPECIFIED":
                            case 0:
                                message.style[i] = 0;
                                break;
                            case "DECLARATIVE_FRIENDLY":
                            case 1:
                                message.style[i] = 1;
                                break;
                            }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a ResourceDescriptor message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {google.api.ResourceDescriptor} message ResourceDescriptor
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ResourceDescriptor.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.pattern = [];
                        object.style = [];
                    }
                    if (options.defaults) {
                        object.type = "";
                        object.nameField = "";
                        object.history = options.enums === String ? "HISTORY_UNSPECIFIED" : 0;
                        object.plural = "";
                        object.singular = "";
                    }
                    if (message.type != null && message.hasOwnProperty("type"))
                        object.type = message.type;
                    if (message.pattern && message.pattern.length) {
                        object.pattern = [];
                        for (var j = 0; j < message.pattern.length; ++j)
                            object.pattern[j] = message.pattern[j];
                    }
                    if (message.nameField != null && message.hasOwnProperty("nameField"))
                        object.nameField = message.nameField;
                    if (message.history != null && message.hasOwnProperty("history"))
                        object.history = options.enums === String ? $root.google.api.ResourceDescriptor.History[message.history] === undefined ? message.history : $root.google.api.ResourceDescriptor.History[message.history] : message.history;
                    if (message.plural != null && message.hasOwnProperty("plural"))
                        object.plural = message.plural;
                    if (message.singular != null && message.hasOwnProperty("singular"))
                        object.singular = message.singular;
                    if (message.style && message.style.length) {
                        object.style = [];
                        for (var j = 0; j < message.style.length; ++j)
                            object.style[j] = options.enums === String ? $root.google.api.ResourceDescriptor.Style[message.style[j]] === undefined ? message.style[j] : $root.google.api.ResourceDescriptor.Style[message.style[j]] : message.style[j];
                    }
                    return object;
                };
    
                /**
                 * Converts this ResourceDescriptor to JSON.
                 * @function toJSON
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ResourceDescriptor.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for ResourceDescriptor
                 * @function getTypeUrl
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                ResourceDescriptor.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.ResourceDescriptor";
                };
    
                /**
                 * History enum.
                 * @name google.api.ResourceDescriptor.History
                 * @enum {number}
                 * @property {number} HISTORY_UNSPECIFIED=0 HISTORY_UNSPECIFIED value
                 * @property {number} ORIGINALLY_SINGLE_PATTERN=1 ORIGINALLY_SINGLE_PATTERN value
                 * @property {number} FUTURE_MULTI_PATTERN=2 FUTURE_MULTI_PATTERN value
                 */
                ResourceDescriptor.History = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "HISTORY_UNSPECIFIED"] = 0;
                    values[valuesById[1] = "ORIGINALLY_SINGLE_PATTERN"] = 1;
                    values[valuesById[2] = "FUTURE_MULTI_PATTERN"] = 2;
                    return values;
                })();
    
                /**
                 * Style enum.
                 * @name google.api.ResourceDescriptor.Style
                 * @enum {number}
                 * @property {number} STYLE_UNSPECIFIED=0 STYLE_UNSPECIFIED value
                 * @property {number} DECLARATIVE_FRIENDLY=1 DECLARATIVE_FRIENDLY value
                 */
                ResourceDescriptor.Style = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "STYLE_UNSPECIFIED"] = 0;
                    values[valuesById[1] = "DECLARATIVE_FRIENDLY"] = 1;
                    return values;
                })();
    
                return ResourceDescriptor;
            })();
    
            api.ResourceReference = (function() {
    
                /**
                 * Properties of a ResourceReference.
                 * @memberof google.api
                 * @interface IResourceReference
                 * @property {string|null} [type] ResourceReference type
                 * @property {string|null} [childType] ResourceReference childType
                 */
    
                /**
                 * Constructs a new ResourceReference.
                 * @memberof google.api
                 * @classdesc Represents a ResourceReference.
                 * @implements IResourceReference
                 * @constructor
                 * @param {google.api.IResourceReference=} [properties] Properties to set
                 */
                function ResourceReference(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ResourceReference type.
                 * @member {string} type
                 * @memberof google.api.ResourceReference
                 * @instance
                 */
                ResourceReference.prototype.type = "";
    
                /**
                 * ResourceReference childType.
                 * @member {string} childType
                 * @memberof google.api.ResourceReference
                 * @instance
                 */
                ResourceReference.prototype.childType = "";
    
                /**
                 * Creates a new ResourceReference instance using the specified properties.
                 * @function create
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {google.api.IResourceReference=} [properties] Properties to set
                 * @returns {google.api.ResourceReference} ResourceReference instance
                 */
                ResourceReference.create = function create(properties) {
                    return new ResourceReference(properties);
                };
    
                /**
                 * Encodes the specified ResourceReference message. Does not implicitly {@link google.api.ResourceReference.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {google.api.IResourceReference} message ResourceReference message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ResourceReference.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.type);
                    if (message.childType != null && Object.hasOwnProperty.call(message, "childType"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.childType);
                    return writer;
                };
    
                /**
                 * Encodes the specified ResourceReference message, length delimited. Does not implicitly {@link google.api.ResourceReference.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {google.api.IResourceReference} message ResourceReference message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ResourceReference.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a ResourceReference message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.ResourceReference} ResourceReference
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ResourceReference.decode = function decode(reader, length, error) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.ResourceReference();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        if (tag === error)
                            break;
                        switch (tag >>> 3) {
                        case 1: {
                                message.type = reader.string();
                                break;
                            }
                        case 2: {
                                message.childType = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a ResourceReference message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.ResourceReference} ResourceReference
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ResourceReference.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a ResourceReference message.
                 * @function verify
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ResourceReference.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.type != null && message.hasOwnProperty("type"))
                        if (!$util.isString(message.type))
                            return "type: string expected";
                    if (message.childType != null && message.hasOwnProperty("childType"))
                        if (!$util.isString(message.childType))
                            return "childType: string expected";
                    return null;
                };
    
                /**
                 * Creates a ResourceReference message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.ResourceReference} ResourceReference
                 */
                ResourceReference.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.ResourceReference)
                        return object;
                    var message = new $root.google.api.ResourceReference();
                    if (object.type != null)
                        message.type = String(object.type);
                    if (object.childType != null)
                        message.childType = String(object.childType);
                    return message;
                };
    
                /**
                 * Creates a plain object from a ResourceReference message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {google.api.ResourceReference} message ResourceReference
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ResourceReference.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.type = "";
                        object.childType = "";
                    }
                    if (message.type != null && message.hasOwnProperty("type"))
                        object.type = message.type;
                    if (message.childType != null && message.hasOwnProperty("childType"))
                        object.childType = message.childType;
                    return object;
                };
    
                /**
                 * Converts this ResourceReference to JSON.
                 * @function toJSON
                 * @memberof google.api.ResourceReference
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ResourceReference.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for ResourceReference
                 * @function getTypeUrl
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                ResourceReference.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.ResourceReference";
                };
    
                return ResourceReference;
            })();
    
            return api;
        })();
    
        google.protobuf = (function() {
    
            /**
             * Namespace protobuf.
             * @memberof google
             * @namespace
             */
            var protobuf = {};
    
            protobuf.FileDescriptorSet = (function() {
    
                /**
                 * Properties of a FileDescriptorSet.
                 * @memberof google.protobuf
                 * @interface IFileDescriptorSet
                 * @property {Array.<google.protobuf.IFileDescriptorProto>|null} [file] FileDescriptorSet file
                 */
    
                /**
                 * Constructs a new FileDescriptorSet.
                 * @memberof google.protobuf
                 * @classdesc Represents a FileDescriptorSet.
                 * @implements IFileDescriptorSet
                 * @constructor
                 * @param {google.protobuf.IFileDescriptorSet=} [properties] Properties to set
                 */
                function FileDescriptorSet(properties) {
                    this.file = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FileDescriptorSet file.
                 * @member {Array.<google.protobuf.IFileDescriptorProto>} file
                 * @memberof google.protobuf.FileDescriptorSet
                 * @instance
                 */
                FileDescriptorSet.prototype.file = $util.emptyArray;
    
                /**
                 * Creates a new FileDescriptorSet instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {google.protobuf.IFileDescriptorSet=} [properties] Properties to set
                 * @returns {google.protobuf.FileDescriptorSet} FileDescriptorSet instance
                 */
                FileDescriptorSet.create = function create(properties) {
                    return new FileDescriptorSet(properties);
                };
    
                /**
                 * Encodes the specified FileDescriptorSet message. Does not implicitly {@link google.protobuf.FileDescriptorSet.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {google.protobuf.IFileDescriptorSet} message FileDescriptorSet message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileDescriptorSet.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.file != null && message.file.length)
                        for (var i = 0; i < message.file.length; ++i)
                            $root.google.protobuf.FileDescriptorProto.encode(message.file[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified FileDescriptorSet message, length delimited. Does not implicitly {@link google.protobuf.FileDescriptorSet.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {google.protobuf.IFileDescriptorSet} message FileDescriptorSet message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileDescriptorSet.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FileDescriptorSet message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FileDescriptorSet} FileDescriptorSet
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileDescriptorSet.decode = function decode(reader, length, error) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FileDescriptorSet();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        if (tag === error)
                            break;
                        switch (tag >>> 3) {
                        case 1: {
                                if (!(message.file && message.file.length))
                                    message.file = [];
                                message.file.push($root.google.protobuf.FileDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FileDescriptorSet message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FileDescriptorSet} FileDescriptorSet
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileDescriptorSet.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FileDescriptorSet message.
                 * @function verify
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FileDescriptorSet.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.file != null && message.hasOwnProperty("file")) {
                        if (!Array.isArray(message.file))
                            return "file: array expected";
                        for (var i = 0; i < message.file.length; ++i) {
                            var error = $root.google.protobuf.FileDescriptorProto.verify(message.file[i]);
                            if (error)
                                return "file." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a FileDescriptorSet message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FileDescriptorSet} FileDescriptorSet
                 */
                FileDescriptorSet.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FileDescriptorSet)
                        return object;
                    var message = new $root.google.protobuf.FileDescriptorSet();
                    if (object.file) {
                        if (!Array.isArray(object.file))
                            throw TypeError(".google.protobuf.FileDescriptorSet.file: array expected");
                        message.file = [];
                        for (var i = 0; i < object.file.length; ++i) {
                            if (typeof object.file[i] !== "object")
                                throw TypeError(".google.protobuf.FileDescriptorSet.file: object expected");
                            message.file[i] = $root.google.protobuf.FileDescriptorProto.fromObject(object.file[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a FileDescriptorSet message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {google.protobuf.FileDescriptorSet} message FileDescriptorSet
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FileDescriptorSet.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.file = [];
                    if (message.file && message.file.length) {
                        object.file = [];
                        for (var j = 0; j < message.file.length; ++j)
                            object.file[j] = $root.google.protobuf.FileDescriptorProto.toObject(message.file[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this FileDescriptorSet to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FileDescriptorSet
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FileDescriptorSet.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for FileDescriptorSet
                 * @function getTypeUrl
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                FileDescriptorSet.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.FileDescriptorSet";
                };
    
                return FileDescriptorSet;
            })();
    
            /**
             * Edition enum.
             * @name google.protobuf.Edition
             * @enum {number}
             * @property {number} EDITION_UNKNOWN=0 EDITION_UNKNOWN value
             * @property {number} EDITION_PROTO2=998 EDITION_PROTO2 value
             * @property {number} EDITION_PROTO3=999 EDITION_PROTO3 value
             * @property {number} EDITION_2023=1000 EDITION_2023 value
             * @property {number} EDITION_2024=1001 EDITION_2024 value
             * @property {number} EDITION_1_TEST_ONLY=1 EDITION_1_TEST_ONLY value
             * @property {number} EDITION_2_TEST_ONLY=2 EDITION_2_TEST_ONLY value
             * @property {number} EDITION_99997_TEST_ONLY=99997 EDITION_99997_TEST_ONLY value
             * @property {number} EDITION_99998_TEST_ONLY=99998 EDITION_99998_TEST_ONLY value
             * @property {number} EDITION_99999_TEST_ONLY=99999 EDITION_99999_TEST_ONLY value
             * @property {number} EDITION_MAX=2147483647 EDITION_MAX value
             */
            protobuf.Edition = (function() {
                var valuesById = {}, values = Object.create(valuesById);
                values[valuesById[0] = "EDITION_UNKNOWN"] = 0;
                values[valuesById[998] = "EDITION_PROTO2"] = 998;
                values[valuesById[999] = "EDITION_PROTO3"] = 999;
                values[valuesById[1000] = "EDITION_2023"] = 1000;
                values[valuesById[1001] = "EDITION_2024"] = 1001;
                values[valuesById[1] = "EDITION_1_TEST_ONLY"] = 1;
                values[valuesById[2] = "EDITION_2_TEST_ONLY"] = 2;
                values[valuesById[99997] = "EDITION_99997_TEST_ONLY"] = 99997;
                values[valuesById[99998] = "EDITION_99998_TEST_ONLY"] = 99998;
                values[valuesById[99999] = "EDITION_99999_TEST_ONLY"] = 99999;
                values[valuesById[2147483647] = "EDITION_MAX"] = 2147483647;
                return values;
            })();
    
            protobuf.FileDescriptorProto = (function() {
    
                /**
                 * Properties of a FileDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IFileDescriptorProto
                 * @property {string|null} [name] FileDescriptorProto name
                 * @property {string|null} ["package"] FileDescriptorProto package
                 * @property {Array.<string>|null} [dependency] FileDescriptorProto dependency
                 * @property {Array.<number>|null} [publicDependency] FileDescriptorProto publicDependency
                 * @property {Array.<number>|null} [weakDependency] FileDescriptorProto weakDependency
                 * @property {Array.<google.protobuf.IDescriptorProto>|null} [messageType] FileDescriptorProto messageType
                 * @property {Array.<google.protobuf.IEnumDescriptorProto>|null} [enumType] FileDescriptorProto enumType
                 * @property {Array.<google.protobuf.IServiceDescriptorProto>|null} [service] FileDescriptorProto service
                 * @property {Array.<google.protobuf.IFieldDescriptorProto>|null} [extension] FileDescriptorProto extension
                 * @property {google.protobuf.IFileOptions|null} [options] FileDescriptorProto options
                 * @property {google.protobuf.ISourceCodeInfo|null} [sourceCodeInfo] FileDescriptorProto sourceCodeInfo
                 * @property {string|null} [syntax] FileDescriptorProto syntax
                 * @property {google.protobuf.Edition|null} [edition] FileDescriptorProto edition
                 */
    
                /**
                 * Constructs a new FileDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents a FileDescriptorProto.
                 * @implements IFileDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IFileDescriptorProto=} [properties] Properties to set
                 */
                function FileDescriptorProto(properties) {
                    this.dependency = [];
                    this.publicDependency = [];
                    this.weakDependency = [];
                    this.messageType = [];
                    this.enumType = [];
                    this.service = [];
                    this.extension = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FileDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.name = "";
    
                /**
                 * FileDescriptorProto package.
                 * @member {string} package
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype["package"] = "";
    
                /**
                 * FileDescriptorProto dependency.
                 * @member {Array.<string>} dependency
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.dependency = $util.emptyArray;
    
                /**
                 * FileDescriptorProto publicDependency.
                 * @member {Array.<number>} publicDependency
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.publicDependency = $util.emptyArray;
    
                /**
                 * FileDescriptorProto weakDependency.
                 * @member {Array.<number>} weakDependency
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.weakDependency = $util.emptyArray;
    
                /**
                 * FileDescriptorProto messageType.
                 * @member {Array.<google.protobuf.IDescriptorProto>} messageType
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.messageType = $util.emptyArray;
    
                /**
                 * FileDescriptorProto enumType.
                 * @member {Array.<google.protobuf.IEnumDescriptorProto>} enumType
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.enumType = $util.emptyArray;
    
                /**
                 * FileDescriptorProto service.
                 * @member {Array.<google.protobuf.IServiceDescriptorProto>} service
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.service = $util.emptyArray;
    
                /**
                 * FileDescriptorProto extension.
                 * @member {Array.<google.protobuf.IFieldDescriptorProto>} extension
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.extension = $util.emptyArray;
    
                /**
                 * FileDescriptorProto options.
                 * @member {google.protobuf.IFileOptions|null|undefined} options
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.options = null;
    
                /**
                 * FileDescriptorProto sourceCodeInfo.
                 * @member {google.protobuf.ISourceCodeInfo|null|undefined} sourceCodeInfo
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.sourceCodeInfo = null;
    
                /**
                 * FileDescriptorProto syntax.
                 * @member {string} syntax
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.syntax = "";
    
                /**
                 * FileDescriptorProto edition.
                 * @member {google.protobuf.Edition} edition
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.edition = 0;
    
                /**
                 * Creates a new FileDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {google.protobuf.IFileDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.FileDescriptorProto} FileDescriptorProto instance
                 */
                FileDescriptorProto.create = function create(properties) {
                    return new FileDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified FileDescriptorProto message. Does not implicitly {@link google.protobuf.FileDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {google.protobuf.IFileDescriptorProto} message FileDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message["package"] != null && Object.hasOwnProperty.call(message, "package"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message["package"]);
                    if (message.dependency != null && message.dependency.length)
                        for (var i = 0; i < message.dependency.length; ++i)
                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.dependency[i]);
                    if (message.messageType != null && message.messageType.length)
                        for (var i = 0; i < message.messageType.length; ++i)
                            $root.google.protobuf.DescriptorProto.encode(message.messageType[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                    if (message.enumType != null && message.enumType.length)
                        for (var i = 0; i < message.enumType.length; ++i)
                            $root.google.protobuf.EnumDescriptorProto.encode(message.enumType[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                    if (message.service != null && message.service.length)
                        for (var i = 0; i < message.service.length; ++i)
                            $root.google.protobuf.ServiceDescriptorProto.encode(message.service[i], writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                    if (message.extension != null && message.extension.length)
                        for (var i = 0; i < message.extension.length; ++i)
                            $root.google.protobuf.FieldDescriptorProto.encode(message.extension[i], writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.FileOptions.encode(message.options, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                    if (message.sourceCodeInfo != null && Object.hasOwnProperty.call(message, "sourceCodeInfo"))
                        $root.google.protobuf.SourceCodeInfo.encode(message.sourceCodeInfo, writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                    if (message.publicDependency != null && message.publicDependency.length)
                        for (var i = 0; i < message.publicDependency.length; ++i)
                            writer.uint32(/* id 10, wireType 0 =*/80).int32(message.publicDependency[i]);
                    if (message.weakDependency != null && message.weakDependency.length)
                        for (var i = 0; i < message.weakDependency.length; ++i)
                            writer.uint32(/* id 11, wireType 0 =*/88).int32(message.weakDependency[i]);
                    if (message.syntax != null && Object.hasOwnProperty.call(message, "syntax"))
                        writer.uint32(/* id 12, wireType 2 =*/98).string(message.syntax);
                    if (message.edition != null && Object.hasOwnProperty.call(message, "edition"))
                        writer.uint32(/* id 14, wireType 0 =*/112).int32(message.edition);
                    return writer;
                };
    
                /**
                 * Encodes the specified FileDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.FileDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {google.protobuf.IFileDescriptorProto} message FileDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FileDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FileDescriptorProto} FileDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileDescriptorProto.decode = function decode(reader, length, error) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FileDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        if (tag === error)
                            break;
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                message["package"] = reader.string();
                                break;
                            }
                        case 3: {
                                if (!(message.dependency && message.dependency.length))
                                    message.dependency = [];
                                message.dependency.push(reader.string());
                                break;
                            }
                        case 10: {
                                if (!(message.publicDependency && message.publicDependency.length))
                                    message.publicDependency = [];
                                if ((tag & 7) === 2) {
                                    var end2 = reader.uint32() + reader.pos;
                                    while (reader.pos < end2)
                                        message.publicDependency.push(reader.int32());
                                } else
                                    message.publicDependency.push(reader.int32());
                                break;
                            }
                        case 11: {
                                if (!(message.weakDependency && message.weakDependency.length))
                                    message.weakDependency = [];
                                if ((tag & 7) === 2) {
                                    var end2 = reader.uint32() + reader.pos;
                                    while (reader.pos < end2)
                                        message.weakDependency.push(reader.int32());
                                } else
                                    message.weakDependency.push(reader.int32());
                                break;
                            }
                        case 4: {
                                if (!(message.messageType && message.messageType.length))
                                    message.messageType = [];
                                message.messageType.push($root.google.protobuf.DescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 5: {
                                if (!(message.enumType && message.enumType.length))
                                    message.enumType = [];
                                message.enumType.push($root.google.protobuf.EnumDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 6: {
                                if (!(message.service && message.service.length))
                                    message.service = [];
                                message.service.push($root.google.protobuf.ServiceDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 7: {
                                if (!(message.extension && message.extension.length))
                                    message.extension = [];
                                message.extension.push($root.google.protobuf.FieldDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 8: {
                                message.options = $root.google.protobuf.FileOptions.decode(reader, reader.uint32());
                                break;
                            }
                        case 9: {
                                message.sourceCodeInfo = $root.google.protobuf.SourceCodeInfo.decode(reader, reader.uint32());
                                break;
                            }
                        case 12: {
                                message.syntax = reader.string();
                                break;
                            }
                        case 14: {
                                message.edition = reader.int32();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FileDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FileDescriptorProto} FileDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FileDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FileDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message["package"] != null && message.hasOwnProperty("package"))
                        if (!$util.isString(message["package"]))
                            return "package: string expected";
                    if (message.dependency != null && message.hasOwnProperty("dependency")) {
                        if (!Array.isArray(message.dependency))
                            return "dependency: array expected";
                        for (var i = 0; i < message.dependency.length; ++i)
                            if (!$util.isString(message.dependency[i]))
                                return "dependency: string[] expected";
                    }
                    if (message.publicDependency != null && message.hasOwnProperty("publicDependency")) {
                        if (!Array.isArray(message.publicDependency))
                            return "publicDependency: array expected";
                        for (var i = 0; i < message.publicDependency.length; ++i)
                            if (!$util.isInteger(message.publicDependency[i]))
                                return "publicDependency: integer[] expected";
                    }
                    if (message.weakDependency != null && message.hasOwnProperty("weakDependency")) {
                        if (!Array.isArray(message.weakDependency))
                            return "weakDependency: array expected";
                        for (var i = 0; i < message.weakDependency.length; ++i)
                            if (!$util.isInteger(message.weakDependency[i]))
                                return "weakDependency: integer[] expected";
                    }
                    if (message.messageType != null && message.hasOwnProperty("messageType")) {
                        if (!Array.isArray(message.messageType))
                            return "messageType: array expected";
                        for (var i = 0; i < message.messageType.length; ++i) {
                            var error = $root.google.protobuf.DescriptorProto.verify(message.messageType[i]);
                            if (error)
                                return "messageType." + error;
                        }
                    }
                    if (message.enumType != null && message.hasOwnProperty("enumType")) {
                        if (!Array.isArray(message.enumType))
                            return "enumType: array expected";
                        for (var i = 0; i < message.enumType.length; ++i) {
                            var error = $root.google.protobuf.EnumDescriptorProto.verify(message.enumType[i]);
                            if (error)
                                return "enumType." + error;
                        }
                    }
                    if (message.service != null && message.hasOwnProperty("service")) {
                        if (!Array.isArray(message.service))
                            return "service: array expected";
                        for (var i = 0; i < message.service.length; ++i) {
                            var error = $root.google.protobuf.ServiceDescriptorProto.verify(message.service[i]);
                            if (error)
                                return "service." + error;
                        }
                    }
                    if (message.extension != null && message.hasOwnProperty("extension")) {
                        if (!Array.isArray(message.extension))
                            return "extension: array expected";
                        for (var i = 0; i < message.extension.length; ++i) {
                            var error = $root.google.protobuf.FieldDescriptorProto.verify(message.extension[i]);
                            if (error)
                                return "extension." + error;
                        }
                    }
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.FileOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    if (message.sourceCodeInfo != null && message.hasOwnProperty("sourceCodeInfo")) {
                        var error = $root.google.protobuf.SourceCodeInfo.verify(message.sourceCodeInfo);
                        if (error)
                            return "sourceCodeInfo." + error;
                    }
                    if (message.syntax != null && message.hasOwnProperty("syntax"))
                        if (!$util.isString(message.syntax))
                            return "syntax: string expected";
                    if (message.edition != null && message.hasOwnProperty("edition"))
                        switch (message.edition) {
                        default:
                            return "edition: enum value expected";
                        case 0:
                        case 998:
                        case 999:
                        case 1000:
                        case 1001:
                        case 1:
                        case 2:
                        case 99997:
                        case 99998:
                        case 99999:
                        case 2147483647:
                            break;
                        }
                    return null;
                };
    
                /**
                 * Creates a FileDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FileDescriptorProto} FileDescriptorProto
                 */
                FileDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FileDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.FileDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object["package"] != null)
                        message["package"] = String(object["package"]);
                    if (object.dependency) {
                        if (!Array.isArray(object.dependency))
                            throw TypeError(".google.protobuf.FileDescriptorProto.dependency: array expected");
                        message.dependency = [];
                        for (var i = 0; i < object.dependency.length; ++i)
                            message.dependency[i] = String(object.dependency[i]);
                    }
                    if (object.publicDependency) {
                        if (!Array.isArray(object.publicDependency))
                            throw TypeError(".google.protobuf.FileDescriptorProto.publicDependency: array expected");
                        message.publicDependency = [];
                        for (var i = 0; i < object.publicDependency.length; ++i)
                            message.publicDependency[i] = object.publicDependency[i] | 0;
                    }
                    if (object.weakDependency) {
                        if (!Array.isArray(object.weakDependency))
                            throw TypeError(".google.protobuf.FileDescriptorProto.weakDependency: array expected");
                        message.weakDependency = [];
                        for (var i = 0; i < object.weakDependency.length; ++i)
                            message.weakDependency[i] = object.weakDependency[i] | 0;
                    }
                    if (object.messageType) {
                        if (!Array.isArray(object.messageType))
                            throw TypeError(".google.protobuf.FileDescriptorProto.messageType: array expected");
                        message.messageType = [];
                        for (var i = 0; i < object.messageType.length; ++i) {
                            if (typeof object.messageType[i] !== "object")
                                throw TypeError(".google.protobuf.FileDescriptorProto.messageType: object expected");
                            message.messageType[i] = $root.google.protobuf.DescriptorProto.fromObject(object.messageType[i]);
                        }
                    }
                    if (object.enumType) {
                        if (!Array.isArray(object.enumType))
                            throw TypeError(".google.protobuf.FileDescriptorProto.enumType: array expected");
                        message.enumType = [];
                        for (var i = 0; i < object.enumType.length; ++i) {
                            if (typeof object.enumType[i] !== "object")
                                throw TypeError(".google.protobuf.FileDescriptorProto.enumType: object expected");
                            message.enumType[i] = $root.google.protobuf.EnumDescriptorProto.fromObject(object.enumType[i]);
                        }
                    }
                    if (object.service) {
                        if (!Array.isArray(object.service))
                            throw TypeError(".google.protobuf.FileDescriptorProto.service: array expected");
                        message.service = [];
                        for (var i = 0; i < object.service.length; ++i) {
                            if (typeof object.service[i] !== "object")
                                throw TypeError(".google.protobuf.FileDescriptorProto.service: object expected");
                            message.service[i] = $root.google.protobuf.ServiceDescriptorProto.fromObject(object.service[i]);
                        }
                    }
                    if (object.extension) {
                        if (!Array.isArray(object.extension))
                            throw TypeError(".google.protobuf.FileDescriptorProto.extension: array expected");
                        message.extension = [];
                        for (var i = 0; i < object.extension.length; ++i) {
                            if (typeof object.extension[i] !== "object")
                                throw TypeError(".google.protobuf.FileDescriptorProto.extension: object expected");
                            message.extension[i] = $root.google.protobuf.FieldDescriptorProto.fromObject(object.extension[i]);
                        }
                    }
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.FileDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.FileOptions.fromObject(object.options);
                    }
                    if (object.sourceCodeInfo != null) {
                        if (typeof object.sourceCodeInfo !== "object")
                            throw TypeError(".google.protobuf.FileDescriptorProto.sourceCodeInfo: object expected");
                        message.sourceCodeInfo = $root.google.protobuf.SourceCodeInfo.fromObject(object.sourceCodeInfo);
                    }
                    if (object.syntax != null)
                        message.syntax = String(object.syntax);
                    switch (object.edition) {
                    default:
                        if (typeof object.edition === "number") {
                            message.edition = object.edition;
                            break;
                        }
                        break;
                    case "EDITION_UNKNOWN":
                    case 0:
                        message.edition = 0;
                        break;
                    case "EDITION_PROTO2":
                    case 998:
                        message.edition = 998;
                        break;
                    case "EDITION_PROTO3":
                    case 999:
                        message.edition = 999;
                        break;
                    case "EDITION_2023":
                    case 1000:
                        message.edition = 1000;
                        break;
                    case "EDITION_2024":
                    case 1001:
                        message.edition = 1001;
                        break;
                    case "EDITION_1_TEST_ONLY":
                    case 1:
                        message.edition = 1;
                        break;
                    case "EDITION_2_TEST_ONLY":
                    case 2:
                        message.edition = 2;
                        break;
                    case "EDITION_99997_TEST_ONLY":
                    case 99997:
                        message.edition = 99997;
                        break;
                    case "EDITION_99998_TEST_ONLY":
                    case 99998:
                        message.edition = 99998;
                        break;
                    case "EDITION_99999_TEST_ONLY":
                    case 99999:
                        message.edition = 99999;
                        break;
                    case "EDITION_MAX":
                    case 2147483647:
                        message.edition = 2147483647;
                        break;
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a FileDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {google.protobuf.FileDescriptorProto} message FileDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FileDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.dependency = [];
                        object.messageType = [];
                        object.enumType = [];
                        object.service = [];
                        object.extension = [];
                        object.publicDependency = [];
                        object.weakDependency = [];
                    }
                    if (options.defaults) {
                        object.name = "";
                        object["package"] = "";
                        object.options = null;
                        object.sourceCodeInfo = null;
                        object.syntax = "";
                        object.edition = options.enums === String ? "EDITION_UNKNOWN" : 0;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message["package"] != null && message.hasOwnProperty("package"))
                        object["package"] = message["package"];
                    if (message.dependency && message.dependency.length) {
                        object.dependency = [];
                        for (var j = 0; j < message.dependency.length; ++j)
                            object.dependency[j] = message.dependency[j];
                    }
                    if (message.messageType && message.messageType.length) {
                        object.messageType = [];
                        for (var j = 0; j < message.messageType.length; ++j)
                            object.messageType[j] = $root.google.protobuf.DescriptorProto.toObject(message.messageType[j], options);
                    }
                    if (message.enumType && message.enumType.length) {
                        object.enumType = [];
                        for (var j = 0; j < message.enumType.length; ++j)
                            object.enumType[j] = $root.google.protobuf.EnumDescriptorProto.toObject(message.enumType[j], options);
                    }
                    if (message.service && message.service.length) {
                        object.service = [];
                        for (var j = 0; j < message.service.length; ++j)
                            object.service[j] = $root.google.protobuf.ServiceDescriptorProto.toObject(message.service[j], options);
                    }
                    if (message.extension && message.extension.length) {
                        object.extension = [];
                        for (var j = 0; j < message.extension.length; ++j)
                            object.extension[j] = $root.google.protobuf.FieldDescriptorProto.toObject(message.extension[j], options);
                    }
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.FileOptions.toObject(message.options, options);
                    if (message.sourceCodeInfo != null && message.hasOwnProperty("sourceCodeInfo"))
                        object.sourceCodeInfo = $root.google.protobuf.SourceCodeInfo.toObject(message.sourceCodeInfo, options);
                    if (message.publicDependency && message.publicDependency.length) {
                        object.publicDependency = [];
                        for (var j = 0; j < message.publicDependency.length; ++j)
                            object.publicDependency[j] = message.publicDependency[j];
                    }
                    if (message.weakDependency && message.weakDependency.length) {
                        object.weakDependency = [];
                        for (var j = 0; j < message.weakDependency.length; ++j)
                            object.weakDependency[j] = message.weakDependency[j];
                    }
                    if (message.syntax != null && message.hasOwnProperty("syntax"))
                        object.syntax = message.syntax;
                    if (message.edition != null && message.hasOwnProperty("edition"))
                        object.edition = options.enums === String ? $root.google.protobuf.Edition[message.edition] === undefined ? message.edition : $root.google.protobuf.Edition[message.edition] : message.edition;
                    return object;
                };
    
                /**
                 * Converts this FileDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FileDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for FileDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                FileDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.FileDescriptorProto";
                };
    
                return FileDescriptorProto;
            })();
    
            protobuf.DescriptorProto = (function() {
    
                /**
                 * Properties of a DescriptorProto.
                 * @memberof google.protobuf
                 * @interface IDescriptorProto
                 * @property {string|null} [name] DescriptorProto name
                 * @property {Array.<google.protobuf.IFieldDescriptorProto>|null} [field] DescriptorProto field
                 * @property {Array.<google.protobuf.IFieldDescriptorProto>|null} [extension] DescriptorProto extension
                 * @property {Array.<google.protobuf.IDescriptorProto>|null} [nestedType] DescriptorProto nestedType
                 * @property {Array.<google.protobuf.IEnumDescriptorProto>|null} [enumType] DescriptorProto enumType
                 * @property {Array.<google.protobuf.DescriptorProto.IExtensionRange>|null} [extensionRange] DescriptorProto extensionRange
                 * @property {Array.<google.protobuf.IOneofDescriptorProto>|null} [oneofDecl] DescriptorProto oneofDecl
                 * @property {google.protobuf.IMessageOptions|null} [options] DescriptorProto options
                 * @property {Array.<google.protobuf.DescriptorProto.IReservedRange>|null} [reservedRange] DescriptorProto reservedRange
                 * @property {Array.<string>|null} [reservedName] DescriptorProto reservedName
                 */
    
                /**
                 * Constructs a new DescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents a DescriptorProto.
                 * @implements IDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IDescriptorProto=} [properties] Properties to set
                 */
                function DescriptorProto(properties) {
                    this.field = [];
                    this.extension = [];
                    this.nestedType = [];
                    this.enumType = [];
                    this.extensionRange = [];
                    this.oneofDecl = [];
                    this.reservedRange = [];
                    this.reservedName = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * DescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.name = "";
    
                /**
                 * DescriptorProto field.
                 * @member {Array.<google.protobuf.IFieldDescriptorProto>} field
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.field = $util.emptyArray;
    
                /**
                 * DescriptorProto extension.
                 * @member {Array.<google.protobuf.IFieldDescriptorProto>} extension
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.extension = $util.emptyArray;
    
                /**
                 * DescriptorProto nestedType.
                 * @member {Array.<google.protobuf.IDescriptorProto>} nestedType
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.nestedType = $util.emptyArray;
    
                /**
                 * DescriptorProto enumType.
                 * @member {Array.<google.protobuf.IEnumDescriptorProto>} enumType
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.enumType = $util.emptyArray;
    
                /**
                 * DescriptorProto extensionRange.
                 * @member {Array.<google.protobuf.DescriptorProto.IExtensionRange>} extensionRange
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.extensionRange = $util.emptyArray;
    
                /**
                 * DescriptorProto oneofDecl.
                 * @member {Array.<google.protobuf.IOneofDescriptorProto>} oneofDecl
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.oneofDecl = $util.emptyArray;
    
                /**
                 * DescriptorProto options.
                 * @member {google.protobuf.IMessageOptions|null|undefined} options
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.options = null;
    
                /**
                 * DescriptorProto reservedRange.
                 * @member {Array.<google.protobuf.DescriptorProto.IReservedRange>} reservedRange
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.reservedRange = $util.emptyArray;
    
                /**
                 * DescriptorProto reservedName.
                 * @member {Array.<string>} reservedName
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.reservedName = $util.emptyArray;
    
                /**
                 * Creates a new DescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {google.protobuf.IDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.DescriptorProto} DescriptorProto instance
                 */
                DescriptorProto.create = function create(properties) {
                    return new DescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified DescriptorProto message. Does not implicitly {@link google.protobuf.DescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {google.protobuf.IDescriptorProto} message DescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                DescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.field != null && message.field.length)
                        for (var i = 0; i < message.field.length; ++i)
                            $root.google.protobuf.FieldDescriptorProto.encode(message.field[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.nestedType != null && message.nestedType.length)
                        for (var i = 0; i < message.nestedType.length; ++i)
                            $root.google.protobuf.DescriptorProto.encode(message.nestedType[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    if (message.enumType != null && message.enumType.length)
                        for (var i = 0; i < message.enumType.length; ++i)
                            $root.google.protobuf.EnumDescriptorProto.encode(message.enumType[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                    if (message.extensionRange != null && message.extensionRange.length)
                        for (var i = 0; i < message.extensionRange.length; ++i)
                            $root.google.protobuf.DescriptorProto.ExtensionRange.encode(message.extensionRange[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                    if (message.extension != null && message.extension.length)
                        for (var i = 0; i < message.extension.length; ++i)
                            $root.google.protobuf.FieldDescriptorProto.encode(message.extension[i], writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.MessageOptions.encode(message.options, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                    if (message.oneofDecl != null && message.oneofDecl.length)
                        for (var i = 0; i < message.oneofDecl.length; ++i)
                            $root.google.protobuf.OneofDescriptorProto.encode(message.oneofDecl[i], writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                    if (message.reservedRange != null && message.reservedRange.length)
                        for (var i = 0; i < message.reservedRange.length; ++i)
                            $root.google.protobuf.DescriptorProto.ReservedRange.encode(message.reservedRange[i], writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                    if (message.reservedName != null && message.reservedName.length)
                        for (var i = 0; i < message.reservedName.length; ++i)
                            writer.uint32(/* id 10, wireType 2 =*/82).string(message.reservedName[i]);
                    return writer;
                };
    
                /**
                 * Encodes the specified DescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.DescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {google.protobuf.IDescriptorProto} message DescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                DescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a DescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.DescriptorProto} DescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                DescriptorProto.decode = function decode(reader, length, error) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.DescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        if (tag === error)
                            break;
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                if (!(message.field && message.field.length))
                                    message.field = [];
                                message.field.push($root.google.protobuf.FieldDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 6: {
                                if (!(message.extension && message.extension.length))
                                    message.extension = [];
                                message.extension.push($root.google.protobuf.FieldDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 3: {
                                if (!(message.nestedType && message.nestedType.length))
                                    message.nestedType = [];
                                message.nestedType.push($root.google.protobuf.DescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 4: {
                                if (!(message.enumType && message.enumType.length))
                                    message.enumType = [];
                                message.enumType.push($root.google.protobuf.EnumDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 5: {
                                if (!(message.extensionRange && message.extensionRange.length))
                                    message.extensionRange = [];
                                message.extensionRange.push($root.google.protobuf.DescriptorProto.ExtensionRange.decode(reader, reader.uint32()));
                                break;
                            }
                        case 8: {
                                if (!(message.oneofDecl && message.oneofDecl.length))
                                    message.oneofDecl = [];
                                message.oneofDecl.push($root.google.protobuf.OneofDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 7: {
                                message.options = $root.google.protobuf.MessageOptions.decode(reader, reader.uint32());
                                break;
                            }
                        case 9: {
                                if (!(message.reservedRange && message.reservedRange.length))
                                    message.reservedRange = [];
                                message.reservedRange.push($root.google.protobuf.DescriptorProto.ReservedRange.decode(reader, reader.uint32()));
                                break;
                            }
                        case 10: {
                                if (!(message.reservedName && message.reservedName.length))
                                    message.reservedName = [];
                                message.reservedName.push(reader.string());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a DescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.DescriptorProto} DescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                DescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a DescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                DescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.field != null && message.hasOwnProperty("field")) {
                        if (!Array.isArray(message.field))
                            return "field: array expected";
                        for (var i = 0; i < message.field.length; ++i) {
                            var error = $root.google.protobuf.FieldDescriptorProto.verify(message.field[i]);
                            if (error)
                                return "field." + error;
                        }
                    }
                    if (message.extension != null && message.hasOwnProperty("extension")) {
                        if (!Array.isArray(message.extension))
                            return "extension: array expected";
                        for (var i = 0; i < message.extension.length; ++i) {
                            var error = $root.google.protobuf.FieldDescriptorProto.verify(message.extension[i]);
                            if (error)
                                return "extension." + error;
                        }
                    }
                    if (message.nestedType != null && message.hasOwnProperty("nestedType")) {
                        if (!Array.isArray(message.nestedType))
                            return "nestedType: array expected";
                        for (var i = 0; i < message.nestedType.length; ++i) {
                            var error = $root.google.protobuf.DescriptorProto.verify(message.nestedType[i]);
                            if (error)
                                return "nestedType." + error;
                        }
                    }
                    if (message.enumType != null && message.hasOwnProperty("enumType")) {
                        if (!Array.isArray(message.enumType))
                            return "enumType: array expected";
                        for (var i = 0; i < message.enumType.length; ++i) {
                            var error = $root.google.protobuf.EnumDescriptorProto.verify(message.enumType[i]);
                            if (error)
                                return "enumType." + error;
                        }
                    }
                    if (message.extensionRange != null && message.hasOwnProperty("extensionRange")) {
                        if (!Array.isArray(message.extensionRange))
                            return "extensionRange: array expected";
                        for (var i = 0; i < message.extensionRange.length; ++i) {
                            var error = $root.google.protobuf.DescriptorProto.ExtensionRange.verify(message.extensionRange[i]);
                            if (error)
                                return "extensionRange." + error;
                        }
                    }
                    if (message.oneofDecl != null && message.hasOwnProperty("oneofDecl")) {
                        if (!Array.isArray(message.oneofDecl))
                            return "oneofDecl: array expected";
                        for (var i = 0; i < message.oneofDecl.length; ++i) {
                            var error = $root.google.protobuf.OneofDescriptorProto.verify(message.oneofDecl[i]);
                            if (error)
                                return "oneofDecl." + error;
                        }
                    }
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.MessageOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    if (message.reservedRange != null && message.hasOwnProperty("reservedRange")) {
                        if (!Array.isArray(message.reservedRange))
                            return "reservedRange: array expected";
                        for (var i = 0; i < message.reservedRange.length; ++i) {
                            var error = $root.google.protobuf.DescriptorProto.ReservedRange.verify(message.reservedRange[i]);
                            if (error)
                                return "reservedRange." + error;
                        }
                    }
                    if (message.reservedName != null && message.hasOwnProperty("reservedName")) {
                        if (!Array.isArray(message.reservedName))
                            return "reservedName: array expected";
                        for (var i = 0; i < message.reservedName.length; ++i)
                            if (!$util.isString(message.reservedName[i]))
                                return "reservedName: string[] expected";
                    }
                    return null;
                };
    
                /**
                 * Creates a DescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.DescriptorProto} DescriptorProto
                 */
                DescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.DescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.DescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.field) {
                        if (!Array.isArray(object.field))
                            throw TypeError(".google.protobuf.DescriptorProto.field: array expected");
                        message.field = [];
                        for (var i = 0; i < object.field.length; ++i) {
                            if (typeof object.field[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.field: object expected");
                            message.field[i] = $root.google.protobuf.FieldDescriptorProto.fromObject(object.field[i]);
                        }
                    }
                    if (object.extension) {
                        if (!Array.isArray(object.extension))
                            throw TypeError(".google.protobuf.DescriptorProto.extension: array expected");
                        message.extension = [];
                        for (var i = 0; i < object.extension.length; ++i) {
                            if (typeof object.extension[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.extension: object expected");
                            message.extension[i] = $root.google.protobuf.FieldDescriptorProto.fromObject(object.extension[i]);
                        }
                    }
                    if (object.nestedType) {
                        if (!Array.isArray(object.nestedType))
                            throw TypeError(".google.protobuf.DescriptorProto.nestedType: array expected");
                        message.nestedType = [];
                        for (var i = 0; i < object.nestedType.length; ++i) {
                            if (typeof object.nestedType[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.nestedType: object expected");
                            message.nestedType[i] = $root.google.protobuf.DescriptorProto.fromObject(object.nestedType[i]);
                        }
                    }
                    if (object.enumType) {
                        if (!Array.isArray(object.enumType))
                            throw TypeError(".google.protobuf.DescriptorProto.enumType: array expected");
                        message.enumType = [];
                        for (var i = 0; i < object.enumType.length; ++i) {
                            if (typeof object.enumType[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.enumType: object expected");
                            message.enumType[i] = $root.google.protobuf.EnumDescriptorProto.fromObject(object.enumType[i]);
                        }
                    }
                    if (object.extensionRange) {
                        if (!Array.isArray(object.extensionRange))
                            throw TypeError(".google.protobuf.DescriptorProto.extensionRange: array expected");
                        message.extensionRange = [];
                        for (var i = 0; i < object.extensionRange.length; ++i) {
                            if (typeof object.extensionRange[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.extensionRange: object expected");
                            message.extensionRange[i] = $root.google.protobuf.DescriptorProto.ExtensionRange.fromObject(object.extensionRange[i]);
                        }
                    }
                    if (object.oneofDecl) {
                        if (!Array.isArray(object.oneofDecl))
                            throw TypeError(".google.protobuf.DescriptorProto.oneofDecl: array expected");
                        message.oneofDecl = [];
                        for (var i = 0; i < object.oneofDecl.length; ++i) {
                            if (typeof object.oneofDecl[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.oneofDecl: object expected");
                            message.oneofDecl[i] = $root.google.protobuf.OneofDescriptorProto.fromObject(object.oneofDecl[i]);
                        }
                    }
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.DescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.MessageOptions.fromObject(object.options);
                    }
                    if (object.reservedRange) {
                        if (!Array.isArray(object.reservedRange))
                            throw TypeError(".google.protobuf.DescriptorProto.reservedRange: array expected");
                        message.reservedRange = [];
                        for (var i = 0; i < object.reservedRange.length; ++i) {
                            if (typeof object.reservedRange[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.reservedRange: object expected");
                            message.reservedRange[i] = $root.google.protobuf.DescriptorProto.ReservedRange.fromObject(object.reservedRange[i]);
                        }
                    }
                    if (object.reservedName) {
                        if (!Array.isArray(object.reservedName))
                            throw TypeError(".google.protobuf.DescriptorProto.reservedName: array expected");
                        message.reservedName = [];
                        for (var i = 0; i < object.reservedName.length; ++i)
                            message.reservedName[i] = String(object.reservedName[i]);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a DescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {google.protobuf.DescriptorProto} message DescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                DescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.field = [];
                        object.nestedType = [];
                        object.enumType = [];
                        object.extensionRange = [];
                        object.extension = [];
                        object.oneofDecl = [];
                        object.reservedRange = [];
                        object.reservedName = [];
                    }
                    if (options.defaults) {
                        object.name = "";
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.field && message.field.length) {
                        object.field = [];
                        for (var j = 0; j < message.field.length; ++j)
                            object.field[j] = $root.google.protobuf.FieldDescriptorProto.toObject(message.field[j], options);
                    }
                    if (message.nestedType && message.nestedType.length) {
                        object.nestedType = [];
                        for (var j = 0; j < message.nestedType.length; ++j)
                            object.nestedType[j] = $root.google.protobuf.DescriptorProto.toObject(message.nestedType[j], options);
                    }
                    if (message.enumType && message.enumType.length) {
                        object.enumType = [];
                        for (var j = 0; j < message.enumType.length; ++j)
                            object.enumType[j] = $root.google.protobuf.EnumDescriptorProto.toObject(message.enumType[j], options);
                    }
                    if (message.extensionRange && message.extensionRange.length) {
                        object.extensionRange = [];
                        for (var j = 0; j < message.extensionRange.length; ++j)
                            object.extensionRange[j] = $root.google.protobuf.DescriptorProto.ExtensionRange.toObject(message.extensionRange[j], options);
                    }
                    if (message.extension && message.extension.length) {
                        object.extension = [];
                        for (var j = 0; j < message.extension.length; ++j)
                            object.extension[j] = $root.google.protobuf.FieldDescriptorProto.toObject(message.extension[j], options);
                    }
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.MessageOptions.toObject(message.options, options);
                    if (message.oneofDecl && message.oneofDecl.length) {
                        object.oneofDecl = [];
                        for (var j = 0; j < message.oneofDecl.length; ++j)
                            object.oneofDecl[j] = $root.google.protobuf.OneofDescriptorProto.toObject(message.oneofDecl[j], options);
                    }
                    if (message.reservedRange && message.reservedRange.length) {
                        object.reservedRange = [];
                        for (var j = 0; j < message.reservedRange.length; ++j)
                            object.reservedRange[j] = $root.google.protobuf.DescriptorProto.ReservedRange.toObject(message.reservedRange[j], options);
                    }
                    if (message.reservedName && message.reservedName.length) {
                        object.reservedName = [];
                        for (var j = 0; j < message.reservedName.length; ++j)
                            object.reservedName[j] = message.reservedName[j];
                    }
                    return object;
                };
    
                /**
                 * Converts this DescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                DescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for DescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                DescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.DescriptorProto";
                };
    
                DescriptorProto.ExtensionRange = (function() {
    
                    /**
                     * Properties of an ExtensionRange.
                     * @memberof google.protobuf.DescriptorProto
                     * @interface IExtensionRange
                     * @property {number|null} [start] ExtensionRange start
                     * @property {number|null} [end] ExtensionRange end
                     * @property {google.protobuf.IExtensionRangeOptions|null} [options] ExtensionRange options
                     */
    
                    /**
                     * Constructs a new ExtensionRange.
                     * @memberof google.protobuf.DescriptorProto
                     * @classdesc Represents an ExtensionRange.
                     * @implements IExtensionRange
                     * @constructor
                     * @param {google.protobuf.DescriptorProto.IExtensionRange=} [properties] Properties to set
                     */
                    function ExtensionRange(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * ExtensionRange start.
                     * @member {number} start
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @instance
                     */
                    ExtensionRange.prototype.start = 0;
    
                    /**
                     * ExtensionRange end.
                     * @member {number} end
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @instance
                     */
                    ExtensionRange.prototype.end = 0;
    
                    /**
                     * ExtensionRange options.
                     * @member {google.protobuf.IExtensionRangeOptions|null|undefined} options
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @instance
                     */
                    ExtensionRange.prototype.options = null;
    
                    /**
                     * Creates a new ExtensionRange instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IExtensionRange=} [properties] Properties to set
                     * @returns {google.protobuf.DescriptorProto.ExtensionRange} ExtensionRange instance
                     */
                    ExtensionRange.create = function create(properties) {
                        return new ExtensionRange(properties);
                    };
    
                    /**
                     * Encodes the specified ExtensionRange message. Does not implicitly {@link google.protobuf.DescriptorProto.ExtensionRange.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IExtensionRange} message ExtensionRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ExtensionRange.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.start != null && Object.hasOwnProperty.call(message, "start"))
                            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.start);
                        if (message.end != null && Object.hasOwnProperty.call(message, "end"))
                            writer.uint32(/* id 2, wireType 0 =*/16).int32(message.end);
                        if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                            $root.google.protobuf.ExtensionRangeOptions.encode(message.options, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                        return writer;
                    };
    
                    /**
                     * Encodes the specified ExtensionRange message, length delimited. Does not implicitly {@link google.protobuf.DescriptorProto.ExtensionRange.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IExtensionRange} message ExtensionRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ExtensionRange.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes an ExtensionRange message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.DescriptorProto.ExtensionRange} ExtensionRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ExtensionRange.decode = function decode(reader, length, error) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.DescriptorProto.ExtensionRange();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            if (tag === error)
                                break;
                            switch (tag >>> 3) {
                            case 1: {
                                    message.start = reader.int32();
                                    break;
                                }
                            case 2: {
                                    message.end = reader.int32();
                                    break;
                                }
                            case 3: {
                                    message.options = $root.google.protobuf.ExtensionRangeOptions.decode(reader, reader.uint32());
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes an ExtensionRange message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.DescriptorProto.ExtensionRange} ExtensionRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ExtensionRange.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies an ExtensionRange message.
                     * @function verify
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    ExtensionRange.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.start != null && message.hasOwnProperty("start"))
                            if (!$util.isInteger(message.start))
                                return "start: integer expected";
                        if (message.end != null && message.hasOwnProperty("end"))
                            if (!$util.isInteger(message.end))
                                return "end: integer expected";
                        if (message.options != null && message.hasOwnProperty("options")) {
                            var error = $root.google.protobuf.ExtensionRangeOptions.verify(message.options);
                            if (error)
                                return "options." + error;
                        }
                        return null;
                    };
    
                    /**
                     * Creates an ExtensionRange message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.DescriptorProto.ExtensionRange} ExtensionRange
                     */
                    ExtensionRange.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.DescriptorProto.ExtensionRange)
                            return object;
                        var message = new $root.google.protobuf.DescriptorProto.ExtensionRange();
                        if (object.start != null)
                            message.start = object.start | 0;
                        if (object.end != null)
                            message.end = object.end | 0;
                        if (object.options != null) {
                            if (typeof object.options !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.ExtensionRange.options: object expected");
                            message.options = $root.google.protobuf.ExtensionRangeOptions.fromObject(object.options);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from an ExtensionRange message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.ExtensionRange} message ExtensionRange
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    ExtensionRange.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.start = 0;
                            object.end = 0;
                            object.options = null;
                        }
                        if (message.start != null && message.hasOwnProperty("start"))
                            object.start = message.start;
                        if (message.end != null && message.hasOwnProperty("end"))
                            object.end = message.end;
                        if (message.options != null && message.hasOwnProperty("options"))
                            object.options = $root.google.protobuf.ExtensionRangeOptions.toObject(message.options, options);
                        return object;
                    };
    
                    /**
                     * Converts this ExtensionRange to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    ExtensionRange.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for ExtensionRange
                     * @function getTypeUrl
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    ExtensionRange.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.protobuf.DescriptorProto.ExtensionRange";
                    };
    
                    return ExtensionRange;
                })();
    
                DescriptorProto.ReservedRange = (function() {
    
                    /**
                     * Properties of a ReservedRange.
                     * @memberof google.protobuf.DescriptorProto
                     * @interface IReservedRange
                     * @property {number|null} [start] ReservedRange start
                     * @property {number|null} [end] ReservedRange end
                     */
    
                    /**
                     * Constructs a new ReservedRange.
                     * @memberof google.protobuf.DescriptorProto
                     * @classdesc Represents a ReservedRange.
                     * @implements IReservedRange
                     * @constructor
                     * @param {google.protobuf.DescriptorProto.IReservedRange=} [properties] Properties to set
                     */
                    function ReservedRange(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * ReservedRange start.
                     * @member {number} start
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @instance
                     */
                    ReservedRange.prototype.start = 0;
    
                    /**
                     * ReservedRange end.
                     * @member {number} end
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @instance
                     */
                    ReservedRange.prototype.end = 0;
    
                    /**
                     * Creates a new ReservedRange instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IReservedRange=} [properties] Properties to set
                     * @returns {google.protobuf.DescriptorProto.ReservedRange} ReservedRange instance
                     */
                    ReservedRange.create = function create(properties) {
                        return new ReservedRange(properties);
                    };
    
                    /**
                     * Encodes the specified ReservedRange message. Does not implicitly {@link google.protobuf.DescriptorProto.ReservedRange.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IReservedRange} message ReservedRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ReservedRange.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.start != null && Object.hasOwnProperty.call(message, "start"))
                            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.start);
                        if (message.end != null && Object.hasOwnProperty.call(message, "end"))
                            writer.uint32(/* id 2, wireType 0 =*/16).int32(message.end);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified ReservedRange message, length delimited. Does not implicitly {@link google.protobuf.DescriptorProto.ReservedRange.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IReservedRange} message ReservedRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ReservedRange.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a ReservedRange message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.DescriptorProto.ReservedRange} ReservedRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ReservedRange.decode = function decode(reader, length, error) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.DescriptorProto.ReservedRange();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            if (tag === error)
                                break;
                            switch (tag >>> 3) {
                            case 1: {
                                    message.start = reader.int32();
                                    break;
                                }
                            case 2: {
                                    message.end = reader.int32();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a ReservedRange message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.DescriptorProto.ReservedRange} ReservedRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ReservedRange.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a ReservedRange message.
                     * @function verify
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    ReservedRange.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.start != null && message.hasOwnProperty("start"))
                            if (!$util.isInteger(message.start))
                                return "start: integer expected";
                        if (message.end != null && message.hasOwnProperty("end"))
                            if (!$util.isInteger(message.end))
                                return "end: integer expected";
                        return null;
                    };
    
                    /**
                     * Creates a ReservedRange message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.DescriptorProto.ReservedRange} ReservedRange
                     */
                    ReservedRange.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.DescriptorProto.ReservedRange)
                            return object;
                        var message = new $root.google.protobuf.DescriptorProto.ReservedRange();
                        if (object.start != null)
                            message.start = object.start | 0;
                        if (object.end != null)
                            message.end = object.end | 0;
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a ReservedRange message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.ReservedRange} message ReservedRange
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    ReservedRange.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.start = 0;
                            object.end = 0;
                        }
                        if (message.start != null && message.hasOwnProperty("start"))
                            object.start = message.start;
                        if (message.end != null && message.hasOwnProperty("end"))
                            object.end = message.end;
                        return object;
                    };
    
                    /**
                     * Converts this ReservedRange to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    ReservedRange.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for ReservedRange
                     * @function getTypeUrl
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    ReservedRange.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.protobuf.DescriptorProto.ReservedRange";
                    };
    
                    return ReservedRange;
                })();
    
                return DescriptorProto;
            })();
    
            protobuf.ExtensionRangeOptions = (function() {
    
                /**
                 * Properties of an ExtensionRangeOptions.
                 * @memberof google.protobuf
                 * @interface IExtensionRangeOptions
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] ExtensionRangeOptions uninterpretedOption
                 * @property {Array.<google.protobuf.ExtensionRangeOptions.IDeclaration>|null} [declaration] ExtensionRangeOptions declaration
                 * @property {google.protobuf.IFeatureSet|null} [features] ExtensionRangeOptions features
                 * @property {google.protobuf.ExtensionRangeOptions.VerificationState|null} [verification] ExtensionRangeOptions verification
                 */
    
                /**
                 * Constructs a new ExtensionRangeOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents an ExtensionRangeOptions.
                 * @implements IExtensionRangeOptions
                 * @constructor
                 * @param {google.protobuf.IExtensionRangeOptions=} [properties] Properties to set
                 */
                function ExtensionRangeOptions(properties) {
                    this.uninterpretedOption = [];
                    this.declaration = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ExtensionRangeOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @instance
                 */
                ExtensionRangeOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * ExtensionRangeOptions declaration.
                 * @member {Array.<google.protobuf.ExtensionRangeOptions.IDeclaration>} declaration
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @instance
                 */
                ExtensionRangeOptions.prototype.declaration = $util.emptyArray;
    
                /**
                 * ExtensionRangeOptions features.
                 * @member {google.protobuf.IFeatureSet|null|undefined} features
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @instance
                 */
                ExtensionRangeOptions.prototype.features = null;
    
                /**
                 * ExtensionRangeOptions verification.
                 * @member {google.protobuf.ExtensionRangeOptions.VerificationState} verification
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @instance
                 */
                ExtensionRangeOptions.prototype.verification = 1;
    
                /**
                 * Creates a new ExtensionRangeOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {google.protobuf.IExtensionRangeOptions=} [properties] Properties to set
                 * @returns {google.protobuf.ExtensionRangeOptions} ExtensionRangeOptions instance
                 */
                ExtensionRangeOptions.create = function create(properties) {
                    return new ExtensionRangeOptions(properties);
                };
    
                /**
                 * Encodes the specified ExtensionRangeOptions message. Does not implicitly {@link google.protobuf.ExtensionRangeOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {google.protobuf.IExtensionRangeOptions} message ExtensionRangeOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ExtensionRangeOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.declaration != null && message.declaration.length)
                        for (var i = 0; i < message.declaration.length; ++i)
                            $root.google.protobuf.ExtensionRangeOptions.Declaration.encode(message.declaration[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.verification != null && Object.hasOwnProperty.call(message, "verification"))
                        writer.uint32(/* id 3, wireType 0 =*/24).int32(message.verification);
                    if (message.features != null && Object.hasOwnProperty.call(message, "features"))
                        $root.google.protobuf.FeatureSet.encode(message.features, writer.uint32(/* id 50, wireType 2 =*/402).fork()).ldelim();
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified ExtensionRangeOptions message, length delimited. Does not implicitly {@link google.protobuf.ExtensionRangeOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {google.protobuf.IExtensionRangeOptions} message ExtensionRangeOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ExtensionRangeOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an ExtensionRangeOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.ExtensionRangeOptions} ExtensionRangeOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ExtensionRangeOptions.decode = function decode(reader, length, error) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.ExtensionRangeOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        if (tag === error)
                            break;
                        switch (tag >>> 3) {
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        case 2: {
                                if (!(message.declaration && message.declaration.length))
                                    message.declaration = [];
                                message.declaration.push($root.google.protobuf.ExtensionRangeOptions.Declaration.decode(reader, reader.uint32()));
                                break;
                            }
                        case 50: {
                                message.features = $root.google.protobuf.FeatureSet.decode(reader, reader.uint32());
                                break;
                            }
                        case 3: {
                                message.verification = reader.int32();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an ExtensionRangeOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.ExtensionRangeOptions} ExtensionRangeOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ExtensionRangeOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an ExtensionRangeOptions message.
                 * @function verify
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ExtensionRangeOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    if (message.declaration != null && message.hasOwnProperty("declaration")) {
                        if (!Array.isArray(message.declaration))
                            return "declaration: array expected";
                        for (var i = 0; i < message.declaration.length; ++i) {
                            var error = $root.google.protobuf.ExtensionRangeOptions.Declaration.verify(message.declaration[i]);
                            if (error)
                                return "declaration." + error;
                        }
                    }
                    if (message.features != null && message.hasOwnProperty("features")) {
                        var error = $root.google.protobuf.FeatureSet.verify(message.features);
                        if (error)
                            return "features." + error;
                    }
                    if (message.verification != null && message.hasOwnProperty("verification"))
                        switch (message.verification) {
                        default:
                            return "verification: enum value expected";
                        case 0:
                        case 1:
                            break;
                        }
                    return null;
                };
    
                /**
                 * Creates an ExtensionRangeOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.ExtensionRangeOptions} ExtensionRangeOptions
                 */
                ExtensionRangeOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.ExtensionRangeOptions)
                        return object;
                    var message = new $root.google.protobuf.ExtensionRangeOptions();
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.ExtensionRangeOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.ExtensionRangeOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    if (object.declaration) {
                        if (!Array.isArray(object.declaration))
                            throw TypeError(".google.protobuf.ExtensionRangeOptions.declaration: array expected");
                        message.declaration = [];
                        for (var i = 0; i < object.declaration.length; ++i) {
                            if (typeof object.declaration[i] !== "object")
                                throw TypeError(".google.protobuf.ExtensionRangeOptions.declaration: object expected");
                            message.declaration[i] = $root.google.protobuf.ExtensionRangeOptions.Declaration.fromObject(object.declaration[i]);
                        }
                    }
                    if (object.features != null) {
                        if (typeof object.features !== "object")
                            throw TypeError(".google.protobuf.ExtensionRangeOptions.features: object expected");
                        message.features = $root.google.protobuf.FeatureSet.fromObject(object.features);
                    }
                    switch (object.verification) {
                    case "DECLARATION":
                    case 0:
                        message.verification = 0;
                        break;
                    default:
                        if (typeof object.verification === "number") {
                            message.verification = object.verification;
                            break;
                        }
                        break;
                    case "UNVERIFIED":
                    case 1:
                        message.verification = 1;
                        break;
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an ExtensionRangeOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {google.protobuf.ExtensionRangeOptions} message ExtensionRangeOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ExtensionRangeOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.declaration = [];
                        object.uninterpretedOption = [];
                    }
                    if (options.defaults) {
                        object.verification = options.enums === String ? "UNVERIFIED" : 1;
                        object.features = null;
                    }
                    if (message.declaration && message.declaration.length) {
                        object.declaration = [];
                        for (var j = 0; j < message.declaration.length; ++j)
                            object.declaration[j] = $root.google.protobuf.ExtensionRangeOptions.Declaration.toObject(message.declaration[j], options);
                    }
                    if (message.verification != null && message.hasOwnProperty("verification"))
                        object.verification = options.enums === String ? $root.google.protobuf.ExtensionRangeOptions.VerificationState[message.verification] === undefined ? message.verification : $root.google.protobuf.ExtensionRangeOptions.VerificationState[message.verification] : message.verification;
                    if (message.features != null && message.hasOwnProperty("features"))
                        object.features = $root.google.protobuf.FeatureSet.toObject(message.features, options);
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this ExtensionRangeOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ExtensionRangeOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for ExtensionRangeOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                ExtensionRangeOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.ExtensionRangeOptions";
                };
    
                ExtensionRangeOptions.Declaration = (function() {
    
                    /**
                     * Properties of a Declaration.
                     * @memberof google.protobuf.ExtensionRangeOptions
                     * @interface IDeclaration
                     * @property {number|null} [number] Declaration number
                     * @property {string|null} [fullName] Declaration fullName
                     * @property {string|null} [type] Declaration type
                     * @property {boolean|null} [reserved] Declaration reserved
                     * @property {boolean|null} [repeated] Declaration repeated
                     */
    
                    /**
                     * Constructs a new Declaration.
                     * @memberof google.protobuf.ExtensionRangeOptions
                     * @classdesc Represents a Declaration.
                     * @implements IDeclaration
                     * @constructor
                     * @param {google.protobuf.ExtensionRangeOptions.IDeclaration=} [properties] Properties to set
                     */
                    function Declaration(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * Declaration number.
                     * @member {number} number
                     * @memberof google.protobuf.ExtensionRangeOptions.Declaration
                     * @instance
                     */
                    Declaration.prototype.number = 0;
    
                    /**
                     * Declaration fullName.
                     * @member {string} fullName
                     * @memberof google.protobuf.ExtensionRangeOptions.Declaration
                     * @instance
                     */
                    Declaration.prototype.fullName = "";
    
                    /**
                     * Declaration type.
                     * @member {string} type
                     * @memberof google.protobuf.ExtensionRangeOptions.Declaration
                     * @instance
                     */
                    Declaration.prototype.type = "";
    
                    /**
                     * Declaration reserved.
                     * @member {boolean} reserved
                     * @memberof google.protobuf.ExtensionRangeOptions.Declaration
                     * @instance
                     */
                    Declaration.prototype.reserved = false;
    
                    /**
                     * Declaration repeated.
                     * @member {boolean} repeated
                     * @memberof google.protobuf.ExtensionRangeOptions.Declaration
                     * @instance
                     */
                    Declaration.prototype.repeated = false;
    
                    /**
                     * Creates a new Declaration instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.ExtensionRangeOptions.Declaration
                     * @static
                     * @param {google.protobuf.ExtensionRangeOptions.IDeclaration=} [properties] Properties to set
                     * @returns {google.protobuf.ExtensionRangeOptions.Declaration} Declaration instance
                     */
                    Declaration.create = function create(properties) {
                        return new Declaration(properties);
                    };
    
                    /**
                     * Encodes the specified Declaration message. Does not implicitly {@link google.protobuf.ExtensionRangeOptions.Declaration.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.ExtensionRangeOptions.Declaration
                     * @static
                     * @param {google.protobuf.ExtensionRangeOptions.IDeclaration} message Declaration message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Declaration.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.number != null && Object.hasOwnProperty.call(message, "number"))
                            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.number);
                        if (message.fullName != null && Object.hasOwnProperty.call(message, "fullName"))
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.fullName);
                        if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.type);
                        if (message.reserved != null && Object.hasOwnProperty.call(message, "reserved"))
                            writer.uint32(/* id 5, wireType 0 =*/40).bool(message.reserved);
                        if (message.repeated != null && Object.hasOwnProperty.call(message, "repeated"))
                            writer.uint32(/* id 6, wireType 0 =*/48).bool(message.repeated);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified Declaration message, length delimited. Does not implicitly {@link google.protobuf.ExtensionRangeOptions.Declaration.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.ExtensionRangeOptions.Declaration
                     * @static
                     * @param {google.protobuf.ExtensionRangeOptions.IDeclaration} message Declaration message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Declaration.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a Declaration message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.ExtensionRangeOptions.Declaration
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.ExtensionRangeOptions.Declaration} Declaration
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Declaration.decode = function decode(reader, length, error) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.ExtensionRangeOptions.Declaration();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            if (tag === error)
                                break;
                            switch (tag >>> 3) {
                            case 1: {
                                    message.number = reader.int32();
                                    break;
                                }
                            case 2: {
                                    message.fullName = reader.string();
                                    break;
                                }
                            case 3: {
                                    message.type = reader.string();
                                    break;
                                }
                            case 5: {
                                    message.reserved = reader.bool();
                                    break;
                                }
                            case 6: {
                                    message.repeated = reader.bool();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a Declaration message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.ExtensionRangeOptions.Declaration
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.ExtensionRangeOptions.Declaration} Declaration
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Declaration.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a Declaration message.
                     * @function verify
                     * @memberof google.protobuf.ExtensionRangeOptions.Declaration
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    Declaration.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.number != null && message.hasOwnProperty("number"))
                            if (!$util.isInteger(message.number))
                                return "number: integer expected";
                        if (message.fullName != null && message.hasOwnProperty("fullName"))
                            if (!$util.isString(message.fullName))
                                return "fullName: string expected";
                        if (message.type != null && message.hasOwnProperty("type"))
                            if (!$util.isString(message.type))
                                return "type: string expected";
                        if (message.reserved != null && message.hasOwnProperty("reserved"))
                            if (typeof message.reserved !== "boolean")
                                return "reserved: boolean expected";
                        if (message.repeated != null && message.hasOwnProperty("repeated"))
                            if (typeof message.repeated !== "boolean")
                                return "repeated: boolean expected";
                        return null;
                    };
    
                    /**
                     * Creates a Declaration message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.ExtensionRangeOptions.Declaration
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.ExtensionRangeOptions.Declaration} Declaration
                     */
                    Declaration.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.ExtensionRangeOptions.Declaration)
                            return object;
                        var message = new $root.google.protobuf.ExtensionRangeOptions.Declaration();
                        if (object.number != null)
                            message.number = object.number | 0;
                        if (object.fullName != null)
                            message.fullName = String(object.fullName);
                        if (object.type != null)
                            message.type = String(object.type);
                        if (object.reserved != null)
                            message.reserved = Boolean(object.reserved);
                        if (object.repeated != null)
                            message.repeated = Boolean(object.repeated);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a Declaration message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.ExtensionRangeOptions.Declaration
                     * @static
                     * @param {google.protobuf.ExtensionRangeOptions.Declaration} message Declaration
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    Declaration.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.number = 0;
                            object.fullName = "";
                            object.type = "";
                            object.reserved = false;
                            object.repeated = false;
                        }
                        if (message.number != null && message.hasOwnProperty("number"))
                            object.number = message.number;
                        if (message.fullName != null && message.hasOwnProperty("fullName"))
                            object.fullName = message.fullName;
                        if (message.type != null && message.hasOwnProperty("type"))
                            object.type = message.type;
                        if (message.reserved != null && message.hasOwnProperty("reserved"))
                            object.reserved = message.reserved;
                        if (message.repeated != null && message.hasOwnProperty("repeated"))
                            object.repeated = message.repeated;
                        return object;
                    };
    
                    /**
                     * Converts this Declaration to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.ExtensionRangeOptions.Declaration
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    Declaration.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for Declaration
                     * @function getTypeUrl
                     * @memberof google.protobuf.ExtensionRangeOptions.Declaration
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    Declaration.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.protobuf.ExtensionRangeOptions.Declaration";
                    };
    
                    return Declaration;
                })();
    
                /**
                 * VerificationState enum.
                 * @name google.protobuf.ExtensionRangeOptions.VerificationState
                 * @enum {number}
                 * @property {number} DECLARATION=0 DECLARATION value
                 * @property {number} UNVERIFIED=1 UNVERIFIED value
                 */
                ExtensionRangeOptions.VerificationState = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "DECLARATION"] = 0;
                    values[valuesById[1] = "UNVERIFIED"] = 1;
                    return values;
                })();
    
                return ExtensionRangeOptions;
            })();
    
            protobuf.FieldDescriptorProto = (function() {
    
                /**
                 * Properties of a FieldDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IFieldDescriptorProto
                 * @property {string|null} [name] FieldDescriptorProto name
                 * @property {number|null} [number] FieldDescriptorProto number
                 * @property {google.protobuf.FieldDescriptorProto.Label|null} [label] FieldDescriptorProto label
                 * @property {google.protobuf.FieldDescriptorProto.Type|null} [type] FieldDescriptorProto type
                 * @property {string|null} [typeName] FieldDescriptorProto typeName
                 * @property {string|null} [extendee] FieldDescriptorProto extendee
                 * @property {string|null} [defaultValue] FieldDescriptorProto defaultValue
                 * @property {number|null} [oneofIndex] FieldDescriptorProto oneofIndex
                 * @property {string|null} [jsonName] FieldDescriptorProto jsonName
                 * @property {google.protobuf.IFieldOptions|null} [options] FieldDescriptorProto options
                 * @property {boolean|null} [proto3Optional] FieldDescriptorProto proto3Optional
                 */
    
                /**
                 * Constructs a new FieldDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents a FieldDescriptorProto.
                 * @implements IFieldDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IFieldDescriptorProto=} [properties] Properties to set
                 */
                function FieldDescriptorProto(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FieldDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.name = "";
    
                /**
                 * FieldDescriptorProto number.
                 * @member {number} number
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.number = 0;
    
                /**
                 * FieldDescriptorProto label.
                 * @member {google.protobuf.FieldDescriptorProto.Label} label
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.label = 1;
    
                /**
                 * FieldDescriptorProto type.
                 * @member {google.protobuf.FieldDescriptorProto.Type} type
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.type = 1;
    
                /**
                 * FieldDescriptorProto typeName.
                 * @member {string} typeName
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.typeName = "";
    
                /**
                 * FieldDescriptorProto extendee.
                 * @member {string} extendee
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.extendee = "";
    
                /**
                 * FieldDescriptorProto defaultValue.
                 * @member {string} defaultValue
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.defaultValue = "";
    
                /**
                 * FieldDescriptorProto oneofIndex.
                 * @member {number} oneofIndex
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.oneofIndex = 0;
    
                /**
                 * FieldDescriptorProto jsonName.
                 * @member {string} jsonName
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.jsonName = "";
    
                /**
                 * FieldDescriptorProto options.
                 * @member {google.protobuf.IFieldOptions|null|undefined} options
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.options = null;
    
                /**
                 * FieldDescriptorProto proto3Optional.
                 * @member {boolean} proto3Optional
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.proto3Optional = false;
    
                /**
                 * Creates a new FieldDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {google.protobuf.IFieldDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.FieldDescriptorProto} FieldDescriptorProto instance
                 */
                FieldDescriptorProto.create = function create(properties) {
                    return new FieldDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified FieldDescriptorProto message. Does not implicitly {@link google.protobuf.FieldDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {google.protobuf.IFieldDescriptorProto} message FieldDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.extendee != null && Object.hasOwnProperty.call(message, "extendee"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.extendee);
                    if (message.number != null && Object.hasOwnProperty.call(message, "number"))
                        writer.uint32(/* id 3, wireType 0 =*/24).int32(message.number);
                    if (message.label != null && Object.hasOwnProperty.call(message, "label"))
                        writer.uint32(/* id 4, wireType 0 =*/32).int32(message.label);
                    if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                        writer.uint32(/* id 5, wireType 0 =*/40).int32(message.type);
                    if (message.typeName != null && Object.hasOwnProperty.call(message, "typeName"))
                        writer.uint32(/* id 6, wireType 2 =*/50).string(message.typeName);
                    if (message.defaultValue != null && Object.hasOwnProperty.call(message, "defaultValue"))
                        writer.uint32(/* id 7, wireType 2 =*/58).string(message.defaultValue);
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.FieldOptions.encode(message.options, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                    if (message.oneofIndex != null && Object.hasOwnProperty.call(message, "oneofIndex"))
                        writer.uint32(/* id 9, wireType 0 =*/72).int32(message.oneofIndex);
                    if (message.jsonName != null && Object.hasOwnProperty.call(message, "jsonName"))
                        writer.uint32(/* id 10, wireType 2 =*/82).string(message.jsonName);
                    if (message.proto3Optional != null && Object.hasOwnProperty.call(message, "proto3Optional"))
                        writer.uint32(/* id 17, wireType 0 =*/136).bool(message.proto3Optional);
                    return writer;
                };
    
                /**
                 * Encodes the specified FieldDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.FieldDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {google.protobuf.IFieldDescriptorProto} message FieldDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FieldDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FieldDescriptorProto} FieldDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldDescriptorProto.decode = function decode(reader, length, error) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FieldDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        if (tag === error)
                            break;
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 3: {
                                message.number = reader.int32();
                                break;
                            }
                        case 4: {
                                message.label = reader.int32();
                                break;
                            }
                        case 5: {
                                message.type = reader.int32();
                                break;
                            }
                        case 6: {
                                message.typeName = reader.string();
                                break;
                            }
                        case 2: {
                                message.extendee = reader.string();
                                break;
                            }
                        case 7: {
                                message.defaultValue = reader.string();
                                break;
                            }
                        case 9: {
                                message.oneofIndex = reader.int32();
                                break;
                            }
                        case 10: {
                                message.jsonName = reader.string();
                                break;
                            }
                        case 8: {
                                message.options = $root.google.protobuf.FieldOptions.decode(reader, reader.uint32());
                                break;
                            }
                        case 17: {
                                message.proto3Optional = reader.bool();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FieldDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FieldDescriptorProto} FieldDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FieldDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FieldDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.number != null && message.hasOwnProperty("number"))
                        if (!$util.isInteger(message.number))
                            return "number: integer expected";
                    if (message.label != null && message.hasOwnProperty("label"))
                        switch (message.label) {
                        default:
                            return "label: enum value expected";
                        case 1:
                        case 3:
                        case 2:
                            break;
                        }
                    if (message.type != null && message.hasOwnProperty("type"))
                        switch (message.type) {
                        default:
                            return "type: enum value expected";
                        case 1:
                        case 2:
                        case 3:
                        case 4:
                        case 5:
                        case 6:
                        case 7:
                        case 8:
                        case 9:
                        case 10:
                        case 11:
                        case 12:
                        case 13:
                        case 14:
                        case 15:
                        case 16:
                        case 17:
                        case 18:
                            break;
                        }
                    if (message.typeName != null && message.hasOwnProperty("typeName"))
                        if (!$util.isString(message.typeName))
                            return "typeName: string expected";
                    if (message.extendee != null && message.hasOwnProperty("extendee"))
                        if (!$util.isString(message.extendee))
                            return "extendee: string expected";
                    if (message.defaultValue != null && message.hasOwnProperty("defaultValue"))
                        if (!$util.isString(message.defaultValue))
                            return "defaultValue: string expected";
                    if (message.oneofIndex != null && message.hasOwnProperty("oneofIndex"))
                        if (!$util.isInteger(message.oneofIndex))
                            return "oneofIndex: integer expected";
                    if (message.jsonName != null && message.hasOwnProperty("jsonName"))
                        if (!$util.isString(message.jsonName))
                            return "jsonName: string expected";
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.FieldOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    if (message.proto3Optional != null && message.hasOwnProperty("proto3Optional"))
                        if (typeof message.proto3Optional !== "boolean")
                            return "proto3Optional: boolean expected";
                    return null;
                };
    
                /**
                 * Creates a FieldDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FieldDescriptorProto} FieldDescriptorProto
                 */
                FieldDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FieldDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.FieldDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.number != null)
                        message.number = object.number | 0;
                    switch (object.label) {
                    default:
                        if (typeof object.label === "number") {
                            message.label = object.label;
                            break;
                        }
                        break;
                    case "LABEL_OPTIONAL":
                    case 1:
                        message.label = 1;
                        break;
                    case "LABEL_REPEATED":
                    case 3:
                        message.label = 3;
                        break;
                    case "LABEL_REQUIRED":
                    case 2:
                        message.label = 2;
                        break;
                    }
                    switch (object.type) {
                    default:
                        if (typeof object.type === "number") {
                            message.type = object.type;
                            break;
                        }
                        break;
                    case "TYPE_DOUBLE":
                    case 1:
                        message.type = 1;
                        break;
                    case "TYPE_FLOAT":
                    case 2:
                        message.type = 2;
                        break;
                    case "TYPE_INT64":
                    case 3:
                        message.type = 3;
                        break;
                    case "TYPE_UINT64":
                    case 4:
                        message.type = 4;
                        break;
                    case "TYPE_INT32":
                    case 5:
                        message.type = 5;
                        break;
                    case "TYPE_FIXED64":
                    case 6:
                        message.type = 6;
                        break;
                    case "TYPE_FIXED32":
                    case 7:
                        message.type = 7;
                        break;
                    case "TYPE_BOOL":
                    case 8:
                        message.type = 8;
                        break;
                    case "TYPE_STRING":
                    case 9:
                        message.type = 9;
                        break;
                    case "TYPE_GROUP":
                    case 10:
                        message.type = 10;
                        break;
                    case "TYPE_MESSAGE":
                    case 11:
                        message.type = 11;
                        break;
                    case "TYPE_BYTES":
                    case 12:
                        message.type = 12;
                        break;
                    case "TYPE_UINT32":
                    case 13:
                        message.type = 13;
                        break;
                    case "TYPE_ENUM":
                    case 14:
                        message.type = 14;
                        break;
                    case "TYPE_SFIXED32":
                    case 15:
                        message.type = 15;
                        break;
                    case "TYPE_SFIXED64":
                    case 16:
                        message.type = 16;
                        break;
                    case "TYPE_SINT32":
                    case 17:
                        message.type = 17;
                        break;
                    case "TYPE_SINT64":
                    case 18:
                        message.type = 18;
                        break;
                    }
                    if (object.typeName != null)
                        message.typeName = String(object.typeName);
                    if (object.extendee != null)
                        message.extendee = String(object.extendee);
                    if (object.defaultValue != null)
                        message.defaultValue = String(object.defaultValue);
                    if (object.oneofIndex != null)
                        message.oneofIndex = object.oneofIndex | 0;
                    if (object.jsonName != null)
                        message.jsonName = String(object.jsonName);
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.FieldDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.FieldOptions.fromObject(object.options);
                    }
                    if (object.proto3Optional != null)
                        message.proto3Optional = Boolean(object.proto3Optional);
                    return message;
                };
    
                /**
                 * Creates a plain object from a FieldDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {google.protobuf.FieldDescriptorProto} message FieldDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FieldDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.name = "";
                        object.extendee = "";
                        object.number = 0;
                        object.label = options.enums === String ? "LABEL_OPTIONAL" : 1;
                        object.type = options.enums === String ? "TYPE_DOUBLE" : 1;
                        object.typeName = "";
                        object.defaultValue = "";
                        object.options = null;
                        object.oneofIndex = 0;
                        object.jsonName = "";
                        object.proto3Optional = false;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.extendee != null && message.hasOwnProperty("extendee"))
                        object.extendee = message.extendee;
                    if (message.number != null && message.hasOwnProperty("number"))
                        object.number = message.number;
                    if (message.label != null && message.hasOwnProperty("label"))
                        object.label = options.enums === String ? $root.google.protobuf.FieldDescriptorProto.Label[message.label] === undefined ? message.label : $root.google.protobuf.FieldDescriptorProto.Label[message.label] : message.label;
                    if (message.type != null && message.hasOwnProperty("type"))
                        object.type = options.enums === String ? $root.google.protobuf.FieldDescriptorProto.Type[message.type] === undefined ? message.type : $root.google.protobuf.FieldDescriptorProto.Type[message.type] : message.type;
                    if (message.typeName != null && message.hasOwnProperty("typeName"))
                        object.typeName = message.typeName;
                    if (message.defaultValue != null && message.hasOwnProperty("defaultValue"))
                        object.defaultValue = message.defaultValue;
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.FieldOptions.toObject(message.options, options);
                    if (message.oneofIndex != null && message.hasOwnProperty("oneofIndex"))
                        object.oneofIndex = message.oneofIndex;
                    if (message.jsonName != null && message.hasOwnProperty("jsonName"))
                        object.jsonName = message.jsonName;
                    if (message.proto3Optional != null && message.hasOwnProperty("proto3Optional"))
                        object.proto3Optional = message.proto3Optional;
                    return object;
                };
    
                /**
                 * Converts this FieldDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FieldDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for FieldDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                FieldDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.FieldDescriptorProto";
                };
    
                /**
                 * Type enum.
                 * @name google.protobuf.FieldDescriptorProto.Type
                 * @enum {number}
                 * @property {number} TYPE_DOUBLE=1 TYPE_DOUBLE value
                 * @property {number} TYPE_FLOAT=2 TYPE_FLOAT value
                 * @property {number} TYPE_INT64=3 TYPE_INT64 value
                 * @property {number} TYPE_UINT64=4 TYPE_UINT64 value
                 * @property {number} TYPE_INT32=5 TYPE_INT32 value
                 * @property {number} TYPE_FIXED64=6 TYPE_FIXED64 value
                 * @property {number} TYPE_FIXED32=7 TYPE_FIXED32 value
                 * @property {number} TYPE_BOOL=8 TYPE_BOOL value
                 * @property {number} TYPE_STRING=9 TYPE_STRING value
                 * @property {number} TYPE_GROUP=10 TYPE_GROUP value
                 * @property {number} TYPE_MESSAGE=11 TYPE_MESSAGE value
                 * @property {number} TYPE_BYTES=12 TYPE_BYTES value
                 * @property {number} TYPE_UINT32=13 TYPE_UINT32 value
                 * @property {number} TYPE_ENUM=14 TYPE_ENUM value
                 * @property {number} TYPE_SFIXED32=15 TYPE_SFIXED32 value
                 * @property {number} TYPE_SFIXED64=16 TYPE_SFIXED64 value
                 * @property {number} TYPE_SINT32=17 TYPE_SINT32 value
                 * @property {number} TYPE_SINT64=18 TYPE_SINT64 value
                 */
                FieldDescriptorProto.Type = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[1] = "TYPE_DOUBLE"] = 1;
                    values[valuesById[2] = "TYPE_FLOAT"] = 2;
                    values[valuesById[3] = "TYPE_INT64"] = 3;
                    values[valuesById[4] = "TYPE_UINT64"] = 4;
                    values[valuesById[5] = "TYPE_INT32"] = 5;
                    values[valuesById[6] = "TYPE_FIXED64"] = 6;
                    values[valuesById[7] = "TYPE_FIXED32"] = 7;
                    values[valuesById[8] = "TYPE_BOOL"] = 8;
                    values[valuesById[9] = "TYPE_STRING"] = 9;
                    values[valuesById[10] = "TYPE_GROUP"] = 10;
                    values[valuesById[11] = "TYPE_MESSAGE"] = 11;
                    values[valuesById[12] = "TYPE_BYTES"] = 12;
                    values[valuesById[13] = "TYPE_UINT32"] = 13;
                    values[valuesById[14] = "TYPE_ENUM"] = 14;
                    values[valuesById[15] = "TYPE_SFIXED32"] = 15;
                    values[valuesById[16] = "TYPE_SFIXED64"] = 16;
                    values[valuesById[17] = "TYPE_SINT32"] = 17;
                    values[valuesById[18] = "TYPE_SINT64"] = 18;
                    return values;
                })();
    
                /**
                 * Label enum.
                 * @name google.protobuf.FieldDescriptorProto.Label
                 * @enum {number}
                 * @property {number} LABEL_OPTIONAL=1 LABEL_OPTIONAL value
                 * @property {number} LABEL_REPEATED=3 LABEL_REPEATED value
                 * @property {number} LABEL_REQUIRED=2 LABEL_REQUIRED value
                 */
                FieldDescriptorProto.Label = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[1] = "LABEL_OPTIONAL"] = 1;
                    values[valuesById[3] = "LABEL_REPEATED"] = 3;
                    values[valuesById[2] = "LABEL_REQUIRED"] = 2;
                    return values;
                })();
    
                return FieldDescriptorProto;
            })();
    
            protobuf.OneofDescriptorProto = (function() {
    
                /**
                 * Properties of an OneofDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IOneofDescriptorProto
                 * @property {string|null} [name] OneofDescriptorProto name
                 * @property {google.protobuf.IOneofOptions|null} [options] OneofDescriptorProto options
                 */
    
                /**
                 * Constructs a new OneofDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents an OneofDescriptorProto.
                 * @implements IOneofDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IOneofDescriptorProto=} [properties] Properties to set
                 */
                function OneofDescriptorProto(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * OneofDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @instance
                 */
                OneofDescriptorProto.prototype.name = "";
    
                /**
                 * OneofDescriptorProto options.
                 * @member {google.protobuf.IOneofOptions|null|undefined} options
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @instance
                 */
                OneofDescriptorProto.prototype.options = null;
    
                /**
                 * Creates a new OneofDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {google.protobuf.IOneofDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.OneofDescriptorProto} OneofDescriptorProto instance
                 */
                OneofDescriptorProto.create = function create(properties) {
                    return new OneofDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified OneofDescriptorProto message. Does not implicitly {@link google.protobuf.OneofDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {google.protobuf.IOneofDescriptorProto} message OneofDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                OneofDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.OneofOptions.encode(message.options, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified OneofDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.OneofDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {google.protobuf.IOneofDescriptorProto} message OneofDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                OneofDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an OneofDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.OneofDescriptorProto} OneofDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                OneofDescriptorProto.decode = function decode(reader, length, error) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.OneofDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        if (tag === error)
                            break;
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                message.options = $root.google.protobuf.OneofOptions.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an OneofDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.OneofDescriptorProto} OneofDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                OneofDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an OneofDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                OneofDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.OneofOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates an OneofDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.OneofDescriptorProto} OneofDescriptorProto
                 */
                OneofDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.OneofDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.OneofDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.OneofDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.OneofOptions.fromObject(object.options);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an OneofDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {google.protobuf.OneofDescriptorProto} message OneofDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                OneofDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.name = "";
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.OneofOptions.toObject(message.options, options);
                    return object;
                };
    
                /**
                 * Converts this OneofDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                OneofDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for OneofDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                OneofDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.OneofDescriptorProto";
                };
    
                return OneofDescriptorProto;
            })();
    
            protobuf.EnumDescriptorProto = (function() {
    
                /**
                 * Properties of an EnumDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IEnumDescriptorProto
                 * @property {string|null} [name] EnumDescriptorProto name
                 * @property {Array.<google.protobuf.IEnumValueDescriptorProto>|null} [value] EnumDescriptorProto value
                 * @property {google.protobuf.IEnumOptions|null} [options] EnumDescriptorProto options
                 * @property {Array.<google.protobuf.EnumDescriptorProto.IEnumReservedRange>|null} [reservedRange] EnumDescriptorProto reservedRange
                 * @property {Array.<string>|null} [reservedName] EnumDescriptorProto reservedName
                 */
    
                /**
                 * Constructs a new EnumDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents an EnumDescriptorProto.
                 * @implements IEnumDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IEnumDescriptorProto=} [properties] Properties to set
                 */
                function EnumDescriptorProto(properties) {
                    this.value = [];
                    this.reservedRange = [];
                    this.reservedName = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * EnumDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 */
                EnumDescriptorProto.prototype.name = "";
    
                /**
                 * EnumDescriptorProto value.
                 * @member {Array.<google.protobuf.IEnumValueDescriptorProto>} value
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 */
                EnumDescriptorProto.prototype.value = $util.emptyArray;
    
                /**
                 * EnumDescriptorProto options.
                 * @member {google.protobuf.IEnumOptions|null|undefined} options
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 */
                EnumDescriptorProto.prototype.options = null;
    
                /**
                 * EnumDescriptorProto reservedRange.
                 * @member {Array.<google.protobuf.EnumDescriptorProto.IEnumReservedRange>} reservedRange
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 */
                EnumDescriptorProto.prototype.reservedRange = $util.emptyArray;
    
                /**
                 * EnumDescriptorProto reservedName.
                 * @member {Array.<string>} reservedName
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 */
                EnumDescriptorProto.prototype.reservedName = $util.emptyArray;
    
                /**
                 * Creates a new EnumDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.EnumDescriptorProto} EnumDescriptorProto instance
                 */
                EnumDescriptorProto.create = function create(properties) {
                    return new EnumDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified EnumDescriptorProto message. Does not implicitly {@link google.protobuf.EnumDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumDescriptorProto} message EnumDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.value != null && message.value.length)
                        for (var i = 0; i < message.value.length; ++i)
                            $root.google.protobuf.EnumValueDescriptorProto.encode(message.value[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.EnumOptions.encode(message.options, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    if (message.reservedRange != null && message.reservedRange.length)
                        for (var i = 0; i < message.reservedRange.length; ++i)
                            $root.google.protobuf.EnumDescriptorProto.EnumReservedRange.encode(message.reservedRange[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                    if (message.reservedName != null && message.reservedName.length)
                        for (var i = 0; i < message.reservedName.length; ++i)
                            writer.uint32(/* id 5, wireType 2 =*/42).string(message.reservedName[i]);
                    return writer;
                };
    
                /**
                 * Encodes the specified EnumDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.EnumDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumDescriptorProto} message EnumDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an EnumDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.EnumDescriptorProto} EnumDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumDescriptorProto.decode = function decode(reader, length, error) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        if (tag === error)
                            break;
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                if (!(message.value && message.value.length))
                                    message.value = [];
                                message.value.push($root.google.protobuf.EnumValueDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 3: {
                                message.options = $root.google.protobuf.EnumOptions.decode(reader, reader.uint32());
                                break;
                            }
                        case 4: {
                                if (!(message.reservedRange && message.reservedRange.length))
                                    message.reservedRange = [];
                                message.reservedRange.push($root.google.protobuf.EnumDescriptorProto.EnumReservedRange.decode(reader, reader.uint32()));
                                break;
                            }
                        case 5: {
                                if (!(message.reservedName && message.reservedName.length))
                                    message.reservedName = [];
                                message.reservedName.push(reader.string());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an EnumDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.EnumDescriptorProto} EnumDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an EnumDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                EnumDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.value != null && message.hasOwnProperty("value")) {
                        if (!Array.isArray(message.value))
                            return "value: array expected";
                        for (var i = 0; i < message.value.length; ++i) {
                            var error = $root.google.protobuf.EnumValueDescriptorProto.verify(message.value[i]);
                            if (error)
                                return "value." + error;
                        }
                    }
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.EnumOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    if (message.reservedRange != null && message.hasOwnProperty("reservedRange")) {
                        if (!Array.isArray(message.reservedRange))
                            return "reservedRange: array expected";
                        for (var i = 0; i < message.reservedRange.length; ++i) {
                            var error = $root.google.protobuf.EnumDescriptorProto.EnumReservedRange.verify(message.reservedRange[i]);
                            if (error)
                                return "reservedRange." + error;
                        }
                    }
                    if (message.reservedName != null && message.hasOwnProperty("reservedName")) {
                        if (!Array.isArray(message.reservedName))
                            return "reservedName: array expected";
                        for (var i = 0; i < message.reservedName.length; ++i)
                            if (!$util.isString(message.reservedName[i]))
                                return "reservedName: string[] expected";
                    }
                    return null;
                };
    
                /**
                 * Creates an EnumDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.EnumDescriptorProto} EnumDescriptorProto
                 */
                EnumDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.EnumDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.EnumDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.value) {
                        if (!Array.isArray(object.value))
                            throw TypeError(".google.protobuf.EnumDescriptorProto.value: array expected");
                        message.value = [];
                        for (var i = 0; i < object.value.length; ++i) {
                            if (typeof object.value[i] !== "object")
                                throw TypeError(".google.protobuf.EnumDescriptorProto.value: object expected");
                            message.value[i] = $root.google.protobuf.EnumValueDescriptorProto.fromObject(object.value[i]);
                        }
                    }
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.EnumDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.EnumOptions.fromObject(object.options);
                    }
                    if (object.reservedRange) {
                        if (!Array.isArray(object.reservedRange))
                            throw TypeError(".google.protobuf.EnumDescriptorProto.reservedRange: array expected");
                        message.reservedRange = [];
                        for (var i = 0; i < object.reservedRange.length; ++i) {
                            if (typeof object.reservedRange[i] !== "object")
                                throw TypeError(".google.protobuf.EnumDescriptorProto.reservedRange: object expected");
                            message.reservedRange[i] = $root.google.protobuf.EnumDescriptorProto.EnumReservedRange.fromObject(object.reservedRange[i]);
                        }
                    }
                    if (object.reservedName) {
                        if (!Array.isArray(object.reservedName))
                            throw TypeError(".google.protobuf.EnumDescriptorProto.reservedName: array expected");
                        message.reservedName = [];
                        for (var i = 0; i < object.reservedName.length; ++i)
                            message.reservedName[i] = String(object.reservedName[i]);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an EnumDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {google.protobuf.EnumDescriptorProto} message EnumDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                EnumDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.value = [];
                        object.reservedRange = [];
                        object.reservedName = [];
                    }
                    if (options.defaults) {
                        object.name = "";
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.value && message.value.length) {
                        object.value = [];
                        for (var j = 0; j < message.value.length; ++j)
                            object.value[j] = $root.google.protobuf.EnumValueDescriptorProto.toObject(message.value[j], options);
                    }
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.EnumOptions.toObject(message.options, options);
                    if (message.reservedRange && message.reservedRange.length) {
                        object.reservedRange = [];
                        for (var j = 0; j < message.reservedRange.length; ++j)
                            object.reservedRange[j] = $root.google.protobuf.EnumDescriptorProto.EnumReservedRange.toObject(message.reservedRange[j], options);
                    }
                    if (message.reservedName && message.reservedName.length) {
                        object.reservedName = [];
                        for (var j = 0; j < message.reservedName.length; ++j)
                            object.reservedName[j] = message.reservedName[j];
                    }
                    return object;
                };
    
                /**
                 * Converts this EnumDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                EnumDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for EnumDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                EnumDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.EnumDescriptorProto";
                };
    
                EnumDescriptorProto.EnumReservedRange = (function() {
    
                    /**
                     * Properties of an EnumReservedRange.
                     * @memberof google.protobuf.EnumDescriptorProto
                     * @interface IEnumReservedRange
                     * @property {number|null} [start] EnumReservedRange start
                     * @property {number|null} [end] EnumReservedRange end
                     */
    
                    /**
                     * Constructs a new EnumReservedRange.
                     * @memberof google.protobuf.EnumDescriptorProto
                     * @classdesc Represents an EnumReservedRange.
                     * @implements IEnumReservedRange
                     * @constructor
                     * @param {google.protobuf.EnumDescriptorProto.IEnumReservedRange=} [properties] Properties to set
                     */
                    function EnumReservedRange(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * EnumReservedRange start.
                     * @member {number} start
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @instance
                     */
                    EnumReservedRange.prototype.start = 0;
    
                    /**
                     * EnumReservedRange end.
                     * @member {number} end
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @instance
                     */
                    EnumReservedRange.prototype.end = 0;
    
                    /**
                     * Creates a new EnumReservedRange instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {google.protobuf.EnumDescriptorProto.IEnumReservedRange=} [properties] Properties to set
                     * @returns {google.protobuf.EnumDescriptorProto.EnumReservedRange} EnumReservedRange instance
                     */
                    EnumReservedRange.create = function create(properties) {
                        return new EnumReservedRange(properties);
                    };
    
                    /**
                     * Encodes the specified EnumReservedRange message. Does not implicitly {@link google.protobuf.EnumDescriptorProto.EnumReservedRange.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {google.protobuf.EnumDescriptorProto.IEnumReservedRange} message EnumReservedRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    EnumReservedRange.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.start != null && Object.hasOwnProperty.call(message, "start"))
                            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.start);
                        if (message.end != null && Object.hasOwnProperty.call(message, "end"))
                            writer.uint32(/* id 2, wireType 0 =*/16).int32(message.end);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified EnumReservedRange message, length delimited. Does not implicitly {@link google.protobuf.EnumDescriptorProto.EnumReservedRange.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {google.protobuf.EnumDescriptorProto.IEnumReservedRange} message EnumReservedRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    EnumReservedRange.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes an EnumReservedRange message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.EnumDescriptorProto.EnumReservedRange} EnumReservedRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    EnumReservedRange.decode = function decode(reader, length, error) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumDescriptorProto.EnumReservedRange();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            if (tag === error)
                                break;
                            switch (tag >>> 3) {
                            case 1: {
                                    message.start = reader.int32();
                                    break;
                                }
                            case 2: {
                                    message.end = reader.int32();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes an EnumReservedRange message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.EnumDescriptorProto.EnumReservedRange} EnumReservedRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    EnumReservedRange.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies an EnumReservedRange message.
                     * @function verify
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    EnumReservedRange.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.start != null && message.hasOwnProperty("start"))
                            if (!$util.isInteger(message.start))
                                return "start: integer expected";
                        if (message.end != null && message.hasOwnProperty("end"))
                            if (!$util.isInteger(message.end))
                                return "end: integer expected";
                        return null;
                    };
    
                    /**
                     * Creates an EnumReservedRange message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.EnumDescriptorProto.EnumReservedRange} EnumReservedRange
                     */
                    EnumReservedRange.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.EnumDescriptorProto.EnumReservedRange)
                            return object;
                        var message = new $root.google.protobuf.EnumDescriptorProto.EnumReservedRange();
                        if (object.start != null)
                            message.start = object.start | 0;
                        if (object.end != null)
                            message.end = object.end | 0;
                        return message;
                    };
    
                    /**
                     * Creates a plain object from an EnumReservedRange message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {google.protobuf.EnumDescriptorProto.EnumReservedRange} message EnumReservedRange
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    EnumReservedRange.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.start = 0;
                            object.end = 0;
                        }
                        if (message.start != null && message.hasOwnProperty("start"))
                            object.start = message.start;
                        if (message.end != null && message.hasOwnProperty("end"))
                            object.end = message.end;
                        return object;
                    };
    
                    /**
                     * Converts this EnumReservedRange to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    EnumReservedRange.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for EnumReservedRange
                     * @function getTypeUrl
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    EnumReservedRange.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.protobuf.EnumDescriptorProto.EnumReservedRange";
                    };
    
                    return EnumReservedRange;
                })();
    
                return EnumDescriptorProto;
            })();
    
            protobuf.EnumValueDescriptorProto = (function() {
    
                /**
                 * Properties of an EnumValueDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IEnumValueDescriptorProto
                 * @property {string|null} [name] EnumValueDescriptorProto name
                 * @property {number|null} [number] EnumValueDescriptorProto number
                 * @property {google.protobuf.IEnumValueOptions|null} [options] EnumValueDescriptorProto options
                 */
    
                /**
                 * Constructs a new EnumValueDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents an EnumValueDescriptorProto.
                 * @implements IEnumValueDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IEnumValueDescriptorProto=} [properties] Properties to set
                 */
                function EnumValueDescriptorProto(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * EnumValueDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @instance
                 */
                EnumValueDescriptorProto.prototype.name = "";
    
                /**
                 * EnumValueDescriptorProto number.
                 * @member {number} number
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @instance
                 */
                EnumValueDescriptorProto.prototype.number = 0;
    
                /**
                 * EnumValueDescriptorProto options.
                 * @member {google.protobuf.IEnumValueOptions|null|undefined} options
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @instance
                 */
                EnumValueDescriptorProto.prototype.options = null;
    
                /**
                 * Creates a new EnumValueDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumValueDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.EnumValueDescriptorProto} EnumValueDescriptorProto instance
                 */
                EnumValueDescriptorProto.create = function create(properties) {
                    return new EnumValueDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified EnumValueDescriptorProto message. Does not implicitly {@link google.protobuf.EnumValueDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumValueDescriptorProto} message EnumValueDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumValueDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.number != null && Object.hasOwnProperty.call(message, "number"))
                        writer.uint32(/* id 2, wireType 0 =*/16).int32(message.number);
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.EnumValueOptions.encode(message.options, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified EnumValueDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.EnumValueDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumValueDescriptorProto} message EnumValueDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumValueDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an EnumValueDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.EnumValueDescriptorProto} EnumValueDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumValueDescriptorProto.decode = function decode(reader, length, error) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumValueDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        if (tag === error)
                            break;
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                message.number = reader.int32();
                                break;
                            }
                        case 3: {
                                message.options = $root.google.protobuf.EnumValueOptions.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an EnumValueDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.EnumValueDescriptorProto} EnumValueDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumValueDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an EnumValueDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                EnumValueDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.number != null && message.hasOwnProperty("number"))
                        if (!$util.isInteger(message.number))
                            return "number: integer expected";
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.EnumValueOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates an EnumValueDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.EnumValueDescriptorProto} EnumValueDescriptorProto
                 */
                EnumValueDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.EnumValueDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.EnumValueDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.number != null)
                        message.number = object.number | 0;
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.EnumValueDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.EnumValueOptions.fromObject(object.options);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an EnumValueDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {google.protobuf.EnumValueDescriptorProto} message EnumValueDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                EnumValueDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.name = "";
                        object.number = 0;
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.number != null && message.hasOwnProperty("number"))
                        object.number = message.number;
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.EnumValueOptions.toObject(message.options, options);
                    return object;
                };
    
                /**
                 * Converts this EnumValueDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                EnumValueDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for EnumValueDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                EnumValueDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.EnumValueDescriptorProto";
                };
    
                return EnumValueDescriptorProto;
            })();
    
            protobuf.ServiceDescriptorProto = (function() {
    
                /**
                 * Properties of a ServiceDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IServiceDescriptorProto
                 * @property {string|null} [name] ServiceDescriptorProto name
                 * @property {Array.<google.protobuf.IMethodDescriptorProto>|null} [method] ServiceDescriptorProto method
                 * @property {google.protobuf.IServiceOptions|null} [options] ServiceDescriptorProto options
                 */
    
                /**
                 * Constructs a new ServiceDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents a ServiceDescriptorProto.
                 * @implements IServiceDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IServiceDescriptorProto=} [properties] Properties to set
                 */
                function ServiceDescriptorProto(properties) {
                    this.method = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ServiceDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @instance
                 */
                ServiceDescriptorProto.prototype.name = "";
    
                /**
                 * ServiceDescriptorProto method.
                 * @member {Array.<google.protobuf.IMethodDescriptorProto>} method
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @instance
                 */
                ServiceDescriptorProto.prototype.method = $util.emptyArray;
    
                /**
                 * ServiceDescriptorProto options.
                 * @member {google.protobuf.IServiceOptions|null|undefined} options
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @instance
                 */
                ServiceDescriptorProto.prototype.options = null;
    
                /**
                 * Creates a new ServiceDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {google.protobuf.IServiceDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.ServiceDescriptorProto} ServiceDescriptorProto instance
                 */
                ServiceDescriptorProto.create = function create(properties) {
                    return new ServiceDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified ServiceDescriptorProto message. Does not implicitly {@link google.protobuf.ServiceDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {google.protobuf.IServiceDescriptorProto} message ServiceDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ServiceDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.method != null && message.method.length)
                        for (var i = 0; i < message.method.length; ++i)
                            $root.google.protobuf.MethodDescriptorProto.encode(message.method[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.ServiceOptions.encode(message.options, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified ServiceDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.ServiceDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {google.protobuf.IServiceDescriptorProto} message ServiceDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ServiceDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a ServiceDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.ServiceDescriptorProto} ServiceDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ServiceDescriptorProto.decode = function decode(reader, length, error) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.ServiceDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        if (tag === error)
                            break;
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                if (!(message.method && message.method.length))
                                    message.method = [];
                                message.method.push($root.google.protobuf.MethodDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 3: {
                                message.options = $root.google.protobuf.ServiceOptions.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a ServiceDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.ServiceDescriptorProto} ServiceDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ServiceDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a ServiceDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ServiceDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.method != null && message.hasOwnProperty("method")) {
                        if (!Array.isArray(message.method))
                            return "method: array expected";
                        for (var i = 0; i < message.method.length; ++i) {
                            var error = $root.google.protobuf.MethodDescriptorProto.verify(message.method[i]);
                            if (error)
                                return "method." + error;
                        }
                    }
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.ServiceOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a ServiceDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.ServiceDescriptorProto} ServiceDescriptorProto
                 */
                ServiceDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.ServiceDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.ServiceDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.method) {
                        if (!Array.isArray(object.method))
                            throw TypeError(".google.protobuf.ServiceDescriptorProto.method: array expected");
                        message.method = [];
                        for (var i = 0; i < object.method.length; ++i) {
                            if (typeof object.method[i] !== "object")
                                throw TypeError(".google.protobuf.ServiceDescriptorProto.method: object expected");
                            message.method[i] = $root.google.protobuf.MethodDescriptorProto.fromObject(object.method[i]);
                        }
                    }
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.ServiceDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.ServiceOptions.fromObject(object.options);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a ServiceDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {google.protobuf.ServiceDescriptorProto} message ServiceDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ServiceDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.method = [];
                    if (options.defaults) {
                        object.name = "";
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.method && message.method.length) {
                        object.method = [];
                        for (var j = 0; j < message.method.length; ++j)
                            object.method[j] = $root.google.protobuf.MethodDescriptorProto.toObject(message.method[j], options);
                    }
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.ServiceOptions.toObject(message.options, options);
                    return object;
                };
    
                /**
                 * Converts this ServiceDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ServiceDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for ServiceDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                ServiceDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.ServiceDescriptorProto";
                };
    
                return ServiceDescriptorProto;
            })();
    
            protobuf.MethodDescriptorProto = (function() {
    
                /**
                 * Properties of a MethodDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IMethodDescriptorProto
                 * @property {string|null} [name] MethodDescriptorProto name
                 * @property {string|null} [inputType] MethodDescriptorProto inputType
                 * @property {string|null} [outputType] MethodDescriptorProto outputType
                 * @property {google.protobuf.IMethodOptions|null} [options] MethodDescriptorProto options
                 * @property {boolean|null} [clientStreaming] MethodDescriptorProto clientStreaming
                 * @property {boolean|null} [serverStreaming] MethodDescriptorProto serverStreaming
                 */
    
                /**
                 * Constructs a new MethodDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents a MethodDescriptorProto.
                 * @implements IMethodDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IMethodDescriptorProto=} [properties] Properties to set
                 */
                function MethodDescriptorProto(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * MethodDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.name = "";
    
                /**
                 * MethodDescriptorProto inputType.
                 * @member {string} inputType
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.inputType = "";
    
                /**
                 * MethodDescriptorProto outputType.
                 * @member {string} outputType
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.outputType = "";
    
                /**
                 * MethodDescriptorProto options.
                 * @member {google.protobuf.IMethodOptions|null|undefined} options
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.options = null;
    
                /**
                 * MethodDescriptorProto clientStreaming.
                 * @member {boolean} clientStreaming
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.clientStreaming = false;
    
                /**
                 * MethodDescriptorProto serverStreaming.
                 * @member {boolean} serverStreaming
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.serverStreaming = false;
    
                /**
                 * Creates a new MethodDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {google.protobuf.IMethodDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.MethodDescriptorProto} MethodDescriptorProto instance
                 */
                MethodDescriptorProto.create = function create(properties) {
                    return new MethodDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified MethodDescriptorProto message. Does not implicitly {@link google.protobuf.MethodDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {google.protobuf.IMethodDescriptorProto} message MethodDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MethodDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.inputType != null && Object.hasOwnProperty.call(message, "inputType"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.inputType);
                    if (message.outputType != null && Object.hasOwnProperty.call(message, "outputType"))
                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.outputType);
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.MethodOptions.encode(message.options, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                    if (message.clientStreaming != null && Object.hasOwnProperty.call(message, "clientStreaming"))
                        writer.uint32(/* id 5, wireType 0 =*/40).bool(message.clientStreaming);
                    if (message.serverStreaming != null && Object.hasOwnProperty.call(message, "serverStreaming"))
                        writer.uint32(/* id 6, wireType 0 =*/48).bool(message.serverStreaming);
                    return writer;
                };
    
                /**
                 * Encodes the specified MethodDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.MethodDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {google.protobuf.IMethodDescriptorProto} message MethodDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MethodDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a MethodDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.MethodDescriptorProto} MethodDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MethodDescriptorProto.decode = function decode(reader, length, error) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.MethodDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        if (tag === error)
                            break;
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                message.inputType = reader.string();
                                break;
                            }
                        case 3: {
                                message.outputType = reader.string();
                                break;
                            }
                        case 4: {
                                message.options = $root.google.protobuf.MethodOptions.decode(reader, reader.uint32());
                                break;
                            }
                        case 5: {
                                message.clientStreaming = reader.bool();
                                break;
                            }
                        case 6: {
                                message.serverStreaming = reader.bool();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a MethodDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.MethodDescriptorProto} MethodDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MethodDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a MethodDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                MethodDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.inputType != null && message.hasOwnProperty("inputType"))
                        if (!$util.isString(message.inputType))
                            return "inputType: string expected";
                    if (message.outputType != null && message.hasOwnProperty("outputType"))
                        if (!$util.isString(message.outputType))
                            return "outputType: string expected";
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.MethodOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    if (message.clientStreaming != null && message.hasOwnProperty("clientStreaming"))
                        if (typeof message.clientStreaming !== "boolean")
                            return "clientStreaming: boolean expected";
                    if (message.serverStreaming != null && message.hasOwnProperty("serverStreaming"))
                        if (typeof message.serverStreaming !== "boolean")
                            return "serverStreaming: boolean expected";
                    return null;
                };
    
                /**
                 * Creates a MethodDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.MethodDescriptorProto} MethodDescriptorProto
                 */
                MethodDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.MethodDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.MethodDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.inputType != null)
                        message.inputType = String(object.inputType);
                    if (object.outputType != null)
                        message.outputType = String(object.outputType);
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.MethodDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.MethodOptions.fromObject(object.options);
                    }
                    if (object.clientStreaming != null)
                        message.clientStreaming = Boolean(object.clientStreaming);
                    if (object.serverStreaming != null)
                        message.serverStreaming = Boolean(object.serverStreaming);
                    return message;
                };
    
                /**
                 * Creates a plain object from a MethodDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {google.protobuf.MethodDescriptorProto} message MethodDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                MethodDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.name = "";
                        object.inputType = "";
                        object.outputType = "";
                        object.options = null;
                        object.clientStreaming = false;
                        object.serverStreaming = false;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.inputType != null && message.hasOwnProperty("inputType"))
                        object.inputType = message.inputType;
                    if (message.outputType != null && message.hasOwnProperty("outputType"))
                        object.outputType = message.outputType;
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.MethodOptions.toObject(message.options, options);
                    if (message.clientStreaming != null && message.hasOwnProperty("clientStreaming"))
                        object.clientStreaming = message.clientStreaming;
                    if (message.serverStreaming != null && message.hasOwnProperty("serverStreaming"))
                        object.serverStreaming = message.serverStreaming;
                    return object;
                };
    
                /**
                 * Converts this MethodDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                MethodDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for MethodDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                MethodDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.MethodDescriptorProto";
                };
    
                return MethodDescriptorProto;
            })();
    
            protobuf.FileOptions = (function() {
    
                /**
                 * Properties of a FileOptions.
                 * @memberof google.protobuf
                 * @interface IFileOptions
                 * @property {string|null} [javaPackage] FileOptions javaPackage
                 * @property {string|null} [javaOuterClassname] FileOptions javaOuterClassname
                 * @property {boolean|null} [javaMultipleFiles] FileOptions javaMultipleFiles
                 * @property {boolean|null} [javaGenerateEqualsAndHash] FileOptions javaGenerateEqualsAndHash
                 * @property {boolean|null} [javaStringCheckUtf8] FileOptions javaStringCheckUtf8
                 * @property {google.protobuf.FileOptions.OptimizeMode|null} [optimizeFor] FileOptions optimizeFor
                 * @property {string|null} [goPackage] FileOptions goPackage
                 * @property {boolean|null} [ccGenericServices] FileOptions ccGenericServices
                 * @property {boolean|null} [javaGenericServices] FileOptions javaGenericServices
                 * @property {boolean|null} [pyGenericServices] FileOptions pyGenericServices
                 * @property {boolean|null} [deprecated] FileOptions deprecated
                 * @property {boolean|null} [ccEnableArenas] FileOptions ccEnableArenas
                 * @property {string|null} [objcClassPrefix] FileOptions objcClassPrefix
                 * @property {string|null} [csharpNamespace] FileOptions csharpNamespace
                 * @property {string|null} [swiftPrefix] FileOptions swiftPrefix
                 * @property {string|null} [phpClassPrefix] FileOptions phpClassPrefix
                 * @property {string|null} [phpNamespace] FileOptions phpNamespace
                 * @property {string|null} [phpMetadataNamespace] FileOptions phpMetadataNamespace
                 * @property {string|null} [rubyPackage] FileOptions rubyPackage
                 * @property {google.protobuf.IFeatureSet|null} [features] FileOptions features
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] FileOptions uninterpretedOption
                 * @property {Array.<google.api.IResourceDescriptor>|null} [".google.api.resourceDefinition"] FileOptions .google.api.resourceDefinition
                 */
    
                /**
                 * Constructs a new FileOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents a FileOptions.
                 * @implements IFileOptions
                 * @constructor
                 * @param {google.protobuf.IFileOptions=} [properties] Properties to set
                 */
                function FileOptions(properties) {
                    this.uninterpretedOption = [];
                    this[".google.api.resourceDefinition"] = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FileOptions javaPackage.
                 * @member {string} javaPackage
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.javaPackage = "";
    
                /**
                 * FileOptions javaOuterClassname.
                 * @member {string} javaOuterClassname
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.javaOuterClassname = "";
    
                /**
                 * FileOptions javaMultipleFiles.
                 * @member {boolean} javaMultipleFiles
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.javaMultipleFiles = false;
    
                /**
                 * FileOptions javaGenerateEqualsAndHash.
                 * @member {boolean} javaGenerateEqualsAndHash
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.javaGenerateEqualsAndHash = false;
    
                /**
                 * FileOptions javaStringCheckUtf8.
                 * @member {boolean} javaStringCheckUtf8
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.javaStringCheckUtf8 = false;
    
                /**
                 * FileOptions optimizeFor.
                 * @member {google.protobuf.FileOptions.OptimizeMode} optimizeFor
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.optimizeFor = 1;
    
                /**
                 * FileOptions goPackage.
                 * @member {string} goPackage
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.goPackage = "";
    
                /**
                 * FileOptions ccGenericServices.
                 * @member {boolean} ccGenericServices
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.ccGenericServices = false;
    
                /**
                 * FileOptions javaGenericServices.
                 * @member {boolean} javaGenericServices
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.javaGenericServices = false;
    
                /**
                 * FileOptions pyGenericServices.
                 * @member {boolean} pyGenericServices
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.pyGenericServices = false;
    
                /**
                 * FileOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.deprecated = false;
    
                /**
                 * FileOptions ccEnableArenas.
                 * @member {boolean} ccEnableArenas
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.ccEnableArenas = true;
    
                /**
                 * FileOptions objcClassPrefix.
                 * @member {string} objcClassPrefix
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.objcClassPrefix = "";
    
                /**
                 * FileOptions csharpNamespace.
                 * @member {string} csharpNamespace
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.csharpNamespace = "";
    
                /**
                 * FileOptions swiftPrefix.
                 * @member {string} swiftPrefix
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.swiftPrefix = "";
    
                /**
                 * FileOptions phpClassPrefix.
                 * @member {string} phpClassPrefix
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.phpClassPrefix = "";
    
                /**
                 * FileOptions phpNamespace.
                 * @member {string} phpNamespace
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.phpNamespace = "";
    
                /**
                 * FileOptions phpMetadataNamespace.
                 * @member {string} phpMetadataNamespace
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.phpMetadataNamespace = "";
    
                /**
                 * FileOptions rubyPackage.
                 * @member {string} rubyPackage
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.rubyPackage = "";
    
                /**
                 * FileOptions features.
                 * @member {google.protobuf.IFeatureSet|null|undefined} features
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.features = null;
    
                /**
                 * FileOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * FileOptions .google.api.resourceDefinition.
                 * @member {Array.<google.api.IResourceDescriptor>} .google.api.resourceDefinition
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype[".google.api.resourceDefinition"] = $util.emptyArray;
    
                /**
                 * Creates a new FileOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {google.protobuf.IFileOptions=} [properties] Properties to set
                 * @returns {google.protobuf.FileOptions} FileOptions instance
                 */
                FileOptions.create = function create(properties) {
                    return new FileOptions(properties);
                };
    
                /**
                 * Encodes the specified FileOptions message. Does not implicitly {@link google.protobuf.FileOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {google.protobuf.IFileOptions} message FileOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.javaPackage != null && Object.hasOwnProperty.call(message, "javaPackage"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.javaPackage);
                    if (message.javaOuterClassname != null && Object.hasOwnProperty.call(message, "javaOuterClassname"))
                        writer.uint32(/* id 8, wireType 2 =*/66).string(message.javaOuterClassname);
                    if (message.optimizeFor != null && Object.hasOwnProperty.call(message, "optimizeFor"))
                        writer.uint32(/* id 9, wireType 0 =*/72).int32(message.optimizeFor);
                    if (message.javaMultipleFiles != null && Object.hasOwnProperty.call(message, "javaMultipleFiles"))
                        writer.uint32(/* id 10, wireType 0 =*/80).bool(message.javaMultipleFiles);
                    if (message.goPackage != null && Object.hasOwnProperty.call(message, "goPackage"))
                        writer.uint32(/* id 11, wireType 2 =*/90).string(message.goPackage);
                    if (message.ccGenericServices != null && Object.hasOwnProperty.call(message, "ccGenericServices"))
                        writer.uint32(/* id 16, wireType 0 =*/128).bool(message.ccGenericServices);
                    if (message.javaGenericServices != null && Object.hasOwnProperty.call(message, "javaGenericServices"))
                        writer.uint32(/* id 17, wireType 0 =*/136).bool(message.javaGenericServices);
                    if (message.pyGenericServices != null && Object.hasOwnProperty.call(message, "pyGenericServices"))
                        writer.uint32(/* id 18, wireType 0 =*/144).bool(message.pyGenericServices);
                    if (message.javaGenerateEqualsAndHash != null && Object.hasOwnProperty.call(message, "javaGenerateEqualsAndHash"))
                        writer.uint32(/* id 20, wireType 0 =*/160).bool(message.javaGenerateEqualsAndHash);
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 23, wireType 0 =*/184).bool(message.deprecated);
                    if (message.javaStringCheckUtf8 != null && Object.hasOwnProperty.call(message, "javaStringCheckUtf8"))
                        writer.uint32(/* id 27, wireType 0 =*/216).bool(message.javaStringCheckUtf8);
                    if (message.ccEnableArenas != null && Object.hasOwnProperty.call(message, "ccEnableArenas"))
                        writer.uint32(/* id 31, wireType 0 =*/248).bool(message.ccEnableArenas);
                    if (message.objcClassPrefix != null && Object.hasOwnProperty.call(message, "objcClassPrefix"))
                        writer.uint32(/* id 36, wireType 2 =*/290).string(message.objcClassPrefix);
                    if (message.csharpNamespace != null && Object.hasOwnProperty.call(message, "csharpNamespace"))
                        writer.uint32(/* id 37, wireType 2 =*/298).string(message.csharpNamespace);
                    if (message.swiftPrefix != null && Object.hasOwnProperty.call(message, "swiftPrefix"))
                        writer.uint32(/* id 39, wireType 2 =*/314).string(message.swiftPrefix);
                    if (message.phpClassPrefix != null && Object.hasOwnProperty.call(message, "phpClassPrefix"))
                        writer.uint32(/* id 40, wireType 2 =*/322).string(message.phpClassPrefix);
                    if (message.phpNamespace != null && Object.hasOwnProperty.call(message, "phpNamespace"))
                        writer.uint32(/* id 41, wireType 2 =*/330).string(message.phpNamespace);
                    if (message.phpMetadataNamespace != null && Object.hasOwnProperty.call(message, "phpMetadataNamespace"))
                        writer.uint32(/* id 44, wireType 2 =*/354).string(message.phpMetadataNamespace);
                    if (message.rubyPackage != null && Object.hasOwnProperty.call(message, "rubyPackage"))
                        writer.uint32(/* id 45, wireType 2 =*/362).string(message.rubyPackage);
                    if (message.features != null && Object.hasOwnProperty.call(message, "features"))
                        $root.google.protobuf.FeatureSet.encode(message.features, writer.uint32(/* id 50, wireType 2 =*/402).fork()).ldelim();
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    if (message[".google.api.resourceDefinition"] != null && message[".google.api.resourceDefinition"].length)
                        for (var i = 0; i < message[".google.api.resourceDefinition"].length; ++i)
                            $root.google.api.ResourceDescriptor.encode(message[".google.api.resourceDefinition"][i], writer.uint32(/* id 1053, wireType 2 =*/8426).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified FileOptions message, length delimited. Does not implicitly {@link google.protobuf.FileOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {google.protobuf.IFileOptions} message FileOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FileOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FileOptions} FileOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileOptions.decode = function decode(reader, length, error) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FileOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        if (tag === error)
                            break;
                        switch (tag >>> 3) {
                        case 1: {
                                message.javaPackage = reader.string();
                                break;
                            }
                        case 8: {
                                message.javaOuterClassname = reader.string();
                                break;
                            }
                        case 10: {
                                message.javaMultipleFiles = reader.bool();
                                break;
                            }
                        case 20: {
                                message.javaGenerateEqualsAndHash = reader.bool();
                                break;
                            }
                        case 27: {
                                message.javaStringCheckUtf8 = reader.bool();
                                break;
                            }
                        case 9: {
                                message.optimizeFor = reader.int32();
                                break;
                            }
                        case 11: {
                                message.goPackage = reader.string();
                                break;
                            }
                        case 16: {
                                message.ccGenericServices = reader.bool();
                                break;
                            }
                        case 17: {
                                message.javaGenericServices = reader.bool();
                                break;
                            }
                        case 18: {
                                message.pyGenericServices = reader.bool();
                                break;
                            }
                        case 23: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 31: {
                                message.ccEnableArenas = reader.bool();
                                break;
                            }
                        case 36: {
                                message.objcClassPrefix = reader.string();
                                break;
                            }
                        case 37: {
                                message.csharpNamespace = reader.string();
                                break;
                            }
                        case 39: {
                                message.swiftPrefix = reader.string();
                                break;
                            }
                        case 40: {
                                message.phpClassPrefix = reader.string();
                                break;
                            }
                        case 41: {
                                message.phpNamespace = reader.string();
                                break;
                            }
                        case 44: {
                                message.phpMetadataNamespace = reader.string();
                                break;
                            }
                        case 45: {
                                message.rubyPackage = reader.string();
                                break;
                            }
                        case 50: {
                                message.features = $root.google.protobuf.FeatureSet.decode(reader, reader.uint32());
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        case 1053: {
                                if (!(message[".google.api.resourceDefinition"] && message[".google.api.resourceDefinition"].length))
                                    message[".google.api.resourceDefinition"] = [];
                                message[".google.api.resourceDefinition"].push($root.google.api.ResourceDescriptor.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FileOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FileOptions} FileOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FileOptions message.
                 * @function verify
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FileOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.javaPackage != null && message.hasOwnProperty("javaPackage"))
                        if (!$util.isString(message.javaPackage))
                            return "javaPackage: string expected";
                    if (message.javaOuterClassname != null && message.hasOwnProperty("javaOuterClassname"))
                        if (!$util.isString(message.javaOuterClassname))
                            return "javaOuterClassname: string expected";
                    if (message.javaMultipleFiles != null && message.hasOwnProperty("javaMultipleFiles"))
                        if (typeof message.javaMultipleFiles !== "boolean")
                            return "javaMultipleFiles: boolean expected";
                    if (message.javaGenerateEqualsAndHash != null && message.hasOwnProperty("javaGenerateEqualsAndHash"))
                        if (typeof message.javaGenerateEqualsAndHash !== "boolean")
                            return "javaGenerateEqualsAndHash: boolean expected";
                    if (message.javaStringCheckUtf8 != null && message.hasOwnProperty("javaStringCheckUtf8"))
                        if (typeof message.javaStringCheckUtf8 !== "boolean")
                            return "javaStringCheckUtf8: boolean expected";
                    if (message.optimizeFor != null && message.hasOwnProperty("optimizeFor"))
                        switch (message.optimizeFor) {
                        default:
                            return "optimizeFor: enum value expected";
                        case 1:
                        case 2:
                        case 3:
                            break;
                        }
                    if (message.goPackage != null && message.hasOwnProperty("goPackage"))
                        if (!$util.isString(message.goPackage))
                            return "goPackage: string expected";
                    if (message.ccGenericServices != null && message.hasOwnProperty("ccGenericServices"))
                        if (typeof message.ccGenericServices !== "boolean")
                            return "ccGenericServices: boolean expected";
                    if (message.javaGenericServices != null && message.hasOwnProperty("javaGenericServices"))
                        if (typeof message.javaGenericServices !== "boolean")
                            return "javaGenericServices: boolean expected";
                    if (message.pyGenericServices != null && message.hasOwnProperty("pyGenericServices"))
                        if (typeof message.pyGenericServices !== "boolean")
                            return "pyGenericServices: boolean expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.ccEnableArenas != null && message.hasOwnProperty("ccEnableArenas"))
                        if (typeof message.ccEnableArenas !== "boolean")
                            return "ccEnableArenas: boolean expected";
                    if (message.objcClassPrefix != null && message.hasOwnProperty("objcClassPrefix"))
                        if (!$util.isString(message.objcClassPrefix))
                            return "objcClassPrefix: string expected";
                    if (message.csharpNamespace != null && message.hasOwnProperty("csharpNamespace"))
                        if (!$util.isString(message.csharpNamespace))
                            return "csharpNamespace: string expected";
                    if (message.swiftPrefix != null && message.hasOwnProperty("swiftPrefix"))
                        if (!$util.isString(message.swiftPrefix))
                            return "swiftPrefix: string expected";
                    if (message.phpClassPrefix != null && message.hasOwnProperty("phpClassPrefix"))
                        if (!$util.isString(message.phpClassPrefix))
                            return "phpClassPrefix: string expected";
                    if (message.phpNamespace != null && message.hasOwnProperty("phpNamespace"))
                        if (!$util.isString(message.phpNamespace))
                            return "phpNamespace: string expected";
                    if (message.phpMetadataNamespace != null && message.hasOwnProperty("phpMetadataNamespace"))
                        if (!$util.isString(message.phpMetadataNamespace))
                            return "phpMetadataNamespace: string expected";
                    if (message.rubyPackage != null && message.hasOwnProperty("rubyPackage"))
                        if (!$util.isString(message.rubyPackage))
                            return "rubyPackage: string expected";
                    if (message.features != null && message.hasOwnProperty("features")) {
                        var error = $root.google.protobuf.FeatureSet.verify(message.features);
                        if (error)
                            return "features." + error;
                    }
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    if (message[".google.api.resourceDefinition"] != null && message.hasOwnProperty(".google.api.resourceDefinition")) {
                        if (!Array.isArray(message[".google.api.resourceDefinition"]))
                            return ".google.api.resourceDefinition: array expected";
                        for (var i = 0; i < message[".google.api.resourceDefinition"].length; ++i) {
                            var error = $root.google.api.ResourceDescriptor.verify(message[".google.api.resourceDefinition"][i]);
                            if (error)
                                return ".google.api.resourceDefinition." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a FileOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FileOptions} FileOptions
                 */
                FileOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FileOptions)
                        return object;
                    var message = new $root.google.protobuf.FileOptions();
                    if (object.javaPackage != null)
                        message.javaPackage = String(object.javaPackage);
                    if (object.javaOuterClassname != null)
                        message.javaOuterClassname = String(object.javaOuterClassname);
                    if (object.javaMultipleFiles != null)
                        message.javaMultipleFiles = Boolean(object.javaMultipleFiles);
                    if (object.javaGenerateEqualsAndHash != null)
                        message.javaGenerateEqualsAndHash = Boolean(object.javaGenerateEqualsAndHash);
                    if (object.javaStringCheckUtf8 != null)
                        message.javaStringCheckUtf8 = Boolean(object.javaStringCheckUtf8);
                    switch (object.optimizeFor) {
                    default:
                        if (typeof object.optimizeFor === "number") {
                            message.optimizeFor = object.optimizeFor;
                            break;
                        }
                        break;
                    case "SPEED":
                    case 1:
                        message.optimizeFor = 1;
                        break;
                    case "CODE_SIZE":
                    case 2:
                        message.optimizeFor = 2;
                        break;
                    case "LITE_RUNTIME":
                    case 3:
                        message.optimizeFor = 3;
                        break;
                    }
                    if (object.goPackage != null)
                        message.goPackage = String(object.goPackage);
                    if (object.ccGenericServices != null)
                        message.ccGenericServices = Boolean(object.ccGenericServices);
                    if (object.javaGenericServices != null)
                        message.javaGenericServices = Boolean(object.javaGenericServices);
                    if (object.pyGenericServices != null)
                        message.pyGenericServices = Boolean(object.pyGenericServices);
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.ccEnableArenas != null)
                        message.ccEnableArenas = Boolean(object.ccEnableArenas);
                    if (object.objcClassPrefix != null)
                        message.objcClassPrefix = String(object.objcClassPrefix);
                    if (object.csharpNamespace != null)
                        message.csharpNamespace = String(object.csharpNamespace);
                    if (object.swiftPrefix != null)
                        message.swiftPrefix = String(object.swiftPrefix);
                    if (object.phpClassPrefix != null)
                        message.phpClassPrefix = String(object.phpClassPrefix);
                    if (object.phpNamespace != null)
                        message.phpNamespace = String(object.phpNamespace);
                    if (object.phpMetadataNamespace != null)
                        message.phpMetadataNamespace = String(object.phpMetadataNamespace);
                    if (object.rubyPackage != null)
                        message.rubyPackage = String(object.rubyPackage);
                    if (object.features != null) {
                        if (typeof object.features !== "object")
                            throw TypeError(".google.protobuf.FileOptions.features: object expected");
                        message.features = $root.google.protobuf.FeatureSet.fromObject(object.features);
                    }
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.FileOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.FileOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    if (object[".google.api.resourceDefinition"]) {
                        if (!Array.isArray(object[".google.api.resourceDefinition"]))
                            throw TypeError(".google.protobuf.FileOptions..google.api.resourceDefinition: array expected");
                        message[".google.api.resourceDefinition"] = [];
                        for (var i = 0; i < object[".google.api.resourceDefinition"].length; ++i) {
                            if (typeof object[".google.api.resourceDefinition"][i] !== "object")
                                throw TypeError(".google.protobuf.FileOptions..google.api.resourceDefinition: object expected");
                            message[".google.api.resourceDefinition"][i] = $root.google.api.ResourceDescriptor.fromObject(object[".google.api.resourceDefinition"][i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a FileOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {google.protobuf.FileOptions} message FileOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FileOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.uninterpretedOption = [];
                        object[".google.api.resourceDefinition"] = [];
                    }
                    if (options.defaults) {
                        object.javaPackage = "";
                        object.javaOuterClassname = "";
                        object.optimizeFor = options.enums === String ? "SPEED" : 1;
                        object.javaMultipleFiles = false;
                        object.goPackage = "";
                        object.ccGenericServices = false;
                        object.javaGenericServices = false;
                        object.pyGenericServices = false;
                        object.javaGenerateEqualsAndHash = false;
                        object.deprecated = false;
                        object.javaStringCheckUtf8 = false;
                        object.ccEnableArenas = true;
                        object.objcClassPrefix = "";
                        object.csharpNamespace = "";
                        object.swiftPrefix = "";
                        object.phpClassPrefix = "";
                        object.phpNamespace = "";
                        object.phpMetadataNamespace = "";
                        object.rubyPackage = "";
                        object.features = null;
                    }
                    if (message.javaPackage != null && message.hasOwnProperty("javaPackage"))
                        object.javaPackage = message.javaPackage;
                    if (message.javaOuterClassname != null && message.hasOwnProperty("javaOuterClassname"))
                        object.javaOuterClassname = message.javaOuterClassname;
                    if (message.optimizeFor != null && message.hasOwnProperty("optimizeFor"))
                        object.optimizeFor = options.enums === String ? $root.google.protobuf.FileOptions.OptimizeMode[message.optimizeFor] === undefined ? message.optimizeFor : $root.google.protobuf.FileOptions.OptimizeMode[message.optimizeFor] : message.optimizeFor;
                    if (message.javaMultipleFiles != null && message.hasOwnProperty("javaMultipleFiles"))
                        object.javaMultipleFiles = message.javaMultipleFiles;
                    if (message.goPackage != null && message.hasOwnProperty("goPackage"))
                        object.goPackage = message.goPackage;
                    if (message.ccGenericServices != null && message.hasOwnProperty("ccGenericServices"))
                        object.ccGenericServices = message.ccGenericServices;
                    if (message.javaGenericServices != null && message.hasOwnProperty("javaGenericServices"))
                        object.javaGenericServices = message.javaGenericServices;
                    if (message.pyGenericServices != null && message.hasOwnProperty("pyGenericServices"))
                        object.pyGenericServices = message.pyGenericServices;
                    if (message.javaGenerateEqualsAndHash != null && message.hasOwnProperty("javaGenerateEqualsAndHash"))
                        object.javaGenerateEqualsAndHash = message.javaGenerateEqualsAndHash;
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.javaStringCheckUtf8 != null && message.hasOwnProperty("javaStringCheckUtf8"))
                        object.javaStringCheckUtf8 = message.javaStringCheckUtf8;
                    if (message.ccEnableArenas != null && message.hasOwnProperty("ccEnableArenas"))
                        object.ccEnableArenas = message.ccEnableArenas;
                    if (message.objcClassPrefix != null && message.hasOwnProperty("objcClassPrefix"))
                        object.objcClassPrefix = message.objcClassPrefix;
                    if (message.csharpNamespace != null && message.hasOwnProperty("csharpNamespace"))
                        object.csharpNamespace = message.csharpNamespace;
                    if (message.swiftPrefix != null && message.hasOwnProperty("swiftPrefix"))
                        object.swiftPrefix = message.swiftPrefix;
                    if (message.phpClassPrefix != null && message.hasOwnProperty("phpClassPrefix"))
                        object.phpClassPrefix = message.phpClassPrefix;
                    if (message.phpNamespace != null && message.hasOwnProperty("phpNamespace"))
                        object.phpNamespace = message.phpNamespace;
                    if (message.phpMetadataNamespace != null && message.hasOwnProperty("phpMetadataNamespace"))
                        object.phpMetadataNamespace = message.phpMetadataNamespace;
                    if (message.rubyPackage != null && message.hasOwnProperty("rubyPackage"))
                        object.rubyPackage = message.rubyPackage;
                    if (message.features != null && message.hasOwnProperty("features"))
                        object.features = $root.google.protobuf.FeatureSet.toObject(message.features, options);
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    if (message[".google.api.resourceDefinition"] && message[".google.api.resourceDefinition"].length) {
                        object[".google.api.resourceDefinition"] = [];
                        for (var j = 0; j < message[".google.api.resourceDefinition"].length; ++j)
                            object[".google.api.resourceDefinition"][j] = $root.google.api.ResourceDescriptor.toObject(message[".google.api.resourceDefinition"][j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this FileOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FileOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for FileOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                FileOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.FileOptions";
                };
    
                /**
                 * OptimizeMode enum.
                 * @name google.protobuf.FileOptions.OptimizeMode
                 * @enum {number}
                 * @property {number} SPEED=1 SPEED value
                 * @property {number} CODE_SIZE=2 CODE_SIZE value
                 * @property {number} LITE_RUNTIME=3 LITE_RUNTIME value
                 */
                FileOptions.OptimizeMode = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[1] = "SPEED"] = 1;
                    values[valuesById[2] = "CODE_SIZE"] = 2;
                    values[valuesById[3] = "LITE_RUNTIME"] = 3;
                    return values;
                })();
    
                return FileOptions;
            })();
    
            protobuf.MessageOptions = (function() {
    
                /**
                 * Properties of a MessageOptions.
                 * @memberof google.protobuf
                 * @interface IMessageOptions
                 * @property {boolean|null} [messageSetWireFormat] MessageOptions messageSetWireFormat
                 * @property {boolean|null} [noStandardDescriptorAccessor] MessageOptions noStandardDescriptorAccessor
                 * @property {boolean|null} [deprecated] MessageOptions deprecated
                 * @property {boolean|null} [mapEntry] MessageOptions mapEntry
                 * @property {boolean|null} [deprecatedLegacyJsonFieldConflicts] MessageOptions deprecatedLegacyJsonFieldConflicts
                 * @property {google.protobuf.IFeatureSet|null} [features] MessageOptions features
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] MessageOptions uninterpretedOption
                 * @property {google.api.IResourceDescriptor|null} [".google.api.resource"] MessageOptions .google.api.resource
                 */
    
                /**
                 * Constructs a new MessageOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents a MessageOptions.
                 * @implements IMessageOptions
                 * @constructor
                 * @param {google.protobuf.IMessageOptions=} [properties] Properties to set
                 */
                function MessageOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * MessageOptions messageSetWireFormat.
                 * @member {boolean} messageSetWireFormat
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.messageSetWireFormat = false;
    
                /**
                 * MessageOptions noStandardDescriptorAccessor.
                 * @member {boolean} noStandardDescriptorAccessor
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.noStandardDescriptorAccessor = false;
    
                /**
                 * MessageOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.deprecated = false;
    
                /**
                 * MessageOptions mapEntry.
                 * @member {boolean} mapEntry
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.mapEntry = false;
    
                /**
                 * MessageOptions deprecatedLegacyJsonFieldConflicts.
                 * @member {boolean} deprecatedLegacyJsonFieldConflicts
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.deprecatedLegacyJsonFieldConflicts = false;
    
                /**
                 * MessageOptions features.
                 * @member {google.protobuf.IFeatureSet|null|undefined} features
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.features = null;
    
                /**
                 * MessageOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * MessageOptions .google.api.resource.
                 * @member {google.api.IResourceDescriptor|null|undefined} .google.api.resource
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype[".google.api.resource"] = null;
    
                /**
                 * Creates a new MessageOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {google.protobuf.IMessageOptions=} [properties] Properties to set
                 * @returns {google.protobuf.MessageOptions} MessageOptions instance
                 */
                MessageOptions.create = function create(properties) {
                    return new MessageOptions(properties);
                };
    
                /**
                 * Encodes the specified MessageOptions message. Does not implicitly {@link google.protobuf.MessageOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {google.protobuf.IMessageOptions} message MessageOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MessageOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.messageSetWireFormat != null && Object.hasOwnProperty.call(message, "messageSetWireFormat"))
                        writer.uint32(/* id 1, wireType 0 =*/8).bool(message.messageSetWireFormat);
                    if (message.noStandardDescriptorAccessor != null && Object.hasOwnProperty.call(message, "noStandardDescriptorAccessor"))
                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.noStandardDescriptorAccessor);
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 3, wireType 0 =*/24).bool(message.deprecated);
                    if (message.mapEntry != null && Object.hasOwnProperty.call(message, "mapEntry"))
                        writer.uint32(/* id 7, wireType 0 =*/56).bool(message.mapEntry);
                    if (message.deprecatedLegacyJsonFieldConflicts != null && Object.hasOwnProperty.call(message, "deprecatedLegacyJsonFieldConflicts"))
                        writer.uint32(/* id 11, wireType 0 =*/88).bool(message.deprecatedLegacyJsonFieldConflicts);
                    if (message.features != null && Object.hasOwnProperty.call(message, "features"))
                        $root.google.protobuf.FeatureSet.encode(message.features, writer.uint32(/* id 12, wireType 2 =*/98).fork()).ldelim();
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    if (message[".google.api.resource"] != null && Object.hasOwnProperty.call(message, ".google.api.resource"))
                        $root.google.api.ResourceDescriptor.encode(message[".google.api.resource"], writer.uint32(/* id 1053, wireType 2 =*/8426).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified MessageOptions message, length delimited. Does not implicitly {@link google.protobuf.MessageOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {google.protobuf.IMessageOptions} message MessageOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MessageOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a MessageOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.MessageOptions} MessageOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MessageOptions.decode = function decode(reader, length, error) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.MessageOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        if (tag === error)
                            break;
                        switch (tag >>> 3) {
                        case 1: {
                                message.messageSetWireFormat = reader.bool();
                                break;
                            }
                        case 2: {
                                message.noStandardDescriptorAccessor = reader.bool();
                                break;
                            }
                        case 3: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 7: {
                                message.mapEntry = reader.bool();
                                break;
                            }
                        case 11: {
                                message.deprecatedLegacyJsonFieldConflicts = reader.bool();
                                break;
                            }
                        case 12: {
                                message.features = $root.google.protobuf.FeatureSet.decode(reader, reader.uint32());
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        case 1053: {
                                message[".google.api.resource"] = $root.google.api.ResourceDescriptor.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a MessageOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.MessageOptions} MessageOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MessageOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a MessageOptions message.
                 * @function verify
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                MessageOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.messageSetWireFormat != null && message.hasOwnProperty("messageSetWireFormat"))
                        if (typeof message.messageSetWireFormat !== "boolean")
                            return "messageSetWireFormat: boolean expected";
                    if (message.noStandardDescriptorAccessor != null && message.hasOwnProperty("noStandardDescriptorAccessor"))
                        if (typeof message.noStandardDescriptorAccessor !== "boolean")
                            return "noStandardDescriptorAccessor: boolean expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.mapEntry != null && message.hasOwnProperty("mapEntry"))
                        if (typeof message.mapEntry !== "boolean")
                            return "mapEntry: boolean expected";
                    if (message.deprecatedLegacyJsonFieldConflicts != null && message.hasOwnProperty("deprecatedLegacyJsonFieldConflicts"))
                        if (typeof message.deprecatedLegacyJsonFieldConflicts !== "boolean")
                            return "deprecatedLegacyJsonFieldConflicts: boolean expected";
                    if (message.features != null && message.hasOwnProperty("features")) {
                        var error = $root.google.protobuf.FeatureSet.verify(message.features);
                        if (error)
                            return "features." + error;
                    }
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    if (message[".google.api.resource"] != null && message.hasOwnProperty(".google.api.resource")) {
                        var error = $root.google.api.ResourceDescriptor.verify(message[".google.api.resource"]);
                        if (error)
                            return ".google.api.resource." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a MessageOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.MessageOptions} MessageOptions
                 */
                MessageOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.MessageOptions)
                        return object;
                    var message = new $root.google.protobuf.MessageOptions();
                    if (object.messageSetWireFormat != null)
                        message.messageSetWireFormat = Boolean(object.messageSetWireFormat);
                    if (object.noStandardDescriptorAccessor != null)
                        message.noStandardDescriptorAccessor = Boolean(object.noStandardDescriptorAccessor);
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.mapEntry != null)
                        message.mapEntry = Boolean(object.mapEntry);
                    if (object.deprecatedLegacyJsonFieldConflicts != null)
                        message.deprecatedLegacyJsonFieldConflicts = Boolean(object.deprecatedLegacyJsonFieldConflicts);
                    if (object.features != null) {
                        if (typeof object.features !== "object")
                            throw TypeError(".google.protobuf.MessageOptions.features: object expected");
                        message.features = $root.google.protobuf.FeatureSet.fromObject(object.features);
                    }
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.MessageOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.MessageOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    if (object[".google.api.resource"] != null) {
                        if (typeof object[".google.api.resource"] !== "object")
                            throw TypeError(".google.protobuf.MessageOptions..google.api.resource: object expected");
                        message[".google.api.resource"] = $root.google.api.ResourceDescriptor.fromObject(object[".google.api.resource"]);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a MessageOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {google.protobuf.MessageOptions} message MessageOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                MessageOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (options.defaults) {
                        object.messageSetWireFormat = false;
                        object.noStandardDescriptorAccessor = false;
                        object.deprecated = false;
                        object.mapEntry = false;
                        object.deprecatedLegacyJsonFieldConflicts = false;
                        object.features = null;
                        object[".google.api.resource"] = null;
                    }
                    if (message.messageSetWireFormat != null && message.hasOwnProperty("messageSetWireFormat"))
                        object.messageSetWireFormat = message.messageSetWireFormat;
                    if (message.noStandardDescriptorAccessor != null && message.hasOwnProperty("noStandardDescriptorAccessor"))
                        object.noStandardDescriptorAccessor = message.noStandardDescriptorAccessor;
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.mapEntry != null && message.hasOwnProperty("mapEntry"))
                        object.mapEntry = message.mapEntry;
                    if (message.deprecatedLegacyJsonFieldConflicts != null && message.hasOwnProperty("deprecatedLegacyJsonFieldConflicts"))
                        object.deprecatedLegacyJsonFieldConflicts = message.deprecatedLegacyJsonFieldConflicts;
                    if (message.features != null && message.hasOwnProperty("features"))
                        object.features = $root.google.protobuf.FeatureSet.toObject(message.features, options);
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    if (message[".google.api.resource"] != null && message.hasOwnProperty(".google.api.resource"))
                        object[".google.api.resource"] = $root.google.api.ResourceDescriptor.toObject(message[".google.api.resource"], options);
                    return object;
                };
    
                /**
                 * Converts this MessageOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                MessageOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for MessageOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                MessageOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.MessageOptions";
                };
    
                return MessageOptions;
            })();
    
            protobuf.FieldOptions = (function() {
    
                /**
                 * Properties of a FieldOptions.
                 * @memberof google.protobuf
                 * @interface IFieldOptions
                 * @property {google.protobuf.FieldOptions.CType|null} [ctype] FieldOptions ctype
                 * @property {boolean|null} [packed] FieldOptions packed
                 * @property {google.protobuf.FieldOptions.JSType|null} [jstype] FieldOptions jstype
                 * @property {boolean|null} [lazy] FieldOptions lazy
                 * @property {boolean|null} [unverifiedLazy] FieldOptions unverifiedLazy
                 * @property {boolean|null} [deprecated] FieldOptions deprecated
                 * @property {boolean|null} [weak] FieldOptions weak
                 * @property {boolean|null} [debugRedact] FieldOptions debugRedact
                 * @property {google.protobuf.FieldOptions.OptionRetention|null} [retention] FieldOptions retention
                 * @property {Array.<google.protobuf.FieldOptions.OptionTargetType>|null} [targets] FieldOptions targets
                 * @property {Array.<google.protobuf.FieldOptions.IEditionDefault>|null} [editionDefaults] FieldOptions editionDefaults
                 * @property {google.protobuf.IFeatureSet|null} [features] FieldOptions features
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] FieldOptions uninterpretedOption
                 * @property {Array.<google.api.FieldBehavior>|null} [".google.api.fieldBehavior"] FieldOptions .google.api.fieldBehavior
                 * @property {google.api.IFieldInfo|null} [".google.api.fieldInfo"] FieldOptions .google.api.fieldInfo
                 * @property {google.api.IResourceReference|null} [".google.api.resourceReference"] FieldOptions .google.api.resourceReference
                 */
    
                /**
                 * Constructs a new FieldOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents a FieldOptions.
                 * @implements IFieldOptions
                 * @constructor
                 * @param {google.protobuf.IFieldOptions=} [properties] Properties to set
                 */
                function FieldOptions(properties) {
                    this.targets = [];
                    this.editionDefaults = [];
                    this.uninterpretedOption = [];
                    this[".google.api.fieldBehavior"] = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FieldOptions ctype.
                 * @member {google.protobuf.FieldOptions.CType} ctype
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.ctype = 0;
    
                /**
                 * FieldOptions packed.
                 * @member {boolean} packed
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.packed = false;
    
                /**
                 * FieldOptions jstype.
                 * @member {google.protobuf.FieldOptions.JSType} jstype
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.jstype = 0;
    
                /**
                 * FieldOptions lazy.
                 * @member {boolean} lazy
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.lazy = false;
    
                /**
                 * FieldOptions unverifiedLazy.
                 * @member {boolean} unverifiedLazy
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.unverifiedLazy = false;
    
                /**
                 * FieldOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.deprecated = false;
    
                /**
                 * FieldOptions weak.
                 * @member {boolean} weak
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.weak = false;
    
                /**
                 * FieldOptions debugRedact.
                 * @member {boolean} debugRedact
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.debugRedact = false;
    
                /**
                 * FieldOptions retention.
                 * @member {google.protobuf.FieldOptions.OptionRetention} retention
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.retention = 0;
    
                /**
                 * FieldOptions targets.
                 * @member {Array.<google.protobuf.FieldOptions.OptionTargetType>} targets
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.targets = $util.emptyArray;
    
                /**
                 * FieldOptions editionDefaults.
                 * @member {Array.<google.protobuf.FieldOptions.IEditionDefault>} editionDefaults
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.editionDefaults = $util.emptyArray;
    
                /**
                 * FieldOptions features.
                 * @member {google.protobuf.IFeatureSet|null|undefined} features
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.features = null;
    
                /**
                 * FieldOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * FieldOptions .google.api.fieldBehavior.
                 * @member {Array.<google.api.FieldBehavior>} .google.api.fieldBehavior
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype[".google.api.fieldBehavior"] = $util.emptyArray;
    
                /**
                 * FieldOptions .google.api.fieldInfo.
                 * @member {google.api.IFieldInfo|null|undefined} .google.api.fieldInfo
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype[".google.api.fieldInfo"] = null;
    
                /**
                 * FieldOptions .google.api.resourceReference.
                 * @member {google.api.IResourceReference|null|undefined} .google.api.resourceReference
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype[".google.api.resourceReference"] = null;
    
                /**
                 * Creates a new FieldOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {google.protobuf.IFieldOptions=} [properties] Properties to set
                 * @returns {google.protobuf.FieldOptions} FieldOptions instance
                 */
                FieldOptions.create = function create(properties) {
                    return new FieldOptions(properties);
                };
    
                /**
                 * Encodes the specified FieldOptions message. Does not implicitly {@link google.protobuf.FieldOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {google.protobuf.IFieldOptions} message FieldOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.ctype != null && Object.hasOwnProperty.call(message, "ctype"))
                        writer.uint32(/* id 1, wireType 0 =*/8).int32(message.ctype);
                    if (message.packed != null && Object.hasOwnProperty.call(message, "packed"))
                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.packed);
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 3, wireType 0 =*/24).bool(message.deprecated);
                    if (message.lazy != null && Object.hasOwnProperty.call(message, "lazy"))
                        writer.uint32(/* id 5, wireType 0 =*/40).bool(message.lazy);
                    if (message.jstype != null && Object.hasOwnProperty.call(message, "jstype"))
                        writer.uint32(/* id 6, wireType 0 =*/48).int32(message.jstype);
                    if (message.weak != null && Object.hasOwnProperty.call(message, "weak"))
                        writer.uint32(/* id 10, wireType 0 =*/80).bool(message.weak);
                    if (message.unverifiedLazy != null && Object.hasOwnProperty.call(message, "unverifiedLazy"))
                        writer.uint32(/* id 15, wireType 0 =*/120).bool(message.unverifiedLazy);
                    if (message.debugRedact != null && Object.hasOwnProperty.call(message, "debugRedact"))
                        writer.uint32(/* id 16, wireType 0 =*/128).bool(message.debugRedact);
                    if (message.retention != null && Object.hasOwnProperty.call(message, "retention"))
                        writer.uint32(/* id 17, wireType 0 =*/136).int32(message.retention);
                    if (message.targets != null && message.targets.length)
                        for (var i = 0; i < message.targets.length; ++i)
                            writer.uint32(/* id 19, wireType 0 =*/152).int32(message.targets[i]);
                    if (message.editionDefaults != null && message.editionDefaults.length)
                        for (var i = 0; i < message.editionDefaults.length; ++i)
                            $root.google.protobuf.FieldOptions.EditionDefault.encode(message.editionDefaults[i], writer.uint32(/* id 20, wireType 2 =*/162).fork()).ldelim();
                    if (message.features != null && Object.hasOwnProperty.call(message, "features"))
                        $root.google.protobuf.FeatureSet.encode(message.features, writer.uint32(/* id 21, wireType 2 =*/170).fork()).ldelim();
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    if (message[".google.api.fieldBehavior"] != null && message[".google.api.fieldBehavior"].length)
                        for (var i = 0; i < message[".google.api.fieldBehavior"].length; ++i)
                            writer.uint32(/* id 1052, wireType 0 =*/8416).int32(message[".google.api.fieldBehavior"][i]);
                    if (message[".google.api.resourceReference"] != null && Object.hasOwnProperty.call(message, ".google.api.resourceReference"))
                        $root.google.api.ResourceReference.encode(message[".google.api.resourceReference"], writer.uint32(/* id 1055, wireType 2 =*/8442).fork()).ldelim();
                    if (message[".google.api.fieldInfo"] != null && Object.hasOwnProperty.call(message, ".google.api.fieldInfo"))
                        $root.google.api.FieldInfo.encode(message[".google.api.fieldInfo"], writer.uint32(/* id 291403980, wireType 2 =*/2331231842).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified FieldOptions message, length delimited. Does not implicitly {@link google.protobuf.FieldOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {google.protobuf.IFieldOptions} message FieldOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FieldOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FieldOptions} FieldOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldOptions.decode = function decode(reader, length, error) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FieldOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        if (tag === error)
                            break;
                        switch (tag >>> 3) {
                        case 1: {
                                message.ctype = reader.int32();
                                break;
                            }
                        case 2: {
                                message.packed = reader.bool();
                                break;
                            }
                        case 6: {
                                message.jstype = reader.int32();
                                break;
                            }
                        case 5: {
                                message.lazy = reader.bool();
                                break;
                            }
                        case 15: {
                                message.unverifiedLazy = reader.bool();
                                break;
                            }
                        case 3: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 10: {
                                message.weak = reader.bool();
                                break;
                            }
                        case 16: {
                                message.debugRedact = reader.bool();
                                break;
                            }
                        case 17: {
                                message.retention = reader.int32();
                                break;
                            }
                        case 19: {
                                if (!(message.targets && message.targets.length))
                                    message.targets = [];
                                if ((tag & 7) === 2) {
                                    var end2 = reader.uint32() + reader.pos;
                                    while (reader.pos < end2)
                                        message.targets.push(reader.int32());
                                } else
                                    message.targets.push(reader.int32());
                                break;
                            }
                        case 20: {
                                if (!(message.editionDefaults && message.editionDefaults.length))
                                    message.editionDefaults = [];
                                message.editionDefaults.push($root.google.protobuf.FieldOptions.EditionDefault.decode(reader, reader.uint32()));
                                break;
                            }
                        case 21: {
                                message.features = $root.google.protobuf.FeatureSet.decode(reader, reader.uint32());
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        case 1052: {
                                if (!(message[".google.api.fieldBehavior"] && message[".google.api.fieldBehavior"].length))
                                    message[".google.api.fieldBehavior"] = [];
                                if ((tag & 7) === 2) {
                                    var end2 = reader.uint32() + reader.pos;
                                    while (reader.pos < end2)
                                        message[".google.api.fieldBehavior"].push(reader.int32());
                                } else
                                    message[".google.api.fieldBehavior"].push(reader.int32());
                                break;
                            }
                        case 291403980: {
                                message[".google.api.fieldInfo"] = $root.google.api.FieldInfo.decode(reader, reader.uint32());
                                break;
                            }
                        case 1055: {
                                message[".google.api.resourceReference"] = $root.google.api.ResourceReference.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FieldOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FieldOptions} FieldOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FieldOptions message.
                 * @function verify
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FieldOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.ctype != null && message.hasOwnProperty("ctype"))
                        switch (message.ctype) {
                        default:
                            return "ctype: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                            break;
                        }
                    if (message.packed != null && message.hasOwnProperty("packed"))
                        if (typeof message.packed !== "boolean")
                            return "packed: boolean expected";
                    if (message.jstype != null && message.hasOwnProperty("jstype"))
                        switch (message.jstype) {
                        default:
                            return "jstype: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                            break;
                        }
                    if (message.lazy != null && message.hasOwnProperty("lazy"))
                        if (typeof message.lazy !== "boolean")
                            return "lazy: boolean expected";
                    if (message.unverifiedLazy != null && message.hasOwnProperty("unverifiedLazy"))
                        if (typeof message.unverifiedLazy !== "boolean")
                            return "unverifiedLazy: boolean expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.weak != null && message.hasOwnProperty("weak"))
                        if (typeof message.weak !== "boolean")
                            return "weak: boolean expected";
                    if (message.debugRedact != null && message.hasOwnProperty("debugRedact"))
                        if (typeof message.debugRedact !== "boolean")
                            return "debugRedact: boolean expected";
                    if (message.retention != null && message.hasOwnProperty("retention"))
                        switch (message.retention) {
                        default:
                            return "retention: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                            break;
                        }
                    if (message.targets != null && message.hasOwnProperty("targets")) {
                        if (!Array.isArray(message.targets))
                            return "targets: array expected";
                        for (var i = 0; i < message.targets.length; ++i)
                            switch (message.targets[i]) {
                            default:
                                return "targets: enum value[] expected";
                            case 0:
                            case 1:
                            case 2:
                            case 3:
                            case 4:
                            case 5:
                            case 6:
                            case 7:
                            case 8:
                            case 9:
                                break;
                            }
                    }
                    if (message.editionDefaults != null && message.hasOwnProperty("editionDefaults")) {
                        if (!Array.isArray(message.editionDefaults))
                            return "editionDefaults: array expected";
                        for (var i = 0; i < message.editionDefaults.length; ++i) {
                            var error = $root.google.protobuf.FieldOptions.EditionDefault.verify(message.editionDefaults[i]);
                            if (error)
                                return "editionDefaults." + error;
                        }
                    }
                    if (message.features != null && message.hasOwnProperty("features")) {
                        var error = $root.google.protobuf.FeatureSet.verify(message.features);
                        if (error)
                            return "features." + error;
                    }
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    if (message[".google.api.fieldBehavior"] != null && message.hasOwnProperty(".google.api.fieldBehavior")) {
                        if (!Array.isArray(message[".google.api.fieldBehavior"]))
                            return ".google.api.fieldBehavior: array expected";
                        for (var i = 0; i < message[".google.api.fieldBehavior"].length; ++i)
                            switch (message[".google.api.fieldBehavior"][i]) {
                            default:
                                return ".google.api.fieldBehavior: enum value[] expected";
                            case 0:
                            case 1:
                            case 2:
                            case 3:
                            case 4:
                            case 5:
                            case 6:
                            case 7:
                            case 8:
                                break;
                            }
                    }
                    if (message[".google.api.fieldInfo"] != null && message.hasOwnProperty(".google.api.fieldInfo")) {
                        var error = $root.google.api.FieldInfo.verify(message[".google.api.fieldInfo"]);
                        if (error)
                            return ".google.api.fieldInfo." + error;
                    }
                    if (message[".google.api.resourceReference"] != null && message.hasOwnProperty(".google.api.resourceReference")) {
                        var error = $root.google.api.ResourceReference.verify(message[".google.api.resourceReference"]);
                        if (error)
                            return ".google.api.resourceReference." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a FieldOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FieldOptions} FieldOptions
                 */
                FieldOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FieldOptions)
                        return object;
                    var message = new $root.google.protobuf.FieldOptions();
                    switch (object.ctype) {
                    default:
                        if (typeof object.ctype === "number") {
                            message.ctype = object.ctype;
                            break;
                        }
                        break;
                    case "STRING":
                    case 0:
                        message.ctype = 0;
                        break;
                    case "CORD":
                    case 1:
                        message.ctype = 1;
                        break;
                    case "STRING_PIECE":
                    case 2:
                        message.ctype = 2;
                        break;
                    }
                    if (object.packed != null)
                        message.packed = Boolean(object.packed);
                    switch (object.jstype) {
                    default:
                        if (typeof object.jstype === "number") {
                            message.jstype = object.jstype;
                            break;
                        }
                        break;
                    case "JS_NORMAL":
                    case 0:
                        message.jstype = 0;
                        break;
                    case "JS_STRING":
                    case 1:
                        message.jstype = 1;
                        break;
                    case "JS_NUMBER":
                    case 2:
                        message.jstype = 2;
                        break;
                    }
                    if (object.lazy != null)
                        message.lazy = Boolean(object.lazy);
                    if (object.unverifiedLazy != null)
                        message.unverifiedLazy = Boolean(object.unverifiedLazy);
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.weak != null)
                        message.weak = Boolean(object.weak);
                    if (object.debugRedact != null)
                        message.debugRedact = Boolean(object.debugRedact);
                    switch (object.retention) {
                    default:
                        if (typeof object.retention === "number") {
                            message.retention = object.retention;
                            break;
                        }
                        break;
                    case "RETENTION_UNKNOWN":
                    case 0:
                        message.retention = 0;
                        break;
                    case "RETENTION_RUNTIME":
                    case 1:
                        message.retention = 1;
                        break;
                    case "RETENTION_SOURCE":
                    case 2:
                        message.retention = 2;
                        break;
                    }
                    if (object.targets) {
                        if (!Array.isArray(object.targets))
                            throw TypeError(".google.protobuf.FieldOptions.targets: array expected");
                        message.targets = [];
                        for (var i = 0; i < object.targets.length; ++i)
                            switch (object.targets[i]) {
                            default:
                                if (typeof object.targets[i] === "number") {
                                    message.targets[i] = object.targets[i];
                                    break;
                                }
                            case "TARGET_TYPE_UNKNOWN":
                            case 0:
                                message.targets[i] = 0;
                                break;
                            case "TARGET_TYPE_FILE":
                            case 1:
                                message.targets[i] = 1;
                                break;
                            case "TARGET_TYPE_EXTENSION_RANGE":
                            case 2:
                                message.targets[i] = 2;
                                break;
                            case "TARGET_TYPE_MESSAGE":
                            case 3:
                                message.targets[i] = 3;
                                break;
                            case "TARGET_TYPE_FIELD":
                            case 4:
                                message.targets[i] = 4;
                                break;
                            case "TARGET_TYPE_ONEOF":
                            case 5:
                                message.targets[i] = 5;
                                break;
                            case "TARGET_TYPE_ENUM":
                            case 6:
                                message.targets[i] = 6;
                                break;
                            case "TARGET_TYPE_ENUM_ENTRY":
                            case 7:
                                message.targets[i] = 7;
                                break;
                            case "TARGET_TYPE_SERVICE":
                            case 8:
                                message.targets[i] = 8;
                                break;
                            case "TARGET_TYPE_METHOD":
                            case 9:
                                message.targets[i] = 9;
                                break;
                            }
                    }
                    if (object.editionDefaults) {
                        if (!Array.isArray(object.editionDefaults))
                            throw TypeError(".google.protobuf.FieldOptions.editionDefaults: array expected");
                        message.editionDefaults = [];
                        for (var i = 0; i < object.editionDefaults.length; ++i) {
                            if (typeof object.editionDefaults[i] !== "object")
                                throw TypeError(".google.protobuf.FieldOptions.editionDefaults: object expected");
                            message.editionDefaults[i] = $root.google.protobuf.FieldOptions.EditionDefault.fromObject(object.editionDefaults[i]);
                        }
                    }
                    if (object.features != null) {
                        if (typeof object.features !== "object")
                            throw TypeError(".google.protobuf.FieldOptions.features: object expected");
                        message.features = $root.google.protobuf.FeatureSet.fromObject(object.features);
                    }
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.FieldOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.FieldOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    if (object[".google.api.fieldBehavior"]) {
                        if (!Array.isArray(object[".google.api.fieldBehavior"]))
                            throw TypeError(".google.protobuf.FieldOptions..google.api.fieldBehavior: array expected");
                        message[".google.api.fieldBehavior"] = [];
                        for (var i = 0; i < object[".google.api.fieldBehavior"].length; ++i)
                            switch (object[".google.api.fieldBehavior"][i]) {
                            default:
                                if (typeof object[".google.api.fieldBehavior"][i] === "number") {
                                    message[".google.api.fieldBehavior"][i] = object[".google.api.fieldBehavior"][i];
                                    break;
                                }
                            case "FIELD_BEHAVIOR_UNSPECIFIED":
                            case 0:
                                message[".google.api.fieldBehavior"][i] = 0;
                                break;
                            case "OPTIONAL":
                            case 1:
                                message[".google.api.fieldBehavior"][i] = 1;
                                break;
                            case "REQUIRED":
                            case 2:
                                message[".google.api.fieldBehavior"][i] = 2;
                                break;
                            case "OUTPUT_ONLY":
                            case 3:
                                message[".google.api.fieldBehavior"][i] = 3;
                                break;
                            case "INPUT_ONLY":
                            case 4:
                                message[".google.api.fieldBehavior"][i] = 4;
                                break;
                            case "IMMUTABLE":
                            case 5:
                                message[".google.api.fieldBehavior"][i] = 5;
                                break;
                            case "UNORDERED_LIST":
                            case 6:
                                message[".google.api.fieldBehavior"][i] = 6;
                                break;
                            case "NON_EMPTY_DEFAULT":
                            case 7:
                                message[".google.api.fieldBehavior"][i] = 7;
                                break;
                            case "IDENTIFIER":
                            case 8:
                                message[".google.api.fieldBehavior"][i] = 8;
                                break;
                            }
                    }
                    if (object[".google.api.fieldInfo"] != null) {
                        if (typeof object[".google.api.fieldInfo"] !== "object")
                            throw TypeError(".google.protobuf.FieldOptions..google.api.fieldInfo: object expected");
                        message[".google.api.fieldInfo"] = $root.google.api.FieldInfo.fromObject(object[".google.api.fieldInfo"]);
                    }
                    if (object[".google.api.resourceReference"] != null) {
                        if (typeof object[".google.api.resourceReference"] !== "object")
                            throw TypeError(".google.protobuf.FieldOptions..google.api.resourceReference: object expected");
                        message[".google.api.resourceReference"] = $root.google.api.ResourceReference.fromObject(object[".google.api.resourceReference"]);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a FieldOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {google.protobuf.FieldOptions} message FieldOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FieldOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.targets = [];
                        object.editionDefaults = [];
                        object.uninterpretedOption = [];
                        object[".google.api.fieldBehavior"] = [];
                    }
                    if (options.defaults) {
                        object.ctype = options.enums === String ? "STRING" : 0;
                        object.packed = false;
                        object.deprecated = false;
                        object.lazy = false;
                        object.jstype = options.enums === String ? "JS_NORMAL" : 0;
                        object.weak = false;
                        object.unverifiedLazy = false;
                        object.debugRedact = false;
                        object.retention = options.enums === String ? "RETENTION_UNKNOWN" : 0;
                        object.features = null;
                        object[".google.api.resourceReference"] = null;
                        object[".google.api.fieldInfo"] = null;
                    }
                    if (message.ctype != null && message.hasOwnProperty("ctype"))
                        object.ctype = options.enums === String ? $root.google.protobuf.FieldOptions.CType[message.ctype] === undefined ? message.ctype : $root.google.protobuf.FieldOptions.CType[message.ctype] : message.ctype;
                    if (message.packed != null && message.hasOwnProperty("packed"))
                        object.packed = message.packed;
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.lazy != null && message.hasOwnProperty("lazy"))
                        object.lazy = message.lazy;
                    if (message.jstype != null && message.hasOwnProperty("jstype"))
                        object.jstype = options.enums === String ? $root.google.protobuf.FieldOptions.JSType[message.jstype] === undefined ? message.jstype : $root.google.protobuf.FieldOptions.JSType[message.jstype] : message.jstype;
                    if (message.weak != null && message.hasOwnProperty("weak"))
                        object.weak = message.weak;
                    if (message.unverifiedLazy != null && message.hasOwnProperty("unverifiedLazy"))
                        object.unverifiedLazy = message.unverifiedLazy;
                    if (message.debugRedact != null && message.hasOwnProperty("debugRedact"))
                        object.debugRedact = message.debugRedact;
                    if (message.retention != null && message.hasOwnProperty("retention"))
                        object.retention = options.enums === String ? $root.google.protobuf.FieldOptions.OptionRetention[message.retention] === undefined ? message.retention : $root.google.protobuf.FieldOptions.OptionRetention[message.retention] : message.retention;
                    if (message.targets && message.targets.length) {
                        object.targets = [];
                        for (var j = 0; j < message.targets.length; ++j)
                            object.targets[j] = options.enums === String ? $root.google.protobuf.FieldOptions.OptionTargetType[message.targets[j]] === undefined ? message.targets[j] : $root.google.protobuf.FieldOptions.OptionTargetType[message.targets[j]] : message.targets[j];
                    }
                    if (message.editionDefaults && message.editionDefaults.length) {
                        object.editionDefaults = [];
                        for (var j = 0; j < message.editionDefaults.length; ++j)
                            object.editionDefaults[j] = $root.google.protobuf.FieldOptions.EditionDefault.toObject(message.editionDefaults[j], options);
                    }
                    if (message.features != null && message.hasOwnProperty("features"))
                        object.features = $root.google.protobuf.FeatureSet.toObject(message.features, options);
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    if (message[".google.api.fieldBehavior"] && message[".google.api.fieldBehavior"].length) {
                        object[".google.api.fieldBehavior"] = [];
                        for (var j = 0; j < message[".google.api.fieldBehavior"].length; ++j)
                            object[".google.api.fieldBehavior"][j] = options.enums === String ? $root.google.api.FieldBehavior[message[".google.api.fieldBehavior"][j]] === undefined ? message[".google.api.fieldBehavior"][j] : $root.google.api.FieldBehavior[message[".google.api.fieldBehavior"][j]] : message[".google.api.fieldBehavior"][j];
                    }
                    if (message[".google.api.resourceReference"] != null && message.hasOwnProperty(".google.api.resourceReference"))
                        object[".google.api.resourceReference"] = $root.google.api.ResourceReference.toObject(message[".google.api.resourceReference"], options);
                    if (message[".google.api.fieldInfo"] != null && message.hasOwnProperty(".google.api.fieldInfo"))
                        object[".google.api.fieldInfo"] = $root.google.api.FieldInfo.toObject(message[".google.api.fieldInfo"], options);
                    return object;
                };
    
                /**
                 * Converts this FieldOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FieldOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for FieldOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                FieldOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.FieldOptions";
                };
    
                /**
                 * CType enum.
                 * @name google.protobuf.FieldOptions.CType
                 * @enum {number}
                 * @property {number} STRING=0 STRING value
                 * @property {number} CORD=1 CORD value
                 * @property {number} STRING_PIECE=2 STRING_PIECE value
                 */
                FieldOptions.CType = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "STRING"] = 0;
                    values[valuesById[1] = "CORD"] = 1;
                    values[valuesById[2] = "STRING_PIECE"] = 2;
                    return values;
                })();
    
                /**
                 * JSType enum.
                 * @name google.protobuf.FieldOptions.JSType
                 * @enum {number}
                 * @property {number} JS_NORMAL=0 JS_NORMAL value
                 * @property {number} JS_STRING=1 JS_STRING value
                 * @property {number} JS_NUMBER=2 JS_NUMBER value
                 */
                FieldOptions.JSType = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "JS_NORMAL"] = 0;
                    values[valuesById[1] = "JS_STRING"] = 1;
                    values[valuesById[2] = "JS_NUMBER"] = 2;
                    return values;
                })();
    
                /**
                 * OptionRetention enum.
                 * @name google.protobuf.FieldOptions.OptionRetention
                 * @enum {number}
                 * @property {number} RETENTION_UNKNOWN=0 RETENTION_UNKNOWN value
                 * @property {number} RETENTION_RUNTIME=1 RETENTION_RUNTIME value
                 * @property {number} RETENTION_SOURCE=2 RETENTION_SOURCE value
                 */
                FieldOptions.OptionRetention = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "RETENTION_UNKNOWN"] = 0;
                    values[valuesById[1] = "RETENTION_RUNTIME"] = 1;
                    values[valuesById[2] = "RETENTION_SOURCE"] = 2;
                    return values;
                })();
    
                /**
                 * OptionTargetType enum.
                 * @name google.protobuf.FieldOptions.OptionTargetType
                 * @enum {number}
                 * @property {number} TARGET_TYPE_UNKNOWN=0 TARGET_TYPE_UNKNOWN value
                 * @property {number} TARGET_TYPE_FILE=1 TARGET_TYPE_FILE value
                 * @property {number} TARGET_TYPE_EXTENSION_RANGE=2 TARGET_TYPE_EXTENSION_RANGE value
                 * @property {number} TARGET_TYPE_MESSAGE=3 TARGET_TYPE_MESSAGE value
                 * @property {number} TARGET_TYPE_FIELD=4 TARGET_TYPE_FIELD value
                 * @property {number} TARGET_TYPE_ONEOF=5 TARGET_TYPE_ONEOF value
                 * @property {number} TARGET_TYPE_ENUM=6 TARGET_TYPE_ENUM value
                 * @property {number} TARGET_TYPE_ENUM_ENTRY=7 TARGET_TYPE_ENUM_ENTRY value
                 * @property {number} TARGET_TYPE_SERVICE=8 TARGET_TYPE_SERVICE value
                 * @property {number} TARGET_TYPE_METHOD=9 TARGET_TYPE_METHOD value
                 */
                FieldOptions.OptionTargetType = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "TARGET_TYPE_UNKNOWN"] = 0;
                    values[valuesById[1] = "TARGET_TYPE_FILE"] = 1;
                    values[valuesById[2] = "TARGET_TYPE_EXTENSION_RANGE"] = 2;
                    values[valuesById[3] = "TARGET_TYPE_MESSAGE"] = 3;
                    values[valuesById[4] = "TARGET_TYPE_FIELD"] = 4;
                    values[valuesById[5] = "TARGET_TYPE_ONEOF"] = 5;
                    values[valuesById[6] = "TARGET_TYPE_ENUM"] = 6;
                    values[valuesById[7] = "TARGET_TYPE_ENUM_ENTRY"] = 7;
                    values[valuesById[8] = "TARGET_TYPE_SERVICE"] = 8;
                    values[valuesById[9] = "TARGET_TYPE_METHOD"] = 9;
                    return values;
                })();
    
                FieldOptions.EditionDefault = (function() {
    
                    /**
                     * Properties of an EditionDefault.
                     * @memberof google.protobuf.FieldOptions
                     * @interface IEditionDefault
                     * @property {google.protobuf.Edition|null} [edition] EditionDefault edition
                     * @property {string|null} [value] EditionDefault value
                     */
    
                    /**
                     * Constructs a new EditionDefault.
                     * @memberof google.protobuf.FieldOptions
                     * @classdesc Represents an EditionDefault.
                     * @implements IEditionDefault
                     * @constructor
                     * @param {google.protobuf.FieldOptions.IEditionDefault=} [properties] Properties to set
                     */
                    function EditionDefault(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * EditionDefault edition.
                     * @member {google.protobuf.Edition} edition
                     * @memberof google.protobuf.FieldOptions.EditionDefault
                     * @instance
                     */
                    EditionDefault.prototype.edition = 0;
    
                    /**
                     * EditionDefault value.
                     * @member {string} value
                     * @memberof google.protobuf.FieldOptions.EditionDefault
                     * @instance
                     */
                    EditionDefault.prototype.value = "";
    
                    /**
                     * Creates a new EditionDefault instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.FieldOptions.EditionDefault
                     * @static
                     * @param {google.protobuf.FieldOptions.IEditionDefault=} [properties] Properties to set
                     * @returns {google.protobuf.FieldOptions.EditionDefault} EditionDefault instance
                     */
                    EditionDefault.create = function create(properties) {
                        return new EditionDefault(properties);
                    };
    
                    /**
                     * Encodes the specified EditionDefault message. Does not implicitly {@link google.protobuf.FieldOptions.EditionDefault.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.FieldOptions.EditionDefault
                     * @static
                     * @param {google.protobuf.FieldOptions.IEditionDefault} message EditionDefault message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    EditionDefault.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.value);
                        if (message.edition != null && Object.hasOwnProperty.call(message, "edition"))
                            writer.uint32(/* id 3, wireType 0 =*/24).int32(message.edition);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified EditionDefault message, length delimited. Does not implicitly {@link google.protobuf.FieldOptions.EditionDefault.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.FieldOptions.EditionDefault
                     * @static
                     * @param {google.protobuf.FieldOptions.IEditionDefault} message EditionDefault message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    EditionDefault.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes an EditionDefault message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.FieldOptions.EditionDefault
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.FieldOptions.EditionDefault} EditionDefault
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    EditionDefault.decode = function decode(reader, length, error) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FieldOptions.EditionDefault();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            if (tag === error)
                                break;
                            switch (tag >>> 3) {
                            case 3: {
                                    message.edition = reader.int32();
                                    break;
                                }
                            case 2: {
                                    message.value = reader.string();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes an EditionDefault message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.FieldOptions.EditionDefault
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.FieldOptions.EditionDefault} EditionDefault
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    EditionDefault.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies an EditionDefault message.
                     * @function verify
                     * @memberof google.protobuf.FieldOptions.EditionDefault
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    EditionDefault.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.edition != null && message.hasOwnProperty("edition"))
                            switch (message.edition) {
                            default:
                                return "edition: enum value expected";
                            case 0:
                            case 998:
                            case 999:
                            case 1000:
                            case 1001:
                            case 1:
                            case 2:
                            case 99997:
                            case 99998:
                            case 99999:
                            case 2147483647:
                                break;
                            }
                        if (message.value != null && message.hasOwnProperty("value"))
                            if (!$util.isString(message.value))
                                return "value: string expected";
                        return null;
                    };
    
                    /**
                     * Creates an EditionDefault message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.FieldOptions.EditionDefault
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.FieldOptions.EditionDefault} EditionDefault
                     */
                    EditionDefault.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.FieldOptions.EditionDefault)
                            return object;
                        var message = new $root.google.protobuf.FieldOptions.EditionDefault();
                        switch (object.edition) {
                        default:
                            if (typeof object.edition === "number") {
                                message.edition = object.edition;
                                break;
                            }
                            break;
                        case "EDITION_UNKNOWN":
                        case 0:
                            message.edition = 0;
                            break;
                        case "EDITION_PROTO2":
                        case 998:
                            message.edition = 998;
                            break;
                        case "EDITION_PROTO3":
                        case 999:
                            message.edition = 999;
                            break;
                        case "EDITION_2023":
                        case 1000:
                            message.edition = 1000;
                            break;
                        case "EDITION_2024":
                        case 1001:
                            message.edition = 1001;
                            break;
                        case "EDITION_1_TEST_ONLY":
                        case 1:
                            message.edition = 1;
                            break;
                        case "EDITION_2_TEST_ONLY":
                        case 2:
                            message.edition = 2;
                            break;
                        case "EDITION_99997_TEST_ONLY":
                        case 99997:
                            message.edition = 99997;
                            break;
                        case "EDITION_99998_TEST_ONLY":
                        case 99998:
                            message.edition = 99998;
                            break;
                        case "EDITION_99999_TEST_ONLY":
                        case 99999:
                            message.edition = 99999;
                            break;
                        case "EDITION_MAX":
                        case 2147483647:
                            message.edition = 2147483647;
                            break;
                        }
                        if (object.value != null)
                            message.value = String(object.value);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from an EditionDefault message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.FieldOptions.EditionDefault
                     * @static
                     * @param {google.protobuf.FieldOptions.EditionDefault} message EditionDefault
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    EditionDefault.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.value = "";
                            object.edition = options.enums === String ? "EDITION_UNKNOWN" : 0;
                        }
                        if (message.value != null && message.hasOwnProperty("value"))
                            object.value = message.value;
                        if (message.edition != null && message.hasOwnProperty("edition"))
                            object.edition = options.enums === String ? $root.google.protobuf.Edition[message.edition] === undefined ? message.edition : $root.google.protobuf.Edition[message.edition] : message.edition;
                        return object;
                    };
    
                    /**
                     * Converts this EditionDefault to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.FieldOptions.EditionDefault
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    EditionDefault.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for EditionDefault
                     * @function getTypeUrl
                     * @memberof google.protobuf.FieldOptions.EditionDefault
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    EditionDefault.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.protobuf.FieldOptions.EditionDefault";
                    };
    
                    return EditionDefault;
                })();
    
                return FieldOptions;
            })();
    
            protobuf.OneofOptions = (function() {
    
                /**
                 * Properties of an OneofOptions.
                 * @memberof google.protobuf
                 * @interface IOneofOptions
                 * @property {google.protobuf.IFeatureSet|null} [features] OneofOptions features
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] OneofOptions uninterpretedOption
                 */
    
                /**
                 * Constructs a new OneofOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents an OneofOptions.
                 * @implements IOneofOptions
                 * @constructor
                 * @param {google.protobuf.IOneofOptions=} [properties] Properties to set
                 */
                function OneofOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * OneofOptions features.
                 * @member {google.protobuf.IFeatureSet|null|undefined} features
                 * @memberof google.protobuf.OneofOptions
                 * @instance
                 */
                OneofOptions.prototype.features = null;
    
                /**
                 * OneofOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.OneofOptions
                 * @instance
                 */
                OneofOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * Creates a new OneofOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {google.protobuf.IOneofOptions=} [properties] Properties to set
                 * @returns {google.protobuf.OneofOptions} OneofOptions instance
                 */
                OneofOptions.create = function create(properties) {
                    return new OneofOptions(properties);
                };
    
                /**
                 * Encodes the specified OneofOptions message. Does not implicitly {@link google.protobuf.OneofOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {google.protobuf.IOneofOptions} message OneofOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                OneofOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.features != null && Object.hasOwnProperty.call(message, "features"))
                        $root.google.protobuf.FeatureSet.encode(message.features, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified OneofOptions message, length delimited. Does not implicitly {@link google.protobuf.OneofOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {google.protobuf.IOneofOptions} message OneofOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                OneofOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an OneofOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.OneofOptions} OneofOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                OneofOptions.decode = function decode(reader, length, error) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.OneofOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        if (tag === error)
                            break;
                        switch (tag >>> 3) {
                        case 1: {
                                message.features = $root.google.protobuf.FeatureSet.decode(reader, reader.uint32());
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an OneofOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.OneofOptions} OneofOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                OneofOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an OneofOptions message.
                 * @function verify
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                OneofOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.features != null && message.hasOwnProperty("features")) {
                        var error = $root.google.protobuf.FeatureSet.verify(message.features);
                        if (error)
                            return "features." + error;
                    }
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates an OneofOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.OneofOptions} OneofOptions
                 */
                OneofOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.OneofOptions)
                        return object;
                    var message = new $root.google.protobuf.OneofOptions();
                    if (object.features != null) {
                        if (typeof object.features !== "object")
                            throw TypeError(".google.protobuf.OneofOptions.features: object expected");
                        message.features = $root.google.protobuf.FeatureSet.fromObject(object.features);
                    }
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.OneofOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.OneofOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an OneofOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {google.protobuf.OneofOptions} message OneofOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                OneofOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (options.defaults)
                        object.features = null;
                    if (message.features != null && message.hasOwnProperty("features"))
                        object.features = $root.google.protobuf.FeatureSet.toObject(message.features, options);
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this OneofOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.OneofOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                OneofOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for OneofOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                OneofOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.OneofOptions";
                };
    
                return OneofOptions;
            })();
    
            protobuf.EnumOptions = (function() {
    
                /**
                 * Properties of an EnumOptions.
                 * @memberof google.protobuf
                 * @interface IEnumOptions
                 * @property {boolean|null} [allowAlias] EnumOptions allowAlias
                 * @property {boolean|null} [deprecated] EnumOptions deprecated
                 * @property {boolean|null} [deprecatedLegacyJsonFieldConflicts] EnumOptions deprecatedLegacyJsonFieldConflicts
                 * @property {google.protobuf.IFeatureSet|null} [features] EnumOptions features
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] EnumOptions uninterpretedOption
                 */
    
                /**
                 * Constructs a new EnumOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents an EnumOptions.
                 * @implements IEnumOptions
                 * @constructor
                 * @param {google.protobuf.IEnumOptions=} [properties] Properties to set
                 */
                function EnumOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * EnumOptions allowAlias.
                 * @member {boolean} allowAlias
                 * @memberof google.protobuf.EnumOptions
                 * @instance
                 */
                EnumOptions.prototype.allowAlias = false;
    
                /**
                 * EnumOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.EnumOptions
                 * @instance
                 */
                EnumOptions.prototype.deprecated = false;
    
                /**
                 * EnumOptions deprecatedLegacyJsonFieldConflicts.
                 * @member {boolean} deprecatedLegacyJsonFieldConflicts
                 * @memberof google.protobuf.EnumOptions
                 * @instance
                 */
                EnumOptions.prototype.deprecatedLegacyJsonFieldConflicts = false;
    
                /**
                 * EnumOptions features.
                 * @member {google.protobuf.IFeatureSet|null|undefined} features
                 * @memberof google.protobuf.EnumOptions
                 * @instance
                 */
                EnumOptions.prototype.features = null;
    
                /**
                 * EnumOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.EnumOptions
                 * @instance
                 */
                EnumOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * Creates a new EnumOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {google.protobuf.IEnumOptions=} [properties] Properties to set
                 * @returns {google.protobuf.EnumOptions} EnumOptions instance
                 */
                EnumOptions.create = function create(properties) {
                    return new EnumOptions(properties);
                };
    
                /**
                 * Encodes the specified EnumOptions message. Does not implicitly {@link google.protobuf.EnumOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {google.protobuf.IEnumOptions} message EnumOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.allowAlias != null && Object.hasOwnProperty.call(message, "allowAlias"))
                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.allowAlias);
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 3, wireType 0 =*/24).bool(message.deprecated);
                    if (message.deprecatedLegacyJsonFieldConflicts != null && Object.hasOwnProperty.call(message, "deprecatedLegacyJsonFieldConflicts"))
                        writer.uint32(/* id 6, wireType 0 =*/48).bool(message.deprecatedLegacyJsonFieldConflicts);
                    if (message.features != null && Object.hasOwnProperty.call(message, "features"))
                        $root.google.protobuf.FeatureSet.encode(message.features, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified EnumOptions message, length delimited. Does not implicitly {@link google.protobuf.EnumOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {google.protobuf.IEnumOptions} message EnumOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an EnumOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.EnumOptions} EnumOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumOptions.decode = function decode(reader, length, error) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        if (tag === error)
                            break;
                        switch (tag >>> 3) {
                        case 2: {
                                message.allowAlias = reader.bool();
                                break;
                            }
                        case 3: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 6: {
                                message.deprecatedLegacyJsonFieldConflicts = reader.bool();
                                break;
                            }
                        case 7: {
                                message.features = $root.google.protobuf.FeatureSet.decode(reader, reader.uint32());
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an EnumOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.EnumOptions} EnumOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an EnumOptions message.
                 * @function verify
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                EnumOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.allowAlias != null && message.hasOwnProperty("allowAlias"))
                        if (typeof message.allowAlias !== "boolean")
                            return "allowAlias: boolean expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.deprecatedLegacyJsonFieldConflicts != null && message.hasOwnProperty("deprecatedLegacyJsonFieldConflicts"))
                        if (typeof message.deprecatedLegacyJsonFieldConflicts !== "boolean")
                            return "deprecatedLegacyJsonFieldConflicts: boolean expected";
                    if (message.features != null && message.hasOwnProperty("features")) {
                        var error = $root.google.protobuf.FeatureSet.verify(message.features);
                        if (error)
                            return "features." + error;
                    }
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates an EnumOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.EnumOptions} EnumOptions
                 */
                EnumOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.EnumOptions)
                        return object;
                    var message = new $root.google.protobuf.EnumOptions();
                    if (object.allowAlias != null)
                        message.allowAlias = Boolean(object.allowAlias);
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.deprecatedLegacyJsonFieldConflicts != null)
                        message.deprecatedLegacyJsonFieldConflicts = Boolean(object.deprecatedLegacyJsonFieldConflicts);
                    if (object.features != null) {
                        if (typeof object.features !== "object")
                            throw TypeError(".google.protobuf.EnumOptions.features: object expected");
                        message.features = $root.google.protobuf.FeatureSet.fromObject(object.features);
                    }
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.EnumOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.EnumOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an EnumOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {google.protobuf.EnumOptions} message EnumOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                EnumOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (options.defaults) {
                        object.allowAlias = false;
                        object.deprecated = false;
                        object.deprecatedLegacyJsonFieldConflicts = false;
                        object.features = null;
                    }
                    if (message.allowAlias != null && message.hasOwnProperty("allowAlias"))
                        object.allowAlias = message.allowAlias;
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.deprecatedLegacyJsonFieldConflicts != null && message.hasOwnProperty("deprecatedLegacyJsonFieldConflicts"))
                        object.deprecatedLegacyJsonFieldConflicts = message.deprecatedLegacyJsonFieldConflicts;
                    if (message.features != null && message.hasOwnProperty("features"))
                        object.features = $root.google.protobuf.FeatureSet.toObject(message.features, options);
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this EnumOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.EnumOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                EnumOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for EnumOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                EnumOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.EnumOptions";
                };
    
                return EnumOptions;
            })();
    
            protobuf.EnumValueOptions = (function() {
    
                /**
                 * Properties of an EnumValueOptions.
                 * @memberof google.protobuf
                 * @interface IEnumValueOptions
                 * @property {boolean|null} [deprecated] EnumValueOptions deprecated
                 * @property {google.protobuf.IFeatureSet|null} [features] EnumValueOptions features
                 * @property {boolean|null} [debugRedact] EnumValueOptions debugRedact
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] EnumValueOptions uninterpretedOption
                 */
    
                /**
                 * Constructs a new EnumValueOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents an EnumValueOptions.
                 * @implements IEnumValueOptions
                 * @constructor
                 * @param {google.protobuf.IEnumValueOptions=} [properties] Properties to set
                 */
                function EnumValueOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * EnumValueOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.EnumValueOptions
                 * @instance
                 */
                EnumValueOptions.prototype.deprecated = false;
    
                /**
                 * EnumValueOptions features.
                 * @member {google.protobuf.IFeatureSet|null|undefined} features
                 * @memberof google.protobuf.EnumValueOptions
                 * @instance
                 */
                EnumValueOptions.prototype.features = null;
    
                /**
                 * EnumValueOptions debugRedact.
                 * @member {boolean} debugRedact
                 * @memberof google.protobuf.EnumValueOptions
                 * @instance
                 */
                EnumValueOptions.prototype.debugRedact = false;
    
                /**
                 * EnumValueOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.EnumValueOptions
                 * @instance
                 */
                EnumValueOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * Creates a new EnumValueOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {google.protobuf.IEnumValueOptions=} [properties] Properties to set
                 * @returns {google.protobuf.EnumValueOptions} EnumValueOptions instance
                 */
                EnumValueOptions.create = function create(properties) {
                    return new EnumValueOptions(properties);
                };
    
                /**
                 * Encodes the specified EnumValueOptions message. Does not implicitly {@link google.protobuf.EnumValueOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {google.protobuf.IEnumValueOptions} message EnumValueOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumValueOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 1, wireType 0 =*/8).bool(message.deprecated);
                    if (message.features != null && Object.hasOwnProperty.call(message, "features"))
                        $root.google.protobuf.FeatureSet.encode(message.features, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.debugRedact != null && Object.hasOwnProperty.call(message, "debugRedact"))
                        writer.uint32(/* id 3, wireType 0 =*/24).bool(message.debugRedact);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified EnumValueOptions message, length delimited. Does not implicitly {@link google.protobuf.EnumValueOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {google.protobuf.IEnumValueOptions} message EnumValueOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumValueOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an EnumValueOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.EnumValueOptions} EnumValueOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumValueOptions.decode = function decode(reader, length, error) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumValueOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        if (tag === error)
                            break;
                        switch (tag >>> 3) {
                        case 1: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 2: {
                                message.features = $root.google.protobuf.FeatureSet.decode(reader, reader.uint32());
                                break;
                            }
                        case 3: {
                                message.debugRedact = reader.bool();
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an EnumValueOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.EnumValueOptions} EnumValueOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumValueOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an EnumValueOptions message.
                 * @function verify
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                EnumValueOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.features != null && message.hasOwnProperty("features")) {
                        var error = $root.google.protobuf.FeatureSet.verify(message.features);
                        if (error)
                            return "features." + error;
                    }
                    if (message.debugRedact != null && message.hasOwnProperty("debugRedact"))
                        if (typeof message.debugRedact !== "boolean")
                            return "debugRedact: boolean expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates an EnumValueOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.EnumValueOptions} EnumValueOptions
                 */
                EnumValueOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.EnumValueOptions)
                        return object;
                    var message = new $root.google.protobuf.EnumValueOptions();
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.features != null) {
                        if (typeof object.features !== "object")
                            throw TypeError(".google.protobuf.EnumValueOptions.features: object expected");
                        message.features = $root.google.protobuf.FeatureSet.fromObject(object.features);
                    }
                    if (object.debugRedact != null)
                        message.debugRedact = Boolean(object.debugRedact);
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.EnumValueOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.EnumValueOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an EnumValueOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {google.protobuf.EnumValueOptions} message EnumValueOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                EnumValueOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (options.defaults) {
                        object.deprecated = false;
                        object.features = null;
                        object.debugRedact = false;
                    }
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.features != null && message.hasOwnProperty("features"))
                        object.features = $root.google.protobuf.FeatureSet.toObject(message.features, options);
                    if (message.debugRedact != null && message.hasOwnProperty("debugRedact"))
                        object.debugRedact = message.debugRedact;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this EnumValueOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.EnumValueOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                EnumValueOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for EnumValueOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                EnumValueOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.EnumValueOptions";
                };
    
                return EnumValueOptions;
            })();
    
            protobuf.ServiceOptions = (function() {
    
                /**
                 * Properties of a ServiceOptions.
                 * @memberof google.protobuf
                 * @interface IServiceOptions
                 * @property {google.protobuf.IFeatureSet|null} [features] ServiceOptions features
                 * @property {boolean|null} [deprecated] ServiceOptions deprecated
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] ServiceOptions uninterpretedOption
                 * @property {string|null} [".google.api.defaultHost"] ServiceOptions .google.api.defaultHost
                 * @property {string|null} [".google.api.oauthScopes"] ServiceOptions .google.api.oauthScopes
                 * @property {string|null} [".google.api.apiVersion"] ServiceOptions .google.api.apiVersion
                 */
    
                /**
                 * Constructs a new ServiceOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents a ServiceOptions.
                 * @implements IServiceOptions
                 * @constructor
                 * @param {google.protobuf.IServiceOptions=} [properties] Properties to set
                 */
                function ServiceOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ServiceOptions features.
                 * @member {google.protobuf.IFeatureSet|null|undefined} features
                 * @memberof google.protobuf.ServiceOptions
                 * @instance
                 */
                ServiceOptions.prototype.features = null;
    
                /**
                 * ServiceOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.ServiceOptions
                 * @instance
                 */
                ServiceOptions.prototype.deprecated = false;
    
                /**
                 * ServiceOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.ServiceOptions
                 * @instance
                 */
                ServiceOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * ServiceOptions .google.api.defaultHost.
                 * @member {string} .google.api.defaultHost
                 * @memberof google.protobuf.ServiceOptions
                 * @instance
                 */
                ServiceOptions.prototype[".google.api.defaultHost"] = "";
    
                /**
                 * ServiceOptions .google.api.oauthScopes.
                 * @member {string} .google.api.oauthScopes
                 * @memberof google.protobuf.ServiceOptions
                 * @instance
                 */
                ServiceOptions.prototype[".google.api.oauthScopes"] = "";
    
                /**
                 * ServiceOptions .google.api.apiVersion.
                 * @member {string} .google.api.apiVersion
                 * @memberof google.protobuf.ServiceOptions
                 * @instance
                 */
                ServiceOptions.prototype[".google.api.apiVersion"] = "";
    
                /**
                 * Creates a new ServiceOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {google.protobuf.IServiceOptions=} [properties] Properties to set
                 * @returns {google.protobuf.ServiceOptions} ServiceOptions instance
                 */
                ServiceOptions.create = function create(properties) {
                    return new ServiceOptions(properties);
                };
    
                /**
                 * Encodes the specified ServiceOptions message. Does not implicitly {@link google.protobuf.ServiceOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {google.protobuf.IServiceOptions} message ServiceOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ServiceOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 33, wireType 0 =*/264).bool(message.deprecated);
                    if (message.features != null && Object.hasOwnProperty.call(message, "features"))
                        $root.google.protobuf.FeatureSet.encode(message.features, writer.uint32(/* id 34, wireType 2 =*/274).fork()).ldelim();
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    if (message[".google.api.defaultHost"] != null && Object.hasOwnProperty.call(message, ".google.api.defaultHost"))
                        writer.uint32(/* id 1049, wireType 2 =*/8394).string(message[".google.api.defaultHost"]);
                    if (message[".google.api.oauthScopes"] != null && Object.hasOwnProperty.call(message, ".google.api.oauthScopes"))
                        writer.uint32(/* id 1050, wireType 2 =*/8402).string(message[".google.api.oauthScopes"]);
                    if (message[".google.api.apiVersion"] != null && Object.hasOwnProperty.call(message, ".google.api.apiVersion"))
                        writer.uint32(/* id 525000001, wireType 2 =*/4200000010).string(message[".google.api.apiVersion"]);
                    return writer;
                };
    
                /**
                 * Encodes the specified ServiceOptions message, length delimited. Does not implicitly {@link google.protobuf.ServiceOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {google.protobuf.IServiceOptions} message ServiceOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ServiceOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a ServiceOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.ServiceOptions} ServiceOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ServiceOptions.decode = function decode(reader, length, error) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.ServiceOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        if (tag === error)
                            break;
                        switch (tag >>> 3) {
                        case 34: {
                                message.features = $root.google.protobuf.FeatureSet.decode(reader, reader.uint32());
                                break;
                            }
                        case 33: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        case 1049: {
                                message[".google.api.defaultHost"] = reader.string();
                                break;
                            }
                        case 1050: {
                                message[".google.api.oauthScopes"] = reader.string();
                                break;
                            }
                        case 525000001: {
                                message[".google.api.apiVersion"] = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a ServiceOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.ServiceOptions} ServiceOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ServiceOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a ServiceOptions message.
                 * @function verify
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ServiceOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.features != null && message.hasOwnProperty("features")) {
                        var error = $root.google.protobuf.FeatureSet.verify(message.features);
                        if (error)
                            return "features." + error;
                    }
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    if (message[".google.api.defaultHost"] != null && message.hasOwnProperty(".google.api.defaultHost"))
                        if (!$util.isString(message[".google.api.defaultHost"]))
                            return ".google.api.defaultHost: string expected";
                    if (message[".google.api.oauthScopes"] != null && message.hasOwnProperty(".google.api.oauthScopes"))
                        if (!$util.isString(message[".google.api.oauthScopes"]))
                            return ".google.api.oauthScopes: string expected";
                    if (message[".google.api.apiVersion"] != null && message.hasOwnProperty(".google.api.apiVersion"))
                        if (!$util.isString(message[".google.api.apiVersion"]))
                            return ".google.api.apiVersion: string expected";
                    return null;
                };
    
                /**
                 * Creates a ServiceOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.ServiceOptions} ServiceOptions
                 */
                ServiceOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.ServiceOptions)
                        return object;
                    var message = new $root.google.protobuf.ServiceOptions();
                    if (object.features != null) {
                        if (typeof object.features !== "object")
                            throw TypeError(".google.protobuf.ServiceOptions.features: object expected");
                        message.features = $root.google.protobuf.FeatureSet.fromObject(object.features);
                    }
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.ServiceOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.ServiceOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    if (object[".google.api.defaultHost"] != null)
                        message[".google.api.defaultHost"] = String(object[".google.api.defaultHost"]);
                    if (object[".google.api.oauthScopes"] != null)
                        message[".google.api.oauthScopes"] = String(object[".google.api.oauthScopes"]);
                    if (object[".google.api.apiVersion"] != null)
                        message[".google.api.apiVersion"] = String(object[".google.api.apiVersion"]);
                    return message;
                };
    
                /**
                 * Creates a plain object from a ServiceOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {google.protobuf.ServiceOptions} message ServiceOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ServiceOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (options.defaults) {
                        object.deprecated = false;
                        object.features = null;
                        object[".google.api.defaultHost"] = "";
                        object[".google.api.oauthScopes"] = "";
                        object[".google.api.apiVersion"] = "";
                    }
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.features != null && message.hasOwnProperty("features"))
                        object.features = $root.google.protobuf.FeatureSet.toObject(message.features, options);
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    if (message[".google.api.defaultHost"] != null && message.hasOwnProperty(".google.api.defaultHost"))
                        object[".google.api.defaultHost"] = message[".google.api.defaultHost"];
                    if (message[".google.api.oauthScopes"] != null && message.hasOwnProperty(".google.api.oauthScopes"))
                        object[".google.api.oauthScopes"] = message[".google.api.oauthScopes"];
                    if (message[".google.api.apiVersion"] != null && message.hasOwnProperty(".google.api.apiVersion"))
                        object[".google.api.apiVersion"] = message[".google.api.apiVersion"];
                    return object;
                };
    
                /**
                 * Converts this ServiceOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.ServiceOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ServiceOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for ServiceOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                ServiceOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.ServiceOptions";
                };
    
                return ServiceOptions;
            })();
    
            protobuf.MethodOptions = (function() {
    
                /**
                 * Properties of a MethodOptions.
                 * @memberof google.protobuf
                 * @interface IMethodOptions
                 * @property {boolean|null} [deprecated] MethodOptions deprecated
                 * @property {google.protobuf.MethodOptions.IdempotencyLevel|null} [idempotencyLevel] MethodOptions idempotencyLevel
                 * @property {google.protobuf.IFeatureSet|null} [features] MethodOptions features
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] MethodOptions uninterpretedOption
                 * @property {google.api.IHttpRule|null} [".google.api.http"] MethodOptions .google.api.http
                 * @property {Array.<string>|null} [".google.api.methodSignature"] MethodOptions .google.api.methodSignature
                 * @property {google.longrunning.IOperationInfo|null} [".google.longrunning.operationInfo"] MethodOptions .google.longrunning.operationInfo
                 */
    
                /**
                 * Constructs a new MethodOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents a MethodOptions.
                 * @implements IMethodOptions
                 * @constructor
                 * @param {google.protobuf.IMethodOptions=} [properties] Properties to set
                 */
                function MethodOptions(properties) {
                    this.uninterpretedOption = [];
                    this[".google.api.methodSignature"] = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * MethodOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 */
                MethodOptions.prototype.deprecated = false;
    
                /**
                 * MethodOptions idempotencyLevel.
                 * @member {google.protobuf.MethodOptions.IdempotencyLevel} idempotencyLevel
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 */
                MethodOptions.prototype.idempotencyLevel = 0;
    
                /**
                 * MethodOptions features.
                 * @member {google.protobuf.IFeatureSet|null|undefined} features
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 */
                MethodOptions.prototype.features = null;
    
                /**
                 * MethodOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 */
                MethodOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * MethodOptions .google.api.http.
                 * @member {google.api.IHttpRule|null|undefined} .google.api.http
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 */
                MethodOptions.prototype[".google.api.http"] = null;
    
                /**
                 * MethodOptions .google.api.methodSignature.
                 * @member {Array.<string>} .google.api.methodSignature
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 */
                MethodOptions.prototype[".google.api.methodSignature"] = $util.emptyArray;
    
                /**
                 * MethodOptions .google.longrunning.operationInfo.
                 * @member {google.longrunning.IOperationInfo|null|undefined} .google.longrunning.operationInfo
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 */
                MethodOptions.prototype[".google.longrunning.operationInfo"] = null;
    
                /**
                 * Creates a new MethodOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {google.protobuf.IMethodOptions=} [properties] Properties to set
                 * @returns {google.protobuf.MethodOptions} MethodOptions instance
                 */
                MethodOptions.create = function create(properties) {
                    return new MethodOptions(properties);
                };
    
                /**
                 * Encodes the specified MethodOptions message. Does not implicitly {@link google.protobuf.MethodOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {google.protobuf.IMethodOptions} message MethodOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MethodOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 33, wireType 0 =*/264).bool(message.deprecated);
                    if (message.idempotencyLevel != null && Object.hasOwnProperty.call(message, "idempotencyLevel"))
                        writer.uint32(/* id 34, wireType 0 =*/272).int32(message.idempotencyLevel);
                    if (message.features != null && Object.hasOwnProperty.call(message, "features"))
                        $root.google.protobuf.FeatureSet.encode(message.features, writer.uint32(/* id 35, wireType 2 =*/282).fork()).ldelim();
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    if (message[".google.longrunning.operationInfo"] != null && Object.hasOwnProperty.call(message, ".google.longrunning.operationInfo"))
                        $root.google.longrunning.OperationInfo.encode(message[".google.longrunning.operationInfo"], writer.uint32(/* id 1049, wireType 2 =*/8394).fork()).ldelim();
                    if (message[".google.api.methodSignature"] != null && message[".google.api.methodSignature"].length)
                        for (var i = 0; i < message[".google.api.methodSignature"].length; ++i)
                            writer.uint32(/* id 1051, wireType 2 =*/8410).string(message[".google.api.methodSignature"][i]);
                    if (message[".google.api.http"] != null && Object.hasOwnProperty.call(message, ".google.api.http"))
                        $root.google.api.HttpRule.encode(message[".google.api.http"], writer.uint32(/* id 72295728, wireType 2 =*/578365826).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified MethodOptions message, length delimited. Does not implicitly {@link google.protobuf.MethodOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {google.protobuf.IMethodOptions} message MethodOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MethodOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a MethodOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.MethodOptions} MethodOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MethodOptions.decode = function decode(reader, length, error) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.MethodOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        if (tag === error)
                            break;
                        switch (tag >>> 3) {
                        case 33: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 34: {
                                message.idempotencyLevel = reader.int32();
                                break;
                            }
                        case 35: {
                                message.features = $root.google.protobuf.FeatureSet.decode(reader, reader.uint32());
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        case 72295728: {
                                message[".google.api.http"] = $root.google.api.HttpRule.decode(reader, reader.uint32());
                                break;
                            }
                        case 1051: {
                                if (!(message[".google.api.methodSignature"] && message[".google.api.methodSignature"].length))
                                    message[".google.api.methodSignature"] = [];
                                message[".google.api.methodSignature"].push(reader.string());
                                break;
                            }
                        case 1049: {
                                message[".google.longrunning.operationInfo"] = $root.google.longrunning.OperationInfo.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a MethodOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.MethodOptions} MethodOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MethodOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a MethodOptions message.
                 * @function verify
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                MethodOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.idempotencyLevel != null && message.hasOwnProperty("idempotencyLevel"))
                        switch (message.idempotencyLevel) {
                        default:
                            return "idempotencyLevel: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                            break;
                        }
                    if (message.features != null && message.hasOwnProperty("features")) {
                        var error = $root.google.protobuf.FeatureSet.verify(message.features);
                        if (error)
                            return "features." + error;
                    }
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    if (message[".google.api.http"] != null && message.hasOwnProperty(".google.api.http")) {
                        var error = $root.google.api.HttpRule.verify(message[".google.api.http"]);
                        if (error)
                            return ".google.api.http." + error;
                    }
                    if (message[".google.api.methodSignature"] != null && message.hasOwnProperty(".google.api.methodSignature")) {
                        if (!Array.isArray(message[".google.api.methodSignature"]))
                            return ".google.api.methodSignature: array expected";
                        for (var i = 0; i < message[".google.api.methodSignature"].length; ++i)
                            if (!$util.isString(message[".google.api.methodSignature"][i]))
                                return ".google.api.methodSignature: string[] expected";
                    }
                    if (message[".google.longrunning.operationInfo"] != null && message.hasOwnProperty(".google.longrunning.operationInfo")) {
                        var error = $root.google.longrunning.OperationInfo.verify(message[".google.longrunning.operationInfo"]);
                        if (error)
                            return ".google.longrunning.operationInfo." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a MethodOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.MethodOptions} MethodOptions
                 */
                MethodOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.MethodOptions)
                        return object;
                    var message = new $root.google.protobuf.MethodOptions();
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    switch (object.idempotencyLevel) {
                    default:
                        if (typeof object.idempotencyLevel === "number") {
                            message.idempotencyLevel = object.idempotencyLevel;
                            break;
                        }
                        break;
                    case "IDEMPOTENCY_UNKNOWN":
                    case 0:
                        message.idempotencyLevel = 0;
                        break;
                    case "NO_SIDE_EFFECTS":
                    case 1:
                        message.idempotencyLevel = 1;
                        break;
                    case "IDEMPOTENT":
                    case 2:
                        message.idempotencyLevel = 2;
                        break;
                    }
                    if (object.features != null) {
                        if (typeof object.features !== "object")
                            throw TypeError(".google.protobuf.MethodOptions.features: object expected");
                        message.features = $root.google.protobuf.FeatureSet.fromObject(object.features);
                    }
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.MethodOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.MethodOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    if (object[".google.api.http"] != null) {
                        if (typeof object[".google.api.http"] !== "object")
                            throw TypeError(".google.protobuf.MethodOptions..google.api.http: object expected");
                        message[".google.api.http"] = $root.google.api.HttpRule.fromObject(object[".google.api.http"]);
                    }
                    if (object[".google.api.methodSignature"]) {
                        if (!Array.isArray(object[".google.api.methodSignature"]))
                            throw TypeError(".google.protobuf.MethodOptions..google.api.methodSignature: array expected");
                        message[".google.api.methodSignature"] = [];
                        for (var i = 0; i < object[".google.api.methodSignature"].length; ++i)
                            message[".google.api.methodSignature"][i] = String(object[".google.api.methodSignature"][i]);
                    }
                    if (object[".google.longrunning.operationInfo"] != null) {
                        if (typeof object[".google.longrunning.operationInfo"] !== "object")
                            throw TypeError(".google.protobuf.MethodOptions..google.longrunning.operationInfo: object expected");
                        message[".google.longrunning.operationInfo"] = $root.google.longrunning.OperationInfo.fromObject(object[".google.longrunning.operationInfo"]);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a MethodOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {google.protobuf.MethodOptions} message MethodOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                MethodOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.uninterpretedOption = [];
                        object[".google.api.methodSignature"] = [];
                    }
                    if (options.defaults) {
                        object.deprecated = false;
                        object.idempotencyLevel = options.enums === String ? "IDEMPOTENCY_UNKNOWN" : 0;
                        object.features = null;
                        object[".google.longrunning.operationInfo"] = null;
                        object[".google.api.http"] = null;
                    }
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.idempotencyLevel != null && message.hasOwnProperty("idempotencyLevel"))
                        object.idempotencyLevel = options.enums === String ? $root.google.protobuf.MethodOptions.IdempotencyLevel[message.idempotencyLevel] === undefined ? message.idempotencyLevel : $root.google.protobuf.MethodOptions.IdempotencyLevel[message.idempotencyLevel] : message.idempotencyLevel;
                    if (message.features != null && message.hasOwnProperty("features"))
                        object.features = $root.google.protobuf.FeatureSet.toObject(message.features, options);
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    if (message[".google.longrunning.operationInfo"] != null && message.hasOwnProperty(".google.longrunning.operationInfo"))
                        object[".google.longrunning.operationInfo"] = $root.google.longrunning.OperationInfo.toObject(message[".google.longrunning.operationInfo"], options);
                    if (message[".google.api.methodSignature"] && message[".google.api.methodSignature"].length) {
                        object[".google.api.methodSignature"] = [];
                        for (var j = 0; j < message[".google.api.methodSignature"].length; ++j)
                            object[".google.api.methodSignature"][j] = message[".google.api.methodSignature"][j];
                    }
                    if (message[".google.api.http"] != null && message.hasOwnProperty(".google.api.http"))
                        object[".google.api.http"] = $root.google.api.HttpRule.toObject(message[".google.api.http"], options);
                    return object;
                };
    
                /**
                 * Converts this MethodOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                MethodOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for MethodOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                MethodOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.MethodOptions";
                };
    
                /**
                 * IdempotencyLevel enum.
                 * @name google.protobuf.MethodOptions.IdempotencyLevel
                 * @enum {number}
                 * @property {number} IDEMPOTENCY_UNKNOWN=0 IDEMPOTENCY_UNKNOWN value
                 * @property {number} NO_SIDE_EFFECTS=1 NO_SIDE_EFFECTS value
                 * @property {number} IDEMPOTENT=2 IDEMPOTENT value
                 */
                MethodOptions.IdempotencyLevel = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "IDEMPOTENCY_UNKNOWN"] = 0;
                    values[valuesById[1] = "NO_SIDE_EFFECTS"] = 1;
                    values[valuesById[2] = "IDEMPOTENT"] = 2;
                    return values;
                })();
    
                return MethodOptions;
            })();
    
            protobuf.UninterpretedOption = (function() {
    
                /**
                 * Properties of an UninterpretedOption.
                 * @memberof google.protobuf
                 * @interface IUninterpretedOption
                 * @property {Array.<google.protobuf.UninterpretedOption.INamePart>|null} [name] UninterpretedOption name
                 * @property {string|null} [identifierValue] UninterpretedOption identifierValue
                 * @property {number|Long|null} [positiveIntValue] UninterpretedOption positiveIntValue
                 * @property {number|Long|null} [negativeIntValue] UninterpretedOption negativeIntValue
                 * @property {number|null} [doubleValue] UninterpretedOption doubleValue
                 * @property {Uint8Array|null} [stringValue] UninterpretedOption stringValue
                 * @property {string|null} [aggregateValue] UninterpretedOption aggregateValue
                 */
    
                /**
                 * Constructs a new UninterpretedOption.
                 * @memberof google.protobuf
                 * @classdesc Represents an UninterpretedOption.
                 * @implements IUninterpretedOption
                 * @constructor
                 * @param {google.protobuf.IUninterpretedOption=} [properties] Properties to set
                 */
                function UninterpretedOption(properties) {
                    this.name = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * UninterpretedOption name.
                 * @member {Array.<google.protobuf.UninterpretedOption.INamePart>} name
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.name = $util.emptyArray;
    
                /**
                 * UninterpretedOption identifierValue.
                 * @member {string} identifierValue
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.identifierValue = "";
    
                /**
                 * UninterpretedOption positiveIntValue.
                 * @member {number|Long} positiveIntValue
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.positiveIntValue = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
                /**
                 * UninterpretedOption negativeIntValue.
                 * @member {number|Long} negativeIntValue
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.negativeIntValue = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                /**
                 * UninterpretedOption doubleValue.
                 * @member {number} doubleValue
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.doubleValue = 0;
    
                /**
                 * UninterpretedOption stringValue.
                 * @member {Uint8Array} stringValue
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.stringValue = $util.newBuffer([]);
    
                /**
                 * UninterpretedOption aggregateValue.
                 * @member {string} aggregateValue
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.aggregateValue = "";
    
                /**
                 * Creates a new UninterpretedOption instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {google.protobuf.IUninterpretedOption=} [properties] Properties to set
                 * @returns {google.protobuf.UninterpretedOption} UninterpretedOption instance
                 */
                UninterpretedOption.create = function create(properties) {
                    return new UninterpretedOption(properties);
                };
    
                /**
                 * Encodes the specified UninterpretedOption message. Does not implicitly {@link google.protobuf.UninterpretedOption.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {google.protobuf.IUninterpretedOption} message UninterpretedOption message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                UninterpretedOption.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && message.name.length)
                        for (var i = 0; i < message.name.length; ++i)
                            $root.google.protobuf.UninterpretedOption.NamePart.encode(message.name[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.identifierValue != null && Object.hasOwnProperty.call(message, "identifierValue"))
                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.identifierValue);
                    if (message.positiveIntValue != null && Object.hasOwnProperty.call(message, "positiveIntValue"))
                        writer.uint32(/* id 4, wireType 0 =*/32).uint64(message.positiveIntValue);
                    if (message.negativeIntValue != null && Object.hasOwnProperty.call(message, "negativeIntValue"))
                        writer.uint32(/* id 5, wireType 0 =*/40).int64(message.negativeIntValue);
                    if (message.doubleValue != null && Object.hasOwnProperty.call(message, "doubleValue"))
                        writer.uint32(/* id 6, wireType 1 =*/49).double(message.doubleValue);
                    if (message.stringValue != null && Object.hasOwnProperty.call(message, "stringValue"))
                        writer.uint32(/* id 7, wireType 2 =*/58).bytes(message.stringValue);
                    if (message.aggregateValue != null && Object.hasOwnProperty.call(message, "aggregateValue"))
                        writer.uint32(/* id 8, wireType 2 =*/66).string(message.aggregateValue);
                    return writer;
                };
    
                /**
                 * Encodes the specified UninterpretedOption message, length delimited. Does not implicitly {@link google.protobuf.UninterpretedOption.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {google.protobuf.IUninterpretedOption} message UninterpretedOption message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                UninterpretedOption.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an UninterpretedOption message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.UninterpretedOption} UninterpretedOption
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                UninterpretedOption.decode = function decode(reader, length, error) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.UninterpretedOption();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        if (tag === error)
                            break;
                        switch (tag >>> 3) {
                        case 2: {
                                if (!(message.name && message.name.length))
                                    message.name = [];
                                message.name.push($root.google.protobuf.UninterpretedOption.NamePart.decode(reader, reader.uint32()));
                                break;
                            }
                        case 3: {
                                message.identifierValue = reader.string();
                                break;
                            }
                        case 4: {
                                message.positiveIntValue = reader.uint64();
                                break;
                            }
                        case 5: {
                                message.negativeIntValue = reader.int64();
                                break;
                            }
                        case 6: {
                                message.doubleValue = reader.double();
                                break;
                            }
                        case 7: {
                                message.stringValue = reader.bytes();
                                break;
                            }
                        case 8: {
                                message.aggregateValue = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an UninterpretedOption message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.UninterpretedOption} UninterpretedOption
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                UninterpretedOption.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an UninterpretedOption message.
                 * @function verify
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                UninterpretedOption.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name")) {
                        if (!Array.isArray(message.name))
                            return "name: array expected";
                        for (var i = 0; i < message.name.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.NamePart.verify(message.name[i]);
                            if (error)
                                return "name." + error;
                        }
                    }
                    if (message.identifierValue != null && message.hasOwnProperty("identifierValue"))
                        if (!$util.isString(message.identifierValue))
                            return "identifierValue: string expected";
                    if (message.positiveIntValue != null && message.hasOwnProperty("positiveIntValue"))
                        if (!$util.isInteger(message.positiveIntValue) && !(message.positiveIntValue && $util.isInteger(message.positiveIntValue.low) && $util.isInteger(message.positiveIntValue.high)))
                            return "positiveIntValue: integer|Long expected";
                    if (message.negativeIntValue != null && message.hasOwnProperty("negativeIntValue"))
                        if (!$util.isInteger(message.negativeIntValue) && !(message.negativeIntValue && $util.isInteger(message.negativeIntValue.low) && $util.isInteger(message.negativeIntValue.high)))
                            return "negativeIntValue: integer|Long expected";
                    if (message.doubleValue != null && message.hasOwnProperty("doubleValue"))
                        if (typeof message.doubleValue !== "number")
                            return "doubleValue: number expected";
                    if (message.stringValue != null && message.hasOwnProperty("stringValue"))
                        if (!(message.stringValue && typeof message.stringValue.length === "number" || $util.isString(message.stringValue)))
                            return "stringValue: buffer expected";
                    if (message.aggregateValue != null && message.hasOwnProperty("aggregateValue"))
                        if (!$util.isString(message.aggregateValue))
                            return "aggregateValue: string expected";
                    return null;
                };
    
                /**
                 * Creates an UninterpretedOption message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.UninterpretedOption} UninterpretedOption
                 */
                UninterpretedOption.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.UninterpretedOption)
                        return object;
                    var message = new $root.google.protobuf.UninterpretedOption();
                    if (object.name) {
                        if (!Array.isArray(object.name))
                            throw TypeError(".google.protobuf.UninterpretedOption.name: array expected");
                        message.name = [];
                        for (var i = 0; i < object.name.length; ++i) {
                            if (typeof object.name[i] !== "object")
                                throw TypeError(".google.protobuf.UninterpretedOption.name: object expected");
                            message.name[i] = $root.google.protobuf.UninterpretedOption.NamePart.fromObject(object.name[i]);
                        }
                    }
                    if (object.identifierValue != null)
                        message.identifierValue = String(object.identifierValue);
                    if (object.positiveIntValue != null)
                        if ($util.Long)
                            (message.positiveIntValue = $util.Long.fromValue(object.positiveIntValue)).unsigned = true;
                        else if (typeof object.positiveIntValue === "string")
                            message.positiveIntValue = parseInt(object.positiveIntValue, 10);
                        else if (typeof object.positiveIntValue === "number")
                            message.positiveIntValue = object.positiveIntValue;
                        else if (typeof object.positiveIntValue === "object")
                            message.positiveIntValue = new $util.LongBits(object.positiveIntValue.low >>> 0, object.positiveIntValue.high >>> 0).toNumber(true);
                    if (object.negativeIntValue != null)
                        if ($util.Long)
                            (message.negativeIntValue = $util.Long.fromValue(object.negativeIntValue)).unsigned = false;
                        else if (typeof object.negativeIntValue === "string")
                            message.negativeIntValue = parseInt(object.negativeIntValue, 10);
                        else if (typeof object.negativeIntValue === "number")
                            message.negativeIntValue = object.negativeIntValue;
                        else if (typeof object.negativeIntValue === "object")
                            message.negativeIntValue = new $util.LongBits(object.negativeIntValue.low >>> 0, object.negativeIntValue.high >>> 0).toNumber();
                    if (object.doubleValue != null)
                        message.doubleValue = Number(object.doubleValue);
                    if (object.stringValue != null)
                        if (typeof object.stringValue === "string")
                            $util.base64.decode(object.stringValue, message.stringValue = $util.newBuffer($util.base64.length(object.stringValue)), 0);
                        else if (object.stringValue.length >= 0)
                            message.stringValue = object.stringValue;
                    if (object.aggregateValue != null)
                        message.aggregateValue = String(object.aggregateValue);
                    return message;
                };
    
                /**
                 * Creates a plain object from an UninterpretedOption message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {google.protobuf.UninterpretedOption} message UninterpretedOption
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                UninterpretedOption.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.name = [];
                    if (options.defaults) {
                        object.identifierValue = "";
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, true);
                            object.positiveIntValue = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.positiveIntValue = options.longs === String ? "0" : 0;
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, false);
                            object.negativeIntValue = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.negativeIntValue = options.longs === String ? "0" : 0;
                        object.doubleValue = 0;
                        if (options.bytes === String)
                            object.stringValue = "";
                        else {
                            object.stringValue = [];
                            if (options.bytes !== Array)
                                object.stringValue = $util.newBuffer(object.stringValue);
                        }
                        object.aggregateValue = "";
                    }
                    if (message.name && message.name.length) {
                        object.name = [];
                        for (var j = 0; j < message.name.length; ++j)
                            object.name[j] = $root.google.protobuf.UninterpretedOption.NamePart.toObject(message.name[j], options);
                    }
                    if (message.identifierValue != null && message.hasOwnProperty("identifierValue"))
                        object.identifierValue = message.identifierValue;
                    if (message.positiveIntValue != null && message.hasOwnProperty("positiveIntValue"))
                        if (typeof message.positiveIntValue === "number")
                            object.positiveIntValue = options.longs === String ? String(message.positiveIntValue) : message.positiveIntValue;
                        else
                            object.positiveIntValue = options.longs === String ? $util.Long.prototype.toString.call(message.positiveIntValue) : options.longs === Number ? new $util.LongBits(message.positiveIntValue.low >>> 0, message.positiveIntValue.high >>> 0).toNumber(true) : message.positiveIntValue;
                    if (message.negativeIntValue != null && message.hasOwnProperty("negativeIntValue"))
                        if (typeof message.negativeIntValue === "number")
                            object.negativeIntValue = options.longs === String ? String(message.negativeIntValue) : message.negativeIntValue;
                        else
                            object.negativeIntValue = options.longs === String ? $util.Long.prototype.toString.call(message.negativeIntValue) : options.longs === Number ? new $util.LongBits(message.negativeIntValue.low >>> 0, message.negativeIntValue.high >>> 0).toNumber() : message.negativeIntValue;
                    if (message.doubleValue != null && message.hasOwnProperty("doubleValue"))
                        object.doubleValue = options.json && !isFinite(message.doubleValue) ? String(message.doubleValue) : message.doubleValue;
                    if (message.stringValue != null && message.hasOwnProperty("stringValue"))
                        object.stringValue = options.bytes === String ? $util.base64.encode(message.stringValue, 0, message.stringValue.length) : options.bytes === Array ? Array.prototype.slice.call(message.stringValue) : message.stringValue;
                    if (message.aggregateValue != null && message.hasOwnProperty("aggregateValue"))
                        object.aggregateValue = message.aggregateValue;
                    return object;
                };
    
                /**
                 * Converts this UninterpretedOption to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                UninterpretedOption.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for UninterpretedOption
                 * @function getTypeUrl
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                UninterpretedOption.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.UninterpretedOption";
                };
    
                UninterpretedOption.NamePart = (function() {
    
                    /**
                     * Properties of a NamePart.
                     * @memberof google.protobuf.UninterpretedOption
                     * @interface INamePart
                     * @property {string} namePart NamePart namePart
                     * @property {boolean} isExtension NamePart isExtension
                     */
    
                    /**
                     * Constructs a new NamePart.
                     * @memberof google.protobuf.UninterpretedOption
                     * @classdesc Represents a NamePart.
                     * @implements INamePart
                     * @constructor
                     * @param {google.protobuf.UninterpretedOption.INamePart=} [properties] Properties to set
                     */
                    function NamePart(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * NamePart namePart.
                     * @member {string} namePart
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @instance
                     */
                    NamePart.prototype.namePart = "";
    
                    /**
                     * NamePart isExtension.
                     * @member {boolean} isExtension
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @instance
                     */
                    NamePart.prototype.isExtension = false;
    
                    /**
                     * Creates a new NamePart instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {google.protobuf.UninterpretedOption.INamePart=} [properties] Properties to set
                     * @returns {google.protobuf.UninterpretedOption.NamePart} NamePart instance
                     */
                    NamePart.create = function create(properties) {
                        return new NamePart(properties);
                    };
    
                    /**
                     * Encodes the specified NamePart message. Does not implicitly {@link google.protobuf.UninterpretedOption.NamePart.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {google.protobuf.UninterpretedOption.INamePart} message NamePart message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    NamePart.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.namePart);
                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.isExtension);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified NamePart message, length delimited. Does not implicitly {@link google.protobuf.UninterpretedOption.NamePart.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {google.protobuf.UninterpretedOption.INamePart} message NamePart message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    NamePart.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a NamePart message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.UninterpretedOption.NamePart} NamePart
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    NamePart.decode = function decode(reader, length, error) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.UninterpretedOption.NamePart();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            if (tag === error)
                                break;
                            switch (tag >>> 3) {
                            case 1: {
                                    message.namePart = reader.string();
                                    break;
                                }
                            case 2: {
                                    message.isExtension = reader.bool();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        if (!message.hasOwnProperty("namePart"))
                            throw $util.ProtocolError("missing required 'namePart'", { instance: message });
                        if (!message.hasOwnProperty("isExtension"))
                            throw $util.ProtocolError("missing required 'isExtension'", { instance: message });
                        return message;
                    };
    
                    /**
                     * Decodes a NamePart message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.UninterpretedOption.NamePart} NamePart
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    NamePart.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a NamePart message.
                     * @function verify
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    NamePart.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (!$util.isString(message.namePart))
                            return "namePart: string expected";
                        if (typeof message.isExtension !== "boolean")
                            return "isExtension: boolean expected";
                        return null;
                    };
    
                    /**
                     * Creates a NamePart message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.UninterpretedOption.NamePart} NamePart
                     */
                    NamePart.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.UninterpretedOption.NamePart)
                            return object;
                        var message = new $root.google.protobuf.UninterpretedOption.NamePart();
                        if (object.namePart != null)
                            message.namePart = String(object.namePart);
                        if (object.isExtension != null)
                            message.isExtension = Boolean(object.isExtension);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a NamePart message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {google.protobuf.UninterpretedOption.NamePart} message NamePart
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    NamePart.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.namePart = "";
                            object.isExtension = false;
                        }
                        if (message.namePart != null && message.hasOwnProperty("namePart"))
                            object.namePart = message.namePart;
                        if (message.isExtension != null && message.hasOwnProperty("isExtension"))
                            object.isExtension = message.isExtension;
                        return object;
                    };
    
                    /**
                     * Converts this NamePart to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    NamePart.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for NamePart
                     * @function getTypeUrl
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    NamePart.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.protobuf.UninterpretedOption.NamePart";
                    };
    
                    return NamePart;
                })();
    
                return UninterpretedOption;
            })();
    
            protobuf.FeatureSet = (function() {
    
                /**
                 * Properties of a FeatureSet.
                 * @memberof google.protobuf
                 * @interface IFeatureSet
                 * @property {google.protobuf.FeatureSet.FieldPresence|null} [fieldPresence] FeatureSet fieldPresence
                 * @property {google.protobuf.FeatureSet.EnumType|null} [enumType] FeatureSet enumType
                 * @property {google.protobuf.FeatureSet.RepeatedFieldEncoding|null} [repeatedFieldEncoding] FeatureSet repeatedFieldEncoding
                 * @property {google.protobuf.FeatureSet.Utf8Validation|null} [utf8Validation] FeatureSet utf8Validation
                 * @property {google.protobuf.FeatureSet.MessageEncoding|null} [messageEncoding] FeatureSet messageEncoding
                 * @property {google.protobuf.FeatureSet.JsonFormat|null} [jsonFormat] FeatureSet jsonFormat
                 */
    
                /**
                 * Constructs a new FeatureSet.
                 * @memberof google.protobuf
                 * @classdesc Represents a FeatureSet.
                 * @implements IFeatureSet
                 * @constructor
                 * @param {google.protobuf.IFeatureSet=} [properties] Properties to set
                 */
                function FeatureSet(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FeatureSet fieldPresence.
                 * @member {google.protobuf.FeatureSet.FieldPresence} fieldPresence
                 * @memberof google.protobuf.FeatureSet
                 * @instance
                 */
                FeatureSet.prototype.fieldPresence = 0;
    
                /**
                 * FeatureSet enumType.
                 * @member {google.protobuf.FeatureSet.EnumType} enumType
                 * @memberof google.protobuf.FeatureSet
                 * @instance
                 */
                FeatureSet.prototype.enumType = 0;
    
                /**
                 * FeatureSet repeatedFieldEncoding.
                 * @member {google.protobuf.FeatureSet.RepeatedFieldEncoding} repeatedFieldEncoding
                 * @memberof google.protobuf.FeatureSet
                 * @instance
                 */
                FeatureSet.prototype.repeatedFieldEncoding = 0;
    
                /**
                 * FeatureSet utf8Validation.
                 * @member {google.protobuf.FeatureSet.Utf8Validation} utf8Validation
                 * @memberof google.protobuf.FeatureSet
                 * @instance
                 */
                FeatureSet.prototype.utf8Validation = 0;
    
                /**
                 * FeatureSet messageEncoding.
                 * @member {google.protobuf.FeatureSet.MessageEncoding} messageEncoding
                 * @memberof google.protobuf.FeatureSet
                 * @instance
                 */
                FeatureSet.prototype.messageEncoding = 0;
    
                /**
                 * FeatureSet jsonFormat.
                 * @member {google.protobuf.FeatureSet.JsonFormat} jsonFormat
                 * @memberof google.protobuf.FeatureSet
                 * @instance
                 */
                FeatureSet.prototype.jsonFormat = 0;
    
                /**
                 * Creates a new FeatureSet instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FeatureSet
                 * @static
                 * @param {google.protobuf.IFeatureSet=} [properties] Properties to set
                 * @returns {google.protobuf.FeatureSet} FeatureSet instance
                 */
                FeatureSet.create = function create(properties) {
                    return new FeatureSet(properties);
                };
    
                /**
                 * Encodes the specified FeatureSet message. Does not implicitly {@link google.protobuf.FeatureSet.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FeatureSet
                 * @static
                 * @param {google.protobuf.IFeatureSet} message FeatureSet message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FeatureSet.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.fieldPresence != null && Object.hasOwnProperty.call(message, "fieldPresence"))
                        writer.uint32(/* id 1, wireType 0 =*/8).int32(message.fieldPresence);
                    if (message.enumType != null && Object.hasOwnProperty.call(message, "enumType"))
                        writer.uint32(/* id 2, wireType 0 =*/16).int32(message.enumType);
                    if (message.repeatedFieldEncoding != null && Object.hasOwnProperty.call(message, "repeatedFieldEncoding"))
                        writer.uint32(/* id 3, wireType 0 =*/24).int32(message.repeatedFieldEncoding);
                    if (message.utf8Validation != null && Object.hasOwnProperty.call(message, "utf8Validation"))
                        writer.uint32(/* id 4, wireType 0 =*/32).int32(message.utf8Validation);
                    if (message.messageEncoding != null && Object.hasOwnProperty.call(message, "messageEncoding"))
                        writer.uint32(/* id 5, wireType 0 =*/40).int32(message.messageEncoding);
                    if (message.jsonFormat != null && Object.hasOwnProperty.call(message, "jsonFormat"))
                        writer.uint32(/* id 6, wireType 0 =*/48).int32(message.jsonFormat);
                    return writer;
                };
    
                /**
                 * Encodes the specified FeatureSet message, length delimited. Does not implicitly {@link google.protobuf.FeatureSet.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FeatureSet
                 * @static
                 * @param {google.protobuf.IFeatureSet} message FeatureSet message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FeatureSet.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FeatureSet message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FeatureSet
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FeatureSet} FeatureSet
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FeatureSet.decode = function decode(reader, length, error) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FeatureSet();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        if (tag === error)
                            break;
                        switch (tag >>> 3) {
                        case 1: {
                                message.fieldPresence = reader.int32();
                                break;
                            }
                        case 2: {
                                message.enumType = reader.int32();
                                break;
                            }
                        case 3: {
                                message.repeatedFieldEncoding = reader.int32();
                                break;
                            }
                        case 4: {
                                message.utf8Validation = reader.int32();
                                break;
                            }
                        case 5: {
                                message.messageEncoding = reader.int32();
                                break;
                            }
                        case 6: {
                                message.jsonFormat = reader.int32();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FeatureSet message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FeatureSet
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FeatureSet} FeatureSet
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FeatureSet.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FeatureSet message.
                 * @function verify
                 * @memberof google.protobuf.FeatureSet
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FeatureSet.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.fieldPresence != null && message.hasOwnProperty("fieldPresence"))
                        switch (message.fieldPresence) {
                        default:
                            return "fieldPresence: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                        case 3:
                            break;
                        }
                    if (message.enumType != null && message.hasOwnProperty("enumType"))
                        switch (message.enumType) {
                        default:
                            return "enumType: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                            break;
                        }
                    if (message.repeatedFieldEncoding != null && message.hasOwnProperty("repeatedFieldEncoding"))
                        switch (message.repeatedFieldEncoding) {
                        default:
                            return "repeatedFieldEncoding: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                            break;
                        }
                    if (message.utf8Validation != null && message.hasOwnProperty("utf8Validation"))
                        switch (message.utf8Validation) {
                        default:
                            return "utf8Validation: enum value expected";
                        case 0:
                        case 2:
                        case 3:
                            break;
                        }
                    if (message.messageEncoding != null && message.hasOwnProperty("messageEncoding"))
                        switch (message.messageEncoding) {
                        default:
                            return "messageEncoding: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                            break;
                        }
                    if (message.jsonFormat != null && message.hasOwnProperty("jsonFormat"))
                        switch (message.jsonFormat) {
                        default:
                            return "jsonFormat: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                            break;
                        }
                    return null;
                };
    
                /**
                 * Creates a FeatureSet message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FeatureSet
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FeatureSet} FeatureSet
                 */
                FeatureSet.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FeatureSet)
                        return object;
                    var message = new $root.google.protobuf.FeatureSet();
                    switch (object.fieldPresence) {
                    default:
                        if (typeof object.fieldPresence === "number") {
                            message.fieldPresence = object.fieldPresence;
                            break;
                        }
                        break;
                    case "FIELD_PRESENCE_UNKNOWN":
                    case 0:
                        message.fieldPresence = 0;
                        break;
                    case "EXPLICIT":
                    case 1:
                        message.fieldPresence = 1;
                        break;
                    case "IMPLICIT":
                    case 2:
                        message.fieldPresence = 2;
                        break;
                    case "LEGACY_REQUIRED":
                    case 3:
                        message.fieldPresence = 3;
                        break;
                    }
                    switch (object.enumType) {
                    default:
                        if (typeof object.enumType === "number") {
                            message.enumType = object.enumType;
                            break;
                        }
                        break;
                    case "ENUM_TYPE_UNKNOWN":
                    case 0:
                        message.enumType = 0;
                        break;
                    case "OPEN":
                    case 1:
                        message.enumType = 1;
                        break;
                    case "CLOSED":
                    case 2:
                        message.enumType = 2;
                        break;
                    }
                    switch (object.repeatedFieldEncoding) {
                    default:
                        if (typeof object.repeatedFieldEncoding === "number") {
                            message.repeatedFieldEncoding = object.repeatedFieldEncoding;
                            break;
                        }
                        break;
                    case "REPEATED_FIELD_ENCODING_UNKNOWN":
                    case 0:
                        message.repeatedFieldEncoding = 0;
                        break;
                    case "PACKED":
                    case 1:
                        message.repeatedFieldEncoding = 1;
                        break;
                    case "EXPANDED":
                    case 2:
                        message.repeatedFieldEncoding = 2;
                        break;
                    }
                    switch (object.utf8Validation) {
                    default:
                        if (typeof object.utf8Validation === "number") {
                            message.utf8Validation = object.utf8Validation;
                            break;
                        }
                        break;
                    case "UTF8_VALIDATION_UNKNOWN":
                    case 0:
                        message.utf8Validation = 0;
                        break;
                    case "VERIFY":
                    case 2:
                        message.utf8Validation = 2;
                        break;
                    case "NONE":
                    case 3:
                        message.utf8Validation = 3;
                        break;
                    }
                    switch (object.messageEncoding) {
                    default:
                        if (typeof object.messageEncoding === "number") {
                            message.messageEncoding = object.messageEncoding;
                            break;
                        }
                        break;
                    case "MESSAGE_ENCODING_UNKNOWN":
                    case 0:
                        message.messageEncoding = 0;
                        break;
                    case "LENGTH_PREFIXED":
                    case 1:
                        message.messageEncoding = 1;
                        break;
                    case "DELIMITED":
                    case 2:
                        message.messageEncoding = 2;
                        break;
                    }
                    switch (object.jsonFormat) {
                    default:
                        if (typeof object.jsonFormat === "number") {
                            message.jsonFormat = object.jsonFormat;
                            break;
                        }
                        break;
                    case "JSON_FORMAT_UNKNOWN":
                    case 0:
                        message.jsonFormat = 0;
                        break;
                    case "ALLOW":
                    case 1:
                        message.jsonFormat = 1;
                        break;
                    case "LEGACY_BEST_EFFORT":
                    case 2:
                        message.jsonFormat = 2;
                        break;
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a FeatureSet message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FeatureSet
                 * @static
                 * @param {google.protobuf.FeatureSet} message FeatureSet
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FeatureSet.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.fieldPresence = options.enums === String ? "FIELD_PRESENCE_UNKNOWN" : 0;
                        object.enumType = options.enums === String ? "ENUM_TYPE_UNKNOWN" : 0;
                        object.repeatedFieldEncoding = options.enums === String ? "REPEATED_FIELD_ENCODING_UNKNOWN" : 0;
                        object.utf8Validation = options.enums === String ? "UTF8_VALIDATION_UNKNOWN" : 0;
                        object.messageEncoding = options.enums === String ? "MESSAGE_ENCODING_UNKNOWN" : 0;
                        object.jsonFormat = options.enums === String ? "JSON_FORMAT_UNKNOWN" : 0;
                    }
                    if (message.fieldPresence != null && message.hasOwnProperty("fieldPresence"))
                        object.fieldPresence = options.enums === String ? $root.google.protobuf.FeatureSet.FieldPresence[message.fieldPresence] === undefined ? message.fieldPresence : $root.google.protobuf.FeatureSet.FieldPresence[message.fieldPresence] : message.fieldPresence;
                    if (message.enumType != null && message.hasOwnProperty("enumType"))
                        object.enumType = options.enums === String ? $root.google.protobuf.FeatureSet.EnumType[message.enumType] === undefined ? message.enumType : $root.google.protobuf.FeatureSet.EnumType[message.enumType] : message.enumType;
                    if (message.repeatedFieldEncoding != null && message.hasOwnProperty("repeatedFieldEncoding"))
                        object.repeatedFieldEncoding = options.enums === String ? $root.google.protobuf.FeatureSet.RepeatedFieldEncoding[message.repeatedFieldEncoding] === undefined ? message.repeatedFieldEncoding : $root.google.protobuf.FeatureSet.RepeatedFieldEncoding[message.repeatedFieldEncoding] : message.repeatedFieldEncoding;
                    if (message.utf8Validation != null && message.hasOwnProperty("utf8Validation"))
                        object.utf8Validation = options.enums === String ? $root.google.protobuf.FeatureSet.Utf8Validation[message.utf8Validation] === undefined ? message.utf8Validation : $root.google.protobuf.FeatureSet.Utf8Validation[message.utf8Validation] : message.utf8Validation;
                    if (message.messageEncoding != null && message.hasOwnProperty("messageEncoding"))
                        object.messageEncoding = options.enums === String ? $root.google.protobuf.FeatureSet.MessageEncoding[message.messageEncoding] === undefined ? message.messageEncoding : $root.google.protobuf.FeatureSet.MessageEncoding[message.messageEncoding] : message.messageEncoding;
                    if (message.jsonFormat != null && message.hasOwnProperty("jsonFormat"))
                        object.jsonFormat = options.enums === String ? $root.google.protobuf.FeatureSet.JsonFormat[message.jsonFormat] === undefined ? message.jsonFormat : $root.google.protobuf.FeatureSet.JsonFormat[message.jsonFormat] : message.jsonFormat;
                    return object;
                };
    
                /**
                 * Converts this FeatureSet to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FeatureSet
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FeatureSet.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for FeatureSet
                 * @function getTypeUrl
                 * @memberof google.protobuf.FeatureSet
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                FeatureSet.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.FeatureSet";
                };
    
                /**
                 * FieldPresence enum.
                 * @name google.protobuf.FeatureSet.FieldPresence
                 * @enum {number}
                 * @property {number} FIELD_PRESENCE_UNKNOWN=0 FIELD_PRESENCE_UNKNOWN value
                 * @property {number} EXPLICIT=1 EXPLICIT value
                 * @property {number} IMPLICIT=2 IMPLICIT value
                 * @property {number} LEGACY_REQUIRED=3 LEGACY_REQUIRED value
                 */
                FeatureSet.FieldPresence = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "FIELD_PRESENCE_UNKNOWN"] = 0;
                    values[valuesById[1] = "EXPLICIT"] = 1;
                    values[valuesById[2] = "IMPLICIT"] = 2;
                    values[valuesById[3] = "LEGACY_REQUIRED"] = 3;
                    return values;
                })();
    
                /**
                 * EnumType enum.
                 * @name google.protobuf.FeatureSet.EnumType
                 * @enum {number}
                 * @property {number} ENUM_TYPE_UNKNOWN=0 ENUM_TYPE_UNKNOWN value
                 * @property {number} OPEN=1 OPEN value
                 * @property {number} CLOSED=2 CLOSED value
                 */
                FeatureSet.EnumType = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "ENUM_TYPE_UNKNOWN"] = 0;
                    values[valuesById[1] = "OPEN"] = 1;
                    values[valuesById[2] = "CLOSED"] = 2;
                    return values;
                })();
    
                /**
                 * RepeatedFieldEncoding enum.
                 * @name google.protobuf.FeatureSet.RepeatedFieldEncoding
                 * @enum {number}
                 * @property {number} REPEATED_FIELD_ENCODING_UNKNOWN=0 REPEATED_FIELD_ENCODING_UNKNOWN value
                 * @property {number} PACKED=1 PACKED value
                 * @property {number} EXPANDED=2 EXPANDED value
                 */
                FeatureSet.RepeatedFieldEncoding = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "REPEATED_FIELD_ENCODING_UNKNOWN"] = 0;
                    values[valuesById[1] = "PACKED"] = 1;
                    values[valuesById[2] = "EXPANDED"] = 2;
                    return values;
                })();
    
                /**
                 * Utf8Validation enum.
                 * @name google.protobuf.FeatureSet.Utf8Validation
                 * @enum {number}
                 * @property {number} UTF8_VALIDATION_UNKNOWN=0 UTF8_VALIDATION_UNKNOWN value
                 * @property {number} VERIFY=2 VERIFY value
                 * @property {number} NONE=3 NONE value
                 */
                FeatureSet.Utf8Validation = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "UTF8_VALIDATION_UNKNOWN"] = 0;
                    values[valuesById[2] = "VERIFY"] = 2;
                    values[valuesById[3] = "NONE"] = 3;
                    return values;
                })();
    
                /**
                 * MessageEncoding enum.
                 * @name google.protobuf.FeatureSet.MessageEncoding
                 * @enum {number}
                 * @property {number} MESSAGE_ENCODING_UNKNOWN=0 MESSAGE_ENCODING_UNKNOWN value
                 * @property {number} LENGTH_PREFIXED=1 LENGTH_PREFIXED value
                 * @property {number} DELIMITED=2 DELIMITED value
                 */
                FeatureSet.MessageEncoding = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "MESSAGE_ENCODING_UNKNOWN"] = 0;
                    values[valuesById[1] = "LENGTH_PREFIXED"] = 1;
                    values[valuesById[2] = "DELIMITED"] = 2;
                    return values;
                })();
    
                /**
                 * JsonFormat enum.
                 * @name google.protobuf.FeatureSet.JsonFormat
                 * @enum {number}
                 * @property {number} JSON_FORMAT_UNKNOWN=0 JSON_FORMAT_UNKNOWN value
                 * @property {number} ALLOW=1 ALLOW value
                 * @property {number} LEGACY_BEST_EFFORT=2 LEGACY_BEST_EFFORT value
                 */
                FeatureSet.JsonFormat = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "JSON_FORMAT_UNKNOWN"] = 0;
                    values[valuesById[1] = "ALLOW"] = 1;
                    values[valuesById[2] = "LEGACY_BEST_EFFORT"] = 2;
                    return values;
                })();
    
                return FeatureSet;
            })();
    
            protobuf.FeatureSetDefaults = (function() {
    
                /**
                 * Properties of a FeatureSetDefaults.
                 * @memberof google.protobuf
                 * @interface IFeatureSetDefaults
                 * @property {Array.<google.protobuf.FeatureSetDefaults.IFeatureSetEditionDefault>|null} [defaults] FeatureSetDefaults defaults
                 * @property {google.protobuf.Edition|null} [minimumEdition] FeatureSetDefaults minimumEdition
                 * @property {google.protobuf.Edition|null} [maximumEdition] FeatureSetDefaults maximumEdition
                 */
    
                /**
                 * Constructs a new FeatureSetDefaults.
                 * @memberof google.protobuf
                 * @classdesc Represents a FeatureSetDefaults.
                 * @implements IFeatureSetDefaults
                 * @constructor
                 * @param {google.protobuf.IFeatureSetDefaults=} [properties] Properties to set
                 */
                function FeatureSetDefaults(properties) {
                    this.defaults = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FeatureSetDefaults defaults.
                 * @member {Array.<google.protobuf.FeatureSetDefaults.IFeatureSetEditionDefault>} defaults
                 * @memberof google.protobuf.FeatureSetDefaults
                 * @instance
                 */
                FeatureSetDefaults.prototype.defaults = $util.emptyArray;
    
                /**
                 * FeatureSetDefaults minimumEdition.
                 * @member {google.protobuf.Edition} minimumEdition
                 * @memberof google.protobuf.FeatureSetDefaults
                 * @instance
                 */
                FeatureSetDefaults.prototype.minimumEdition = 0;
    
                /**
                 * FeatureSetDefaults maximumEdition.
                 * @member {google.protobuf.Edition} maximumEdition
                 * @memberof google.protobuf.FeatureSetDefaults
                 * @instance
                 */
                FeatureSetDefaults.prototype.maximumEdition = 0;
    
                /**
                 * Creates a new FeatureSetDefaults instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FeatureSetDefaults
                 * @static
                 * @param {google.protobuf.IFeatureSetDefaults=} [properties] Properties to set
                 * @returns {google.protobuf.FeatureSetDefaults} FeatureSetDefaults instance
                 */
                FeatureSetDefaults.create = function create(properties) {
                    return new FeatureSetDefaults(properties);
                };
    
                /**
                 * Encodes the specified FeatureSetDefaults message. Does not implicitly {@link google.protobuf.FeatureSetDefaults.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FeatureSetDefaults
                 * @static
                 * @param {google.protobuf.IFeatureSetDefaults} message FeatureSetDefaults message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FeatureSetDefaults.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.defaults != null && message.defaults.length)
                        for (var i = 0; i < message.defaults.length; ++i)
                            $root.google.protobuf.FeatureSetDefaults.FeatureSetEditionDefault.encode(message.defaults[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    if (message.minimumEdition != null && Object.hasOwnProperty.call(message, "minimumEdition"))
                        writer.uint32(/* id 4, wireType 0 =*/32).int32(message.minimumEdition);
                    if (message.maximumEdition != null && Object.hasOwnProperty.call(message, "maximumEdition"))
                        writer.uint32(/* id 5, wireType 0 =*/40).int32(message.maximumEdition);
                    return writer;
                };
    
                /**
                 * Encodes the specified FeatureSetDefaults message, length delimited. Does not implicitly {@link google.protobuf.FeatureSetDefaults.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FeatureSetDefaults
                 * @static
                 * @param {google.protobuf.IFeatureSetDefaults} message FeatureSetDefaults message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FeatureSetDefaults.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FeatureSetDefaults message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FeatureSetDefaults
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FeatureSetDefaults} FeatureSetDefaults
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FeatureSetDefaults.decode = function decode(reader, length, error) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FeatureSetDefaults();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        if (tag === error)
                            break;
                        switch (tag >>> 3) {
                        case 1: {
                                if (!(message.defaults && message.defaults.length))
                                    message.defaults = [];
                                message.defaults.push($root.google.protobuf.FeatureSetDefaults.FeatureSetEditionDefault.decode(reader, reader.uint32()));
                                break;
                            }
                        case 4: {
                                message.minimumEdition = reader.int32();
                                break;
                            }
                        case 5: {
                                message.maximumEdition = reader.int32();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FeatureSetDefaults message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FeatureSetDefaults
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FeatureSetDefaults} FeatureSetDefaults
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FeatureSetDefaults.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FeatureSetDefaults message.
                 * @function verify
                 * @memberof google.protobuf.FeatureSetDefaults
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FeatureSetDefaults.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.defaults != null && message.hasOwnProperty("defaults")) {
                        if (!Array.isArray(message.defaults))
                            return "defaults: array expected";
                        for (var i = 0; i < message.defaults.length; ++i) {
                            var error = $root.google.protobuf.FeatureSetDefaults.FeatureSetEditionDefault.verify(message.defaults[i]);
                            if (error)
                                return "defaults." + error;
                        }
                    }
                    if (message.minimumEdition != null && message.hasOwnProperty("minimumEdition"))
                        switch (message.minimumEdition) {
                        default:
                            return "minimumEdition: enum value expected";
                        case 0:
                        case 998:
                        case 999:
                        case 1000:
                        case 1001:
                        case 1:
                        case 2:
                        case 99997:
                        case 99998:
                        case 99999:
                        case 2147483647:
                            break;
                        }
                    if (message.maximumEdition != null && message.hasOwnProperty("maximumEdition"))
                        switch (message.maximumEdition) {
                        default:
                            return "maximumEdition: enum value expected";
                        case 0:
                        case 998:
                        case 999:
                        case 1000:
                        case 1001:
                        case 1:
                        case 2:
                        case 99997:
                        case 99998:
                        case 99999:
                        case 2147483647:
                            break;
                        }
                    return null;
                };
    
                /**
                 * Creates a FeatureSetDefaults message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FeatureSetDefaults
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FeatureSetDefaults} FeatureSetDefaults
                 */
                FeatureSetDefaults.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FeatureSetDefaults)
                        return object;
                    var message = new $root.google.protobuf.FeatureSetDefaults();
                    if (object.defaults) {
                        if (!Array.isArray(object.defaults))
                            throw TypeError(".google.protobuf.FeatureSetDefaults.defaults: array expected");
                        message.defaults = [];
                        for (var i = 0; i < object.defaults.length; ++i) {
                            if (typeof object.defaults[i] !== "object")
                                throw TypeError(".google.protobuf.FeatureSetDefaults.defaults: object expected");
                            message.defaults[i] = $root.google.protobuf.FeatureSetDefaults.FeatureSetEditionDefault.fromObject(object.defaults[i]);
                        }
                    }
                    switch (object.minimumEdition) {
                    default:
                        if (typeof object.minimumEdition === "number") {
                            message.minimumEdition = object.minimumEdition;
                            break;
                        }
                        break;
                    case "EDITION_UNKNOWN":
                    case 0:
                        message.minimumEdition = 0;
                        break;
                    case "EDITION_PROTO2":
                    case 998:
                        message.minimumEdition = 998;
                        break;
                    case "EDITION_PROTO3":
                    case 999:
                        message.minimumEdition = 999;
                        break;
                    case "EDITION_2023":
                    case 1000:
                        message.minimumEdition = 1000;
                        break;
                    case "EDITION_2024":
                    case 1001:
                        message.minimumEdition = 1001;
                        break;
                    case "EDITION_1_TEST_ONLY":
                    case 1:
                        message.minimumEdition = 1;
                        break;
                    case "EDITION_2_TEST_ONLY":
                    case 2:
                        message.minimumEdition = 2;
                        break;
                    case "EDITION_99997_TEST_ONLY":
                    case 99997:
                        message.minimumEdition = 99997;
                        break;
                    case "EDITION_99998_TEST_ONLY":
                    case 99998:
                        message.minimumEdition = 99998;
                        break;
                    case "EDITION_99999_TEST_ONLY":
                    case 99999:
                        message.minimumEdition = 99999;
                        break;
                    case "EDITION_MAX":
                    case 2147483647:
                        message.minimumEdition = 2147483647;
                        break;
                    }
                    switch (object.maximumEdition) {
                    default:
                        if (typeof object.maximumEdition === "number") {
                            message.maximumEdition = object.maximumEdition;
                            break;
                        }
                        break;
                    case "EDITION_UNKNOWN":
                    case 0:
                        message.maximumEdition = 0;
                        break;
                    case "EDITION_PROTO2":
                    case 998:
                        message.maximumEdition = 998;
                        break;
                    case "EDITION_PROTO3":
                    case 999:
                        message.maximumEdition = 999;
                        break;
                    case "EDITION_2023":
                    case 1000:
                        message.maximumEdition = 1000;
                        break;
                    case "EDITION_2024":
                    case 1001:
                        message.maximumEdition = 1001;
                        break;
                    case "EDITION_1_TEST_ONLY":
                    case 1:
                        message.maximumEdition = 1;
                        break;
                    case "EDITION_2_TEST_ONLY":
                    case 2:
                        message.maximumEdition = 2;
                        break;
                    case "EDITION_99997_TEST_ONLY":
                    case 99997:
                        message.maximumEdition = 99997;
                        break;
                    case "EDITION_99998_TEST_ONLY":
                    case 99998:
                        message.maximumEdition = 99998;
                        break;
                    case "EDITION_99999_TEST_ONLY":
                    case 99999:
                        message.maximumEdition = 99999;
                        break;
                    case "EDITION_MAX":
                    case 2147483647:
                        message.maximumEdition = 2147483647;
                        break;
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a FeatureSetDefaults message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FeatureSetDefaults
                 * @static
                 * @param {google.protobuf.FeatureSetDefaults} message FeatureSetDefaults
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FeatureSetDefaults.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.defaults = [];
                    if (options.defaults) {
                        object.minimumEdition = options.enums === String ? "EDITION_UNKNOWN" : 0;
                        object.maximumEdition = options.enums === String ? "EDITION_UNKNOWN" : 0;
                    }
                    if (message.defaults && message.defaults.length) {
                        object.defaults = [];
                        for (var j = 0; j < message.defaults.length; ++j)
                            object.defaults[j] = $root.google.protobuf.FeatureSetDefaults.FeatureSetEditionDefault.toObject(message.defaults[j], options);
                    }
                    if (message.minimumEdition != null && message.hasOwnProperty("minimumEdition"))
                        object.minimumEdition = options.enums === String ? $root.google.protobuf.Edition[message.minimumEdition] === undefined ? message.minimumEdition : $root.google.protobuf.Edition[message.minimumEdition] : message.minimumEdition;
                    if (message.maximumEdition != null && message.hasOwnProperty("maximumEdition"))
                        object.maximumEdition = options.enums === String ? $root.google.protobuf.Edition[message.maximumEdition] === undefined ? message.maximumEdition : $root.google.protobuf.Edition[message.maximumEdition] : message.maximumEdition;
                    return object;
                };
    
                /**
                 * Converts this FeatureSetDefaults to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FeatureSetDefaults
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FeatureSetDefaults.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for FeatureSetDefaults
                 * @function getTypeUrl
                 * @memberof google.protobuf.FeatureSetDefaults
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                FeatureSetDefaults.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.FeatureSetDefaults";
                };
    
                FeatureSetDefaults.FeatureSetEditionDefault = (function() {
    
                    /**
                     * Properties of a FeatureSetEditionDefault.
                     * @memberof google.protobuf.FeatureSetDefaults
                     * @interface IFeatureSetEditionDefault
                     * @property {google.protobuf.Edition|null} [edition] FeatureSetEditionDefault edition
                     * @property {google.protobuf.IFeatureSet|null} [features] FeatureSetEditionDefault features
                     */
    
                    /**
                     * Constructs a new FeatureSetEditionDefault.
                     * @memberof google.protobuf.FeatureSetDefaults
                     * @classdesc Represents a FeatureSetEditionDefault.
                     * @implements IFeatureSetEditionDefault
                     * @constructor
                     * @param {google.protobuf.FeatureSetDefaults.IFeatureSetEditionDefault=} [properties] Properties to set
                     */
                    function FeatureSetEditionDefault(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * FeatureSetEditionDefault edition.
                     * @member {google.protobuf.Edition} edition
                     * @memberof google.protobuf.FeatureSetDefaults.FeatureSetEditionDefault
                     * @instance
                     */
                    FeatureSetEditionDefault.prototype.edition = 0;
    
                    /**
                     * FeatureSetEditionDefault features.
                     * @member {google.protobuf.IFeatureSet|null|undefined} features
                     * @memberof google.protobuf.FeatureSetDefaults.FeatureSetEditionDefault
                     * @instance
                     */
                    FeatureSetEditionDefault.prototype.features = null;
    
                    /**
                     * Creates a new FeatureSetEditionDefault instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.FeatureSetDefaults.FeatureSetEditionDefault
                     * @static
                     * @param {google.protobuf.FeatureSetDefaults.IFeatureSetEditionDefault=} [properties] Properties to set
                     * @returns {google.protobuf.FeatureSetDefaults.FeatureSetEditionDefault} FeatureSetEditionDefault instance
                     */
                    FeatureSetEditionDefault.create = function create(properties) {
                        return new FeatureSetEditionDefault(properties);
                    };
    
                    /**
                     * Encodes the specified FeatureSetEditionDefault message. Does not implicitly {@link google.protobuf.FeatureSetDefaults.FeatureSetEditionDefault.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.FeatureSetDefaults.FeatureSetEditionDefault
                     * @static
                     * @param {google.protobuf.FeatureSetDefaults.IFeatureSetEditionDefault} message FeatureSetEditionDefault message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    FeatureSetEditionDefault.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.features != null && Object.hasOwnProperty.call(message, "features"))
                            $root.google.protobuf.FeatureSet.encode(message.features, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                        if (message.edition != null && Object.hasOwnProperty.call(message, "edition"))
                            writer.uint32(/* id 3, wireType 0 =*/24).int32(message.edition);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified FeatureSetEditionDefault message, length delimited. Does not implicitly {@link google.protobuf.FeatureSetDefaults.FeatureSetEditionDefault.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.FeatureSetDefaults.FeatureSetEditionDefault
                     * @static
                     * @param {google.protobuf.FeatureSetDefaults.IFeatureSetEditionDefault} message FeatureSetEditionDefault message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    FeatureSetEditionDefault.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a FeatureSetEditionDefault message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.FeatureSetDefaults.FeatureSetEditionDefault
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.FeatureSetDefaults.FeatureSetEditionDefault} FeatureSetEditionDefault
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    FeatureSetEditionDefault.decode = function decode(reader, length, error) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FeatureSetDefaults.FeatureSetEditionDefault();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            if (tag === error)
                                break;
                            switch (tag >>> 3) {
                            case 3: {
                                    message.edition = reader.int32();
                                    break;
                                }
                            case 2: {
                                    message.features = $root.google.protobuf.FeatureSet.decode(reader, reader.uint32());
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a FeatureSetEditionDefault message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.FeatureSetDefaults.FeatureSetEditionDefault
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.FeatureSetDefaults.FeatureSetEditionDefault} FeatureSetEditionDefault
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    FeatureSetEditionDefault.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a FeatureSetEditionDefault message.
                     * @function verify
                     * @memberof google.protobuf.FeatureSetDefaults.FeatureSetEditionDefault
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    FeatureSetEditionDefault.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.edition != null && message.hasOwnProperty("edition"))
                            switch (message.edition) {
                            default:
                                return "edition: enum value expected";
                            case 0:
                            case 998:
                            case 999:
                            case 1000:
                            case 1001:
                            case 1:
                            case 2:
                            case 99997:
                            case 99998:
                            case 99999:
                            case 2147483647:
                                break;
                            }
                        if (message.features != null && message.hasOwnProperty("features")) {
                            var error = $root.google.protobuf.FeatureSet.verify(message.features);
                            if (error)
                                return "features." + error;
                        }
                        return null;
                    };
    
                    /**
                     * Creates a FeatureSetEditionDefault message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.FeatureSetDefaults.FeatureSetEditionDefault
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.FeatureSetDefaults.FeatureSetEditionDefault} FeatureSetEditionDefault
                     */
                    FeatureSetEditionDefault.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.FeatureSetDefaults.FeatureSetEditionDefault)
                            return object;
                        var message = new $root.google.protobuf.FeatureSetDefaults.FeatureSetEditionDefault();
                        switch (object.edition) {
                        default:
                            if (typeof object.edition === "number") {
                                message.edition = object.edition;
                                break;
                            }
                            break;
                        case "EDITION_UNKNOWN":
                        case 0:
                            message.edition = 0;
                            break;
                        case "EDITION_PROTO2":
                        case 998:
                            message.edition = 998;
                            break;
                        case "EDITION_PROTO3":
                        case 999:
                            message.edition = 999;
                            break;
                        case "EDITION_2023":
                        case 1000:
                            message.edition = 1000;
                            break;
                        case "EDITION_2024":
                        case 1001:
                            message.edition = 1001;
                            break;
                        case "EDITION_1_TEST_ONLY":
                        case 1:
                            message.edition = 1;
                            break;
                        case "EDITION_2_TEST_ONLY":
                        case 2:
                            message.edition = 2;
                            break;
                        case "EDITION_99997_TEST_ONLY":
                        case 99997:
                            message.edition = 99997;
                            break;
                        case "EDITION_99998_TEST_ONLY":
                        case 99998:
                            message.edition = 99998;
                            break;
                        case "EDITION_99999_TEST_ONLY":
                        case 99999:
                            message.edition = 99999;
                            break;
                        case "EDITION_MAX":
                        case 2147483647:
                            message.edition = 2147483647;
                            break;
                        }
                        if (object.features != null) {
                            if (typeof object.features !== "object")
                                throw TypeError(".google.protobuf.FeatureSetDefaults.FeatureSetEditionDefault.features: object expected");
                            message.features = $root.google.protobuf.FeatureSet.fromObject(object.features);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a FeatureSetEditionDefault message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.FeatureSetDefaults.FeatureSetEditionDefault
                     * @static
                     * @param {google.protobuf.FeatureSetDefaults.FeatureSetEditionDefault} message FeatureSetEditionDefault
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    FeatureSetEditionDefault.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.features = null;
                            object.edition = options.enums === String ? "EDITION_UNKNOWN" : 0;
                        }
                        if (message.features != null && message.hasOwnProperty("features"))
                            object.features = $root.google.protobuf.FeatureSet.toObject(message.features, options);
                        if (message.edition != null && message.hasOwnProperty("edition"))
                            object.edition = options.enums === String ? $root.google.protobuf.Edition[message.edition] === undefined ? message.edition : $root.google.protobuf.Edition[message.edition] : message.edition;
                        return object;
                    };
    
                    /**
                     * Converts this FeatureSetEditionDefault to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.FeatureSetDefaults.FeatureSetEditionDefault
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    FeatureSetEditionDefault.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for FeatureSetEditionDefault
                     * @function getTypeUrl
                     * @memberof google.protobuf.FeatureSetDefaults.FeatureSetEditionDefault
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    FeatureSetEditionDefault.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.protobuf.FeatureSetDefaults.FeatureSetEditionDefault";
                    };
    
                    return FeatureSetEditionDefault;
                })();
    
                return FeatureSetDefaults;
            })();
    
            protobuf.SourceCodeInfo = (function() {
    
                /**
                 * Properties of a SourceCodeInfo.
                 * @memberof google.protobuf
                 * @interface ISourceCodeInfo
                 * @property {Array.<google.protobuf.SourceCodeInfo.ILocation>|null} [location] SourceCodeInfo location
                 */
    
                /**
                 * Constructs a new SourceCodeInfo.
                 * @memberof google.protobuf
                 * @classdesc Represents a SourceCodeInfo.
                 * @implements ISourceCodeInfo
                 * @constructor
                 * @param {google.protobuf.ISourceCodeInfo=} [properties] Properties to set
                 */
                function SourceCodeInfo(properties) {
                    this.location = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * SourceCodeInfo location.
                 * @member {Array.<google.protobuf.SourceCodeInfo.ILocation>} location
                 * @memberof google.protobuf.SourceCodeInfo
                 * @instance
                 */
                SourceCodeInfo.prototype.location = $util.emptyArray;
    
                /**
                 * Creates a new SourceCodeInfo instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {google.protobuf.ISourceCodeInfo=} [properties] Properties to set
                 * @returns {google.protobuf.SourceCodeInfo} SourceCodeInfo instance
                 */
                SourceCodeInfo.create = function create(properties) {
                    return new SourceCodeInfo(properties);
                };
    
                /**
                 * Encodes the specified SourceCodeInfo message. Does not implicitly {@link google.protobuf.SourceCodeInfo.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {google.protobuf.ISourceCodeInfo} message SourceCodeInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                SourceCodeInfo.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.location != null && message.location.length)
                        for (var i = 0; i < message.location.length; ++i)
                            $root.google.protobuf.SourceCodeInfo.Location.encode(message.location[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified SourceCodeInfo message, length delimited. Does not implicitly {@link google.protobuf.SourceCodeInfo.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {google.protobuf.ISourceCodeInfo} message SourceCodeInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                SourceCodeInfo.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a SourceCodeInfo message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.SourceCodeInfo} SourceCodeInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                SourceCodeInfo.decode = function decode(reader, length, error) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.SourceCodeInfo();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        if (tag === error)
                            break;
                        switch (tag >>> 3) {
                        case 1: {
                                if (!(message.location && message.location.length))
                                    message.location = [];
                                message.location.push($root.google.protobuf.SourceCodeInfo.Location.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a SourceCodeInfo message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.SourceCodeInfo} SourceCodeInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                SourceCodeInfo.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a SourceCodeInfo message.
                 * @function verify
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                SourceCodeInfo.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.location != null && message.hasOwnProperty("location")) {
                        if (!Array.isArray(message.location))
                            return "location: array expected";
                        for (var i = 0; i < message.location.length; ++i) {
                            var error = $root.google.protobuf.SourceCodeInfo.Location.verify(message.location[i]);
                            if (error)
                                return "location." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a SourceCodeInfo message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.SourceCodeInfo} SourceCodeInfo
                 */
                SourceCodeInfo.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.SourceCodeInfo)
                        return object;
                    var message = new $root.google.protobuf.SourceCodeInfo();
                    if (object.location) {
                        if (!Array.isArray(object.location))
                            throw TypeError(".google.protobuf.SourceCodeInfo.location: array expected");
                        message.location = [];
                        for (var i = 0; i < object.location.length; ++i) {
                            if (typeof object.location[i] !== "object")
                                throw TypeError(".google.protobuf.SourceCodeInfo.location: object expected");
                            message.location[i] = $root.google.protobuf.SourceCodeInfo.Location.fromObject(object.location[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a SourceCodeInfo message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {google.protobuf.SourceCodeInfo} message SourceCodeInfo
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                SourceCodeInfo.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.location = [];
                    if (message.location && message.location.length) {
                        object.location = [];
                        for (var j = 0; j < message.location.length; ++j)
                            object.location[j] = $root.google.protobuf.SourceCodeInfo.Location.toObject(message.location[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this SourceCodeInfo to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.SourceCodeInfo
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                SourceCodeInfo.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for SourceCodeInfo
                 * @function getTypeUrl
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                SourceCodeInfo.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.SourceCodeInfo";
                };
    
                SourceCodeInfo.Location = (function() {
    
                    /**
                     * Properties of a Location.
                     * @memberof google.protobuf.SourceCodeInfo
                     * @interface ILocation
                     * @property {Array.<number>|null} [path] Location path
                     * @property {Array.<number>|null} [span] Location span
                     * @property {string|null} [leadingComments] Location leadingComments
                     * @property {string|null} [trailingComments] Location trailingComments
                     * @property {Array.<string>|null} [leadingDetachedComments] Location leadingDetachedComments
                     */
    
                    /**
                     * Constructs a new Location.
                     * @memberof google.protobuf.SourceCodeInfo
                     * @classdesc Represents a Location.
                     * @implements ILocation
                     * @constructor
                     * @param {google.protobuf.SourceCodeInfo.ILocation=} [properties] Properties to set
                     */
                    function Location(properties) {
                        this.path = [];
                        this.span = [];
                        this.leadingDetachedComments = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * Location path.
                     * @member {Array.<number>} path
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     */
                    Location.prototype.path = $util.emptyArray;
    
                    /**
                     * Location span.
                     * @member {Array.<number>} span
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     */
                    Location.prototype.span = $util.emptyArray;
    
                    /**
                     * Location leadingComments.
                     * @member {string} leadingComments
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     */
                    Location.prototype.leadingComments = "";
    
                    /**
                     * Location trailingComments.
                     * @member {string} trailingComments
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     */
                    Location.prototype.trailingComments = "";
    
                    /**
                     * Location leadingDetachedComments.
                     * @member {Array.<string>} leadingDetachedComments
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     */
                    Location.prototype.leadingDetachedComments = $util.emptyArray;
    
                    /**
                     * Creates a new Location instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {google.protobuf.SourceCodeInfo.ILocation=} [properties] Properties to set
                     * @returns {google.protobuf.SourceCodeInfo.Location} Location instance
                     */
                    Location.create = function create(properties) {
                        return new Location(properties);
                    };
    
                    /**
                     * Encodes the specified Location message. Does not implicitly {@link google.protobuf.SourceCodeInfo.Location.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {google.protobuf.SourceCodeInfo.ILocation} message Location message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Location.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.path != null && message.path.length) {
                            writer.uint32(/* id 1, wireType 2 =*/10).fork();
                            for (var i = 0; i < message.path.length; ++i)
                                writer.int32(message.path[i]);
                            writer.ldelim();
                        }
                        if (message.span != null && message.span.length) {
                            writer.uint32(/* id 2, wireType 2 =*/18).fork();
                            for (var i = 0; i < message.span.length; ++i)
                                writer.int32(message.span[i]);
                            writer.ldelim();
                        }
                        if (message.leadingComments != null && Object.hasOwnProperty.call(message, "leadingComments"))
                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.leadingComments);
                        if (message.trailingComments != null && Object.hasOwnProperty.call(message, "trailingComments"))
                            writer.uint32(/* id 4, wireType 2 =*/34).string(message.trailingComments);
                        if (message.leadingDetachedComments != null && message.leadingDetachedComments.length)
                            for (var i = 0; i < message.leadingDetachedComments.length; ++i)
                                writer.uint32(/* id 6, wireType 2 =*/50).string(message.leadingDetachedComments[i]);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified Location message, length delimited. Does not implicitly {@link google.protobuf.SourceCodeInfo.Location.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {google.protobuf.SourceCodeInfo.ILocation} message Location message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Location.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a Location message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.SourceCodeInfo.Location} Location
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Location.decode = function decode(reader, length, error) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.SourceCodeInfo.Location();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            if (tag === error)
                                break;
                            switch (tag >>> 3) {
                            case 1: {
                                    if (!(message.path && message.path.length))
                                        message.path = [];
                                    if ((tag & 7) === 2) {
                                        var end2 = reader.uint32() + reader.pos;
                                        while (reader.pos < end2)
                                            message.path.push(reader.int32());
                                    } else
                                        message.path.push(reader.int32());
                                    break;
                                }
                            case 2: {
                                    if (!(message.span && message.span.length))
                                        message.span = [];
                                    if ((tag & 7) === 2) {
                                        var end2 = reader.uint32() + reader.pos;
                                        while (reader.pos < end2)
                                            message.span.push(reader.int32());
                                    } else
                                        message.span.push(reader.int32());
                                    break;
                                }
                            case 3: {
                                    message.leadingComments = reader.string();
                                    break;
                                }
                            case 4: {
                                    message.trailingComments = reader.string();
                                    break;
                                }
                            case 6: {
                                    if (!(message.leadingDetachedComments && message.leadingDetachedComments.length))
                                        message.leadingDetachedComments = [];
                                    message.leadingDetachedComments.push(reader.string());
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a Location message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.SourceCodeInfo.Location} Location
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Location.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a Location message.
                     * @function verify
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    Location.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.path != null && message.hasOwnProperty("path")) {
                            if (!Array.isArray(message.path))
                                return "path: array expected";
                            for (var i = 0; i < message.path.length; ++i)
                                if (!$util.isInteger(message.path[i]))
                                    return "path: integer[] expected";
                        }
                        if (message.span != null && message.hasOwnProperty("span")) {
                            if (!Array.isArray(message.span))
                                return "span: array expected";
                            for (var i = 0; i < message.span.length; ++i)
                                if (!$util.isInteger(message.span[i]))
                                    return "span: integer[] expected";
                        }
                        if (message.leadingComments != null && message.hasOwnProperty("leadingComments"))
                            if (!$util.isString(message.leadingComments))
                                return "leadingComments: string expected";
                        if (message.trailingComments != null && message.hasOwnProperty("trailingComments"))
                            if (!$util.isString(message.trailingComments))
                                return "trailingComments: string expected";
                        if (message.leadingDetachedComments != null && message.hasOwnProperty("leadingDetachedComments")) {
                            if (!Array.isArray(message.leadingDetachedComments))
                                return "leadingDetachedComments: array expected";
                            for (var i = 0; i < message.leadingDetachedComments.length; ++i)
                                if (!$util.isString(message.leadingDetachedComments[i]))
                                    return "leadingDetachedComments: string[] expected";
                        }
                        return null;
                    };
    
                    /**
                     * Creates a Location message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.SourceCodeInfo.Location} Location
                     */
                    Location.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.SourceCodeInfo.Location)
                            return object;
                        var message = new $root.google.protobuf.SourceCodeInfo.Location();
                        if (object.path) {
                            if (!Array.isArray(object.path))
                                throw TypeError(".google.protobuf.SourceCodeInfo.Location.path: array expected");
                            message.path = [];
                            for (var i = 0; i < object.path.length; ++i)
                                message.path[i] = object.path[i] | 0;
                        }
                        if (object.span) {
                            if (!Array.isArray(object.span))
                                throw TypeError(".google.protobuf.SourceCodeInfo.Location.span: array expected");
                            message.span = [];
                            for (var i = 0; i < object.span.length; ++i)
                                message.span[i] = object.span[i] | 0;
                        }
                        if (object.leadingComments != null)
                            message.leadingComments = String(object.leadingComments);
                        if (object.trailingComments != null)
                            message.trailingComments = String(object.trailingComments);
                        if (object.leadingDetachedComments) {
                            if (!Array.isArray(object.leadingDetachedComments))
                                throw TypeError(".google.protobuf.SourceCodeInfo.Location.leadingDetachedComments: array expected");
                            message.leadingDetachedComments = [];
                            for (var i = 0; i < object.leadingDetachedComments.length; ++i)
                                message.leadingDetachedComments[i] = String(object.leadingDetachedComments[i]);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a Location message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {google.protobuf.SourceCodeInfo.Location} message Location
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    Location.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults) {
                            object.path = [];
                            object.span = [];
                            object.leadingDetachedComments = [];
                        }
                        if (options.defaults) {
                            object.leadingComments = "";
                            object.trailingComments = "";
                        }
                        if (message.path && message.path.length) {
                            object.path = [];
                            for (var j = 0; j < message.path.length; ++j)
                                object.path[j] = message.path[j];
                        }
                        if (message.span && message.span.length) {
                            object.span = [];
                            for (var j = 0; j < message.span.length; ++j)
                                object.span[j] = message.span[j];
                        }
                        if (message.leadingComments != null && message.hasOwnProperty("leadingComments"))
                            object.leadingComments = message.leadingComments;
                        if (message.trailingComments != null && message.hasOwnProperty("trailingComments"))
                            object.trailingComments = message.trailingComments;
                        if (message.leadingDetachedComments && message.leadingDetachedComments.length) {
                            object.leadingDetachedComments = [];
                            for (var j = 0; j < message.leadingDetachedComments.length; ++j)
                                object.leadingDetachedComments[j] = message.leadingDetachedComments[j];
                        }
                        return object;
                    };
    
                    /**
                     * Converts this Location to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    Location.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for Location
                     * @function getTypeUrl
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    Location.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.protobuf.SourceCodeInfo.Location";
                    };
    
                    return Location;
                })();
    
                return SourceCodeInfo;
            })();
    
            protobuf.GeneratedCodeInfo = (function() {
    
                /**
                 * Properties of a GeneratedCodeInfo.
                 * @memberof google.protobuf
                 * @interface IGeneratedCodeInfo
                 * @property {Array.<google.protobuf.GeneratedCodeInfo.IAnnotation>|null} [annotation] GeneratedCodeInfo annotation
                 */
    
                /**
                 * Constructs a new GeneratedCodeInfo.
                 * @memberof google.protobuf
                 * @classdesc Represents a GeneratedCodeInfo.
                 * @implements IGeneratedCodeInfo
                 * @constructor
                 * @param {google.protobuf.IGeneratedCodeInfo=} [properties] Properties to set
                 */
                function GeneratedCodeInfo(properties) {
                    this.annotation = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * GeneratedCodeInfo annotation.
                 * @member {Array.<google.protobuf.GeneratedCodeInfo.IAnnotation>} annotation
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @instance
                 */
                GeneratedCodeInfo.prototype.annotation = $util.emptyArray;
    
                /**
                 * Creates a new GeneratedCodeInfo instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {google.protobuf.IGeneratedCodeInfo=} [properties] Properties to set
                 * @returns {google.protobuf.GeneratedCodeInfo} GeneratedCodeInfo instance
                 */
                GeneratedCodeInfo.create = function create(properties) {
                    return new GeneratedCodeInfo(properties);
                };
    
                /**
                 * Encodes the specified GeneratedCodeInfo message. Does not implicitly {@link google.protobuf.GeneratedCodeInfo.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {google.protobuf.IGeneratedCodeInfo} message GeneratedCodeInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                GeneratedCodeInfo.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.annotation != null && message.annotation.length)
                        for (var i = 0; i < message.annotation.length; ++i)
                            $root.google.protobuf.GeneratedCodeInfo.Annotation.encode(message.annotation[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified GeneratedCodeInfo message, length delimited. Does not implicitly {@link google.protobuf.GeneratedCodeInfo.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {google.protobuf.IGeneratedCodeInfo} message GeneratedCodeInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                GeneratedCodeInfo.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a GeneratedCodeInfo message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.GeneratedCodeInfo} GeneratedCodeInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                GeneratedCodeInfo.decode = function decode(reader, length, error) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.GeneratedCodeInfo();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        if (tag === error)
                            break;
                        switch (tag >>> 3) {
                        case 1: {
                                if (!(message.annotation && message.annotation.length))
                                    message.annotation = [];
                                message.annotation.push($root.google.protobuf.GeneratedCodeInfo.Annotation.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a GeneratedCodeInfo message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.GeneratedCodeInfo} GeneratedCodeInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                GeneratedCodeInfo.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a GeneratedCodeInfo message.
                 * @function verify
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                GeneratedCodeInfo.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.annotation != null && message.hasOwnProperty("annotation")) {
                        if (!Array.isArray(message.annotation))
                            return "annotation: array expected";
                        for (var i = 0; i < message.annotation.length; ++i) {
                            var error = $root.google.protobuf.GeneratedCodeInfo.Annotation.verify(message.annotation[i]);
                            if (error)
                                return "annotation." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a GeneratedCodeInfo message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.GeneratedCodeInfo} GeneratedCodeInfo
                 */
                GeneratedCodeInfo.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.GeneratedCodeInfo)
                        return object;
                    var message = new $root.google.protobuf.GeneratedCodeInfo();
                    if (object.annotation) {
                        if (!Array.isArray(object.annotation))
                            throw TypeError(".google.protobuf.GeneratedCodeInfo.annotation: array expected");
                        message.annotation = [];
                        for (var i = 0; i < object.annotation.length; ++i) {
                            if (typeof object.annotation[i] !== "object")
                                throw TypeError(".google.protobuf.GeneratedCodeInfo.annotation: object expected");
                            message.annotation[i] = $root.google.protobuf.GeneratedCodeInfo.Annotation.fromObject(object.annotation[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a GeneratedCodeInfo message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {google.protobuf.GeneratedCodeInfo} message GeneratedCodeInfo
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                GeneratedCodeInfo.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.annotation = [];
                    if (message.annotation && message.annotation.length) {
                        object.annotation = [];
                        for (var j = 0; j < message.annotation.length; ++j)
                            object.annotation[j] = $root.google.protobuf.GeneratedCodeInfo.Annotation.toObject(message.annotation[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this GeneratedCodeInfo to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                GeneratedCodeInfo.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for GeneratedCodeInfo
                 * @function getTypeUrl
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                GeneratedCodeInfo.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.GeneratedCodeInfo";
                };
    
                GeneratedCodeInfo.Annotation = (function() {
    
                    /**
                     * Properties of an Annotation.
                     * @memberof google.protobuf.GeneratedCodeInfo
                     * @interface IAnnotation
                     * @property {Array.<number>|null} [path] Annotation path
                     * @property {string|null} [sourceFile] Annotation sourceFile
                     * @property {number|null} [begin] Annotation begin
                     * @property {number|null} [end] Annotation end
                     * @property {google.protobuf.GeneratedCodeInfo.Annotation.Semantic|null} [semantic] Annotation semantic
                     */
    
                    /**
                     * Constructs a new Annotation.
                     * @memberof google.protobuf.GeneratedCodeInfo
                     * @classdesc Represents an Annotation.
                     * @implements IAnnotation
                     * @constructor
                     * @param {google.protobuf.GeneratedCodeInfo.IAnnotation=} [properties] Properties to set
                     */
                    function Annotation(properties) {
                        this.path = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * Annotation path.
                     * @member {Array.<number>} path
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     */
                    Annotation.prototype.path = $util.emptyArray;
    
                    /**
                     * Annotation sourceFile.
                     * @member {string} sourceFile
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     */
                    Annotation.prototype.sourceFile = "";
    
                    /**
                     * Annotation begin.
                     * @member {number} begin
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     */
                    Annotation.prototype.begin = 0;
    
                    /**
                     * Annotation end.
                     * @member {number} end
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     */
                    Annotation.prototype.end = 0;
    
                    /**
                     * Annotation semantic.
                     * @member {google.protobuf.GeneratedCodeInfo.Annotation.Semantic} semantic
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     */
                    Annotation.prototype.semantic = 0;
    
                    /**
                     * Creates a new Annotation instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {google.protobuf.GeneratedCodeInfo.IAnnotation=} [properties] Properties to set
                     * @returns {google.protobuf.GeneratedCodeInfo.Annotation} Annotation instance
                     */
                    Annotation.create = function create(properties) {
                        return new Annotation(properties);
                    };
    
                    /**
                     * Encodes the specified Annotation message. Does not implicitly {@link google.protobuf.GeneratedCodeInfo.Annotation.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {google.protobuf.GeneratedCodeInfo.IAnnotation} message Annotation message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Annotation.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.path != null && message.path.length) {
                            writer.uint32(/* id 1, wireType 2 =*/10).fork();
                            for (var i = 0; i < message.path.length; ++i)
                                writer.int32(message.path[i]);
                            writer.ldelim();
                        }
                        if (message.sourceFile != null && Object.hasOwnProperty.call(message, "sourceFile"))
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.sourceFile);
                        if (message.begin != null && Object.hasOwnProperty.call(message, "begin"))
                            writer.uint32(/* id 3, wireType 0 =*/24).int32(message.begin);
                        if (message.end != null && Object.hasOwnProperty.call(message, "end"))
                            writer.uint32(/* id 4, wireType 0 =*/32).int32(message.end);
                        if (message.semantic != null && Object.hasOwnProperty.call(message, "semantic"))
                            writer.uint32(/* id 5, wireType 0 =*/40).int32(message.semantic);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified Annotation message, length delimited. Does not implicitly {@link google.protobuf.GeneratedCodeInfo.Annotation.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {google.protobuf.GeneratedCodeInfo.IAnnotation} message Annotation message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Annotation.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes an Annotation message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.GeneratedCodeInfo.Annotation} Annotation
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Annotation.decode = function decode(reader, length, error) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.GeneratedCodeInfo.Annotation();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            if (tag === error)
                                break;
                            switch (tag >>> 3) {
                            case 1: {
                                    if (!(message.path && message.path.length))
                                        message.path = [];
                                    if ((tag & 7) === 2) {
                                        var end2 = reader.uint32() + reader.pos;
                                        while (reader.pos < end2)
                                            message.path.push(reader.int32());
                                    } else
                                        message.path.push(reader.int32());
                                    break;
                                }
                            case 2: {
                                    message.sourceFile = reader.string();
                                    break;
                                }
                            case 3: {
                                    message.begin = reader.int32();
                                    break;
                                }
                            case 4: {
                                    message.end = reader.int32();
                                    break;
                                }
                            case 5: {
                                    message.semantic = reader.int32();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes an Annotation message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.GeneratedCodeInfo.Annotation} Annotation
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Annotation.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies an Annotation message.
                     * @function verify
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    Annotation.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.path != null && message.hasOwnProperty("path")) {
                            if (!Array.isArray(message.path))
                                return "path: array expected";
                            for (var i = 0; i < message.path.length; ++i)
                                if (!$util.isInteger(message.path[i]))
                                    return "path: integer[] expected";
                        }
                        if (message.sourceFile != null && message.hasOwnProperty("sourceFile"))
                            if (!$util.isString(message.sourceFile))
                                return "sourceFile: string expected";
                        if (message.begin != null && message.hasOwnProperty("begin"))
                            if (!$util.isInteger(message.begin))
                                return "begin: integer expected";
                        if (message.end != null && message.hasOwnProperty("end"))
                            if (!$util.isInteger(message.end))
                                return "end: integer expected";
                        if (message.semantic != null && message.hasOwnProperty("semantic"))
                            switch (message.semantic) {
                            default:
                                return "semantic: enum value expected";
                            case 0:
                            case 1:
                            case 2:
                                break;
                            }
                        return null;
                    };
    
                    /**
                     * Creates an Annotation message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.GeneratedCodeInfo.Annotation} Annotation
                     */
                    Annotation.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.GeneratedCodeInfo.Annotation)
                            return object;
                        var message = new $root.google.protobuf.GeneratedCodeInfo.Annotation();
                        if (object.path) {
                            if (!Array.isArray(object.path))
                                throw TypeError(".google.protobuf.GeneratedCodeInfo.Annotation.path: array expected");
                            message.path = [];
                            for (var i = 0; i < object.path.length; ++i)
                                message.path[i] = object.path[i] | 0;
                        }
                        if (object.sourceFile != null)
                            message.sourceFile = String(object.sourceFile);
                        if (object.begin != null)
                            message.begin = object.begin | 0;
                        if (object.end != null)
                            message.end = object.end | 0;
                        switch (object.semantic) {
                        default:
                            if (typeof object.semantic === "number") {
                                message.semantic = object.semantic;
                                break;
                            }
                            break;
                        case "NONE":
                        case 0:
                            message.semantic = 0;
                            break;
                        case "SET":
                        case 1:
                            message.semantic = 1;
                            break;
                        case "ALIAS":
                        case 2:
                            message.semantic = 2;
                            break;
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from an Annotation message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {google.protobuf.GeneratedCodeInfo.Annotation} message Annotation
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    Annotation.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults)
                            object.path = [];
                        if (options.defaults) {
                            object.sourceFile = "";
                            object.begin = 0;
                            object.end = 0;
                            object.semantic = options.enums === String ? "NONE" : 0;
                        }
                        if (message.path && message.path.length) {
                            object.path = [];
                            for (var j = 0; j < message.path.length; ++j)
                                object.path[j] = message.path[j];
                        }
                        if (message.sourceFile != null && message.hasOwnProperty("sourceFile"))
                            object.sourceFile = message.sourceFile;
                        if (message.begin != null && message.hasOwnProperty("begin"))
                            object.begin = message.begin;
                        if (message.end != null && message.hasOwnProperty("end"))
                            object.end = message.end;
                        if (message.semantic != null && message.hasOwnProperty("semantic"))
                            object.semantic = options.enums === String ? $root.google.protobuf.GeneratedCodeInfo.Annotation.Semantic[message.semantic] === undefined ? message.semantic : $root.google.protobuf.GeneratedCodeInfo.Annotation.Semantic[message.semantic] : message.semantic;
                        return object;
                    };
    
                    /**
                     * Converts this Annotation to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    Annotation.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for Annotation
                     * @function getTypeUrl
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    Annotation.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.protobuf.GeneratedCodeInfo.Annotation";
                    };
    
                    /**
                     * Semantic enum.
                     * @name google.protobuf.GeneratedCodeInfo.Annotation.Semantic
                     * @enum {number}
                     * @property {number} NONE=0 NONE value
                     * @property {number} SET=1 SET value
                     * @property {number} ALIAS=2 ALIAS value
                     */
                    Annotation.Semantic = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "NONE"] = 0;
                        values[valuesById[1] = "SET"] = 1;
                        values[valuesById[2] = "ALIAS"] = 2;
                        return values;
                    })();
    
                    return Annotation;
                })();
    
                return GeneratedCodeInfo;
            })();
    
            protobuf.Duration = (function() {
    
                /**
                 * Properties of a Duration.
                 * @memberof google.protobuf
                 * @interface IDuration
                 * @property {number|Long|null} [seconds] Duration seconds
                 * @property {number|null} [nanos] Duration nanos
                 */
    
                /**
                 * Constructs a new Duration.
                 * @memberof google.protobuf
                 * @classdesc Represents a Duration.
                 * @implements IDuration
                 * @constructor
                 * @param {google.protobuf.IDuration=} [properties] Properties to set
                 */
                function Duration(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Duration seconds.
                 * @member {number|Long} seconds
                 * @memberof google.protobuf.Duration
                 * @instance
                 */
                Duration.prototype.seconds = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                /**
                 * Duration nanos.
                 * @member {number} nanos
                 * @memberof google.protobuf.Duration
                 * @instance
                 */
                Duration.prototype.nanos = 0;
    
                /**
                 * Creates a new Duration instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {google.protobuf.IDuration=} [properties] Properties to set
                 * @returns {google.protobuf.Duration} Duration instance
                 */
                Duration.create = function create(properties) {
                    return new Duration(properties);
                };
    
                /**
                 * Encodes the specified Duration message. Does not implicitly {@link google.protobuf.Duration.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {google.protobuf.IDuration} message Duration message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Duration.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.seconds != null && Object.hasOwnProperty.call(message, "seconds"))
                        writer.uint32(/* id 1, wireType 0 =*/8).int64(message.seconds);
                    if (message.nanos != null && Object.hasOwnProperty.call(message, "nanos"))
                        writer.uint32(/* id 2, wireType 0 =*/16).int32(message.nanos);
                    return writer;
                };
    
                /**
                 * Encodes the specified Duration message, length delimited. Does not implicitly {@link google.protobuf.Duration.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {google.protobuf.IDuration} message Duration message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Duration.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a Duration message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.Duration} Duration
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Duration.decode = function decode(reader, length, error) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.Duration();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        if (tag === error)
                            break;
                        switch (tag >>> 3) {
                        case 1: {
                                message.seconds = reader.int64();
                                break;
                            }
                        case 2: {
                                message.nanos = reader.int32();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a Duration message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.Duration} Duration
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Duration.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a Duration message.
                 * @function verify
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Duration.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.seconds != null && message.hasOwnProperty("seconds"))
                        if (!$util.isInteger(message.seconds) && !(message.seconds && $util.isInteger(message.seconds.low) && $util.isInteger(message.seconds.high)))
                            return "seconds: integer|Long expected";
                    if (message.nanos != null && message.hasOwnProperty("nanos"))
                        if (!$util.isInteger(message.nanos))
                            return "nanos: integer expected";
                    return null;
                };
    
                /**
                 * Creates a Duration message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.Duration} Duration
                 */
                Duration.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.Duration)
                        return object;
                    var message = new $root.google.protobuf.Duration();
                    if (object.seconds != null)
                        if ($util.Long)
                            (message.seconds = $util.Long.fromValue(object.seconds)).unsigned = false;
                        else if (typeof object.seconds === "string")
                            message.seconds = parseInt(object.seconds, 10);
                        else if (typeof object.seconds === "number")
                            message.seconds = object.seconds;
                        else if (typeof object.seconds === "object")
                            message.seconds = new $util.LongBits(object.seconds.low >>> 0, object.seconds.high >>> 0).toNumber();
                    if (object.nanos != null)
                        message.nanos = object.nanos | 0;
                    return message;
                };
    
                /**
                 * Creates a plain object from a Duration message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {google.protobuf.Duration} message Duration
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Duration.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, false);
                            object.seconds = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.seconds = options.longs === String ? "0" : 0;
                        object.nanos = 0;
                    }
                    if (message.seconds != null && message.hasOwnProperty("seconds"))
                        if (typeof message.seconds === "number")
                            object.seconds = options.longs === String ? String(message.seconds) : message.seconds;
                        else
                            object.seconds = options.longs === String ? $util.Long.prototype.toString.call(message.seconds) : options.longs === Number ? new $util.LongBits(message.seconds.low >>> 0, message.seconds.high >>> 0).toNumber() : message.seconds;
                    if (message.nanos != null && message.hasOwnProperty("nanos"))
                        object.nanos = message.nanos;
                    return object;
                };
    
                /**
                 * Converts this Duration to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.Duration
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Duration.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Duration
                 * @function getTypeUrl
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Duration.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.Duration";
                };
    
                return Duration;
            })();
    
            protobuf.Any = (function() {
    
                /**
                 * Properties of an Any.
                 * @memberof google.protobuf
                 * @interface IAny
                 * @property {string|null} [type_url] Any type_url
                 * @property {Uint8Array|null} [value] Any value
                 */
    
                /**
                 * Constructs a new Any.
                 * @memberof google.protobuf
                 * @classdesc Represents an Any.
                 * @implements IAny
                 * @constructor
                 * @param {google.protobuf.IAny=} [properties] Properties to set
                 */
                function Any(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Any type_url.
                 * @member {string} type_url
                 * @memberof google.protobuf.Any
                 * @instance
                 */
                Any.prototype.type_url = "";
    
                /**
                 * Any value.
                 * @member {Uint8Array} value
                 * @memberof google.protobuf.Any
                 * @instance
                 */
                Any.prototype.value = $util.newBuffer([]);
    
                /**
                 * Creates a new Any instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {google.protobuf.IAny=} [properties] Properties to set
                 * @returns {google.protobuf.Any} Any instance
                 */
                Any.create = function create(properties) {
                    return new Any(properties);
                };
    
                /**
                 * Encodes the specified Any message. Does not implicitly {@link google.protobuf.Any.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {google.protobuf.IAny} message Any message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Any.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.type_url != null && Object.hasOwnProperty.call(message, "type_url"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.type_url);
                    if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                        writer.uint32(/* id 2, wireType 2 =*/18).bytes(message.value);
                    return writer;
                };
    
                /**
                 * Encodes the specified Any message, length delimited. Does not implicitly {@link google.protobuf.Any.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {google.protobuf.IAny} message Any message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Any.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an Any message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.Any} Any
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Any.decode = function decode(reader, length, error) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.Any();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        if (tag === error)
                            break;
                        switch (tag >>> 3) {
                        case 1: {
                                message.type_url = reader.string();
                                break;
                            }
                        case 2: {
                                message.value = reader.bytes();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an Any message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.Any} Any
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Any.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an Any message.
                 * @function verify
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Any.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.type_url != null && message.hasOwnProperty("type_url"))
                        if (!$util.isString(message.type_url))
                            return "type_url: string expected";
                    if (message.value != null && message.hasOwnProperty("value"))
                        if (!(message.value && typeof message.value.length === "number" || $util.isString(message.value)))
                            return "value: buffer expected";
                    return null;
                };
    
                /**
                 * Creates an Any message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.Any} Any
                 */
                Any.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.Any)
                        return object;
                    var message = new $root.google.protobuf.Any();
                    if (object.type_url != null)
                        message.type_url = String(object.type_url);
                    if (object.value != null)
                        if (typeof object.value === "string")
                            $util.base64.decode(object.value, message.value = $util.newBuffer($util.base64.length(object.value)), 0);
                        else if (object.value.length >= 0)
                            message.value = object.value;
                    return message;
                };
    
                /**
                 * Creates a plain object from an Any message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {google.protobuf.Any} message Any
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Any.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.type_url = "";
                        if (options.bytes === String)
                            object.value = "";
                        else {
                            object.value = [];
                            if (options.bytes !== Array)
                                object.value = $util.newBuffer(object.value);
                        }
                    }
                    if (message.type_url != null && message.hasOwnProperty("type_url"))
                        object.type_url = message.type_url;
                    if (message.value != null && message.hasOwnProperty("value"))
                        object.value = options.bytes === String ? $util.base64.encode(message.value, 0, message.value.length) : options.bytes === Array ? Array.prototype.slice.call(message.value) : message.value;
                    return object;
                };
    
                /**
                 * Converts this Any to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.Any
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Any.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Any
                 * @function getTypeUrl
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Any.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.Any";
                };
    
                return Any;
            })();
    
            protobuf.Empty = (function() {
    
                /**
                 * Properties of an Empty.
                 * @memberof google.protobuf
                 * @interface IEmpty
                 */
    
                /**
                 * Constructs a new Empty.
                 * @memberof google.protobuf
                 * @classdesc Represents an Empty.
                 * @implements IEmpty
                 * @constructor
                 * @param {google.protobuf.IEmpty=} [properties] Properties to set
                 */
                function Empty(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Creates a new Empty instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {google.protobuf.IEmpty=} [properties] Properties to set
                 * @returns {google.protobuf.Empty} Empty instance
                 */
                Empty.create = function create(properties) {
                    return new Empty(properties);
                };
    
                /**
                 * Encodes the specified Empty message. Does not implicitly {@link google.protobuf.Empty.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {google.protobuf.IEmpty} message Empty message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Empty.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    return writer;
                };
    
                /**
                 * Encodes the specified Empty message, length delimited. Does not implicitly {@link google.protobuf.Empty.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {google.protobuf.IEmpty} message Empty message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Empty.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an Empty message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.Empty} Empty
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Empty.decode = function decode(reader, length, error) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.Empty();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        if (tag === error)
                            break;
                        switch (tag >>> 3) {
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an Empty message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.Empty} Empty
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Empty.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an Empty message.
                 * @function verify
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Empty.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    return null;
                };
    
                /**
                 * Creates an Empty message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.Empty} Empty
                 */
                Empty.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.Empty)
                        return object;
                    return new $root.google.protobuf.Empty();
                };
    
                /**
                 * Creates a plain object from an Empty message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {google.protobuf.Empty} message Empty
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Empty.toObject = function toObject() {
                    return {};
                };
    
                /**
                 * Converts this Empty to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.Empty
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Empty.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Empty
                 * @function getTypeUrl
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Empty.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.Empty";
                };
    
                return Empty;
            })();
    
            protobuf.FieldMask = (function() {
    
                /**
                 * Properties of a FieldMask.
                 * @memberof google.protobuf
                 * @interface IFieldMask
                 * @property {Array.<string>|null} [paths] FieldMask paths
                 */
    
                /**
                 * Constructs a new FieldMask.
                 * @memberof google.protobuf
                 * @classdesc Represents a FieldMask.
                 * @implements IFieldMask
                 * @constructor
                 * @param {google.protobuf.IFieldMask=} [properties] Properties to set
                 */
                function FieldMask(properties) {
                    this.paths = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FieldMask paths.
                 * @member {Array.<string>} paths
                 * @memberof google.protobuf.FieldMask
                 * @instance
                 */
                FieldMask.prototype.paths = $util.emptyArray;
    
                /**
                 * Creates a new FieldMask instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {google.protobuf.IFieldMask=} [properties] Properties to set
                 * @returns {google.protobuf.FieldMask} FieldMask instance
                 */
                FieldMask.create = function create(properties) {
                    return new FieldMask(properties);
                };
    
                /**
                 * Encodes the specified FieldMask message. Does not implicitly {@link google.protobuf.FieldMask.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {google.protobuf.IFieldMask} message FieldMask message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldMask.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.paths != null && message.paths.length)
                        for (var i = 0; i < message.paths.length; ++i)
                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.paths[i]);
                    return writer;
                };
    
                /**
                 * Encodes the specified FieldMask message, length delimited. Does not implicitly {@link google.protobuf.FieldMask.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {google.protobuf.IFieldMask} message FieldMask message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldMask.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FieldMask message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FieldMask} FieldMask
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldMask.decode = function decode(reader, length, error) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FieldMask();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        if (tag === error)
                            break;
                        switch (tag >>> 3) {
                        case 1: {
                                if (!(message.paths && message.paths.length))
                                    message.paths = [];
                                message.paths.push(reader.string());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FieldMask message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FieldMask} FieldMask
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldMask.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FieldMask message.
                 * @function verify
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FieldMask.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.paths != null && message.hasOwnProperty("paths")) {
                        if (!Array.isArray(message.paths))
                            return "paths: array expected";
                        for (var i = 0; i < message.paths.length; ++i)
                            if (!$util.isString(message.paths[i]))
                                return "paths: string[] expected";
                    }
                    return null;
                };
    
                /**
                 * Creates a FieldMask message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FieldMask} FieldMask
                 */
                FieldMask.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FieldMask)
                        return object;
                    var message = new $root.google.protobuf.FieldMask();
                    if (object.paths) {
                        if (!Array.isArray(object.paths))
                            throw TypeError(".google.protobuf.FieldMask.paths: array expected");
                        message.paths = [];
                        for (var i = 0; i < object.paths.length; ++i)
                            message.paths[i] = String(object.paths[i]);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a FieldMask message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {google.protobuf.FieldMask} message FieldMask
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FieldMask.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.paths = [];
                    if (message.paths && message.paths.length) {
                        object.paths = [];
                        for (var j = 0; j < message.paths.length; ++j)
                            object.paths[j] = message.paths[j];
                    }
                    return object;
                };
    
                /**
                 * Converts this FieldMask to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FieldMask
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FieldMask.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for FieldMask
                 * @function getTypeUrl
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                FieldMask.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.FieldMask";
                };
    
                return FieldMask;
            })();
    
            protobuf.Timestamp = (function() {
    
                /**
                 * Properties of a Timestamp.
                 * @memberof google.protobuf
                 * @interface ITimestamp
                 * @property {number|Long|null} [seconds] Timestamp seconds
                 * @property {number|null} [nanos] Timestamp nanos
                 */
    
                /**
                 * Constructs a new Timestamp.
                 * @memberof google.protobuf
                 * @classdesc Represents a Timestamp.
                 * @implements ITimestamp
                 * @constructor
                 * @param {google.protobuf.ITimestamp=} [properties] Properties to set
                 */
                function Timestamp(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Timestamp seconds.
                 * @member {number|Long} seconds
                 * @memberof google.protobuf.Timestamp
                 * @instance
                 */
                Timestamp.prototype.seconds = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                /**
                 * Timestamp nanos.
                 * @member {number} nanos
                 * @memberof google.protobuf.Timestamp
                 * @instance
                 */
                Timestamp.prototype.nanos = 0;
    
                /**
                 * Creates a new Timestamp instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {google.protobuf.ITimestamp=} [properties] Properties to set
                 * @returns {google.protobuf.Timestamp} Timestamp instance
                 */
                Timestamp.create = function create(properties) {
                    return new Timestamp(properties);
                };
    
                /**
                 * Encodes the specified Timestamp message. Does not implicitly {@link google.protobuf.Timestamp.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {google.protobuf.ITimestamp} message Timestamp message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Timestamp.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.seconds != null && Object.hasOwnProperty.call(message, "seconds"))
                        writer.uint32(/* id 1, wireType 0 =*/8).int64(message.seconds);
                    if (message.nanos != null && Object.hasOwnProperty.call(message, "nanos"))
                        writer.uint32(/* id 2, wireType 0 =*/16).int32(message.nanos);
                    return writer;
                };
    
                /**
                 * Encodes the specified Timestamp message, length delimited. Does not implicitly {@link google.protobuf.Timestamp.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {google.protobuf.ITimestamp} message Timestamp message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Timestamp.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a Timestamp message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.Timestamp} Timestamp
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Timestamp.decode = function decode(reader, length, error) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.Timestamp();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        if (tag === error)
                            break;
                        switch (tag >>> 3) {
                        case 1: {
                                message.seconds = reader.int64();
                                break;
                            }
                        case 2: {
                                message.nanos = reader.int32();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a Timestamp message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.Timestamp} Timestamp
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Timestamp.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a Timestamp message.
                 * @function verify
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Timestamp.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.seconds != null && message.hasOwnProperty("seconds"))
                        if (!$util.isInteger(message.seconds) && !(message.seconds && $util.isInteger(message.seconds.low) && $util.isInteger(message.seconds.high)))
                            return "seconds: integer|Long expected";
                    if (message.nanos != null && message.hasOwnProperty("nanos"))
                        if (!$util.isInteger(message.nanos))
                            return "nanos: integer expected";
                    return null;
                };
    
                /**
                 * Creates a Timestamp message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.Timestamp} Timestamp
                 */
                Timestamp.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.Timestamp)
                        return object;
                    var message = new $root.google.protobuf.Timestamp();
                    if (object.seconds != null)
                        if ($util.Long)
                            (message.seconds = $util.Long.fromValue(object.seconds)).unsigned = false;
                        else if (typeof object.seconds === "string")
                            message.seconds = parseInt(object.seconds, 10);
                        else if (typeof object.seconds === "number")
                            message.seconds = object.seconds;
                        else if (typeof object.seconds === "object")
                            message.seconds = new $util.LongBits(object.seconds.low >>> 0, object.seconds.high >>> 0).toNumber();
                    if (object.nanos != null)
                        message.nanos = object.nanos | 0;
                    return message;
                };
    
                /**
                 * Creates a plain object from a Timestamp message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {google.protobuf.Timestamp} message Timestamp
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Timestamp.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, false);
                            object.seconds = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.seconds = options.longs === String ? "0" : 0;
                        object.nanos = 0;
                    }
                    if (message.seconds != null && message.hasOwnProperty("seconds"))
                        if (typeof message.seconds === "number")
                            object.seconds = options.longs === String ? String(message.seconds) : message.seconds;
                        else
                            object.seconds = options.longs === String ? $util.Long.prototype.toString.call(message.seconds) : options.longs === Number ? new $util.LongBits(message.seconds.low >>> 0, message.seconds.high >>> 0).toNumber() : message.seconds;
                    if (message.nanos != null && message.hasOwnProperty("nanos"))
                        object.nanos = message.nanos;
                    return object;
                };
    
                /**
                 * Converts this Timestamp to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.Timestamp
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Timestamp.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Timestamp
                 * @function getTypeUrl
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Timestamp.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.Timestamp";
                };
    
                return Timestamp;
            })();
    
            return protobuf;
        })();
    
        google.longrunning = (function() {
    
            /**
             * Namespace longrunning.
             * @memberof google
             * @namespace
             */
            var longrunning = {};
    
            longrunning.Operations = (function() {
    
                /**
                 * Constructs a new Operations service.
                 * @memberof google.longrunning
                 * @classdesc Represents an Operations
                 * @extends $protobuf.rpc.Service
                 * @constructor
                 * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                 * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                 * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                 */
                function Operations(rpcImpl, requestDelimited, responseDelimited) {
                    $protobuf.rpc.Service.call(this, rpcImpl, requestDelimited, responseDelimited);
                }
    
                (Operations.prototype = Object.create($protobuf.rpc.Service.prototype)).constructor = Operations;
    
                /**
                 * Creates new Operations service using the specified rpc implementation.
                 * @function create
                 * @memberof google.longrunning.Operations
                 * @static
                 * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                 * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                 * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                 * @returns {Operations} RPC service. Useful where requests and/or responses are streamed.
                 */
                Operations.create = function create(rpcImpl, requestDelimited, responseDelimited) {
                    return new this(rpcImpl, requestDelimited, responseDelimited);
                };
    
                /**
                 * Callback as used by {@link google.longrunning.Operations|listOperations}.
                 * @memberof google.longrunning.Operations
                 * @typedef ListOperationsCallback
                 * @type {function}
                 * @param {Error|null} error Error, if any
                 * @param {google.longrunning.ListOperationsResponse} [response] ListOperationsResponse
                 */
    
                /**
                 * Calls ListOperations.
                 * @function listOperations
                 * @memberof google.longrunning.Operations
                 * @instance
                 * @param {google.longrunning.IListOperationsRequest} request ListOperationsRequest message or plain object
                 * @param {google.longrunning.Operations.ListOperationsCallback} callback Node-style callback called with the error, if any, and ListOperationsResponse
                 * @returns {undefined}
                 * @variation 1
                 */
                Object.defineProperty(Operations.prototype.listOperations = function listOperations(request, callback) {
                    return this.rpcCall(listOperations, $root.google.longrunning.ListOperationsRequest, $root.google.longrunning.ListOperationsResponse, request, callback);
                }, "name", { value: "ListOperations" });
    
                /**
                 * Calls ListOperations.
                 * @function listOperations
                 * @memberof google.longrunning.Operations
                 * @instance
                 * @param {google.longrunning.IListOperationsRequest} request ListOperationsRequest message or plain object
                 * @returns {Promise<google.longrunning.ListOperationsResponse>} Promise
                 * @variation 2
                 */
    
                /**
                 * Callback as used by {@link google.longrunning.Operations|getOperation}.
                 * @memberof google.longrunning.Operations
                 * @typedef GetOperationCallback
                 * @type {function}
                 * @param {Error|null} error Error, if any
                 * @param {google.longrunning.Operation} [response] Operation
                 */
    
                /**
                 * Calls GetOperation.
                 * @function getOperation
                 * @memberof google.longrunning.Operations
                 * @instance
                 * @param {google.longrunning.IGetOperationRequest} request GetOperationRequest message or plain object
                 * @param {google.longrunning.Operations.GetOperationCallback} callback Node-style callback called with the error, if any, and Operation
                 * @returns {undefined}
                 * @variation 1
                 */
                Object.defineProperty(Operations.prototype.getOperation = function getOperation(request, callback) {
                    return this.rpcCall(getOperation, $root.google.longrunning.GetOperationRequest, $root.google.longrunning.Operation, request, callback);
                }, "name", { value: "GetOperation" });
    
                /**
                 * Calls GetOperation.
                 * @function getOperation
                 * @memberof google.longrunning.Operations
                 * @instance
                 * @param {google.longrunning.IGetOperationRequest} request GetOperationRequest message or plain object
                 * @returns {Promise<google.longrunning.Operation>} Promise
                 * @variation 2
                 */
    
                /**
                 * Callback as used by {@link google.longrunning.Operations|deleteOperation}.
                 * @memberof google.longrunning.Operations
                 * @typedef DeleteOperationCallback
                 * @type {function}
                 * @param {Error|null} error Error, if any
                 * @param {google.protobuf.Empty} [response] Empty
                 */
    
                /**
                 * Calls DeleteOperation.
                 * @function deleteOperation
                 * @memberof google.longrunning.Operations
                 * @instance
                 * @param {google.longrunning.IDeleteOperationRequest} request DeleteOperationRequest message or plain object
                 * @param {google.longrunning.Operations.DeleteOperationCallback} callback Node-style callback called with the error, if any, and Empty
                 * @returns {undefined}
                 * @variation 1
                 */
                Object.defineProperty(Operations.prototype.deleteOperation = function deleteOperation(request, callback) {
                    return this.rpcCall(deleteOperation, $root.google.longrunning.DeleteOperationRequest, $root.google.protobuf.Empty, request, callback);
                }, "name", { value: "DeleteOperation" });
    
                /**
                 * Calls DeleteOperation.
                 * @function deleteOperation
                 * @memberof google.longrunning.Operations
                 * @instance
                 * @param {google.longrunning.IDeleteOperationRequest} request DeleteOperationRequest message or plain object
                 * @returns {Promise<google.protobuf.Empty>} Promise
                 * @variation 2
                 */
    
                /**
                 * Callback as used by {@link google.longrunning.Operations|cancelOperation}.
                 * @memberof google.longrunning.Operations
                 * @typedef CancelOperationCallback
                 * @type {function}
                 * @param {Error|null} error Error, if any
                 * @param {google.protobuf.Empty} [response] Empty
                 */
    
                /**
                 * Calls CancelOperation.
                 * @function cancelOperation
                 * @memberof google.longrunning.Operations
                 * @instance
                 * @param {google.longrunning.ICancelOperationRequest} request CancelOperationRequest message or plain object
                 * @param {google.longrunning.Operations.CancelOperationCallback} callback Node-style callback called with the error, if any, and Empty
                 * @returns {undefined}
                 * @variation 1
                 */
                Object.defineProperty(Operations.prototype.cancelOperation = function cancelOperation(request, callback) {
                    return this.rpcCall(cancelOperation, $root.google.longrunning.CancelOperationRequest, $root.google.protobuf.Empty, request, callback);
                }, "name", { value: "CancelOperation" });
    
                /**
                 * Calls CancelOperation.
                 * @function cancelOperation
                 * @memberof google.longrunning.Operations
                 * @instance
                 * @param {google.longrunning.ICancelOperationRequest} request CancelOperationRequest message or plain object
                 * @returns {Promise<google.protobuf.Empty>} Promise
                 * @variation 2
                 */
    
                /**
                 * Callback as used by {@link google.longrunning.Operations|waitOperation}.
                 * @memberof google.longrunning.Operations
                 * @typedef WaitOperationCallback
                 * @type {function}
                 * @param {Error|null} error Error, if any
                 * @param {google.longrunning.Operation} [response] Operation
                 */
    
                /**
                 * Calls WaitOperation.
                 * @function waitOperation
                 * @memberof google.longrunning.Operations
                 * @instance
                 * @param {google.longrunning.IWaitOperationRequest} request WaitOperationRequest message or plain object
                 * @param {google.longrunning.Operations.WaitOperationCallback} callback Node-style callback called with the error, if any, and Operation
                 * @returns {undefined}
                 * @variation 1
                 */
                Object.defineProperty(Operations.prototype.waitOperation = function waitOperation(request, callback) {
                    return this.rpcCall(waitOperation, $root.google.longrunning.WaitOperationRequest, $root.google.longrunning.Operation, request, callback);
                }, "name", { value: "WaitOperation" });
    
                /**
                 * Calls WaitOperation.
                 * @function waitOperation
                 * @memberof google.longrunning.Operations
                 * @instance
                 * @param {google.longrunning.IWaitOperationRequest} request WaitOperationRequest message or plain object
                 * @returns {Promise<google.longrunning.Operation>} Promise
                 * @variation 2
                 */
    
                return Operations;
            })();
    
            longrunning.Operation = (function() {
    
                /**
                 * Properties of an Operation.
                 * @memberof google.longrunning
                 * @interface IOperation
                 * @property {string|null} [name] Operation name
                 * @property {google.protobuf.IAny|null} [metadata] Operation metadata
                 * @property {boolean|null} [done] Operation done
                 * @property {google.rpc.IStatus|null} [error] Operation error
                 * @property {google.protobuf.IAny|null} [response] Operation response
                 */
    
                /**
                 * Constructs a new Operation.
                 * @memberof google.longrunning
                 * @classdesc Represents an Operation.
                 * @implements IOperation
                 * @constructor
                 * @param {google.longrunning.IOperation=} [properties] Properties to set
                 */
                function Operation(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Operation name.
                 * @member {string} name
                 * @memberof google.longrunning.Operation
                 * @instance
                 */
                Operation.prototype.name = "";
    
                /**
                 * Operation metadata.
                 * @member {google.protobuf.IAny|null|undefined} metadata
                 * @memberof google.longrunning.Operation
                 * @instance
                 */
                Operation.prototype.metadata = null;
    
                /**
                 * Operation done.
                 * @member {boolean} done
                 * @memberof google.longrunning.Operation
                 * @instance
                 */
                Operation.prototype.done = false;
    
                /**
                 * Operation error.
                 * @member {google.rpc.IStatus|null|undefined} error
                 * @memberof google.longrunning.Operation
                 * @instance
                 */
                Operation.prototype.error = null;
    
                /**
                 * Operation response.
                 * @member {google.protobuf.IAny|null|undefined} response
                 * @memberof google.longrunning.Operation
                 * @instance
                 */
                Operation.prototype.response = null;
    
                // OneOf field names bound to virtual getters and setters
                var $oneOfFields;
    
                /**
                 * Operation result.
                 * @member {"error"|"response"|undefined} result
                 * @memberof google.longrunning.Operation
                 * @instance
                 */
                Object.defineProperty(Operation.prototype, "result", {
                    get: $util.oneOfGetter($oneOfFields = ["error", "response"]),
                    set: $util.oneOfSetter($oneOfFields)
                });
    
                /**
                 * Creates a new Operation instance using the specified properties.
                 * @function create
                 * @memberof google.longrunning.Operation
                 * @static
                 * @param {google.longrunning.IOperation=} [properties] Properties to set
                 * @returns {google.longrunning.Operation} Operation instance
                 */
                Operation.create = function create(properties) {
                    return new Operation(properties);
                };
    
                /**
                 * Encodes the specified Operation message. Does not implicitly {@link google.longrunning.Operation.verify|verify} messages.
                 * @function encode
                 * @memberof google.longrunning.Operation
                 * @static
                 * @param {google.longrunning.IOperation} message Operation message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Operation.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.metadata != null && Object.hasOwnProperty.call(message, "metadata"))
                        $root.google.protobuf.Any.encode(message.metadata, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.done != null && Object.hasOwnProperty.call(message, "done"))
                        writer.uint32(/* id 3, wireType 0 =*/24).bool(message.done);
                    if (message.error != null && Object.hasOwnProperty.call(message, "error"))
                        $root.google.rpc.Status.encode(message.error, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                    if (message.response != null && Object.hasOwnProperty.call(message, "response"))
                        $root.google.protobuf.Any.encode(message.response, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified Operation message, length delimited. Does not implicitly {@link google.longrunning.Operation.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.longrunning.Operation
                 * @static
                 * @param {google.longrunning.IOperation} message Operation message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Operation.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an Operation message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.longrunning.Operation
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.longrunning.Operation} Operation
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Operation.decode = function decode(reader, length, error) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.longrunning.Operation();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        if (tag === error)
                            break;
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                message.metadata = $root.google.protobuf.Any.decode(reader, reader.uint32());
                                break;
                            }
                        case 3: {
                                message.done = reader.bool();
                                break;
                            }
                        case 4: {
                                message.error = $root.google.rpc.Status.decode(reader, reader.uint32());
                                break;
                            }
                        case 5: {
                                message.response = $root.google.protobuf.Any.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an Operation message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.longrunning.Operation
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.longrunning.Operation} Operation
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Operation.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an Operation message.
                 * @function verify
                 * @memberof google.longrunning.Operation
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Operation.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    var properties = {};
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.metadata != null && message.hasOwnProperty("metadata")) {
                        var error = $root.google.protobuf.Any.verify(message.metadata);
                        if (error)
                            return "metadata." + error;
                    }
                    if (message.done != null && message.hasOwnProperty("done"))
                        if (typeof message.done !== "boolean")
                            return "done: boolean expected";
                    if (message.error != null && message.hasOwnProperty("error")) {
                        properties.result = 1;
                        {
                            var error = $root.google.rpc.Status.verify(message.error);
                            if (error)
                                return "error." + error;
                        }
                    }
                    if (message.response != null && message.hasOwnProperty("response")) {
                        if (properties.result === 1)
                            return "result: multiple values";
                        properties.result = 1;
                        {
                            var error = $root.google.protobuf.Any.verify(message.response);
                            if (error)
                                return "response." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates an Operation message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.longrunning.Operation
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.longrunning.Operation} Operation
                 */
                Operation.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.longrunning.Operation)
                        return object;
                    var message = new $root.google.longrunning.Operation();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.metadata != null) {
                        if (typeof object.metadata !== "object")
                            throw TypeError(".google.longrunning.Operation.metadata: object expected");
                        message.metadata = $root.google.protobuf.Any.fromObject(object.metadata);
                    }
                    if (object.done != null)
                        message.done = Boolean(object.done);
                    if (object.error != null) {
                        if (typeof object.error !== "object")
                            throw TypeError(".google.longrunning.Operation.error: object expected");
                        message.error = $root.google.rpc.Status.fromObject(object.error);
                    }
                    if (object.response != null) {
                        if (typeof object.response !== "object")
                            throw TypeError(".google.longrunning.Operation.response: object expected");
                        message.response = $root.google.protobuf.Any.fromObject(object.response);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an Operation message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.longrunning.Operation
                 * @static
                 * @param {google.longrunning.Operation} message Operation
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Operation.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.name = "";
                        object.metadata = null;
                        object.done = false;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.metadata != null && message.hasOwnProperty("metadata"))
                        object.metadata = $root.google.protobuf.Any.toObject(message.metadata, options);
                    if (message.done != null && message.hasOwnProperty("done"))
                        object.done = message.done;
                    if (message.error != null && message.hasOwnProperty("error")) {
                        object.error = $root.google.rpc.Status.toObject(message.error, options);
                        if (options.oneofs)
                            object.result = "error";
                    }
                    if (message.response != null && message.hasOwnProperty("response")) {
                        object.response = $root.google.protobuf.Any.toObject(message.response, options);
                        if (options.oneofs)
                            object.result = "response";
                    }
                    return object;
                };
    
                /**
                 * Converts this Operation to JSON.
                 * @function toJSON
                 * @memberof google.longrunning.Operation
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Operation.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Operation
                 * @function getTypeUrl
                 * @memberof google.longrunning.Operation
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Operation.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.longrunning.Operation";
                };
    
                return Operation;
            })();
    
            longrunning.GetOperationRequest = (function() {
    
                /**
                 * Properties of a GetOperationRequest.
                 * @memberof google.longrunning
                 * @interface IGetOperationRequest
                 * @property {string|null} [name] GetOperationRequest name
                 */
    
                /**
                 * Constructs a new GetOperationRequest.
                 * @memberof google.longrunning
                 * @classdesc Represents a GetOperationRequest.
                 * @implements IGetOperationRequest
                 * @constructor
                 * @param {google.longrunning.IGetOperationRequest=} [properties] Properties to set
                 */
                function GetOperationRequest(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * GetOperationRequest name.
                 * @member {string} name
                 * @memberof google.longrunning.GetOperationRequest
                 * @instance
                 */
                GetOperationRequest.prototype.name = "";
    
                /**
                 * Creates a new GetOperationRequest instance using the specified properties.
                 * @function create
                 * @memberof google.longrunning.GetOperationRequest
                 * @static
                 * @param {google.longrunning.IGetOperationRequest=} [properties] Properties to set
                 * @returns {google.longrunning.GetOperationRequest} GetOperationRequest instance
                 */
                GetOperationRequest.create = function create(properties) {
                    return new GetOperationRequest(properties);
                };
    
                /**
                 * Encodes the specified GetOperationRequest message. Does not implicitly {@link google.longrunning.GetOperationRequest.verify|verify} messages.
                 * @function encode
                 * @memberof google.longrunning.GetOperationRequest
                 * @static
                 * @param {google.longrunning.IGetOperationRequest} message GetOperationRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                GetOperationRequest.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    return writer;
                };
    
                /**
                 * Encodes the specified GetOperationRequest message, length delimited. Does not implicitly {@link google.longrunning.GetOperationRequest.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.longrunning.GetOperationRequest
                 * @static
                 * @param {google.longrunning.IGetOperationRequest} message GetOperationRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                GetOperationRequest.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a GetOperationRequest message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.longrunning.GetOperationRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.longrunning.GetOperationRequest} GetOperationRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                GetOperationRequest.decode = function decode(reader, length, error) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.longrunning.GetOperationRequest();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        if (tag === error)
                            break;
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a GetOperationRequest message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.longrunning.GetOperationRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.longrunning.GetOperationRequest} GetOperationRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                GetOperationRequest.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a GetOperationRequest message.
                 * @function verify
                 * @memberof google.longrunning.GetOperationRequest
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                GetOperationRequest.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    return null;
                };
    
                /**
                 * Creates a GetOperationRequest message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.longrunning.GetOperationRequest
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.longrunning.GetOperationRequest} GetOperationRequest
                 */
                GetOperationRequest.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.longrunning.GetOperationRequest)
                        return object;
                    var message = new $root.google.longrunning.GetOperationRequest();
                    if (object.name != null)
                        message.name = String(object.name);
                    return message;
                };
    
                /**
                 * Creates a plain object from a GetOperationRequest message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.longrunning.GetOperationRequest
                 * @static
                 * @param {google.longrunning.GetOperationRequest} message GetOperationRequest
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                GetOperationRequest.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.name = "";
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    return object;
                };
    
                /**
                 * Converts this GetOperationRequest to JSON.
                 * @function toJSON
                 * @memberof google.longrunning.GetOperationRequest
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                GetOperationRequest.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for GetOperationRequest
                 * @function getTypeUrl
                 * @memberof google.longrunning.GetOperationRequest
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                GetOperationRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.longrunning.GetOperationRequest";
                };
    
                return GetOperationRequest;
            })();
    
            longrunning.ListOperationsRequest = (function() {
    
                /**
                 * Properties of a ListOperationsRequest.
                 * @memberof google.longrunning
                 * @interface IListOperationsRequest
                 * @property {string|null} [name] ListOperationsRequest name
                 * @property {string|null} [filter] ListOperationsRequest filter
                 * @property {number|null} [pageSize] ListOperationsRequest pageSize
                 * @property {string|null} [pageToken] ListOperationsRequest pageToken
                 */
    
                /**
                 * Constructs a new ListOperationsRequest.
                 * @memberof google.longrunning
                 * @classdesc Represents a ListOperationsRequest.
                 * @implements IListOperationsRequest
                 * @constructor
                 * @param {google.longrunning.IListOperationsRequest=} [properties] Properties to set
                 */
                function ListOperationsRequest(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ListOperationsRequest name.
                 * @member {string} name
                 * @memberof google.longrunning.ListOperationsRequest
                 * @instance
                 */
                ListOperationsRequest.prototype.name = "";
    
                /**
                 * ListOperationsRequest filter.
                 * @member {string} filter
                 * @memberof google.longrunning.ListOperationsRequest
                 * @instance
                 */
                ListOperationsRequest.prototype.filter = "";
    
                /**
                 * ListOperationsRequest pageSize.
                 * @member {number} pageSize
                 * @memberof google.longrunning.ListOperationsRequest
                 * @instance
                 */
                ListOperationsRequest.prototype.pageSize = 0;
    
                /**
                 * ListOperationsRequest pageToken.
                 * @member {string} pageToken
                 * @memberof google.longrunning.ListOperationsRequest
                 * @instance
                 */
                ListOperationsRequest.prototype.pageToken = "";
    
                /**
                 * Creates a new ListOperationsRequest instance using the specified properties.
                 * @function create
                 * @memberof google.longrunning.ListOperationsRequest
                 * @static
                 * @param {google.longrunning.IListOperationsRequest=} [properties] Properties to set
                 * @returns {google.longrunning.ListOperationsRequest} ListOperationsRequest instance
                 */
                ListOperationsRequest.create = function create(properties) {
                    return new ListOperationsRequest(properties);
                };
    
                /**
                 * Encodes the specified ListOperationsRequest message. Does not implicitly {@link google.longrunning.ListOperationsRequest.verify|verify} messages.
                 * @function encode
                 * @memberof google.longrunning.ListOperationsRequest
                 * @static
                 * @param {google.longrunning.IListOperationsRequest} message ListOperationsRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ListOperationsRequest.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.filter != null && Object.hasOwnProperty.call(message, "filter"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.filter);
                    if (message.pageSize != null && Object.hasOwnProperty.call(message, "pageSize"))
                        writer.uint32(/* id 2, wireType 0 =*/16).int32(message.pageSize);
                    if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.pageToken);
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 4, wireType 2 =*/34).string(message.name);
                    return writer;
                };
    
                /**
                 * Encodes the specified ListOperationsRequest message, length delimited. Does not implicitly {@link google.longrunning.ListOperationsRequest.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.longrunning.ListOperationsRequest
                 * @static
                 * @param {google.longrunning.IListOperationsRequest} message ListOperationsRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ListOperationsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a ListOperationsRequest message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.longrunning.ListOperationsRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.longrunning.ListOperationsRequest} ListOperationsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ListOperationsRequest.decode = function decode(reader, length, error) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.longrunning.ListOperationsRequest();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        if (tag === error)
                            break;
                        switch (tag >>> 3) {
                        case 4: {
                                message.name = reader.string();
                                break;
                            }
                        case 1: {
                                message.filter = reader.string();
                                break;
                            }
                        case 2: {
                                message.pageSize = reader.int32();
                                break;
                            }
                        case 3: {
                                message.pageToken = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a ListOperationsRequest message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.longrunning.ListOperationsRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.longrunning.ListOperationsRequest} ListOperationsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ListOperationsRequest.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a ListOperationsRequest message.
                 * @function verify
                 * @memberof google.longrunning.ListOperationsRequest
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ListOperationsRequest.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.filter != null && message.hasOwnProperty("filter"))
                        if (!$util.isString(message.filter))
                            return "filter: string expected";
                    if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                        if (!$util.isInteger(message.pageSize))
                            return "pageSize: integer expected";
                    if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                        if (!$util.isString(message.pageToken))
                            return "pageToken: string expected";
                    return null;
                };
    
                /**
                 * Creates a ListOperationsRequest message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.longrunning.ListOperationsRequest
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.longrunning.ListOperationsRequest} ListOperationsRequest
                 */
                ListOperationsRequest.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.longrunning.ListOperationsRequest)
                        return object;
                    var message = new $root.google.longrunning.ListOperationsRequest();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.filter != null)
                        message.filter = String(object.filter);
                    if (object.pageSize != null)
                        message.pageSize = object.pageSize | 0;
                    if (object.pageToken != null)
                        message.pageToken = String(object.pageToken);
                    return message;
                };
    
                /**
                 * Creates a plain object from a ListOperationsRequest message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.longrunning.ListOperationsRequest
                 * @static
                 * @param {google.longrunning.ListOperationsRequest} message ListOperationsRequest
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ListOperationsRequest.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.filter = "";
                        object.pageSize = 0;
                        object.pageToken = "";
                        object.name = "";
                    }
                    if (message.filter != null && message.hasOwnProperty("filter"))
                        object.filter = message.filter;
                    if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                        object.pageSize = message.pageSize;
                    if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                        object.pageToken = message.pageToken;
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    return object;
                };
    
                /**
                 * Converts this ListOperationsRequest to JSON.
                 * @function toJSON
                 * @memberof google.longrunning.ListOperationsRequest
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ListOperationsRequest.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for ListOperationsRequest
                 * @function getTypeUrl
                 * @memberof google.longrunning.ListOperationsRequest
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                ListOperationsRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.longrunning.ListOperationsRequest";
                };
    
                return ListOperationsRequest;
            })();
    
            longrunning.ListOperationsResponse = (function() {
    
                /**
                 * Properties of a ListOperationsResponse.
                 * @memberof google.longrunning
                 * @interface IListOperationsResponse
                 * @property {Array.<google.longrunning.IOperation>|null} [operations] ListOperationsResponse operations
                 * @property {string|null} [nextPageToken] ListOperationsResponse nextPageToken
                 */
    
                /**
                 * Constructs a new ListOperationsResponse.
                 * @memberof google.longrunning
                 * @classdesc Represents a ListOperationsResponse.
                 * @implements IListOperationsResponse
                 * @constructor
                 * @param {google.longrunning.IListOperationsResponse=} [properties] Properties to set
                 */
                function ListOperationsResponse(properties) {
                    this.operations = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ListOperationsResponse operations.
                 * @member {Array.<google.longrunning.IOperation>} operations
                 * @memberof google.longrunning.ListOperationsResponse
                 * @instance
                 */
                ListOperationsResponse.prototype.operations = $util.emptyArray;
    
                /**
                 * ListOperationsResponse nextPageToken.
                 * @member {string} nextPageToken
                 * @memberof google.longrunning.ListOperationsResponse
                 * @instance
                 */
                ListOperationsResponse.prototype.nextPageToken = "";
    
                /**
                 * Creates a new ListOperationsResponse instance using the specified properties.
                 * @function create
                 * @memberof google.longrunning.ListOperationsResponse
                 * @static
                 * @param {google.longrunning.IListOperationsResponse=} [properties] Properties to set
                 * @returns {google.longrunning.ListOperationsResponse} ListOperationsResponse instance
                 */
                ListOperationsResponse.create = function create(properties) {
                    return new ListOperationsResponse(properties);
                };
    
                /**
                 * Encodes the specified ListOperationsResponse message. Does not implicitly {@link google.longrunning.ListOperationsResponse.verify|verify} messages.
                 * @function encode
                 * @memberof google.longrunning.ListOperationsResponse
                 * @static
                 * @param {google.longrunning.IListOperationsResponse} message ListOperationsResponse message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ListOperationsResponse.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.operations != null && message.operations.length)
                        for (var i = 0; i < message.operations.length; ++i)
                            $root.google.longrunning.Operation.encode(message.operations[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                    return writer;
                };
    
                /**
                 * Encodes the specified ListOperationsResponse message, length delimited. Does not implicitly {@link google.longrunning.ListOperationsResponse.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.longrunning.ListOperationsResponse
                 * @static
                 * @param {google.longrunning.IListOperationsResponse} message ListOperationsResponse message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ListOperationsResponse.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a ListOperationsResponse message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.longrunning.ListOperationsResponse
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.longrunning.ListOperationsResponse} ListOperationsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ListOperationsResponse.decode = function decode(reader, length, error) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.longrunning.ListOperationsResponse();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        if (tag === error)
                            break;
                        switch (tag >>> 3) {
                        case 1: {
                                if (!(message.operations && message.operations.length))
                                    message.operations = [];
                                message.operations.push($root.google.longrunning.Operation.decode(reader, reader.uint32()));
                                break;
                            }
                        case 2: {
                                message.nextPageToken = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a ListOperationsResponse message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.longrunning.ListOperationsResponse
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.longrunning.ListOperationsResponse} ListOperationsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ListOperationsResponse.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a ListOperationsResponse message.
                 * @function verify
                 * @memberof google.longrunning.ListOperationsResponse
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ListOperationsResponse.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.operations != null && message.hasOwnProperty("operations")) {
                        if (!Array.isArray(message.operations))
                            return "operations: array expected";
                        for (var i = 0; i < message.operations.length; ++i) {
                            var error = $root.google.longrunning.Operation.verify(message.operations[i]);
                            if (error)
                                return "operations." + error;
                        }
                    }
                    if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                        if (!$util.isString(message.nextPageToken))
                            return "nextPageToken: string expected";
                    return null;
                };
    
                /**
                 * Creates a ListOperationsResponse message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.longrunning.ListOperationsResponse
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.longrunning.ListOperationsResponse} ListOperationsResponse
                 */
                ListOperationsResponse.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.longrunning.ListOperationsResponse)
                        return object;
                    var message = new $root.google.longrunning.ListOperationsResponse();
                    if (object.operations) {
                        if (!Array.isArray(object.operations))
                            throw TypeError(".google.longrunning.ListOperationsResponse.operations: array expected");
                        message.operations = [];
                        for (var i = 0; i < object.operations.length; ++i) {
                            if (typeof object.operations[i] !== "object")
                                throw TypeError(".google.longrunning.ListOperationsResponse.operations: object expected");
                            message.operations[i] = $root.google.longrunning.Operation.fromObject(object.operations[i]);
                        }
                    }
                    if (object.nextPageToken != null)
                        message.nextPageToken = String(object.nextPageToken);
                    return message;
                };
    
                /**
                 * Creates a plain object from a ListOperationsResponse message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.longrunning.ListOperationsResponse
                 * @static
                 * @param {google.longrunning.ListOperationsResponse} message ListOperationsResponse
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ListOperationsResponse.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.operations = [];
                    if (options.defaults)
                        object.nextPageToken = "";
                    if (message.operations && message.operations.length) {
                        object.operations = [];
                        for (var j = 0; j < message.operations.length; ++j)
                            object.operations[j] = $root.google.longrunning.Operation.toObject(message.operations[j], options);
                    }
                    if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                        object.nextPageToken = message.nextPageToken;
                    return object;
                };
    
                /**
                 * Converts this ListOperationsResponse to JSON.
                 * @function toJSON
                 * @memberof google.longrunning.ListOperationsResponse
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ListOperationsResponse.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for ListOperationsResponse
                 * @function getTypeUrl
                 * @memberof google.longrunning.ListOperationsResponse
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                ListOperationsResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.longrunning.ListOperationsResponse";
                };
    
                return ListOperationsResponse;
            })();
    
            longrunning.CancelOperationRequest = (function() {
    
                /**
                 * Properties of a CancelOperationRequest.
                 * @memberof google.longrunning
                 * @interface ICancelOperationRequest
                 * @property {string|null} [name] CancelOperationRequest name
                 */
    
                /**
                 * Constructs a new CancelOperationRequest.
                 * @memberof google.longrunning
                 * @classdesc Represents a CancelOperationRequest.
                 * @implements ICancelOperationRequest
                 * @constructor
                 * @param {google.longrunning.ICancelOperationRequest=} [properties] Properties to set
                 */
                function CancelOperationRequest(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * CancelOperationRequest name.
                 * @member {string} name
                 * @memberof google.longrunning.CancelOperationRequest
                 * @instance
                 */
                CancelOperationRequest.prototype.name = "";
    
                /**
                 * Creates a new CancelOperationRequest instance using the specified properties.
                 * @function create
                 * @memberof google.longrunning.CancelOperationRequest
                 * @static
                 * @param {google.longrunning.ICancelOperationRequest=} [properties] Properties to set
                 * @returns {google.longrunning.CancelOperationRequest} CancelOperationRequest instance
                 */
                CancelOperationRequest.create = function create(properties) {
                    return new CancelOperationRequest(properties);
                };
    
                /**
                 * Encodes the specified CancelOperationRequest message. Does not implicitly {@link google.longrunning.CancelOperationRequest.verify|verify} messages.
                 * @function encode
                 * @memberof google.longrunning.CancelOperationRequest
                 * @static
                 * @param {google.longrunning.ICancelOperationRequest} message CancelOperationRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                CancelOperationRequest.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    return writer;
                };
    
                /**
                 * Encodes the specified CancelOperationRequest message, length delimited. Does not implicitly {@link google.longrunning.CancelOperationRequest.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.longrunning.CancelOperationRequest
                 * @static
                 * @param {google.longrunning.ICancelOperationRequest} message CancelOperationRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                CancelOperationRequest.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a CancelOperationRequest message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.longrunning.CancelOperationRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.longrunning.CancelOperationRequest} CancelOperationRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                CancelOperationRequest.decode = function decode(reader, length, error) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.longrunning.CancelOperationRequest();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        if (tag === error)
                            break;
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a CancelOperationRequest message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.longrunning.CancelOperationRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.longrunning.CancelOperationRequest} CancelOperationRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                CancelOperationRequest.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a CancelOperationRequest message.
                 * @function verify
                 * @memberof google.longrunning.CancelOperationRequest
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                CancelOperationRequest.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    return null;
                };
    
                /**
                 * Creates a CancelOperationRequest message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.longrunning.CancelOperationRequest
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.longrunning.CancelOperationRequest} CancelOperationRequest
                 */
                CancelOperationRequest.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.longrunning.CancelOperationRequest)
                        return object;
                    var message = new $root.google.longrunning.CancelOperationRequest();
                    if (object.name != null)
                        message.name = String(object.name);
                    return message;
                };
    
                /**
                 * Creates a plain object from a CancelOperationRequest message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.longrunning.CancelOperationRequest
                 * @static
                 * @param {google.longrunning.CancelOperationRequest} message CancelOperationRequest
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                CancelOperationRequest.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.name = "";
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    return object;
                };
    
                /**
                 * Converts this CancelOperationRequest to JSON.
                 * @function toJSON
                 * @memberof google.longrunning.CancelOperationRequest
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                CancelOperationRequest.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for CancelOperationRequest
                 * @function getTypeUrl
                 * @memberof google.longrunning.CancelOperationRequest
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                CancelOperationRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.longrunning.CancelOperationRequest";
                };
    
                return CancelOperationRequest;
            })();
    
            longrunning.DeleteOperationRequest = (function() {
    
                /**
                 * Properties of a DeleteOperationRequest.
                 * @memberof google.longrunning
                 * @interface IDeleteOperationRequest
                 * @property {string|null} [name] DeleteOperationRequest name
                 */
    
                /**
                 * Constructs a new DeleteOperationRequest.
                 * @memberof google.longrunning
                 * @classdesc Represents a DeleteOperationRequest.
                 * @implements IDeleteOperationRequest
                 * @constructor
                 * @param {google.longrunning.IDeleteOperationRequest=} [properties] Properties to set
                 */
                function DeleteOperationRequest(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * DeleteOperationRequest name.
                 * @member {string} name
                 * @memberof google.longrunning.DeleteOperationRequest
                 * @instance
                 */
                DeleteOperationRequest.prototype.name = "";
    
                /**
                 * Creates a new DeleteOperationRequest instance using the specified properties.
                 * @function create
                 * @memberof google.longrunning.DeleteOperationRequest
                 * @static
                 * @param {google.longrunning.IDeleteOperationRequest=} [properties] Properties to set
                 * @returns {google.longrunning.DeleteOperationRequest} DeleteOperationRequest instance
                 */
                DeleteOperationRequest.create = function create(properties) {
                    return new DeleteOperationRequest(properties);
                };
    
                /**
                 * Encodes the specified DeleteOperationRequest message. Does not implicitly {@link google.longrunning.DeleteOperationRequest.verify|verify} messages.
                 * @function encode
                 * @memberof google.longrunning.DeleteOperationRequest
                 * @static
                 * @param {google.longrunning.IDeleteOperationRequest} message DeleteOperationRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                DeleteOperationRequest.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    return writer;
                };
    
                /**
                 * Encodes the specified DeleteOperationRequest message, length delimited. Does not implicitly {@link google.longrunning.DeleteOperationRequest.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.longrunning.DeleteOperationRequest
                 * @static
                 * @param {google.longrunning.IDeleteOperationRequest} message DeleteOperationRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                DeleteOperationRequest.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a DeleteOperationRequest message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.longrunning.DeleteOperationRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.longrunning.DeleteOperationRequest} DeleteOperationRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                DeleteOperationRequest.decode = function decode(reader, length, error) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.longrunning.DeleteOperationRequest();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        if (tag === error)
                            break;
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a DeleteOperationRequest message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.longrunning.DeleteOperationRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.longrunning.DeleteOperationRequest} DeleteOperationRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                DeleteOperationRequest.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a DeleteOperationRequest message.
                 * @function verify
                 * @memberof google.longrunning.DeleteOperationRequest
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                DeleteOperationRequest.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    return null;
                };
    
                /**
                 * Creates a DeleteOperationRequest message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.longrunning.DeleteOperationRequest
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.longrunning.DeleteOperationRequest} DeleteOperationRequest
                 */
                DeleteOperationRequest.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.longrunning.DeleteOperationRequest)
                        return object;
                    var message = new $root.google.longrunning.DeleteOperationRequest();
                    if (object.name != null)
                        message.name = String(object.name);
                    return message;
                };
    
                /**
                 * Creates a plain object from a DeleteOperationRequest message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.longrunning.DeleteOperationRequest
                 * @static
                 * @param {google.longrunning.DeleteOperationRequest} message DeleteOperationRequest
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                DeleteOperationRequest.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.name = "";
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    return object;
                };
    
                /**
                 * Converts this DeleteOperationRequest to JSON.
                 * @function toJSON
                 * @memberof google.longrunning.DeleteOperationRequest
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                DeleteOperationRequest.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for DeleteOperationRequest
                 * @function getTypeUrl
                 * @memberof google.longrunning.DeleteOperationRequest
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                DeleteOperationRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.longrunning.DeleteOperationRequest";
                };
    
                return DeleteOperationRequest;
            })();
    
            longrunning.WaitOperationRequest = (function() {
    
                /**
                 * Properties of a WaitOperationRequest.
                 * @memberof google.longrunning
                 * @interface IWaitOperationRequest
                 * @property {string|null} [name] WaitOperationRequest name
                 * @property {google.protobuf.IDuration|null} [timeout] WaitOperationRequest timeout
                 */
    
                /**
                 * Constructs a new WaitOperationRequest.
                 * @memberof google.longrunning
                 * @classdesc Represents a WaitOperationRequest.
                 * @implements IWaitOperationRequest
                 * @constructor
                 * @param {google.longrunning.IWaitOperationRequest=} [properties] Properties to set
                 */
                function WaitOperationRequest(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * WaitOperationRequest name.
                 * @member {string} name
                 * @memberof google.longrunning.WaitOperationRequest
                 * @instance
                 */
                WaitOperationRequest.prototype.name = "";
    
                /**
                 * WaitOperationRequest timeout.
                 * @member {google.protobuf.IDuration|null|undefined} timeout
                 * @memberof google.longrunning.WaitOperationRequest
                 * @instance
                 */
                WaitOperationRequest.prototype.timeout = null;
    
                /**
                 * Creates a new WaitOperationRequest instance using the specified properties.
                 * @function create
                 * @memberof google.longrunning.WaitOperationRequest
                 * @static
                 * @param {google.longrunning.IWaitOperationRequest=} [properties] Properties to set
                 * @returns {google.longrunning.WaitOperationRequest} WaitOperationRequest instance
                 */
                WaitOperationRequest.create = function create(properties) {
                    return new WaitOperationRequest(properties);
                };
    
                /**
                 * Encodes the specified WaitOperationRequest message. Does not implicitly {@link google.longrunning.WaitOperationRequest.verify|verify} messages.
                 * @function encode
                 * @memberof google.longrunning.WaitOperationRequest
                 * @static
                 * @param {google.longrunning.IWaitOperationRequest} message WaitOperationRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                WaitOperationRequest.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.timeout != null && Object.hasOwnProperty.call(message, "timeout"))
                        $root.google.protobuf.Duration.encode(message.timeout, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified WaitOperationRequest message, length delimited. Does not implicitly {@link google.longrunning.WaitOperationRequest.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.longrunning.WaitOperationRequest
                 * @static
                 * @param {google.longrunning.IWaitOperationRequest} message WaitOperationRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                WaitOperationRequest.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a WaitOperationRequest message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.longrunning.WaitOperationRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.longrunning.WaitOperationRequest} WaitOperationRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                WaitOperationRequest.decode = function decode(reader, length, error) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.longrunning.WaitOperationRequest();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        if (tag === error)
                            break;
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                message.timeout = $root.google.protobuf.Duration.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a WaitOperationRequest message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.longrunning.WaitOperationRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.longrunning.WaitOperationRequest} WaitOperationRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                WaitOperationRequest.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a WaitOperationRequest message.
                 * @function verify
                 * @memberof google.longrunning.WaitOperationRequest
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                WaitOperationRequest.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.timeout != null && message.hasOwnProperty("timeout")) {
                        var error = $root.google.protobuf.Duration.verify(message.timeout);
                        if (error)
                            return "timeout." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a WaitOperationRequest message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.longrunning.WaitOperationRequest
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.longrunning.WaitOperationRequest} WaitOperationRequest
                 */
                WaitOperationRequest.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.longrunning.WaitOperationRequest)
                        return object;
                    var message = new $root.google.longrunning.WaitOperationRequest();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.timeout != null) {
                        if (typeof object.timeout !== "object")
                            throw TypeError(".google.longrunning.WaitOperationRequest.timeout: object expected");
                        message.timeout = $root.google.protobuf.Duration.fromObject(object.timeout);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a WaitOperationRequest message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.longrunning.WaitOperationRequest
                 * @static
                 * @param {google.longrunning.WaitOperationRequest} message WaitOperationRequest
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                WaitOperationRequest.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.name = "";
                        object.timeout = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.timeout != null && message.hasOwnProperty("timeout"))
                        object.timeout = $root.google.protobuf.Duration.toObject(message.timeout, options);
                    return object;
                };
    
                /**
                 * Converts this WaitOperationRequest to JSON.
                 * @function toJSON
                 * @memberof google.longrunning.WaitOperationRequest
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                WaitOperationRequest.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for WaitOperationRequest
                 * @function getTypeUrl
                 * @memberof google.longrunning.WaitOperationRequest
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                WaitOperationRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.longrunning.WaitOperationRequest";
                };
    
                return WaitOperationRequest;
            })();
    
            longrunning.OperationInfo = (function() {
    
                /**
                 * Properties of an OperationInfo.
                 * @memberof google.longrunning
                 * @interface IOperationInfo
                 * @property {string|null} [responseType] OperationInfo responseType
                 * @property {string|null} [metadataType] OperationInfo metadataType
                 */
    
                /**
                 * Constructs a new OperationInfo.
                 * @memberof google.longrunning
                 * @classdesc Represents an OperationInfo.
                 * @implements IOperationInfo
                 * @constructor
                 * @param {google.longrunning.IOperationInfo=} [properties] Properties to set
                 */
                function OperationInfo(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * OperationInfo responseType.
                 * @member {string} responseType
                 * @memberof google.longrunning.OperationInfo
                 * @instance
                 */
                OperationInfo.prototype.responseType = "";
    
                /**
                 * OperationInfo metadataType.
                 * @member {string} metadataType
                 * @memberof google.longrunning.OperationInfo
                 * @instance
                 */
                OperationInfo.prototype.metadataType = "";
    
                /**
                 * Creates a new OperationInfo instance using the specified properties.
                 * @function create
                 * @memberof google.longrunning.OperationInfo
                 * @static
                 * @param {google.longrunning.IOperationInfo=} [properties] Properties to set
                 * @returns {google.longrunning.OperationInfo} OperationInfo instance
                 */
                OperationInfo.create = function create(properties) {
                    return new OperationInfo(properties);
                };
    
                /**
                 * Encodes the specified OperationInfo message. Does not implicitly {@link google.longrunning.OperationInfo.verify|verify} messages.
                 * @function encode
                 * @memberof google.longrunning.OperationInfo
                 * @static
                 * @param {google.longrunning.IOperationInfo} message OperationInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                OperationInfo.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.responseType != null && Object.hasOwnProperty.call(message, "responseType"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.responseType);
                    if (message.metadataType != null && Object.hasOwnProperty.call(message, "metadataType"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.metadataType);
                    return writer;
                };
    
                /**
                 * Encodes the specified OperationInfo message, length delimited. Does not implicitly {@link google.longrunning.OperationInfo.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.longrunning.OperationInfo
                 * @static
                 * @param {google.longrunning.IOperationInfo} message OperationInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                OperationInfo.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an OperationInfo message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.longrunning.OperationInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.longrunning.OperationInfo} OperationInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                OperationInfo.decode = function decode(reader, length, error) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.longrunning.OperationInfo();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        if (tag === error)
                            break;
                        switch (tag >>> 3) {
                        case 1: {
                                message.responseType = reader.string();
                                break;
                            }
                        case 2: {
                                message.metadataType = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an OperationInfo message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.longrunning.OperationInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.longrunning.OperationInfo} OperationInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                OperationInfo.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an OperationInfo message.
                 * @function verify
                 * @memberof google.longrunning.OperationInfo
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                OperationInfo.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.responseType != null && message.hasOwnProperty("responseType"))
                        if (!$util.isString(message.responseType))
                            return "responseType: string expected";
                    if (message.metadataType != null && message.hasOwnProperty("metadataType"))
                        if (!$util.isString(message.metadataType))
                            return "metadataType: string expected";
                    return null;
                };
    
                /**
                 * Creates an OperationInfo message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.longrunning.OperationInfo
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.longrunning.OperationInfo} OperationInfo
                 */
                OperationInfo.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.longrunning.OperationInfo)
                        return object;
                    var message = new $root.google.longrunning.OperationInfo();
                    if (object.responseType != null)
                        message.responseType = String(object.responseType);
                    if (object.metadataType != null)
                        message.metadataType = String(object.metadataType);
                    return message;
                };
    
                /**
                 * Creates a plain object from an OperationInfo message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.longrunning.OperationInfo
                 * @static
                 * @param {google.longrunning.OperationInfo} message OperationInfo
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                OperationInfo.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.responseType = "";
                        object.metadataType = "";
                    }
                    if (message.responseType != null && message.hasOwnProperty("responseType"))
                        object.responseType = message.responseType;
                    if (message.metadataType != null && message.hasOwnProperty("metadataType"))
                        object.metadataType = message.metadataType;
                    return object;
                };
    
                /**
                 * Converts this OperationInfo to JSON.
                 * @function toJSON
                 * @memberof google.longrunning.OperationInfo
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                OperationInfo.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for OperationInfo
                 * @function getTypeUrl
                 * @memberof google.longrunning.OperationInfo
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                OperationInfo.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.longrunning.OperationInfo";
                };
    
                return OperationInfo;
            })();
    
            return longrunning;
        })();
    
        google.rpc = (function() {
    
            /**
             * Namespace rpc.
             * @memberof google
             * @namespace
             */
            var rpc = {};
    
            rpc.Status = (function() {
    
                /**
                 * Properties of a Status.
                 * @memberof google.rpc
                 * @interface IStatus
                 * @property {number|null} [code] Status code
                 * @property {string|null} [message] Status message
                 * @property {Array.<google.protobuf.IAny>|null} [details] Status details
                 */
    
                /**
                 * Constructs a new Status.
                 * @memberof google.rpc
                 * @classdesc Represents a Status.
                 * @implements IStatus
                 * @constructor
                 * @param {google.rpc.IStatus=} [properties] Properties to set
                 */
                function Status(properties) {
                    this.details = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Status code.
                 * @member {number} code
                 * @memberof google.rpc.Status
                 * @instance
                 */
                Status.prototype.code = 0;
    
                /**
                 * Status message.
                 * @member {string} message
                 * @memberof google.rpc.Status
                 * @instance
                 */
                Status.prototype.message = "";
    
                /**
                 * Status details.
                 * @member {Array.<google.protobuf.IAny>} details
                 * @memberof google.rpc.Status
                 * @instance
                 */
                Status.prototype.details = $util.emptyArray;
    
                /**
                 * Creates a new Status instance using the specified properties.
                 * @function create
                 * @memberof google.rpc.Status
                 * @static
                 * @param {google.rpc.IStatus=} [properties] Properties to set
                 * @returns {google.rpc.Status} Status instance
                 */
                Status.create = function create(properties) {
                    return new Status(properties);
                };
    
                /**
                 * Encodes the specified Status message. Does not implicitly {@link google.rpc.Status.verify|verify} messages.
                 * @function encode
                 * @memberof google.rpc.Status
                 * @static
                 * @param {google.rpc.IStatus} message Status message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Status.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.code != null && Object.hasOwnProperty.call(message, "code"))
                        writer.uint32(/* id 1, wireType 0 =*/8).int32(message.code);
                    if (message.message != null && Object.hasOwnProperty.call(message, "message"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.message);
                    if (message.details != null && message.details.length)
                        for (var i = 0; i < message.details.length; ++i)
                            $root.google.protobuf.Any.encode(message.details[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified Status message, length delimited. Does not implicitly {@link google.rpc.Status.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.rpc.Status
                 * @static
                 * @param {google.rpc.IStatus} message Status message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Status.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a Status message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.rpc.Status
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.rpc.Status} Status
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Status.decode = function decode(reader, length, error) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.rpc.Status();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        if (tag === error)
                            break;
                        switch (tag >>> 3) {
                        case 1: {
                                message.code = reader.int32();
                                break;
                            }
                        case 2: {
                                message.message = reader.string();
                                break;
                            }
                        case 3: {
                                if (!(message.details && message.details.length))
                                    message.details = [];
                                message.details.push($root.google.protobuf.Any.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a Status message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.rpc.Status
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.rpc.Status} Status
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Status.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a Status message.
                 * @function verify
                 * @memberof google.rpc.Status
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Status.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.code != null && message.hasOwnProperty("code"))
                        if (!$util.isInteger(message.code))
                            return "code: integer expected";
                    if (message.message != null && message.hasOwnProperty("message"))
                        if (!$util.isString(message.message))
                            return "message: string expected";
                    if (message.details != null && message.hasOwnProperty("details")) {
                        if (!Array.isArray(message.details))
                            return "details: array expected";
                        for (var i = 0; i < message.details.length; ++i) {
                            var error = $root.google.protobuf.Any.verify(message.details[i]);
                            if (error)
                                return "details." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a Status message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.rpc.Status
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.rpc.Status} Status
                 */
                Status.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.rpc.Status)
                        return object;
                    var message = new $root.google.rpc.Status();
                    if (object.code != null)
                        message.code = object.code | 0;
                    if (object.message != null)
                        message.message = String(object.message);
                    if (object.details) {
                        if (!Array.isArray(object.details))
                            throw TypeError(".google.rpc.Status.details: array expected");
                        message.details = [];
                        for (var i = 0; i < object.details.length; ++i) {
                            if (typeof object.details[i] !== "object")
                                throw TypeError(".google.rpc.Status.details: object expected");
                            message.details[i] = $root.google.protobuf.Any.fromObject(object.details[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a Status message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.rpc.Status
                 * @static
                 * @param {google.rpc.Status} message Status
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Status.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.details = [];
                    if (options.defaults) {
                        object.code = 0;
                        object.message = "";
                    }
                    if (message.code != null && message.hasOwnProperty("code"))
                        object.code = message.code;
                    if (message.message != null && message.hasOwnProperty("message"))
                        object.message = message.message;
                    if (message.details && message.details.length) {
                        object.details = [];
                        for (var j = 0; j < message.details.length; ++j)
                            object.details[j] = $root.google.protobuf.Any.toObject(message.details[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this Status to JSON.
                 * @function toJSON
                 * @memberof google.rpc.Status
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Status.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Status
                 * @function getTypeUrl
                 * @memberof google.rpc.Status
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Status.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.rpc.Status";
                };
    
                return Status;
            })();
    
            return rpc;
        })();
    
        return google;
    })();

    return $root;
});
